OBJECT Report 50511 Alphalist of Payees Schedule 3
{
  OBJECT-PROPERTIES
  {
    Date=02/08/18;
    Time=[ 8:41:58 PM];
    Modified=Yes;
    Version List=PHL0.01;
  }
  PROPERTIES
  {
    CaptionML=ENU=Alphalist of Payees Schedule 3;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   DateFilter := FORMAT(WORKDATE);
                   IncludeCSV := TRUE;
                 END;

    OnPreReport=VAR
                  FileMgt@1000000000 : Codeunit 419;
                BEGIN
                  CharsToRemove := '!@$%^&*()_+}{[]|\;:<>/`~-,';

                  //IF IncludeCSV THEN
                  IF IncludeCSVorExcel = IncludeCSVorExcel::DAT THEN
                    FileName := FileMgt.ServerTempFileName('');
                END;

    OnPostReport=VAR
                   ToFile@1000000000 : Text[1024];
                   locCompInfo@1000000001 : Record 79;
                 BEGIN
                   locCompInfo.GET;
                   //Insert Controls
                   IF IncludeCSVorExcel = IncludeCSVorExcel::Excel THEN BEGIN
                   //IF ExcelOnly THEN BEGIN
                     EnterCell(RowCtr,1,'C3',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                     EnterCell(RowCtr,2,'1604E',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                     EnterCell(RowCtr,3,CompInfo."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                     EnterCell(RowCtr,4,CompInfo."RDO Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                     EnterCell(RowCtr,5,FORMAT(EndDate),FALSE,FALSE,FALSE,'mm/dd/yyyy',TempExcelBuffer."Cell Type"::Text);
                     EnterCell(RowCtr,6,FORMAT(TotalIncmPymt),FALSE,FALSE,FALSE,'##0.00',TempExcelBuffer."Cell Type"::Number);
                     TempExcelBuffer.CreateBook('Alphalist of Payees Schedule 3','Alphalist of Payees Schedule 3');
                     TempExcelBuffer.WriteSheet('Alphalist of Payees Schedule 3',COMPANYNAME,COPYSTR(USERID,30));
                     TempExcelBuffer.CloseBook;
                     TempExcelBuffer.OpenExcel;
                     TempExcelBuffer.GiveUserControl;
                   END;

                   IF IncludeCSVorExcel = IncludeCSVorExcel::DAT THEN BEGIN
                   //IF IncludeCSV THEN BEGIN
                     ReportValue[1] := 'C3';
                     ReportValue[2] := '1604E';
                     IF STRLEN(DELCHR(locCompInfo."VAT Registration No.",'=','-')) = 12 THEN
                       ReportValue[3] := DELSTR(DELCHR(locCompInfo."VAT Registration No.",'=','-'),10,4)
                     ELSE IF STRLEN(DELCHR(locCompInfo."VAT Registration No.",'=','-')) = 9 THEN
                       ReportValue[3] := DELCHR(locCompInfo."VAT Registration No.",'=','-');
                     ReportValue[4] := CompInfo."RDO Code";
                     ReportValue[5] := FORMAT(EndDate,0,'<Month,2>/<Day,2>/<Year4>');
                     ReportValue[6] := FORMAT(TotalIncmPymt,0,'<Sign><Integer><Decimals>');
                     WriteCSVFoot(ReportValue);
                     CLEAR(ReportValue);
                     BIRFile.CLOSE;
                     IF STRLEN(DELCHR(CompInfo."VAT Registration No.",'=','-')) = 12 THEN
                       ToFile := DELSTR(DELCHR(CompInfo."VAT Registration No.",'=','-'),10,4) + 'C3' + FORMAT(EndDate,0,'<Month,2><Year4>') + '.DAT'
                     ELSE IF STRLEN(DELCHR(CompInfo."VAT Registration No.",'=','-')) = 9 THEN
                       ToFile := DELCHR(CompInfo."VAT Registration No.",'=','-') + 'C3' + FORMAT(EndDate,0,'<Month,2><Year4>') + '.DAT';
                     DOWNLOAD(FileName,Text003,'',Text004,ToFile);
                   END;

                   Window.CLOSE;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50501;
               DataItemTableView=SORTING(Code)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETFILTER(Code,WHTProdPostingGrpFilter);

                               //Clear Excel Buffer
                               TempExcelBuffer.DELETEALL;

                               //Assign Initial Date Filter
                               //DateFilter := FORMAT(WORKDATE);

                               //Check Date Filter
                               IF DateFilter = '' THEN
                                 ERROR(Text001);

                               IF WHTProdPostingGrpFilter = '' THEN
                                 ERROR(Text002);

                               //Get Company Information
                               CompInfo.GET;

                               //Get End Date
                               VendorRec.SETFILTER("Date Filter",DateFilter);
                               EndDate := VendorRec.GETRANGEMAX("Date Filter");

                               //Insert Header
                               //IF ExcelOnly THEN BEGIN
                               IF IncludeCSVorExcel = IncludeCSVorExcel::Excel THEN BEGIN
                                 EnterCell(1,1,'H1604E',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                 EnterCell(1,2,CompInfo."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                 EnterCell(1,3,CompInfo."RDO Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                 EnterCell(1,4,FORMAT(EndDate),FALSE,FALSE,FALSE,'mm/dd/yyyy',TempExcelBuffer."Cell Type"::Text);
                               END;

                               //IF IncludeCSV THEN BEGIN
                               IF IncludeCSVorExcel = IncludeCSVorExcel::DAT THEN BEGIN
                                 CLEAR(BIRFile);
                                 BIRFile.TEXTMODE := TRUE;
                                 BIRFile.WRITEMODE := TRUE;
                                 BIRFile.CREATE(FileName);
                                 ReportValueHead[1] := 'H1604E';
                                 IF STRLEN(DELCHR(CompInfo."VAT Registration No.",'=','-')) = 12 THEN
                                   ReportValueHead[2] := DELSTR(DELCHR(CompInfo."VAT Registration No.",'=','-'),10,3)
                                 ELSE IF STRLEN(DELCHR(CompInfo."VAT Registration No.",'=','-')) = 9 THEN
                                   ReportValueHead[2] := FORMAT(DELCHR(CompInfo."VAT Registration No.",'=','-'));
                                 ReportValueHead[3] := CompInfo."RDO Code";
                                 ReportValueHead[4] := FORMAT(EndDate,0,'<Month,2>/<Day,2>/<Year4>');
                                 WriteCSVHeadandFoot(ReportValueHead);
                                 CLEAR(ReportValueHead);
                               END;

                               RowCtr := 2;
                               SeqNo := 1;

                               Window.OPEN(Text025);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,Code);
                                END;
                                 }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table23;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF VendorFilter <> '' THEN
                                 SETFILTER("No.",VendorFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(2,"No.");
                                END;
                                 }

    { 3   ;2   ;DataItem;                    ;
               DataItemTable=Table50504;
               DataItemTableView=SORTING(Entry No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETFILTER("Posting Date",DateFilter);
                               SETRANGE("WHT Prod. Posting Group","WHT Product Posting Group".Code);
                               SETRANGE("Transaction Type","Transaction Type"::Purchase);
                               SETRANGE("Bill-to/Pay-to No.",Vendor."No.");
                               IF ISEMPTY THEN
                                 CurrReport.SKIP;

                               IncmPymt := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF ISEMPTY THEN
                                    CurrReport.SKIP;

                                  Window.UPDATE(3,"Entry No.");
                                  IncmPymt := IncmPymt + "Base (LCY)";
                                END;

               OnPostDataItem=BEGIN
                                IF ISEMPTY THEN
                                  CurrReport.SKIP;

                                //Update Excel Buffer
                                //IF ExcelOnly THEN BEGIN
                                IF IncludeCSVorExcel = IncludeCSVorExcel::Excel THEN BEGIN
                                  EnterCell(RowCtr,1,'D3',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,2,'1604E',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,3,CompInfo."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,4,CompInfo."RDO Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,5,FORMAT(EndDate),FALSE,FALSE,FALSE,'mm/dd/yyyy',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,6,FORMAT(SeqNo),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                                  EnterCell(RowCtr,7,Vendor."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,9,Vendor.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,13,"WHT Revenue Type",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  EnterCell(RowCtr,14,FORMAT(IncmPymt),FALSE,FALSE,FALSE,'##0.00',TempExcelBuffer."Cell Type"::Text);
                                END;
                                //IF IncludeCSV THEN BEGIN
                                IF IncludeCSVorExcel = IncludeCSVorExcel::DAT THEN BEGIN
                                  ReportValue[1] := 'D3';
                                  ReportValue[2] := '1604E';
                                  IF STRLEN(DELCHR(CompInfo."VAT Registration No.",'=','-')) = 12 THEN
                                    ReportValue[3] := DELSTR(DELCHR(CompInfo."VAT Registration No.",'=','-'),10,3)
                                  ELSE IF STRLEN(DELCHR(CompInfo."VAT Registration No.",'=','-')) = 9 THEN
                                    ReportValue[3] := FORMAT(DELCHR(CompInfo."VAT Registration No.",'=','-'));
                                  ReportValue[4] := CompInfo."RDO Code";
                                  ReportValue[5] := FORMAT(EndDate,0,'<Month,2>/<Day,2>/<Year4>');
                                  ReportValue[6] := FORMAT(SeqNo);
                                  IF STRLEN(DELCHR(Vendor."VAT Registration No.",'=','-')) = 12 THEN
                                    ReportValue[7] := DELSTR(DELCHR(CompInfo."VAT Registration No.",'=','-'),10,3)
                                  ELSE IF STRLEN(DELCHR(Vendor."VAT Registration No.",'=','-')) = 9 THEN
                                    ReportValue[7] := FORMAT(DELCHR(CompInfo."VAT Registration No.",'=','-'));
                                  ReportValue[9] := '"' + Vendor.Name + '"';
                                  ReportValue[13] := '"' + "WHT Revenue Type" + '"';
                                  ReportValue[14] := FORMAT(IncmPymt,0,'<Sign><Integer><Decimals>');
                                  WriteCSV(ReportValue);
                                  CLEAR(ReportValue);
                                END;

                                RowCtr := RowCtr + 1;
                                SeqNo := SeqNo + 1;
                                TotalIncmPymt := TotalIncmPymt + IncmPymt;
                              END;

               DataItemLink=Bill-to/Pay-to No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   DateFilter := FORMAT(WORKDATE); // PASIMAS01
                   IncludeCSV := TRUE;
                   ExcelOnly := FALSE;
                 END;

    }
    CONTROLS
    {
      { 5   ;    ;Container ;
                  ContainerType=ContentArea }

      { 4   ;1   ;Group     ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 6   ;2   ;Group     ;
                  CaptionML=ENU=Filters;
                  GroupType=Group }

      { 3   ;3   ;Field     ;
                  Name=Vendor Filter;
                  CaptionML=ENU=Vendor Filter;
                  SourceExpr=VendorFilter;
                  OnLookup=BEGIN
                             CLEAR(VendorList);

                             VendorList.LOOKUPMODE(TRUE);
                             VendorList.SETTABLEVIEW(VendorRec);
                             IF NOT (VendorList.RUNMODAL = ACTION::LookupOK) THEN
                               EXIT(FALSE);

                             Text := VendorList.GetSelectionFilter;

                             EXIT(TRUE);
                           END;
                            }

      { 2   ;3   ;Field     ;
                  Name=Exempt;
                  CaptionML=ENU=Exempt;
                  SourceExpr=WHTProdPostingGrpFilter;
                  TableRelation="WHT Product Posting Group";
                  OnLookup=BEGIN
                             CLEAR(WHTProdPostingGroupsPage);
                             WHTProdPostingGroupsPage.LOOKUPMODE(TRUE);
                             WHTProdPostingGroupsPage.SETTABLEVIEW(WHTProdPostingGroup);
                             IF NOT (WHTProdPostingGroupsPage.RUNMODAL = ACTION::LookupOK) THEN
                               EXIT(FALSE);

                             Text := WHTProdPostingGroupsPage.GetSelectionFilter;

                             EXIT(TRUE);
                           END;
                            }

      { 1   ;3   ;Field     ;
                  Name=Date Filter;
                  CaptionML=ENU=Date Filter;
                  SourceExpr=DateFilter;
                  OnValidate=BEGIN
                               IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                                 Vendor.SETFILTER("Date Filter",DateFilter);
                               DateFilter := Vendor.GETFILTER("Date Filter");
                             END;
                              }

      { 7   ;2   ;Group     ;
                  CaptionML=ENU=Output;
                  GroupType=Group }

      { 8   ;3   ;Field     ;
                  CaptionML=ENU=File Format;
                  SourceExpr=IncludeCSVorExcel }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TempExcelBuffer@1018 : TEMPORARY Record 370;
      CompInfo@1017 : Record 79;
      VendorRec@1016 : Record 23;
      WHTProdPostingGroup@1015 : Record 50501;
      VendorList@1014 : Page 27;
      WHTProdPostingGroupsPage@1013 : Page 50501;
      ApplicationManagement@1012 : Codeunit 1;
      Window@1011 : Dialog;
      VendorFilter@1010 : Text[250];
      WHTProdPostingGrpFilter@1009 : Text[250];
      DateFilter@1008 : Text[30];
      EndDate@1007 : Date;
      RowCtr@1006 : Integer;
      Text001@1021 : TextConst 'ENU=Please specify a Date Filter.';
      Text002@1020 : TextConst 'ENU=Please specify a WHT Prod. Posting Group Filter';
      Text025@1019 : TextConst 'ENU=Processing Alphalist of Payees Schedule 4...\WHT Product Posting Group #1#############\Vendor No.                #2#############\Entry No.                 #3#############';
      SeqNo@1002 : Integer;
      IncmPymt@1000 : Decimal;
      TotalIncmPymt@1001 : Decimal;
      DateFilterEval@1000000000 : Date;
      BIRFile@1000000008 : File;
      FileName@1000000007 : Text;
      ReportValueFoot@1000000006 : ARRAY [7] OF Text[250];
      ReportValueHead@1000000005 : ARRAY [17] OF Text[250];
      ReportValue@1000000004 : ARRAY [15] OF Text[250];
      IncludeCSV@1000000003 : Boolean;
      ExcelOnly@1000000002 : Boolean;
      CharsToRemove@1000000001 : Text[50];
      Text003@1000000010 : TextConst 'ENU=Export';
      Text004@1000000009 : TextConst 'ENU=All Files (*.*)|*.*';
      IncludeCSVorExcel@1000000011 : 'DAT,Excel';

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    PROCEDURE WriteCSV@1000000003(LocString@1000 : ARRAY [14] OF Text[500]);
    VAR
      ArrayCtr@1001 : Integer;
      TextToWrite@1002 : Text[500];
    BEGIN
      FOR ArrayCtr := 1 TO 14 DO BEGIN
        //TextToWrite += ApplyQuote(FORMAT(LocString[ArrayCtr])) + ',';
        TextToWrite += FORMAT(LocString[ArrayCtr]) + ',';
      END;
      TextToWrite := DELSTR(TextToWrite,STRLEN(TextToWrite),1);
      BIRFile.WRITE(TextToWrite);
      CLEAR(LocString)
    END;

    PROCEDURE ApplyQuote@1000000001(LocString@1000 : Text[500]) : Text[250];
    VAR
      CharCtr@1000000001 : Integer;
      ApplyQuote@1000000002 : Boolean;
    BEGIN
      ApplyQuote := FALSE;
      FOR CharCtr := 1 TO STRLEN(LocString) DO BEGIN
        IF LocString[CharCtr] = ',' THEN BEGIN
          //EXIT('"' + LocString + '"'); // Original Code
          EXIT('' + LocString + '');
        END;
      END;
      EXIT (LocString);
    END;

    PROCEDURE WriteCSVHeadandFoot@1000000000(LocString@1000 : ARRAY [4] OF Text[500]);
    VAR
      ArrayCtr@1001 : Integer;
      TextToWrite@1002 : Text[500];
    BEGIN
      FOR ArrayCtr := 1 TO 4 DO BEGIN
        //TextToWrite += ApplyQuote(FORMAT(LocString[ArrayCtr])) + ',';
        TextToWrite += FORMAT(LocString[ArrayCtr]) + ',';
      END;
      TextToWrite := DELSTR(TextToWrite,STRLEN(TextToWrite),1);
      BIRFile.WRITE(TextToWrite);
      CLEAR(LocString)
    END;

    PROCEDURE WriteCSVFoot@1000000005(LocString@1000 : ARRAY [6] OF Text[500]);
    VAR
      ArrayCtr@1001 : Integer;
      TextToWrite@1002 : Text[500];
    BEGIN
      FOR ArrayCtr := 1 TO 6 DO BEGIN
        //TextToWrite += ApplyQuote(FORMAT(LocString[ArrayCtr])) + ',';
        TextToWrite += FORMAT(LocString[ArrayCtr]) + ',';
      END;
      TextToWrite := DELSTR(TextToWrite,STRLEN(TextToWrite),1);
      BIRFile.WRITE(TextToWrite);
      CLEAR(LocString)
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}


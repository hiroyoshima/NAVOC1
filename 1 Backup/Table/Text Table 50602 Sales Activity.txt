OBJECT Table 50602 Sales Activity
{
  OBJECT-PROPERTIES
  {
    Date=10/30/23;
    Time=[ 5:54:41 PM];
    Modified=Yes;
    Version List=NAVOC1.00.03.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InitInsert;
             END;

    OnModify=BEGIN
               TestSalesActivityFields;
             END;

  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;AutoIncrement=Yes;
                                                   Editable=No }
    { 2   ;   ;Date Created        ;Date          ;Editable=No }
    { 3   ;   ;Specific Activity No.;Code20       ;TableRelation="Specific Activity";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Specific Activity No.");
                                                              END;
                                                               }
    { 4   ;   ;Function            ;Option        ;OptionCaptionML=ENU=,Admin,Operations;
                                                   OptionString=,Admin,Operations;
                                                   BlankNumbers=BlankZero;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 5   ;   ;Sales Task No.      ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD("Sales Task No.");
                                                                CALCFIELDS("Sales Task Name");
                                                                IF SalesTask.GET("Sales Task No.") THEN BEGIN
                                                                  "Function" := SalesTask."Function";
                                                                  "Sales Task Category" := SalesTask.Category;
                                                                END;

                                                                IF ("Sales Task No." <> xRec."Sales Task No.") AND (xRec."Sales Task No." <> '') THEN BEGIN
                                                                  "Specific Activity No." := '';
                                                                  VALIDATE("Status Update",'');
                                                                  VALIDATE("Help Needed",'');
                                                                END;
                                                              END;
                                                               }
    { 6   ;   ;Status Update       ;Text250        }
    { 7   ;   ;Help Needed         ;Text250        }
    { 8   ;   ;Sales Task Name     ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Sales Task"."Task Name" WHERE (No.=FIELD(Sales Task No.)));
                                                   Editable=No }
    { 9   ;   ;Account Type        ;Option        ;OptionCaptionML=ENU=New,Existing;
                                                   OptionString=New,Existing;
                                                   Editable=No }
    { 10  ;   ;Date of Activity    ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD("Date of Activity");
                                                              END;
                                                               }
    { 11  ;   ;Specific Activity Name;Text100     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Specific Activity"."Activity Name" WHERE (No.=FIELD(Specific Activity No.)));
                                                   Editable=No }
    { 12  ;   ;Sales Task Category ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Sales Task".Category WHERE (No.=FIELD(Sales Task No.)));
                                                   OptionCaptionML=ENU=Saturation Drive - New,Sales Cycle,Project Delivery (With PO),After Sales,Sales Admin;
                                                   OptionString=Saturation Drive - New,Sales Cycle,Project Delivery (With PO),After Sales,Sales Admin }
    { 20  ;   ;Salesperson Code    ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Salesperson Code }
    { 21  ;   ;Team Code           ;Code10        ;TableRelation=Team;
                                                   CaptionML=ENU=Team Code }
    { 22  ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=ENU=Campaign No. }
    { 23  ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                AttendeeTemp@1000 : TEMPORARY Record 5199;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Contact No. }
    { 24  ;   ;Contact Company No. ;Code20        ;TableRelation=Opportunity;
                                                   OnValidate=VAR
                                                                OppEntry@1001 : Record 5093;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Contact Company No. }
    { 25  ;   ;Segment No.         ;Code20        ;TableRelation="Segment Header";
                                                   CaptionML=ENU=Segment No. }
    { 26  ;   ;Opportunity No.     ;Code20        ;TableRelation=Opportunity }
    { 41  ;   ;Salesperson Name    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Salesperson Code)));
                                                   Editable=No }
    { 42  ;   ;Team Name           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Team.Name WHERE (Code=FIELD(Team Code)));
                                                   Editable=No }
    { 43  ;   ;Campaign Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Campaign.Description WHERE (No.=FIELD(Campaign No.)));
                                                   Editable=No }
    { 44  ;   ;Contact Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.)));
                                                   Editable=No }
    { 45  ;   ;Contact Company Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact Company No.)));
                                                   Editable=No }
    { 46  ;   ;Segment Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Segment Header".Description WHERE (No.=FIELD(Segment No.)));
                                                   Editable=No }
    { 47  ;   ;Opportunity Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Opportunity.Description WHERE (No.=FIELD(Opportunity No.)));
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SalesTask@1000 : Record 50603;

    LOCAL PROCEDURE InitInsert@1();
    VAR
      Opportunity@1000 : Record 5092;
      Segment@1001 : Record 5076;
      UserSetup@1002 : Record 91;
    BEGIN
      "Date Created" := TODAY;

      FILTERGROUP(4);
      CASE TRUE OF
        GETFILTER("Opportunity No.") <> '':
          BEGIN
            Opportunity.GET(GETFILTER("Opportunity No."));
            "Opportunity No." := Opportunity."No.";
            "Salesperson Code" := Opportunity."Salesperson Code";
            "Contact No." := Opportunity."Contact No.";
            "Contact Company No." := Opportunity."Contact Company No.";
            "Account Type" := Opportunity."Account Type";
          END;
        GETFILTER("Segment No.") <> '':
          BEGIN
            Segment.GET(GETFILTER("Segment No."));
            Segment.TESTFIELD("No.");
            Segment.TESTFIELD(Description);
            Segment.TESTFIELD("Salesperson Code");
            "Segment No." := Segment."No.";
            "Salesperson Code" := Segment."Salesperson Code";
          END;
        ELSE
            IF UserSetup.GET(USERID) THEN
              IF UserSetup."Salespers./Purch. Code" = '' THEN
                ERROR('Only Salesperson can create a sales activity')
              ELSE
                "Salesperson Code" := UserSetup."Salespers./Purch. Code";
      END;
      FILTERGROUP(0);

      TestSalesActivityFields;
    END;

    PROCEDURE SetSalesAdminActivityFilter@5();
    VAR
      UserSetup@1000 : Record 91;
    BEGIN
      IF UserSetup.GET(USERID) THEN
        ;//put in an if statement so GET function doesnt show an error when it doesnt get a record.

      FILTERGROUP(2);
      SETRANGE("Salesperson Code",UserSetup."Salespers./Purch. Code");
      SETRANGE("Function","Function"::Admin);
      FILTERGROUP(0);

      SETFILTER("Date of Activity",'<-CM>..<CM>');
    END;

    LOCAL PROCEDURE TestSalesActivityFields@2();
    BEGIN
      TESTFIELD("Specific Activity No.");
      TESTFIELD("Sales Task No.");
      TESTFIELD("Date of Activity");
    END;

    BEGIN
    END.
  }
}


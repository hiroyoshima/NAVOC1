OBJECT Table 50030 Request for Purchase
{
  OBJECT-PROPERTIES
  {
    Date=08/10/18;
    Time=11:39:12 AM;
    Modified=Yes;
    Version List=X8OC0.01,OC02.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Project Name;
    OnInsert=BEGIN
               InitRecord;

               "Document Date" := TODAY;

               IF Usersetup.GET(USERID) THEN BEGIN
                 "Assigned User ID" := Usersetup."User ID";
                 "Approver User ID" := Usersetup."Approver ID";
                 "Responsibility Center" := Usersetup."RFPur Ctr. Filter";
               END;

               "Created by" := USERID;
               "Created At" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Modified by" := USERID;
               "Modified At" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               ApprovalsMgmt@1000 : Codeunit 1535;
             BEGIN
               TestLinkedDocuments;
               RFPurLines.RESET;
               RFPurLines.SETRANGE("Document No.", "No.");
               RFPurLines.DELETEALL(TRUE);

               ApprovalsMgmt.DeleteApprovalEntries(RECORDID);
             END;

    OnRename=BEGIN
               ERROR(Error001,TABLENAME);
             END;

    CaptionML=ENU=Request for Purchase;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 11  ;   ;Document Type       ;Option        ;OptionString=Request for Purchase,Request for Payment }
    { 15  ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 30  ;   ;Purchaser Code      ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                recEmployee.GET("Purchaser Code");
                                                                "Requisitioner Name" := recEmployee."First Name" + ' ' + recEmployee."Last Name";
                                                              END;
                                                               }
    { 35  ;   ;Purpose             ;Text100       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 40  ;   ;Installation Materials;Boolean     ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 45  ;   ;Office Supplies     ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 50  ;   ;Office/Computer Equipments;Boolean ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 55  ;   ;Pantry Supplies     ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 60  ;   ;Status              ;Option        ;OptionCaptionML=ENU=Open,Closed,Pending Approval,Released;
                                                   OptionString=Open,Closed,Pending Approval,Released;
                                                   Editable=No }
    { 65  ;   ;Job No.             ;Code20        ;TableRelation=Job.No.;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                IF "Job No." <> '' THEN BEGIN
                                                                  Job.GET("Job No.");
                                                                END ELSE BEGIN
                                                                  CLEAR(Job);
                                                                END;

                                                                // "P.O No." := Job."P.O No.";
                                                                // "Name of Project" := Job.Description;
                                                              END;
                                                               }
    { 70  ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 75  ;   ;Posted by           ;Text50         }
    { 80  ;   ;Total Remaining     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Request for Purchase Lines"."Remaining Quantity" WHERE (Document No.=FIELD(No.))) }
    { 85  ;   ;Requisitioner Name  ;Text100        }
    { 90  ;   ;Created by          ;Text100       ;Editable=No }
    { 95  ;   ;Modified by         ;Text100       ;Editable=No }
    { 100 ;   ;Created At          ;DateTime      ;Editable=No }
    { 105 ;   ;Modified At         ;DateTime      ;Editable=No }
    { 110 ;   ;Responsibility Center;Code20       ;TableRelation="Responsibility Center" }
    { 200 ;   ;INTP No.            ;Code20        ;TableRelation="Internal Notice to Proceed";
                                                   OnValidate=VAR
                                                                INTP_@1000 : Record 50040;
                                                              BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                IF "INTP No." <> '' THEN BEGIN
                                                                  INTP_.GET("INTP No.");
                                                                END ELSE BEGIN
                                                                  CLEAR(INTP_);
                                                                END;

                                                                CASE "Document Type" OF
                                                                  "Document Type"::"Request for Purchase":
                                                                    BEGIN
                                                                      "Project Name":= INTP_."Project Name";
                                                                      "Project Name 2" := INTP_."Project Name 2";
                                                                      "Job No." := INTP_."Job No.";
                                                                      "P.O No. (Customer)" := INTP_."P.O No. (Customer)";
                                                                    END;
                                                                  "Document Type"::"Request for Payment":
                                                                    BEGIN
                                                                      "Project Name" := INTP_."Project Name";
                                                                      "Project Name 2" := INTP_."Project Name 2";
                                                                      "P.O No. (Customer)" := INTP_."P.O No. (Customer)";
                                                                    END;
                                                                END;
                                                                // IF "Document Type" = "Document Type"::"Request for Purchase" THEN BEGIN
                                                              END;
                                                               }
    { 210 ;   ;Pay-to No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=VAR
                                                                Vendor_@1000 : Record 23;
                                                              BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                                IF "Pay-to No." <> '' THEN BEGIN
                                                                  Vendor_.GET("Pay-to No.");
                                                                END ELSE BEGIN
                                                                  CLEAR(Vendor_);
                                                                END;

                                                                "Pay-to Name" := Vendor_.Name;
                                                                "Pay-to Name 2" := Vendor_."Name 2";
                                                                "Pay-to Address" := Vendor_.Address;
                                                                "Pay-to Address 2" := Vendor_."Address 2";
                                                              END;
                                                               }
    { 215 ;   ;Pay-to Name         ;Text50        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 220 ;   ;Pay-to Name 2       ;Text50        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 221 ;   ;Pay-to Address      ;Text50        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 222 ;   ;Pay-to Address 2    ;Text50        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 225 ;   ;Project Name        ;Text250       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 226 ;   ;Project Name 2      ;Text250       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 230 ;   ;P.O No. (Customer)  ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Internal Notice to Proceed"."P.O No. (Customer)" WHERE (No.=FIELD(INTP No.)));
                                                   TableRelation="Internal Notice to Proceed";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;

                                                   Editable=No }
    { 235 ;   ;P.O No. (Supplier)  ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 240 ;   ;Canvass Sheet No.   ;Code200       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 245 ;   ;Yellow              ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 250 ;   ;Blue                ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 255 ;   ;Red                 ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 260 ;   ;AWB/BL No.          ;Code50        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 265 ;   ;Notice of Shipment No.;Code20      ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 270 ;   ;Budget              ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 275 ;   ;Downpayment         ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 280 ;   ;Full Payment        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 284 ;   ;Bond                ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 285 ;   ;Surety Bond         ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 286 ;   ;Warranty Bond       ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 290 ;   ;Bid Bond            ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 295 ;   ;Marine Insurance    ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 300 ;   ;Duties and Taxes    ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 305 ;   ;Freight             ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 310 ;   ;BL Fee ($30)        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 320 ;   ;Forms               ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 330 ;   ;CDS                 ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 331 ;   ;Notary              ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 340 ;   ;Xerox               ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 350 ;   ;Processing/Examination;Boolean     ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 360 ;   ;E-Lodgement         ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 370 ;   ;Bank Charges        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 380 ;   ;DOF Processing      ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 390 ;   ;IPF                 ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 400 ;   ;Brokerage Fee       ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 410 ;   ;Protest Fee         ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 420 ;   ;THC                 ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 421 ;   ;THC (P5990/20')     ;Boolean        }
    { 422 ;   ;THC (P7795/40')     ;Boolean        }
    { 430 ;   ;Arrastre            ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 431 ;   ;Arrastre (P3629.92/20');Boolean     }
    { 432 ;   ;Arrastre (P8328.32/40');Boolean     }
    { 440 ;   ;Wharfage            ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 441 ;   ;Wharfage (P581.67/20');Boolean      }
    { 442 ;   ;Wharfage (P872.54/40');Boolean      }
    { 450 ;   ;Delivery Trucking   ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 451 ;   ;Delivery Trucking (P_/20');Decimal ;DecimalPlaces=1:6;
                                                   AutoFormatType=2 }
    { 452 ;   ;Delivery Trucking (P_/40');Decimal ;DecimalPlaces=1:6;
                                                   AutoFormatType=2 }
    { 460 ;   ;Storage (Airfreight);Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 461 ;   ;Storage (Airfreight) P1.76k;Boolean;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 470 ;   ;Deconsol Change     ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 480 ;   ;Service Change      ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 490 ;   ;Others              ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 500 ;   ;Scanning (containerized);Boolean   ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 510 ;   ;AISL (containerized);Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 520 ;   ;Warehouse (LCL) vat-ex;Boolean     ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 522 ;   ;Arrastre (___ P700-800);Boolean    ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 523 ;   ;Wharfage (___ P500-700);Boolean    ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 530 ;   ;Documentation (P500-700);Boolean   ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 540 ;   ;Handling/Stripping  ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 550 ;   ;OLRS                ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 560 ;   ;Insurance           ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 570 ;   ;Stamps              ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 580 ;   ;Container Security Fee;Boolean     ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 590 ;   ;LCL Changes (vat-ex);Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 600 ;   ;BL Fee (530)        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 655 ;   ;Manifest (P650-1000);Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 660 ;   ;Turn Over (P560-1000);Boolean      ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 800 ;   ;Signed P.O          ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 805 ;   ;Proforma Invoice    ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 810 ;   ;Commercial Invoice  ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 815 ;   ;Packing List        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 820 ;   ;Airwaybill/Bill of Landing;Boolean ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 825 ;   ;Delivery Receipt    ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 830 ;   ;T/T Payments        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 835 ;   ;Billing Statement   ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 840 ;   ;Computation         ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 845 ;   ;Warranty Certificate;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 850 ;   ;Particulars         ;Text250        }
    { 851 ;   ;Amount              ;Decimal       ;DecimalPlaces=0:6;
                                                   AutoFormatType=2 }
    { 500010; ;Assigned User ID    ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 500020; ;Approver User ID    ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 500021; ;Date Needed         ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;
                                                               }
    { 500022; ;Employee No.        ;Code20        ;TableRelation=Employee }
    { 500023; ;Incoming Document Entry No.;Integer }
    { 500030; ;Job Order No.       ;Code20        ;TableRelation="Job Order" }
  }
  KEYS
  {
    {    ;No.,Document Type                       ;Clustered=Yes }
    {    ;Document Type,No.                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      recCustomSetup@1000 : Record 50001;
      recJob@1003 : Record 167;
      Text001@1004 : TextConst 'ENU=%1 successfully posted.';
      Text002@1007 : TextConst 'ENU=Do you want to post Document No. %1?';
      recEmployee@1008 : Record 5200;
      Usersetup@1009 : Record 91;
      Error001@1010 : TextConst 'ENU=You cannot rename %1.';
      RFPurLines@1011 : Record 50031;
      Job@1006 : Record 167;
      cduNoSeriesMgt@1012 : Codeunit 396;
      cduGlobalReference@1002 : Codeunit 50030;
      UserSetupMgt@1013 : Codeunit 5700;
      codJobNoGlobal@1001 : Code[20];
      Answer@1005 : Boolean;

    PROCEDURE AssistEdit@2() : Boolean;
    BEGIN
      recCustomSetup.GET;

      CASE "Document Type" OF
        "Document Type"::"Request for Purchase":
          BEGIN
            recCustomSetup.TESTFIELD(recCustomSetup."RFPUR Nos.");
            IF cduNoSeriesMgt.SelectSeries(recCustomSetup."RFPUR Nos.",xRec."No. Series","No. Series") THEN BEGIN
              cduNoSeriesMgt.SetSeries("No.");
              EXIT(TRUE);
            END;
          END;
        "Document Type"::"Request for Payment":
          BEGIN
            IF cduNoSeriesMgt.SelectSeries(recCustomSetup."RFPAY Nos.",xRec."No. Series","No. Series") THEN BEGIN
              cduNoSeriesMgt.SetSeries("No.");
              EXIT(TRUE);
            END;
          END;
      END;
      EXIT(FALSE);
    END;

    PROCEDURE Posting@7();
    BEGIN
      TESTFIELD(Status,Status::Open);
      Answer := DIALOG.CONFIRM(Text002,TRUE,"No.");
      IF Answer = TRUE THEN BEGIN
        "Posting Date" := TODAY;
        "Posted by" := cduGlobalReference.GetUserFullName(USERID);
        Status := Status::Closed;
        MESSAGE(Text001,"No.");
      END
    END;

    LOCAL PROCEDURE GetUserFullName@9(pUserID@1000 : Text[100]) : Text;
    VAR
      recUser@1001 : Record 2000000120;
    BEGIN
      recUser.RESET;
      recUser.SETRANGE("User Name",pUserID);
      IF recUser.FINDFIRST THEN BEGIN
        IF recUser."Full Name" <> '' THEN
          EXIT(recUser."Full Name")
        ELSE
          EXIT(pUserID)
      END
      ELSE
        EXIT(pUserID);
    END;

    PROCEDURE ValidateRFPur@10();
    BEGIN
      TestRFPurFields;
      TestRFPurLines;
    END;

    PROCEDURE TestRFPurLines@1();
    VAR
      RFPurLines@1001 : Record 50031;
      Msg001@1000 : TextConst 'ENU=There is nothing to release.';
    BEGIN
      RFPurLines.SETRANGE("Document No.", "No.");
      IF RFPurLines.COUNT = 0 THEN BEGIN
        ERROR(Msg001);
      END ELSE BEGIN
       IF RFPurLines.FINDSET THEN BEGIN
         REPEAT
           IF (RFPurLines.Type = RFPurLines.Type::"G/L Account") OR (RFPurLines.Type = RFPurLines.Type::Item) THEN BEGIN
             RFPurLines.TESTFIELD("No.");
             RFPurLines.TESTFIELD(Description);
             RFPurLines.TESTFIELD("Unit of Measure");
             RFPurLines.TESTFIELD(Request);
           END;
         UNTIL RFPurLines.NEXT = 0;
       END;
      END;
    END;

    PROCEDURE TestRFPurFields@12();
    BEGIN
      TESTFIELD("Document Date");
      TESTFIELD("Date Needed");
      TESTFIELD("Employee No.");
      IF "INTP No." <> '' THEN BEGIN
        TESTFIELD("Project Name");
        TESTFIELD(Purpose);
      END;
    END;

    PROCEDURE TestRFPayFields@14();
    BEGIN
      IF "INTP No." <> '' THEN BEGIN
        TESTFIELD("Project Name");
        TESTFIELD(Purpose);
      END;
    END;

    PROCEDURE TestLinkedDocuments@3();
    VAR
      PurchHeader@1002 : Record 38;
      PurchInvoiceHeader@1000 : Record 122;
      Error001@1001 : TextConst 'ENU=You''re not allowed to delete %1 because it is already linked to a purchase document.';
    BEGIN
      PurchHeader.SETFILTER("Reference RFP No.", "No.");
      PurchInvoiceHeader.SETFILTER("Request for Purchase No.", "No.");

      IF (PurchHeader.COUNT > 0) OR (PurchInvoiceHeader.COUNT > 0) THEN
        ERROR(Error001, "No.");
    END;

    PROCEDURE InitRecord@4();
    BEGIN
      recCustomSetup.GET;

      CASE "Document Type" OF
        "Document Type"::"Request for Payment":
          BEGIN
            IF "No." = '' THEN BEGIN
              recCustomSetup.GET;
              recCustomSetup.TESTFIELD("RFPAY Nos.");
              cduNoSeriesMgt.InitSeries(recCustomSetup."RFPAY Nos.",xRec."No. Series",0D,"No.","No. Series");
            END;
          END;
        "Document Type"::"Request for Purchase":
          BEGIN
            IF "No." = '' THEN BEGIN
              recCustomSetup.GET;
              recCustomSetup.TESTFIELD("RFPUR Nos.");
              cduNoSeriesMgt.InitSeries(recCustomSetup."RFPUR Nos.",xRec."No. Series",0D,"No.","No. Series");
            END;
          END;
      END;

      "Employee No." := UserSetupMgt.GetUserSetupEmployeeNo;
    END;

    PROCEDURE RFPNoVisibility@5() : Boolean;
    VAR
      NoSeries@1000 : Record 308;
    BEGIN
      recCustomSetup.GET;
      CASE "Document Type" OF
        "Document Type"::"Request for Payment":
          BEGIN
            IF (recCustomSetup."RFPAY Nos." <> '') AND (NoSeries.GET(recCustomSetup."RFPAY Nos.")) AND (NoSeries."Manual Nos." = FALSE) THEN
              EXIT(FALSE);
          END;
        "Document Type"::"Request for Purchase":
          BEGIN
            IF (recCustomSetup."RFPUR Nos."<> '') AND (NoSeries.GET(recCustomSetup."RFPUR Nos.")) AND (NoSeries."Manual Nos." = FALSE) THEN
              EXIT(FALSE);
          END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE GenerateRFPayReport@6();
    VAR
      RFPay_@1000 : Report 50014;
    BEGIN
      CLEAR(RFPay_);

      RFPay_.SetReportFilter(Rec);
      RFPay_.RUNMODAL;
    END;

    PROCEDURE GenerateRFPurReport@8();
    BEGIN
    END;

    BEGIN
    END.
  }
}


OBJECT Table 50650 Request for Exception
{
  OBJECT-PROPERTIES
  {
    Date=10/30/23;
    Time=[ 5:54:41 PM];
    Modified=Yes;
    Version List=NAVOC1.00.05;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InitInsert;
             END;

    OnModify=BEGIN
               TestDocumentfield;
             END;

    OnDelete=BEGIN
               ApprovalsMgmt.DeleteApprovalEntries(Rec.RECORDID);
               DeleteIncomingDocument;
               DeleteRecordLinks;
             END;

    OnRename=BEGIN
               ERROR(Err01, Rec.TABLECAPTION);
             END;

  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                PrintDocument@1000 : Action;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  RFESetup.GET;
                                                                  NoSeriesMgt.TestManual(RFESetup."RFE Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 11  ;   ;No. Series          ;Code10         }
    { 20  ;   ;Subject             ;Text50        ;OnValidate=BEGIN
                                                                TESTFIELD(Subject);
                                                              END;
                                                               }
    { 30  ;   ;Date of Document    ;Date           }
    { 40  ;   ;Date Created        ;DateTime       }
    { 50  ;   ;INTP No.            ;Code20        ;TableRelation="Internal Notice to Proceed";
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                CALCFIELDS("Project Name");
                                                                CALCFIELDS("Project Name 2");

                                                                IF INTP.GET("INTP No.") THEN BEGIN
                                                                 VALIDATE("Customer No.", INTP."Customer No.");
                                                                 VALIDATE("Cost Analyst No.", INTP."Cost Analyst No.");
                                                                 VALIDATE("Project Manager No.", INTP."Project Manager No.");
                                                                 "Type of Project" := "Type of Project"::Project;
                                                                IF INTP."P.O No. (Customer)" <> '' THEN
                                                                  "Type of Mobilization" := "Type of Mobilization"::"With Purchase Order"
                                                                ELSE
                                                                  "Type of Mobilization" := "Type of Mobilization"::"Without Purchase Order";

                                                                END ELSE BEGIN
                                                                 CLEAR("Customer No.");
                                                                 CLEAR("Customer Name");
                                                                 CLEAR("Customer Name 2");
                                                                 CLEAR(Address);
                                                                 CLEAR("Address 2");
                                                                 CLEAR("Cost Analyst No.");
                                                                 CLEAR("Project Manager No.");
                                                                 CALCFIELDS("Cost Analyst");
                                                                 CALCFIELDS("Project Manager");
                                                                 CLEAR("Type of Project");
                                                                 CLEAR(Group);
                                                                 CLEAR("Type of Project");
                                                                 CLEAR("Project Category");
                                                                 CLEAR("Type of Mobilization");
                                                                 CLEAR("Project Stage");
                                                                END;
                                                              END;
                                                               }
    { 60  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                TESTFIELD("Customer No.");

                                                                IF INTP.GET("INTP No.") AND (INTP."Customer No." <> "Customer No.") THEN
                                                                  TESTFIELD("Customer No.", INTP."Customer No.");

                                                                IF Customer.GET("Customer No.") THEN BEGIN
                                                                  "Customer Name" := Customer.Name;
                                                                  "Customer Name 2" := Customer."Name 2";
                                                                  Address := Customer.Address;
                                                                  "Address 2" := Customer."Address 2";
                                                                END;
                                                              END;
                                                               }
    { 70  ;   ;Customer Name       ;Text50        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 71  ;   ;Customer Name 2     ;Text50        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 73  ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 74  ;   ;Address 2           ;Text50        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 80  ;   ;Site Name           ;Text50        ;TableRelation="Post Code".Code;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 90  ;   ;Approved Budget     ;Decimal       ;InitValue=0;
                                                   OnValidate=VAR
                                                                initRecord@1000 : Integer;
                                                              BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   DecimalPlaces=2:2;
                                                   NotBlank=Yes;
                                                   BlankNumbers=BlankZero;
                                                   BlankZero=Yes }
    { 100 ;   ;Approved Timeline   ;Date          ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 110 ;   ;Cost Analyst No.    ;Code20        ;TableRelation=Resource WHERE (Job Type=FILTER(Job Analyst));
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                IF "INTP No." <> '' THEN
                                                                  TESTFIELD("Cost Analyst No.");

                                                                CALCFIELDS("Cost Analyst");
                                                              END;
                                                               }
    { 120 ;   ;Cost Analyst        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Cost Analyst No.)));
                                                   Editable=No }
    { 125 ;   ;Project Manager No. ;Code20        ;TableRelation=Resource;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                CALCFIELDS("Project Manager");
                                                              END;
                                                               }
    { 126 ;   ;Project Manager     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Project Manager No.)));
                                                   Editable=No }
    { 130 ;   ;Project Status      ;Code30         }
    { 140 ;   ;Proposed Budget     ;Decimal       ;InitValue=0;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   DecimalPlaces=2:2;
                                                   BlankZero=Yes }
    { 150 ;   ;Proposed Timeline   ;Date          ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 160 ;   ;Project In Charge No.;Code20       ;TableRelation=Resource;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                CALCFIELDS("Project In Charge");
                                                              END;

                                                   CaptionML=ENU=Project In-Charge No. }
    { 161 ;   ;Project In Charge   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Project In Charge No.)));
                                                   CaptionML=ENU=Project In-Charge;
                                                   Editable=No }
    { 180 ;   ;Total No. of Extension;Integer     ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   BlankZero=Yes }
    { 190 ;   ;Activity Status     ;Code30         }
    { 200 ;   ;No. of Mobilization ;Option        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   OptionCaptionML=ENU=,1st Day,2nd Day,3rd Day,4th Day,5th Day,6th Day,7th Day,8th Day,9th Day,10th Day;
                                                   OptionString=,1st Day,2nd Day,3rd Day,4th Day,5th Day,6th Day,7th Day,8th Day,9th Day,10th Day;
                                                   BlankZero=Yes }
    { 210 ;Yes;No. of Remobilization;Option       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   OptionCaptionML=ENU=,1st Day,2nd Day,3rd Day,4th Day,5th Day,6th Day,7th Day,8th Day,9th Day,10th Day;
                                                   OptionString=,1st Day,2nd Day,3rd Day,4th Day,5th Day,6th Day,7th Day,8th Day,9th Day,10th Day;
                                                   BlankZero=Yes }
    { 240 ;   ;Project Stage       ;Option        ;OnValidate=BEGIN
                                                                RFEBaseSetupApproval;
                                                                TestDocumentStatus;
                                                                TESTFIELD("Type of Project");
                                                                TESTFIELD("Project Category");
                                                                TESTFIELD("Type of Mobilization");

                                                                IF "Type of Project" = "Type of Project"::"Non-Project" THEN
                                                                  TESTFIELD("Project Stage", "Project Stage"::"Support Services");

                                                                CASE "Project Stage" OF
                                                                  "Project Stage"::"Project Implementation", "Project Stage"::"After Sales", "Project Stage"::"Sales Cycle Stage":
                                                                    TESTFIELD("INTP No.");
                                                                  "Project Stage"::"Support Services":
                                                                    TESTFIELD("Type of Project", "Type of Project"::"Non-Project");
                                                                END;

                                                                IF "Project Stage" <> xRec."Project Stage" THEN BEGIN
                                                                 //Productization
                                                                 CLEAR(Concept);
                                                                 CLEAR(Research);
                                                                 CLEAR(Analysis);
                                                                 CLEAR(Development);
                                                                 CLEAR(Launch);

                                                                 //Sales Cycle Stage
                                                                 CLEAR("SCS Site Survey");
                                                                 CLEAR("SCS Proof of Concept");
                                                                 CLEAR("SCS Demo to Purchase");
                                                                 CLEAR("SCS Bidding");

                                                                 //Project Implementation
                                                                 CLEAR("PI Site Survey");
                                                                 CLEAR("PI Installation");
                                                                 CLEAR("PI Integration");
                                                                 CLEAR("PI Delivery");
                                                                 CLEAR("PI Testing");
                                                                 CLEAR("PI Troubleshooting");
                                                                 CLEAR("PI Project Documentation");
                                                                 CLEAR("PI Permitting");
                                                                 CLEAR("PI Acceptance");
                                                                 CLEAR("PI IUD");
                                                                 CLEAR("PI PDI");
                                                                 CLEAR("PI Procurement of Mats/Equip");
                                                                 CLEAR("PI Training");
                                                                 CLEAR("PI Meeting");
                                                                 CLEAR("PI RMA");
                                                                 CLEAR("PI Cable Laying");
                                                                 CLEAR("PI Hauling");
                                                                 CLEAR("PI Rectification/PL Clearing");
                                                                 CLEAR("PI Site Audit");
                                                                 CLEAR("PI Material Audit");
                                                                 CLEAR("PI Shipment of Mats/Equip");
                                                                 CLEAR(Mobilization);
                                                                 CLEAR(Remobilization);
                                                                 CLEAR("No. of Mobilization");
                                                                 CLEAR("No. of Remobilization");
                                                                 CLEAR("Planned No. Of Days");

                                                                 //After Sales
                                                                 CLEAR("AS Troubleshooting");
                                                                 CLEAR("AS RMA");
                                                                 CLEAR("AS Procurement of Mats/Equip");
                                                                 CLEAR("AS Shipment of Mats/Equip");
                                                                 CLEAR("AS Maintenance");

                                                                 //Support Services
                                                                 CLEAR("SS Construction");
                                                                END
                                                              END;

                                                   OptionCaptionML=ENU=,Productization,Sales Cycle Stage,Project Implementation,After Sales,Support Services;
                                                   OptionString=,Productization,Sales Cycle Stage,Project Implementation,After Sales,Support Services;
                                                   BlankZero=Yes }
    { 247 ;   ;Type of Project     ;Option        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                IF "Type of Project" <> xRec."Type of Project" THEN BEGIN
                                                                  CLEAR("Project Category");
                                                                  CLEAR("Type of Mobilization");
                                                                  CLEAR("Project Stage");
                                                                  CLEAR("Chargeable To");
                                                                  CLEAR(Group);
                                                                END;

                                                                CASE "Type of Project" OF
                                                                  "Type of Project"::Project:
                                                                    BEGIN
                                                                      TESTFIELD("Customer No.");
                                                                      TESTFIELD("Customer Name");
                                                                      TESTFIELD("Cost Analyst No.");
                                                                      TESTFIELD(Group);
                                                                      IF Mobilization THEN
                                                                        TESTFIELD("No. of Mobilization");

                                                                      IF Remobilization THEN
                                                                        TESTFIELD("No. of Remobilization");
                                                                    END;
                                                                  "Type of Project"::"Non-Project":
                                                                    BEGIN
                                                                      TESTFIELD("INTP No.", '');
                                                                      VALIDATE("Cost Analyst No.", '');
                                                                      VALIDATE("Project Manager No.", '');
                                                                      VALIDATE("Project In Charge No.", '');
                                                                      VALIDATE("Project Category", "Project Category"::"Support Services");
                                                                      VALIDATE("Type of Mobilization", "Type of Mobilization"::"Without Purchase Order");
                                                                      VALIDATE("Project Stage", "Project Stage"::"Support Services");
                                                                    END;
                                                                END;
                                                              END;

                                                   OptionCaptionML=ENU=,Project,Non-Project;
                                                   OptionString=,Project,Non-Project;
                                                   BlankZero=Yes }
    { 248 ;   ;Project Category    ;Option        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                CASE "Project Category" OF
                                                                  "Project Category"::"Support Services":
                                                                    TESTFIELD("Type of Project", "Type of Project"::"Non-Project");
                                                                  ELSE
                                                                    TESTFIELD("Type of Project", "Type of Project"::Project);
                                                                END;
                                                              END;

                                                   OptionString=,Supply,Services,Full Turnkey,Support Services;
                                                   BlankZero=Yes }
    { 249 ;   ;Type of Mobilization;Option        ;InitValue=Without Purchase Order;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                TESTFIELD("Type of Project");
                                                                TESTFIELD("Project Category");
                                                                IF "Type of Project" = "Type of Project"::"Non-Project" THEN
                                                                  TESTFIELD("Type of Mobilization", "Type of Mobilization"::"Without Purchase Order");

                                                                IF "Type of Mobilization" IN ["Type of Mobilization"::"Awaiting for Purchase Order", "Type of Mobilization"::"With Purchase Order"] THEN
                                                                  TESTFIELD("INTP No.");

                                                                IF INTP.GET("INTP No.") THEN BEGIN
                                                                  IF (INTP."P.O No. (Customer)" <> '') THEN
                                                                   TESTFIELD("Type of Mobilization","Type of Mobilization"::"With Purchase Order");
                                                                  IF ("Type of Mobilization" = "Type of Mobilization"::"With Purchase Order") AND (INTP."P.O No. (Customer)" = '') THEN
                                                                    FIELDERROR("Type of Mobilization");
                                                                END;
                                                              END;

                                                   OptionString=,With Purchase Order,Without Purchase Order,Awaiting for Purchase Order;
                                                   BlankZero=Yes }
    { 250 ;   ;Chargeable To       ;Option        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   OptionCaptionML=ENU=,Customer,Vendor;
                                                   OptionString=,Customer,Vendor;
                                                   BlankZero=Yes }
    { 255 ;   ;Group               ;Option        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Group;
                                                   OptionCaptionML=ENU=,Remote Monitoring System,Outside Plant,Turnkey;
                                                   OptionString=,Remote Monitoring System,Outside Plant,Turnkey;
                                                   BlankZero=Yes }
    { 260 ;   ;Support Services    ;Option        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   OptionString=Construction,Other;
                                                   BlankZero=Yes }
    { 270 ;   ;Concept             ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 280 ;   ;Research            ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 290 ;   ;Analysis            ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 300 ;   ;Development         ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 310 ;   ;Launch              ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 320 ;   ;SCS Site Survey     ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Site Survey }
    { 330 ;   ;SCS Proof of Concept;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Proof of Concept }
    { 340 ;   ;SCS Demo to Purchase;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Demo to Purchase }
    { 350 ;   ;SCS Bidding         ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Bidding }
    { 360 ;   ;PI Site Survey      ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Site Survey }
    { 370 ;   ;PI Installation     ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Installation }
    { 380 ;   ;PI Integration      ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Integration }
    { 390 ;   ;PI Delivery         ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Delivery }
    { 400 ;   ;PI Testing          ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Testing }
    { 410 ;   ;PI Troubleshooting  ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Troubleshooting }
    { 420 ;   ;PI Project Documentation;Boolean   ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Project Documentation }
    { 430 ;   ;PI Permitting       ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Permitting }
    { 440 ;   ;PI Acceptance       ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Acceptance }
    { 450 ;   ;PI IUD              ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Inspection Upon Delivery }
    { 460 ;   ;PI PDI              ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Pre-Delivery Inspection }
    { 470 ;   ;PI Procurement of Mats/Equip;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Procurement of Materials or Equipment }
    { 480 ;   ;PI Training         ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Training }
    { 490 ;   ;PI Meeting          ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Meeting }
    { 500 ;   ;PI RMA              ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Return Merchandize Authorization (RMA) }
    { 510 ;   ;PI Cable Laying     ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Cable Laying }
    { 520 ;   ;PI Hauling          ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Hauling }
    { 530 ;   ;PI Rectification/PL Clearing;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Rectification / PL Clearing }
    { 540 ;   ;PI Site Audit       ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Site Audit }
    { 550 ;   ;PI Material Audit   ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Material Audit }
    { 560 ;   ;PI Shipment of Mats/Equip;Boolean  ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Shipment of Materials/Equipment }
    { 570 ;   ;AS Troubleshooting  ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Troubleshooting }
    { 580 ;   ;AS RMA              ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Return Merchandize Authorization (RMA) }
    { 590 ;   ;AS Procurement of Mats/Equip;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Procurement of Materials/Equipment }
    { 600 ;   ;AS Shipment of Mats/Equip;Boolean  ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Shipment of Materials/Equipment }
    { 610 ;   ;AS Maintenance      ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Maintenance }
    { 620 ;   ;SS Construction     ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Construction }
    { 680 ;   ;Project Budget Adjustment;Boolean  ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 690 ;   ;Request for Payment ;Boolean        }
    { 700 ;   ;ARC Cash Advance    ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Cash Advance }
    { 710 ;   ;ARC Reimbursement   ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Reimbursement }
    { 720 ;   ;ARC Liquidation     ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Liquidation }
    { 730 ;   ;Request for Advance Purchase;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 740 ;   ;Request for Addl Items Non Spa;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Request for Additional Items - Non Spare }
    { 750 ;   ;Request for Addl Items Spa;Boolean ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Request for Additional Items - Spare }
    { 760 ;   ;Replacement of Defective Unit;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 770 ;   ;Offsetting of Material;Boolean     ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 780 ;   ;Waiving of Accreditation Req;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Waiving of Accreditation Requirements }
    { 790 ;   ;Blanket Approval    ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 800 ;   ;External Timeline   ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 810 ;   ;Internal Timeline   ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 820 ;   ;Description of Request;BLOB        ;CaptionML=ENU=Description of Request/Background }
    { 830 ;   ;Justification       ;BLOB          ;CaptionML=ENU=Justification & Assessment Risk }
    { 840 ;   ;Waiver Type         ;Option        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                IF "Waiver Type"="Waiver Type"::"Full Waiver" THEN BEGIN
                                                                   CLEAR("Person In Charge");
                                                                   CLEAR("Person In Charge No.");
                                                                   CLEAR("Commitment Date");
                                                                   CLEAR("Extension of Commitment Date");
                                                                END;
                                                              END;

                                                   OptionString=,Partial Waiver,Full Waiver;
                                                   BlankZero=Yes }
    { 850 ;   ;Status of Regularization;Option    ;OptionString=,In Progress,For Review,Overdue,Done,Cancelled;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 860 ;   ;Person In Charge No.;Code20        ;TableRelation=Resource;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                IF "Waiver Type" = "Waiver Type"::"Full Waiver" THEN
                                                                  TESTFIELD("Person In Charge No.", '');

                                                                CALCFIELDS("Person In Charge");
                                                              END;

                                                   CaptionML=ENU=Person In-Charge No. }
    { 861 ;   ;Person In Charge    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Person In Charge No.)));
                                                   CaptionML=ENU=Person In-Charge;
                                                   Editable=No }
    { 870 ;   ;Commitment Date     ;Date          ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 880 ;   ;Extension of Commitment Date;Date  ;OnValidate=BEGIN
                                                                // TestDocumentStatus;
                                                                IF ("Extension of Commitment Date" <> 0D) AND (Status = Status::Open) THEN
                                                                  TESTFIELD(Status,Status::Released);
                                                              END;
                                                               }
    { 890 ;   ;Approved Date of Extension;Date    ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   Editable=No }
    { 900 ;   ;Date Regularized    ;Date          ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   Editable=No }
    { 910 ;   ;Approved Budget Attachment;Boolean ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Approved Budget }
    { 920 ;   ;Proposed Budget Attachment;Boolean ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Proposed Budget }
    { 930 ;   ;Approved Timeline Attachment;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Approved Timeline }
    { 940 ;   ;Proposed Timeline Attachment;Boolean;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Proposed Timeline }
    { 950 ;   ;Others              ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                IF Others = FALSE THEN
                                                                  CLEAR("Others Description");
                                                              END;
                                                               }
    { 951 ;   ;Others Description  ;Text50        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 960 ;   ;Documentation Engineer;Code10      ;TableRelation=Resource;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 970 ;   ;TTID                ;Code10        ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 980 ;   ;Customer Dependecy  ;Code10        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 990 ;   ;Dependency Status   ;Option        ;OptionString=Open,Closed }
    { 1000;   ;Date NOC PAT        ;Date          ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 1010;   ;Remarks             ;BLOB          ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 1020;   ;DOS Date Created    ;Date          ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 1030;   ;Requested By User ID;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                TESTFIELD("Requested By User ID");
                                                                VALIDATE("Department Code", UserSetupMgt.GetUserGroupCode("Requested By User ID"));
                                                                CALCFIELDS("Requested By User Position");
                                                              END;
                                                               }
    { 1031;   ;Requested By User Position;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Setup".Title/Position WHERE (User ID=FIELD(Requested By User ID)));
                                                   Editable=No }
    { 1040;   ;Department Code     ;Code10        ;TableRelation="User Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Department Code");
                                                                CALCFIELDS(Department);
                                                              END;
                                                               }
    { 1041;   ;Department          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Group".Name WHERE (Code=FIELD(Department Code)));
                                                   Editable=No }
    { 1050;   ;Project Name        ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Internal Notice to Proceed"."Project Name" WHERE (No.=FIELD(INTP No.)));
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   Editable=No }
    { 1051;   ;Project Name 2      ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Internal Notice to Proceed"."Project Name 2" WHERE (No.=FIELD(INTP No.)));
                                                   OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   Editable=No }
    { 1090;   ;Planned No. Of Days ;Decimal       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                IF "Planned No. Of Days" <= 0 THEN
                                                                  FIELDERROR("Planned No. Of Days");
                                                              END;

                                                   BlankZero=Yes }
    { 1100;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   OnValidate=BEGIN
                                                                IF NOT UserSetupMgt.CheckRespCenter(7,"Responsibility Center")THEN
                                                                 ERROR(Err02, ResponsibilityCenter.TABLECAPTION, UserSetupMgt.GetRFEFilter);
                                                              END;
                                                               }
    { 1110;   ;Status              ;Option        ;OptionCaptionML=ENU=Open,Released,Pending Approval;
                                                   OptionString=Open,Released,Pending Approval;
                                                   Editable=No }
    { 1120;   ;Mobilization        ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                CLEAR("No. of Mobilization");
                                                              END;
                                                               }
    { 1130;   ;Remobilization      ;Boolean       ;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                                CLEAR("No. of Remobilization");
                                                              END;
                                                               }
    { 1140;   ;Revised Timeline Attachment;Boolean;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;

                                                   CaptionML=ENU=Revised Timeline }
    { 1200;   ;Incoming Document Entry No.;Integer;OnValidate=BEGIN
                                                                TestDocumentStatus;
                                                              END;
                                                               }
    { 50500;  ;Created by User ID  ;Code50        ;Editable=No }
    { 50550;  ;Title/Position      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Setup".Title/Position WHERE (User ID=FIELD(Created by User ID)));
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      INTP@1000 : Record 50040;
      Customer@1001 : Record 18;
      RFESetup@1002 : Record 50652;
      EmployeeTable@1004 : Record 5200;
      DepartmentTable@1005 : Record 9000;
      ResponsibilityCenter@1010 : Record 5714;
      UserSetup@1016 : Record 91;
      RecRFEBaseApproval@1017 : Record 50651;
      NoSeriesMgt@1006 : Codeunit 396;
      UserSetupMgt@1003 : Codeunit 5700;
      Err01@1007 : TextConst 'ENU=You cannot rename a %1.';
      Err02@1009 : TextConst 'ENU=Your identification is set up to process from %1 %2 only.';
      Err03@1008 : TextConst 'ENU=You must check atleast one checkbox from Type of Exception.';
      Err04@1011 : TextConst 'ENU=You must check atleast one checkbox from %1 fasttab.';
      Err05@1014 : TextConst 'ENU=INTP: %1 %2 Purchase Order';
      ApprovalReopenErr@1013 : TextConst 'ENU=The approval process must be cancelled or completed to reopen this document.';
      ApprovalReleaseErr@1012 : TextConst 'ENU=The approval process must be completed to release this document.';
      ApprovalsMgmt@1015 : Codeunit 1535;

    PROCEDURE InitInsert@61();
    BEGIN
      IF "No." = '' THEN BEGIN
        NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series" ,TODAY,"No.","No. Series");
      END;

      InitRecord;
    END;

    LOCAL PROCEDURE InitRecord@3();
    BEGIN
      IF "Date of Document" = 0D THEN
        "Date of Document" := TODAY;

      IF "Created by User ID" = '' THEN BEGIN
        "Created by User ID" := USERID;
        CALCFIELDS("Title/Position");
      END;

      IF "Date Created" = 0DT THEN
        "Date Created"  := CURRENTDATETIME;

      IF "Requested By User ID" = '' THEN
        VALIDATE("Requested By User ID",UserSetupMgt.GetUserSetupIDWithTestfield);

      IF "Responsibility Center" = '' THEN
        "Responsibility Center" := UserSetupMgt.GetRFEFilter;

      TestDocumentfield;
    END;

    PROCEDURE InitValue@4();
    BEGIN
      IF "No." = '' THEN BEGIN
        "Date of Document" := TODAY;
        VALIDATE("Requested By User ID", UserSetupMgt.GetUserSetupIDWithTestfield);
        "Responsibility Center" :=  UserSetupMgt.GetRFEFilter;
        VALIDATE("Created by User ID", UserSetupMgt.GetUserSetupIDWithTestfield);
        "Type of Mobilization" := "Type of Mobilization"::"Without Purchase Order";
      END;
    END;

    PROCEDURE AssistEdit@1(OldRFE@1000 : Record 50650) : Boolean;
    VAR
      RFE@1001 : Record 50650;
    BEGIN
        WITH RFE DO BEGIN
         RFE := Rec;
         RFESetup.GET;
         RFESetup.TESTFIELD("RFE Nos.");
         IF NoSeriesMgt.SelectSeries(RFESetup."RFE Nos.",OldRFE."No. Series","No. Series") THEN BEGIN
           RFESetup.GET;
           RFESetup.TESTFIELD("RFE Nos.");
           NoSeriesMgt.SetSeries("No.");
           Rec := RFE;
           EXIT(TRUE);
         END;
        END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@2() : Code[20];
    BEGIN
      RFESetup.GET;
      RFESetup.TESTFIELD("RFE Nos.");
      EXIT(RFESetup."RFE Nos.");
    END;

    PROCEDURE SetNoVisibility@69() : Boolean;
    VAR
      NoSeries@1000 : Record 308;
    BEGIN
      IF "No." <> '' THEN
        EXIT(TRUE);

      RFESetup.GET;
      IF (RFESetup."RFE Nos." = '') OR NOT NoSeries.GET(RFESetup."RFE Nos.") THEN
        EXIT(TRUE);

      EXIT(NoSeries."Manual Nos.");
    END;

    PROCEDURE RFESetFilter@5();
    BEGIN
      IF UserSetupMgt.GetRFEFilter <> '' THEN BEGIN
       FILTERGROUP(2);
       SETRANGE("Responsibility Center", UserSetupMgt.GetRFEFilter);
       FILTERGROUP(0);
      END;
    END;

    PROCEDURE SetTempBob@6(BlobFieldNo@1000 : Integer;TxtToBlob@1001 : Text);
    VAR
      OutStr@1002 : OutStream;
    BEGIN
      CASE BlobFieldNo OF
        Rec.FIELDNO("Description of Request"):
          BEGIN
            IF TxtToBlob <> '' THEN BEGIN
              "Description of Request".CREATEOUTSTREAM(OutStr);
              OutStr.WRITE(TxtToBlob);
            END ELSE
              CLEAR("Description of Request");
          END;
        Rec.FIELDNO(Justification):
          BEGIN
            IF TxtToBlob <> '' THEN BEGIN
              Justification.CREATEOUTSTREAM(OutStr);
              OutStr.WRITE(TxtToBlob);
            END ELSE
              CLEAR(Justification);
          END;
        Rec.FIELDNO(Remarks):
          BEGIN
           IF TxtToBlob <> '' THEN BEGIN
            Remarks.CREATEOUTSTREAM(OutStr);
            OutStr.WRITE(TxtToBlob);
           END ELSE
            CLEAR(Remarks);
          END;
        ELSE
          EXIT;
      END;
    END;

    PROCEDURE SetStatus@7(RFEStatus@1000 : Option);
    BEGIN
      CASE RFEStatus OF
        Status::Open:
          BEGIN
            IF Status = Status::Open THEN
              EXIT;
            VALIDATE(Status, Status::Open);
            MODIFY(TRUE);
          END;
        Status::"Pending Approval":
          BEGIN
            IF Status = Status::"Pending Approval" THEN
              EXIT;
            VALIDATE(Status, Status::"Pending Approval");
            MODIFY(TRUE);
          END;
        Status::Released:
          BEGIN
            IF Status = Status::Released THEN
              EXIT;
            OnCheckReleaseRestriction;
            VALIDATE(Status, Status::Released);
            MODIFY(TRUE);
          END;
      END;
    END;

    LOCAL PROCEDURE DeleteIncomingDocument@8();
    VAR
      IncomingDocument@1000 : Record 130;
    BEGIN
      IF IncomingDocument.GET("Incoming Document Entry No.") THEN
        IncomingDocument.DELETE(TRUE);
    END;

    LOCAL PROCEDURE DeleteRecordLinks@14();
    VAR
      RecordLinks@1000 : Record 2000000068;
    BEGIN
      RecordLinks.SETRANGE("Record ID", Rec.RECORDID);
      RecordLinks.DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE CheckTypeOfExceptionCheckBox@31();
    BEGIN
      IF NOT "Project Budget Adjustment" AND NOT "Request for Payment" AND
        NOT "ARC Cash Advance" AND NOT "ARC Liquidation" AND NOT "ARC Reimbursement" AND
        NOT "Request for Advance Purchase" AND NOT "Request for Addl Items Non Spa" AND NOT "Request for Addl Items Spa" AND
        NOT "Replacement of Defective Unit" AND NOT "Offsetting of Material" AND NOT "Waiving of Accreditation Req" AND
        NOT "Blanket Approval" AND NOT "External Timeline" AND NOT "Internal Timeline" THEN
        ERROR(Err03);
    END;

    LOCAL PROCEDURE TestDocumentfield@13();
    BEGIN
      // Validation of fields
      TESTFIELD(Subject);
      TESTFIELD("Date of Document");
      TESTFIELD("Customer No.");
      TESTFIELD("Customer Name");
      TESTFIELD("Requested By User ID");
      TESTFIELD("Department Code");
      IF "INTP No." <> '' THEN
        TESTFIELD("Cost Analyst No.");

      TESTFIELD("Type of Project");
      TESTFIELD("Project Category");
      TESTFIELD("Type of Mobilization");
      TESTFIELD("Project Stage");
      IF "Type of Project" = "Type of Project"::Project THEN
        TESTFIELD(Group);

      CASE "Project Stage" OF
        "Project Stage"::Productization:
          IF Concept OR Research OR Analysis OR Development OR Launch = FALSE THEN
            ERROR(Err04, FORMAT("Project Stage"));
        "Project Stage"::"Sales Cycle Stage":
          IF "SCS Site Survey" OR "SCS Proof of Concept" OR "SCS Demo to Purchase" OR "SCS Bidding" = FALSE THEN
            ERROR(Err04, FORMAT("Project Stage"));
        "Project Stage"::"Project Implementation":
          BEGIN
          IF "PI Site Survey" OR "PI Installation" OR "PI Integration" OR "PI Delivery" OR "PI Testing" OR "PI Troubleshooting" OR
             "PI Project Documentation" OR "PI Permitting" OR "PI Acceptance" OR "PI IUD" OR "PI PDI" OR "PI Procurement of Mats/Equip" OR
             "PI Training" OR "PI Meeting" OR "PI RMA" OR "PI Cable Laying" OR "PI Hauling" OR "PI Rectification/PL Clearing" OR
             "PI Site Audit" OR "PI Site Audit" OR "PI Material Audit" OR "PI Shipment of Mats/Equip" OR Mobilization OR Remobilization = FALSE THEN
            ERROR(Err04, FORMAT("Project Stage"));
            IF "Planned No. Of Days" <= 0 THEN
              FIELDERROR("Planned No. Of Days");
          END;
         "Project Stage"::"After Sales":
          IF "AS Troubleshooting" OR "AS RMA" OR "AS Procurement of Mats/Equip" OR "AS Shipment of Mats/Equip" OR "AS Maintenance" = FALSE THEN
            ERROR(Err04, FORMAT("Project Stage"));
         "Project Stage"::"Support Services":
          IF "SS Construction" = FALSE THEN
            ERROR(Err04, FORMAT("Project Stage"));
      END;

      IF Mobilization THEN
        TESTFIELD("No. of Mobilization");
      IF Remobilization THEN
        TESTFIELD("No. of Remobilization");

      IF "ARC Cash Advance" OR "ARC Reimbursement" OR "ARC Liquidation" OR "Project Budget Adjustment" OR "Request for Payment" OR
         "External Timeline" OR "Internal Timeline" OR "Request for Advance Purchase" OR "Request for Addl Items Non Spa" OR
         "Request for Addl Items Spa" OR "Replacement of Defective Unit" OR "Offsetting of Material" OR "Offsetting of Material" OR
         "Waiving of Accreditation Req" OR "Blanket Approval" = FALSE THEN
         ERROR(Err03);

      IF NOT "Description of Request".HASVALUE THEN
        TESTFIELD("Description of Request");

      IF NOT Justification.HASVALUE THEN
        TESTFIELD(Justification);

      TESTFIELD("Waiver Type");

      IF "Waiver Type" = "Waiver Type"::"Full Waiver" THEN BEGIN
        TESTFIELD("Person In Charge No.", '');
        TESTFIELD("Commitment Date", 0D);
      END ELSE BEGIN
        TESTFIELD("Person In Charge No.");
        TESTFIELD("Commitment Date");
      END;
    END;

    [Integration(TRUE)]
    PROCEDURE OnCheckReleaseRestriction@15();
    BEGIN
    END;

    [Integration]
    PROCEDURE OnAfterRelease@156(VAR RFE@1000 : Record 50650);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnAfterReOpen@148(VAR RFE@1000 : Record 50650);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnBeforeRelease@157(VAR RFE@1000 : Record 50650);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnBeforeReOpen@149(VAR RFE@1000 : Record 50650);
    BEGIN
    END;

    PROCEDURE PerformManualRelease@139(VAR RFE@1001 : Record 50650);
    VAR
      CustomApprovalManagement@1000 : Codeunit 50582;
    BEGIN
      IF CustomApprovalManagement.IsRFEApprovalsWorkflowEnabled(RFE) AND (RFE.Status = RFE.Status::Open) THEN
        ERROR(ApprovalReleaseErr);

      Release(RFE);
    END;

    PROCEDURE PerformManualReOpen@150(VAR RFE@1000 : Record 50650);
    BEGIN
      IF RFE.Status = RFE.Status::"Pending Approval" THEN
        ERROR(ApprovalReopenErr);

      Reopen(RFE);
    END;

    PROCEDURE Release@131(VAR RFE@1000 : Record 50650);
    BEGIN
      IF RFE.Status = RFE.Status::Released THEN
        EXIT;

      OnBeforeRelease(RFE);
      RFE.SetStatus(Status::Released);
      RFE.SetStatusOfRegularization("Status of Regularization"::"In Progress");
      OnAfterRelease(RFE);
    END;

    PROCEDURE Reopen@151(VAR RFE@1000 : Record 50650);
    VAR
      PrintDocument@1001 : Text;
    BEGIN
      IF RFE.Status = RFE.Status::Open THEN
         EXIT;

      OnBeforeReOpen(RFE);
      RFE.SetStatus(Status::Open);
      OnAfterReOpen(RFE);
    END;

    PROCEDURE PrintDocument@9();
    VAR
      RFE@1000 : Record 50650;
    BEGIN
      RFE.RESET;
      RFE.SETFILTER("No.","No.");
      REPORT.RUNMODAL(REPORT::"Prototype RFE",TRUE,TRUE,RFE);
    END;

    PROCEDURE TestDocumentStatus@30();
    BEGIN
      // Check if user is administrator
      IF (UserSetup.GET(USERID) AND UserSetup."RFE Admin" = TRUE) THEN
        EXIT
      ELSE
      TESTFIELD(Status, Status::Open);
    END;

    PROCEDURE SetStatusOfRegularization@10("RFE Regularization Status"@1000 : Option);
    BEGIN
      CASE "RFE Regularization Status" OF
       "Status of Regularization"::"In Progress":
          BEGIN
            IF "Status of Regularization" = "Status of Regularization"::"In Progress" THEN
              EXIT;
            VALIDATE("Status of Regularization", "Status of Regularization"::"In Progress");
            MODIFY(TRUE);
          END;
        //FOR REVIEW
       "Status of Regularization"::"For Review":
          BEGIN
            IF "Status of Regularization" = "Status of Regularization"::"For Review" THEN
              EXIT;
            VALIDATE("Status of Regularization", "Status of Regularization"::"For Review");
            MODIFY(TRUE);
          END;
        //DONE
       "Status of Regularization"::Done:
          BEGIN
            IF "Status of Regularization" = "Status of Regularization"::Done THEN
              EXIT;
            VALIDATE("Status of Regularization", "Status of Regularization"::Done);
            MODIFY(TRUE);
          END;
        //OVERDUE
       "Status of Regularization"::Overdue:
          BEGIN
            IF "Status of Regularization" = "Status of Regularization"::Overdue THEN
              EXIT;
            VALIDATE("Status of Regularization", "Status of Regularization"::Overdue);
            MODIFY(TRUE);
          END;
        //CANCELLED
        "Status of Regularization"::Cancelled:
          BEGIN
            IF "Status of Regularization" = "Status of Regularization"::Cancelled THEN
              EXIT;
            VALIDATE("Status of Regularization", "Status of Regularization"::Cancelled);
            MODIFY(TRUE);
          END;
      END;
    END;

    PROCEDURE RFEBaseSetupApproval@18();
    VAR
      RFE@1000 : Record 50650;
      SearchString@1001 : Text;
    BEGIN
      //ACCOUNTING
      IF "ARC Cash Advance" THEN BEGIN
        RecRFEBaseApproval.SETFILTER("Field Name",FIELDNAME("ARC Cash Advance"));
        IF RecRFEBaseApproval.FINDSET() THEN
            //MESSAGE('Insert Code');
            REPEAT
                  MESSAGE(RecRFEBaseApproval."Approver User ID");
            UNTIL RecRFEBaseApproval.NEXT=0;
        END;


    END;

    BEGIN
    END.
  }
}


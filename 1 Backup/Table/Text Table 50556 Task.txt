OBJECT Table 50556 Task
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=12:19:07 AM;
    Modified=Yes;
    Version List=NAVOC1.00.02.47;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Title;
    OnInsert=BEGIN
               InitInsert;
             END;

    OnModify=BEGIN
               IF (CustomApprovalManagement.IsTaskFieldChangeWorkflowEnabled(Rec)) AND (Status = Status::"In Progress") THEN
                 OnTaskFieldChange(Rec,xRec);

               "Last Date Modified" := TODAY;
               "Last Time Modified" := TIME;
             END;

    CaptionML=ENU=Task;
    LookupPageID=Page50646;
    DrillDownPageID=Page50646;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20         }
    { 2   ;   ;Title               ;Text250       ;OnValidate=BEGIN
                                                                IF Status = Status::Completed THEN
                                                                  FIELDERROR(Status);

                                                                TESTFIELD(Title);

                                                                TestStatus;
                                                              END;

                                                   Description=TMS:task_title }
    { 3   ;   ;Description         ;BLOB          ;Description=TMS:description - Plaintext;
                                                   SubType=Memo }
    { 4   ;   ;Created By User ID  ;Code50        ;TableRelation="User Setup"."User ID";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Created By Title/Position");
                                                                VALIDATE("Created By Dept. Code", UserSetupMgt.GetUserGroupCode("Created By User ID"));
                                                              END;

                                                   Editable=No }
    { 5   ;   ;Created Date        ;Date          ;Editable=No }
    { 6   ;   ;Assigned To User ID ;Code50        ;TableRelation="User Setup"."User ID";
                                                   OnValidate=BEGIN
                                                                IF Status = Status::Completed THEN
                                                                  FIELDERROR(Status);

                                                                CALCFIELDS("Assigned To Title/Position");
                                                                VALIDATE("Assigned To Dept. Code", UserSetupMgt.GetUserGroupCode("Assigned To User ID"));

                                                                IF "Starting Date" = 0D THEN
                                                                  SetCommitmentDates(0);
                                                              END;
                                                               }
    { 7   ;   ;Completed By User ID;Code50        ;TableRelation="User Setup"."User ID";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Completed By Title/Position");
                                                                VALIDATE("Completed By Dept. Code", UserSetupMgt.GetUserGroupCode("Completed By User ID"));
                                                              END;

                                                   Editable=No }
    { 8   ;   ;Date Completed      ;Date          ;Description=TMS:complete_date;
                                                   Editable=No }
    { 9   ;   ;Finishing Date      ;Date          ;OnValidate=BEGIN
                                                                TestStatus;
                                                                TESTFIELD("Assigned To User ID");
                                                                TESTFIELD("Finishing Date");

                                                                IF "Finishing Date" <> xRec."Finishing Date" THEN
                                                                  SetCommitmentDates(FIELDNO("Finishing Date"));

                                                                // IF ("No." <> '') AND (Status = Status::"In Progress") THEN
                                                                //  IF ("Finishing Date" <> 0D) AND ("Finishing Date" <> xRec."Finishing Date") AND ("Finishing Date" > xRec."Finishing Date") THEN
                                                                //    LogExtensionDate("Starting Date", xRec."Finishing Date", "Finishing Date");
                                                              END;

                                                   Description=TMS:deadline }
    { 11  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                TestStatus;
                                                                TESTFIELD("Assigned To User ID");
                                                                TESTFIELD("Starting Date");

                                                                IF "Starting Date" <> xRec."Starting Date" THEN
                                                                  SetCommitmentDates(FIELDNO("Starting Date"));
                                                              END;

                                                   Description=TMS:date_start }
    { 15  ;   ;Percent Complete    ;Decimal       ;InitValue=0;
                                                   OnValidate=VAR
                                                                StartTask@1000 : Boolean;
                                                              BEGIN
                                                                TestStatus;

                                                                // IF ("Percent Complete" > 0) AND (Status <> Status::"In Progress") THEN
                                                                //  Status := Status::"In Progress";
                                                              END;

                                                   DecimalPlaces=0:0;
                                                   MaxValue=100;
                                                   AutoFormatType=10;
                                                   AutoFormatExpr='<precision, 1:0><standard format, 0>''%' }
    { 20  ;   ;Priority            ;Option        ;InitValue=Normal;
                                                   OnValidate=BEGIN
                                                                IF Status = Status::Completed THEN
                                                                  FIELDERROR(Status);
                                                              END;

                                                   OptionCaptionML=ENU=Low,Normal,High;
                                                   OptionString=Low,Normal,High;
                                                   Description=TMS:priority }
    { 21  ;   ;Status              ;Option        ;InitValue=Not Started;
                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Not Started,In Progress,Completed,Waiting,Postponed,For Review,Cancelled,Transferred,Overdue,In-complete,Unfinished;
                                                   OptionString=Not Started,In Progress,Completed,Waiting,Postponed,For Review,Cancelled,Transferred,Overdue,In-complete,Unfinished;
                                                   Description=TMS:status;
                                                   Editable=No }
    { 22  ;   ;Bucket Code         ;Code20        ;TableRelation="Bucket Task" }
    { 30  ;   ;No. Series          ;Code20         }
    { 40  ;   ;Created By Dept. Code;Code20       ;TableRelation="User Group";
                                                   OnValidate=VAR
                                                                UserGroup@1000 : Record 9000;
                                                              BEGIN
                                                                CALCFIELDS("Created By Department");
                                                              END;

                                                   CaptionML=ENU=Department Code }
    { 41  ;   ;Assigned To Dept. Code;Code20      ;TableRelation="User Group";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Assigned To Department");
                                                              END;

                                                   CaptionML=ENU=Department Code }
    { 42  ;   ;Completed By Dept. Code;Code20     ;TableRelation="User Group";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Completed By Department");
                                                              END;

                                                   CaptionML=ENU=Department Code;
                                                   Editable=No }
    { 50  ;   ;Created By Department;Text50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Group".Name WHERE (Code=FIELD(Created By Dept. Code)));
                                                   CaptionML=ENU=Department;
                                                   Editable=No }
    { 51  ;   ;Assigned To Department;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Group".Name WHERE (Code=FIELD(Assigned To Dept. Code)));
                                                   CaptionML=ENU=Department;
                                                   Editable=No }
    { 52  ;   ;Completed By Department;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Group".Name WHERE (Code=FIELD(Completed By Dept. Code)));
                                                   CaptionML=ENU=Department;
                                                   Editable=No }
    { 60  ;   ;Created By Title/Position;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Setup".Title/Position WHERE (User ID=FIELD(Created By User ID)));
                                                   CaptionML=ENU=Title/Position;
                                                   Editable=No }
    { 61  ;   ;Assigned To Title/Position;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Setup".Title/Position WHERE (User ID=FIELD(Assigned To User ID)));
                                                   CaptionML=ENU=Title/Position;
                                                   Editable=No }
    { 62  ;   ;Completed By Title/Position;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Setup".Title/Position WHERE (User ID=FIELD(Completed By User ID)));
                                                   CaptionML=ENU=Title/Position;
                                                   Editable=No }
    { 80  ;   ;Incoming Document Entry No.;Integer }
    { 90  ;   ;NTE No.             ;Code20        ;CaptionML=ENU=Notice to Explain Reference No. }
    { 100 ;   ;NTE Date            ;Date          ;CaptionML=ENU=Date of Notice to Explain;
                                                   Description=TMS:nte_Date }
    { 110 ;   ;NTE Issuance Date   ;Date          ;CaptionML=ENU=Issuance Date of Notice to Explain;
                                                   Description=TMS:nte_serve_date }
    { 120 ;   ;Type of Task        ;Option        ;InitValue=Task;
                                                   OnValidate=BEGIN
                                                                TestStatus;
                                                              END;

                                                   OptionCaptionML=ENU=Task,Meeting;
                                                   OptionString=Task,Meeting;
                                                   Description=Office365 Power Flow parameter }
    { 130 ;   ;Foreign Record Type ;Option        ;OptionCaptionML=ENU=,Planner,To Do,Outlook Event;
                                                   OptionString=,Planner,To Do,Outlook Event;
                                                   BlankZero=Yes;
                                                   Description=Office365 Power Flow parameter }
    { 140 ;   ;Foreign Record ID   ;Text250       ;Description=Office365 Power Flow parameter }
    { 150 ;   ;TMS ID              ;Integer       ;BlankZero=Yes;
                                                   Description=TMS:id;
                                                   Editable=No }
    { 151 ;   ;TMS Reference No.   ;Code100       ;Description=TMS:series;
                                                   Editable=No }
    { 160 ;   ;TMS Description     ;BLOB          ;Description=TMS:description - Raw }
    { 200 ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                TestStatus;
                                                                TESTFIELD("Assigned To User ID");
                                                                TESTFIELD("Starting Time");

                                                                IF "Starting Time" <> xRec."Starting Time" THEN
                                                                  SetCommitmentDates(FIELDNO("Starting Time"));
                                                              END;
                                                               }
    { 210 ;   ;Finishing Time      ;Time          ;OnValidate=BEGIN
                                                                TestStatus;
                                                                TESTFIELD("Assigned To User ID");
                                                                TESTFIELD("Finishing Time");

                                                                IF "Finishing Time" <> xRec."Finishing Time" THEN
                                                                  SetCommitmentDates(FIELDNO("Finishing Time"));
                                                              END;
                                                               }
    { 220 ;   ;Time Completed      ;Time           }
    { 230 ;   ;Created Time        ;Time           }
    { 240 ;   ;Time Stamp          ;DateTime       }
    { 250 ;   ;Last Date Modified  ;Date           }
    { 260 ;   ;Last Time Modified  ;Time           }
    { 270 ;   ;Duration            ;Duration      ;Editable=No }
    { 800 ;   ;Assigned By User ID ;Code50        ;TableRelation="User Setup"."User ID";
                                                   OnValidate=BEGIN
                                                                TestStatus;
                                                                TESTFIELD("Assigned By User ID");
                                                                CALCFIELDS("Assigned By Title/Position");
                                                                VALIDATE("Assigned By Dept. Code", UserSetupMgt.GetUserGroupCode("Assigned By User ID"));
                                                              END;
                                                               }
    { 810 ;   ;Assigned By Dept. Code;Code20      ;TableRelation="User Group";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Assigned By Department");
                                                              END;

                                                   CaptionML=ENU=Department Code }
    { 820 ;   ;Assigned By Department;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Group".Name WHERE (Code=FIELD(Assigned By Dept. Code)));
                                                   CaptionML=ENU=Department;
                                                   Editable=No }
    { 830 ;   ;Assigned By Title/Position;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("User Setup".Title/Position WHERE (User ID=FIELD(Assigned By User ID)));
                                                   CaptionML=ENU=Title/Position;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      UserGroup@1008 : Record 9000;
      CustomSetup@1001 : Record 50001;
      NoSeriesMgt@1000 : Codeunit 396;
      UserSetupMgt@1002 : Codeunit 5700;
      Txt001@1003 : TextConst 'ENU=You have updated the progress of the task, do you want to start the task?';
      Txt002@1004 : TextConst 'ENU=Do you want to complete the %1 %2 %3?';
      Txt003@1005 : TextConst 'ENU=You have already completed this task, do you still want to start again the task %1 %2?';
      Txt004@1006 : TextConst 'ENU=You have already completed this task, do you still want to postpone the task %1 %2?';
      CustomApprovalManagement@1007 : Codeunit 50582;
      StartingDateTime@1012 : DateTime;
      FinishingDateTime@1011 : DateTime;
      CreatedDateTime@1010 : DateTime;
      ResolvedDateTime@1009 : DateTime;

    PROCEDURE InitInsert@61();
    BEGIN
       IF "No." = '' THEN BEGIN
        NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series",TODAY,"No.","No. Series");
       END;

      InitRecord;
    END;

    LOCAL PROCEDURE InitRecord@10();
    BEGIN
      TestDefaultNoSeries;

      "Time Stamp" := CURRENTDATETIME;

      IF "Created Date" = 0D THEN
        "Created Date" := TODAY;
      IF "Created Time" = 0T THEN
        "Created Time" := TIME;

      IF "Created By User ID" = '' THEN
        VALIDATE("Created By User ID", UserSetupMgt.GetUserSetupIDWithTestfield);

      IF "Assigned By User ID" = '' THEN
        VALIDATE("Assigned By User ID", "Created By User ID");

      TestTaskDetails;
    END;

    PROCEDURE InitValue@15();
    BEGIN
      // Used in Task Page
      VALIDATE("Created By User ID", UserSetupMgt.GetUserSetupIDWithTestfield);
      VALIDATE("Assigned By User ID", "Created By User ID");

      "Created Date" := TODAY;
      "Created Time" := TIME;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@1() : Code[20];
    BEGIN
      CustomSetup.GET;
      CustomSetup.TESTFIELD("Tasks Nos.");
      EXIT(CustomSetup."Tasks Nos.");
    END;

    PROCEDURE GetNoOfDaysLeft@8() : Integer;
    VAR
      NoOfDaysLeft@1000 : Integer;
    BEGIN
      NoOfDaysLeft := "Finishing Date" - TODAY;
      IF NoOfDaysLeft <= 0 THEN
        NoOfDaysLeft *= -1;

      EXIT(NoOfDaysLeft);
    END;

    LOCAL PROCEDURE SetCommitmentDates@20(RecFieldNo@1000 : Integer);
    BEGIN
      IF "Starting Date" = 0D THEN
        "Starting Date" := TODAY;
      IF "Starting Time" = 0T THEN
        "Starting Time" := 000000T;
      IF "Finishing Date" = 0D THEN
        SetFinishingDate("Starting Date");
      IF "Finishing Time" = 0T THEN
        "Finishing Time" := 000000T;
      SetDuration("Finishing Date", "Finishing Time");

      CASE RecFieldNo OF
        FIELDNO("Starting Date"),FIELDNO("Starting Time"):
          BEGIN
            SetTempStartingFinishingDateTime;
            IF StartingDateTime >= FinishingDateTime THEN BEGIN
              "Starting Date" := DT2DATE(StartingDateTime);
              SetFinishingDate(DT2DATE(StartingDateTime));
              "Finishing Time" := DT2TIME(FinishingDateTime);
              SetDuration("Finishing Date", "Finishing Time");
            END;
          END;
        FIELDNO("Finishing Date"), FIELDNO("Finishing Time"):
          BEGIN
            SetTempStartingFinishingDateTime;
            IF StartingDateTime >= FinishingDateTime THEN BEGIN
              SetStartingDate(DT2DATE(FinishingDateTime));
              "Starting Time" := 000000T;
              "Finishing Time" := DT2TIME(FinishingDateTime);
              SetDuration("Finishing Date", "Finishing Time");
            END;
          END;
      END;
    END;

    LOCAL PROCEDURE SetStartingDate@42(FinishingDate@1000 : Date);
    VAR
      CompanyInfo@1002 : Record 79;
      CalendarMgt@1005 : Codeunit 7600;
      DateDscr@1004 : Text;
    BEGIN
      CompanyInfo.GET;
      CompanyInfo.TESTFIELD("Base Calendar Code");
      "Starting Date" := FinishingDate - 1;
      IF CalendarMgt.CheckDateStatus(CompanyInfo."Base Calendar Code","Starting Date",DateDscr) THEN
        REPEAT
          "Starting Date" -= 1;
        UNTIL NOT CalendarMgt.CheckDateStatus(CompanyInfo."Base Calendar Code","Starting Date",DateDscr);
    END;

    LOCAL PROCEDURE SetFinishingDate@52(StartingDate@1000 : Date);
    VAR
      CompanyInfo@1002 : Record 79;
      CalendarMgt@1005 : Codeunit 7600;
      DateDscr@1004 : Text;
      FinishingDate@1001 : Date;
    BEGIN
      CompanyInfo.GET;
      CompanyInfo.TESTFIELD("Base Calendar Code");
      "Finishing Date" := StartingDate + 1;
      IF CalendarMgt.CheckDateStatus(CompanyInfo."Base Calendar Code","Finishing Date",DateDscr) THEN
        REPEAT
          "Finishing Date" += 1;
        UNTIL NOT CalendarMgt.CheckDateStatus(CompanyInfo."Base Calendar Code","Finishing Date",DateDscr);
    END;

    LOCAL PROCEDURE SetTempStartingFinishingDateTime@37();
    BEGIN
      StartingDateTime := CREATEDATETIME("Starting Date","Starting Time");
      FinishingDateTime := CREATEDATETIME("Finishing Date","Finishing Time");
    END;

    LOCAL PROCEDURE SetTempStartingResolveDateTime@36();
    BEGIN
      // StartingDateTime := CREATEDATETIME("Starting Date","Starting Time");
      // ResolvedDateTime := CREATEDATETIME("Date Resolved","Time Resolved");
    END;

    PROCEDURE SetStatus@24(TaskStatus@1000 : Option;DisablePromptMsg@1001 : Boolean);
    BEGIN
      TestTaskDetails;

      CASE TaskStatus OF
        Status::"Not Started":
          BEGIN
            "Percent Complete" := 0;
          END;
        Status::"In Progress":
          BEGIN
            ChangePercentationOfAccomplishment(xRec."Percent Complete");
          END;
        Status::Completed:
          BEGIN
              IF Status = Status::Completed THEN
                FIELDERROR(Status);

              IF NOT DisablePromptMsg THEN
                IF NOT CONFIRM(Txt002, TRUE, TABLECAPTION,FIELDNAME("No."), "No.") THEN
                  EXIT;

              Status := TaskStatus;

              ChangePercentationOfAccomplishment(100);
              IF MODIFY(TRUE) AND CustomApprovalManagement.IsTaskFieldChangeWorkflowEnabled(Rec) THEN
                OnTaskFieldChange(Rec, xRec);
          END;
        ELSE
          VALIDATE(Status,TaskStatus);
      END;
    END;

    LOCAL PROCEDURE SetDuration@21(FinishingDate@1000 : Date;FinishingTime@1001 : Time);
    BEGIN
      Duration := ROUND(CREATEDATETIME(FinishingDate,FinishingTime) - CREATEDATETIME("Starting Date","Starting Time"), 1000 * 60);
    END;

    LOCAL PROCEDURE TestDefaultNoSeries@7();
    BEGIN
      CustomSetup.GET;
      CustomSetup.TESTFIELD("Tasks Nos.");
    END;

    PROCEDURE TestStatus@4();
    BEGIN
       IF Status IN [Status::Cancelled, Status::Completed, Status::"For Review"] THEN
         FIELDERROR(Status);
    END;

    LOCAL PROCEDURE TestPercentComplete@23();
    BEGIN
      IF ("Percent Complete" = 0) AND NOT (Status IN [Status::"In Progress", Status::Waiting, Status::"Not Started"]) THEN
        FIELDERROR(Status);
    END;

    LOCAL PROCEDURE TestTaskDetails@19();
    BEGIN
      TESTFIELD(Title);
      TESTFIELD ("Assigned By User ID");
      TESTFIELD("Assigned To User ID");
      TESTFIELD("Starting Date");
      TESTFIELD("Finishing Date");
    END;

    PROCEDURE AdjustCompletion@3(VAR Task@1000 : Record 50556);
    VAR
      AdjustTaskPage@1001 : Page 50648;
    BEGIN
      WITH Task DO BEGIN
        TestTaskDetails;

        AdjustTaskPage.SetPageValues(Task);
        IF AdjustTaskPage.RUNMODAL = ACTION::OK THEN BEGIN
          AdjustTaskPage.GetValues(Task);
          VALIDATE(Status, Status::Completed);
          IF MODIFY(TRUE) AND CustomApprovalManagement.IsTaskFieldChangeWorkflowEnabled(Rec) THEN
            OnTaskFieldChange(Rec, xRec);
        END;

      END;
    END;

    PROCEDURE MarkAsInprogress@5(VAR Task@1000 : Record 50556);
    BEGIN
      WITH Task DO BEGIN
        IF Status = Status::"In Progress" THEN
          FIELDERROR(Status);

        TestTaskDetails;

        IF "Completed By User ID" <> '' THEN BEGIN
          IF NOT CONFIRM(Txt003, FALSE, Rec.TABLECAPTION, Rec."No.") THEN
            EXIT;
          ClearCompletedDetails;
        END;
        VALIDATE(Status, Status::"In Progress");
        IF MODIFY(TRUE) AND CustomApprovalManagement.IsTaskFieldChangeWorkflowEnabled(Rec) THEN
          OnTaskFieldChange(Rec, xRec);
      END;
    END;

    PROCEDURE MarkAsPostponed@27(VAR Task@1000 : Record 50556);
    BEGIN
      WITH Task DO BEGIN
        IF Status = Status::Postponed THEN
          FIELDERROR(Status);

      TestTaskDetails;

        IF "Completed By User ID" <> '' THEN BEGIN
          IF NOT CONFIRM(Txt004, FALSE, Rec.TABLECAPTION, Rec."No.") THEN
            EXIT;
          ClearCompletedDetails;
        END;
        VALIDATE(Status, Status::Postponed);
        IF MODIFY(TRUE) AND CustomApprovalManagement.IsTaskFieldChangeWorkflowEnabled(Rec) THEN
          OnTaskFieldChange(Rec, xRec);
      END;
    END;

    PROCEDURE TaskStart@6(VAR Task@1000 : Record 50556);
    BEGIN
      WITH Task DO BEGIN
        VALIDATE(Status, Status::"In Progress");
        IF MODIFY(TRUE) AND CustomApprovalManagement.IsTaskFieldChangeWorkflowEnabled(Rec) THEN
          OnTaskFieldChange(Rec, xRec);
      END;
    END;

    LOCAL PROCEDURE ClearCompletedDetails@28();
    BEGIN
      CLEAR("Completed By User ID");
      CALCFIELDS("Completed By Title/Position");
      CLEAR("Date Completed");
    END;

    PROCEDURE ChangePercentationOfAccomplishment@35(PercentageOfAccomplishment@1001 : Integer);
    BEGIN
      TestTaskDetails;

      WITH Rec DO BEGIN
        VALIDATE("Percent Complete", PercentageOfAccomplishment);
        IF MODIFY(TRUE) AND CustomApprovalManagement.IsTaskFieldChangeWorkflowEnabled(Rec) THEN
          OnTaskFieldChange(Rec, xRec);
      END;
    END;

    LOCAL PROCEDURE LogExtensionDate@2(StartDate@1003 : Date;DueDate@1002 : Date;ExtensionDate@1001 : Date);
    VAR
      ExtendTaskLog@1000 : Record 50558;
    BEGIN
      WITH ExtendTaskLog DO BEGIN
        ExtendTaskLog."Task No." := Rec."No.";
        ExtendTaskLog."Starting Date" := StartDate;
        ExtendTaskLog."Finishing Date" := DueDate;
        ExtendTaskLog."Extension Date" := ExtensionDate;
        ExtendTaskLog.INSERT(TRUE);
      END;
    END;

    [Integration]
    PROCEDURE OnTaskFieldChange@22(VAR Task@1000 : Record 50556;VAR xRecTask@1001 : Record 50556);
    BEGIN
    END;

    LOCAL PROCEDURE CompletedByUserDetails@16();
    BEGIN
      "Completed By Dept. Code" := UserSetupMgt.GetUserGroupCode("Completed By User ID");
      IF UserGroup.GET("Completed By Dept. Code") THEN
        "Completed By Department" := UserGroup.Name;
      CALCFIELDS("Completed By Title/Position");
    END;

    PROCEDURE DoNotStartTask@9();
    VAR
      Txt01@1000 : TextConst 'ENU=You have not started the task yet. Do you want to close the page?';
    BEGIN
      IF ("No." <> '') AND (Status = Status::"Not Started") THEN
        IF NOT CONFIRM(Txt01, FALSE) THEN
          ERROR('');
    END;

    BEGIN
    {
      List of Field with User Setup
        1. Created By User ID
        2. Assigned To User ID
        3. Completed By User ID
        4. Assigned By User ID
    }
    END.
  }
}


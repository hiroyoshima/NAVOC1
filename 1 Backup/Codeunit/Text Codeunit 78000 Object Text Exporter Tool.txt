OBJECT Codeunit 78000 Object Text Exporter Tool
{
  OBJECT-PROPERTIES
  {
    Date=10/30/23;
    Time=[ 5:54:41 PM];
    Modified=Yes;
    Version List=TOOL;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            MESSAGE(FORMAT(ExportObjectAsText('C:\PowerShell\', 'samplelive.txt', 'page', 49)));
          END;

  }
  CODE
  {
    VAR
      TxtGServerName@1100267000 : Text;
      TxtGDatabaseName@1100267001 : Text;

    PROCEDURE ExportObjectAsText@1100267001(TxtPFileFolder@1100267000 : Text;TxtPFileName@1100267006 : Text;TxtPObjType@1100267001 : Text;IntPObjID@1100267002 : Integer) : Boolean;
    VAR
      Process@1100267003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      TxtLFilePath@1100267004 : Text;
      TxtLFolder@1100267005 : Text;
      TxtLLogPath@1100267007 : Text;
      IntLTimeOut@1100267008 : Integer;
    BEGIN
      GetServerAndDatabaseName;

      // Log destination (created only if failed)
      TxtLLogPath := TxtPFileFolder + 'NavExportLog.txt';

      TxtLFilePath := TxtPFileFolder+TxtPFileName;

      // Call finsql.exe with arguments
      Process := Process.Process;
      Process.StartInfo.UseShellExecute := FALSE;
      Process.StartInfo.FileName := APPLICATIONPATH+'\finsql.exe';
      Process.StartInfo.Arguments := 'command=exportobjects, file="'+TxtLFilePath+'", logfile="'+TxtLLogPath+'", servername="172.16.1.221", database="NAV2016", filter="Type='+TxtPObjType+';ID='+FORMAT(IntPObjID)+'"'
        + ',ntauthentication=no, username=sa, password="Password1."';
      Process.StartInfo.CreateNoWindow := TRUE;
      Process.Start();

      // Wait until process finish (time out set to 15sec, for exporting one object)
      IntLTimeOut := 0;
      WHILE (NOT Process.HasExited) AND (IntLTimeOut < 15000) DO BEGIN
        SLEEP(100);
        IntLTimeOut += 100;
      END;

      CLEAR(Process);

      // Delete navcommandreult.txt created by finsql.exe
      IF FILE.EXISTS(TxtPFileFolder+'navcommandresult.txt') THEN BEGIN
        FILE.ERASE(TxtPFileFolder+'navcommandresult.txt');
      END;

      MESSAGE(TxtLLogPath);
      IF FILE.EXISTS(TxtLLogPath) THEN BEGIN
        //FILE.ERASE(TxtLLogPath); keep the log in case of error
        EXIT(FALSE);
      END ELSE
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetServerAndDatabaseName@1100267000() : Boolean;
    VAR
      RecLSessions@1100267000 : Record 2000000110;
    BEGIN
      // Retrieve server name and database name with Session informations
      RecLSessions.SETRANGE("Session ID", SESSIONID);
      RecLSessions.SETRANGE("User ID", USERID);
      RecLSessions.SETRANGE("Server Instance ID", SERVICEINSTANCEID);
      IF RecLSessions.FINDFIRST THEN BEGIN
        TxtGDatabaseName := RecLSessions."Database Name";
        TxtGServerName := RecLSessions."Server Computer Name";
      END;
    END;

    PROCEDURE CompareObject@3(TxtPFileFolder@1100267000 : Text;TxtPFileName@1100267006 : Text;TxtPObjType@1100267001 : Text;IntPObjID@1100267002 : Integer) : Boolean;
    VAR
      Process@1100267003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      TxtLFilePath@1100267004 : Text;
      TxtLFolder@1100267005 : Text;
      TxtLLogPath@1100267007 : Text;
      IntLTimeOut@1100267008 : Integer;
    BEGIN
      GetServerAndDatabaseName;

      // Log destination (created only if failed)
      TxtLLogPath := TxtPFileFolder + 'NavExportLog.txt';

      TxtLFilePath := TxtPFileFolder+TxtPFileName;

      // Call finsql.exe with arguments
      Process := Process.Process;
      Process.StartInfo.UseShellExecute := FALSE;
      Process.StartInfo.FileName := APPLICATIONPATH+'\finsql.exe';
      Process.StartInfo.Arguments := 'command=exportobjects, file="'+TxtLFilePath+'", logfile="'+TxtLLogPath+'", servername="172.16.1.221", database="NAV2016", filter="Type='+TxtPObjType+';ID='+FORMAT(IntPObjID)+'"'
        + ',ntauthentication=no, username=sa, password="Password1."';
      Process.StartInfo.CreateNoWindow := TRUE;
      Process.Start();

      // Wait until process finish (time out set to 15sec, for exporting one object)
      IntLTimeOut := 0;
      WHILE (NOT Process.HasExited) AND (IntLTimeOut < 15000) DO BEGIN
        SLEEP(100);
        IntLTimeOut += 100;
      END;

      CLEAR(Process);

      // Delete navcommandreult.txt created by finsql.exe
      IF FILE.EXISTS(TxtPFileFolder+'navcommandresult.txt') THEN BEGIN
        FILE.ERASE(TxtPFileFolder+'navcommandresult.txt');
      END;

      // MESSAGE(TxtLLogPath);
      IF FILE.EXISTS(TxtLLogPath) THEN BEGIN
        //FILE.ERASE(TxtLLogPath); keep the log in case of error
        EXIT(FALSE);
      END ELSE
        EXIT(TRUE);
    END;

    BEGIN
    {
      // Nav Text Object Exporter by Maxime Caty - www.navcraft.fr
      // Using finsql.exe command

      // ExportObjectAsText(TxtPFileFolder : Text;TxtPFileName : Text;TxtPObjType : Text;IntPObjID : Integer) : Boolean
      // TxtpFileFolder : File export folder destination (without file name) with last / needed !
      // TxtPFileName : Export file name (include extention)
      // TxtPObjectType : Table,Page,Codeunit,Report,Query,XMLport,Menusuite
      // IntPObjID : object ID to export

      // See https://docs.microsoft.com/en-us/dynamics-nav/exportobjects for more filters/parameters
      // Most of the time error is due to user privilege or licence
    }
    END.
  }
}


3:56 PM Thursday, July 29, 2024
  1	50012	Job Order																				NAVOC1.00.02.48
    Move some codes from OnInsert to InitRecord functions
    Rename TextConstants particularly in error message
    Additional validations to Project Related Request
    Change the FieldClass of Employee Name from Normal to Calcfield
    Change the FieldClass of Department from Normal to Calcfield
    Endorsed By field reduced the char length from 100 to 50 character
    Additional Field
      Vehicle Request
      Public Transportation Request
      Airplane Ticket Request
      Project Category	
      Created By User ID
      Point of origin
      Time of Arrival
      Name of Passengers
    Change the properties of Document Date from Noneditable to Editable
    Enable editing of responsibility center for admin
    Change the NoSeries Date Fetching
    Others Remarks renamed to Activity
    Additional Function TestJobTypeProjectRelated 
    Additional Function SetActivity
    Additional Function TestJobOrderDetails
    Addtional Function ResetFields
    Additional Function DocNoVisibility
    Field clearing applied to purpose of request

  1	50551	Job Order Line																			NAVOC1.00.02.48
    Initialize Date Needed, Date From, Date To if no value

  8	9005	Sales Manager Role Center																NAVW19.00.00.44974,NAVOC1.00.03.00,NAVOC1.00.02.48
    Shortcut button on creating JOb Order - Meeting
  8	50012	Job Order List																			NAVOC1.00.02.48
  8	50013	Job Order																				NAVOC1.00.02.48
    change the page properties
      Dalayed insert = true
      PopulateAllFields = True
    
    OnNewRecord
      InitPageValues
    
    Field Properties
      No.
        Visiblity depends on the setup of Document Series
    
      Document Date
        Visibility = False
      
      Employee No.
        ShowAsMandatory = True
      
      Transfer the DocNoVisibility Function to Job Order Table
  8	50063	Job Order Meeting																		NAVOC1.00.02.48
    Additional Page

  OBJECT Table 50012 Job Order
  {
    OBJECT-PROPERTIES
    {
      Date=01/09/24;
      Time=[ 5:59:00 PM];
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      DataCaptionFields=No.,Project Name;
      OnInsert=BEGIN
                InitInsert;

                "Document Date" := TODAY;
                "Date Requested" := TODAY;

                IF UserSetup.GET(USERID) THEN BEGIN
                  "Assigned User ID" := UserSetup."User ID";
                  "Approver User ID" := UserSetup."Approver ID";
                  "Responsibility Center" := UserSetup."JO Ctr. Filter";
                  IF UserSetup."Employee No." <> '' THEN
                    VALIDATE("Employee No.", UserSetup."Employee No.");
                END;
              END;

      OnDelete=BEGIN
                TestLinkedDocuments;
                JobOderLines.SETRANGE("Job Order No.", "No.");
                JobOderLines.DELETEALL;

                ApprovalsMgmt.DeleteApprovalEntries(RECORDID);
              END;

      OnRename=BEGIN
                ERROR(Error001,TABLECAPTION);
              END;

      CaptionML=ENU=Job Order;
      LookupPageID=Page50013;
    }
    FIELDS
    {
      { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                  IF "No." <> xRec."No." THEN BEGIN
                                                                    CustomSetup.GET;
                                                                    NoSeriesMgt.TestManual(CustomSetup."Job Order Nos.");
                                                                    "No. Series" := '';
                                                                  END;
                                                                END;
                                                                }
      { 13  ;   ;Job Type            ;Option        ;OnValidate=BEGIN
                                                                  IF "Job Type" = "Job Type"::Others THEN BEGIN
                                                                    CLEAR("Project Name");
                                                                    CLEAR("Project Name 2");
                                                                  END;
                                                                END;

                                                    OptionCaptionML=ENU=Service Engineering,Others,Pre-Delivery Inspection,Inspection Upon Delivery;
                                                    OptionString=Service Engineering,Others,Pre-Delivery Inspection,Inspection Upon Delivery }
      { 15  ;   ;Job No.             ;Code20        ;TableRelation=Job WHERE (Status=CONST(Order));
                                                    OnValidate=VAR
                                                                  Project@1000 : Record 50005;
                                                                BEGIN
                                                                  TestAdminRights;
                                                                  //IF "Job No." <> '' THEN BEGIN
                                                                  //  TestJobTypeProjectRelated;
                                                                  //  Job.GET("Job No.");
                                                                  //END ELSE BEGIN
                                                                  //  CLEAR(Job);
                                                                  //END;
                                                                  //IF Job."Bill-to Customer No." <> '' THEN
                                                                  //  VALIDATE("Customer No.",Job."Bill-to Customer No.");
                                                                  //
                                                                  //"RFTS No." := Job."RTPS No.";
                                                                  //"Project Description" := Job.Description;
                                                                  //"P.O No." := Job."P.O No.";
                                                                END;
                                                                }
      { 16  ;   ;Project Name        ;Text250       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  // TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 17  ;   ;Project Name 2      ;Text250       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 18  ;   ;RTPS No.            ;Code20        ;TableRelation="RTPS Document" WHERE (Status=FILTER(<>Open));
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 20  ;   ;Sales Related       ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 30  ;No ;Other Activities    ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 60  ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                    OnValidate=VAR
                                                                  Employee@1000 : Record 5200;
                                                                BEGIN
                                                                  TestAdminRights;
                                                                  IF "Employee No." <> xRec."Employee No." THEN
                                                                    IF Employee.GET("Employee No.") THEN BEGIN
                                                                      "Employee Name" := Employee."First Name" +' ' +Employee."Middle Name"+ ' '+Employee."Last Name";
                                                                      "Requested By" := "Employee Name";
                                                                      VALIDATE("Department Code", Employee."Department Code");
                                                                    END ELSE BEGIN
                                                                      "Employee Name" := '';
                                                                      "Requested By" := '';
                                                                    END;
                                                                END;
                                                                }
      { 61  ;   ;Employee Name       ;Text50        ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    Editable=No }
      { 70  ;   ;Department Code     ;Code20        ;TableRelation="User Group";
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  IF "Department Code" <> '' THEN
                                                                    UserGroup.GET("Department Code")
                                                                  ELSE
                                                                    CLEAR(UserGroup);

                                                                  Department := UserGroup.Name;
                                                                END;
                                                                }
      { 71  ;   ;Department          ;Text50        ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    Editable=No }
      { 80  ;   ;Date Requested      ;Date          ;OnValidate=BEGIN
                                                                  TestAdminRights;

                                                                  IF (UserSetup.GET(USERID) AND (UserSetup."JO Admin" = FALSE)) OR NOT UserSetup.GET(USERID) THEN
                                                                    ERROR(Error002, FIELDCAPTION("Date Requested"));
                                                                END;
                                                                }
      { 90  ;   ;P.O No.             ;Code100       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 91  ;   ;Service Report No.  ;Code250        }
      { 100 ;   ;Customer No.        ;Code20        ;TableRelation=Customer WHERE (Customer Type=CONST(Customer));
                                                    OnValidate=VAR
                                                                  Cust@1000 : Record 18;
                                                                  RecordRestrictionMgt@1001 : Codeunit 1550;
                                                                BEGIN
                                                                  TestAdminRights;
                                                                  IF Cust.GET("Customer No.") THEN BEGIN
                                                                    RecordRestrictionMgt.CheckRecordHasUsageRestrictions(Cust.RECORDID);
                                                                    Cust.TESTFIELD("Gen. Bus. Posting Group");
                                                                    Cust.TESTFIELD("Customer Posting Group");
                                                                    Cust.TESTFIELD("VAT Bus. Posting Group");
                                                                  END ELSE BEGIN
                                                                    CLEAR(Cust);
                                                                  END;
                                                                  "Customer Name" := Cust.Name;
                                                                END;
                                                                }
      { 101 ;   ;Customer Name       ;Text50        ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 130 ;   ;Remarks             ;Text250       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    CaptionML=ENU=Remarks }
      { 140 ;   ;Ordinary P.O.       ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 150 ;   ;TurnKey             ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 160 ;   ;Site Survey         ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF "Site Survey" = TRUE THEN
                                                                    VALIDATE("Site Srvy. SR Form", TRUE);

                                                                  IF "Site Survey" = FALSE THEN BEGIN
                                                                    CLEAR("RTPS No.");
                                                                    CLEAR("Site Srvy. SR Form");
                                                                    CLEAR("Site Srvy. SR No.");
                                                                  END;
                                                                END;
                                                                }
      { 161 ;   ;Site Srvy. SR Form  ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "Site Srvy. SR Form" = FALSE THEN
                                                                    CLEAR("Site Srvy. SR No.");
                                                                END;

                                                    CaptionML=ENU=Service Report Form }
      { 162 ;   ;Site Srvy. SR No.   ;Code20        ;CaptionML=ENU=Service Report No. }
      { 170 ;   ;Trial/POC           ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "Trial/POC" = FALSE THEN BEGIN
                                                                    CLEAR("APCT Form");
                                                                    CLEAR("RFE Form");
                                                                  END;
                                                                END;
                                                                }
      { 171 ;   ;APCT Form           ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Approval to Proceed/Conduct Trial }
      { 172 ;   ;RFE Form            ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Request for Exception }
      { 180 ;   ;OSP                 ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 190 ;   ;Rectification       ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF Rectification = TRUE THEN
                                                                    VALIDATE("Rectification SR Form", TRUE);

                                                                  IF Rectification = FALSE THEN BEGIN
                                                                    CLEAR("Rectification SR Form");
                                                                    CLEAR("Rectification SR No.");
                                                                    CLEAR("Rectification Punchlist Report");
                                                                  END;
                                                                END;
                                                                }
      { 191 ;   ;Rectification Punchlist Report;Boolean;
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU="Punchlist Report/List of Deficiencies (as applicable) " }
      { 192 ;   ;Rectification SR Form;Boolean      ;OnValidate=BEGIN
                                                                  IF "Rectification SR Form" = FALSE THEN
                                                                    CLEAR("Rectification SR No.");
                                                                END;

                                                    OnLookup=BEGIN
                                                                TestAdminRights;
                                                                TestJobTypeProjectRelated;
                                                              END;

                                                    CaptionML=ENU=Service Report Form }
      { 193 ;   ;Rectification SR No.;Code20        ;CaptionML=ENU=Service Report No. }
      { 200 ;   ;Final Acceptance    ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF "Final Acceptance" = TRUE THEN
                                                                    VALIDATE("Fnl. Accpt. SR Form", TRUE);
                                                                  IF "Final Acceptance" = FALSE THEN BEGIN
                                                                    CLEAR("Fnl. Accpt. SR Form");
                                                                    CLEAR("Fnl. Accpt. SR No.");
                                                                    CLEAR("Fnl. Accpt. Schd. by Cust.");
                                                                    CLEAR("Fnl. Accpt. Punchlist Report");
                                                                    CLEAR("Fnl. Accpt. PAC");
                                                                  END;
                                                                END;
                                                                }
      { 201 ;   ;Fnl. Accpt. SR Form ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "Fnl. Accpt. SR Form" = FALSE THEN
                                                                    CLEAR("Fnl. Accpt. SR No.");
                                                                END;

                                                    CaptionML=ENU=Service Report Form }
      { 202 ;   ;Fnl. Accpt. SR No.  ;Code20        ;CaptionML=ENU=Service Report No. }
      { 203 ;   ;Fnl. Accpt. Schd. by Cust.;Boolean ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Schedule Confirmed by Customer }
      { 204 ;   ;Fnl. Accpt. Punchlist Report;Boolean;
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Cleared Punchlist Report/List of Deficiencies (signed by customer) }
      { 205 ;   ;Fnl. Accpt. PAC     ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Preliminary Acceptance Certificate }
      { 210 ;   ;Installation and Commissioning;Boolean;
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF "Installation and Commissioning" = TRUE THEN
                                                                    VALIDATE("InsComm. SR Form", TRUE);
                                                                  IF "Installation and Commissioning" = FALSE THEN BEGIN
                                                                    CLEAR("InsComm. 1st Trip");
                                                                    CLEAR("InsComm. 2nd Trip");
                                                                    CLEAR("InsComm. 3rd Trip");
                                                                    CLEAR("InsComm. RFE Form");
                                                                    CLEAR("InsComm. SR Form");
                                                                    CLEAR("InsComm. SR No.");
                                                                    VALIDATE("InsComm. AFI", FALSE);
                                                                    CLEAR("InsComm. Permitting");
                                                                    CLEAR("InsComm. Others");
                                                                    CLEAR("InsComm. As Plan");
                                                                    CLEAR("InsComm. TSSR");
                                                                    CLEAR("InsComm. Others");
                                                                  END;
                                                                END;
                                                                }
      { 220 ;   ;InsComm. 1st Trip   ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 221 ;   ;InsComm. 2nd Trip   ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 222 ;   ;InsComm. 3rd Trip   ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 223 ;   ;InsComm. RFE Form   ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Request for Exemption Form }
      { 224 ;   ;InsComm. SR Form    ;Boolean       ;OnValidate=BEGIN
                                                                  IF "InsComm. SR Form" = FALSE THEN
                                                                    CLEAR("InsComm. SR No.");
                                                                END;

                                                    CaptionML=ENU=Service Report Form }
      { 225 ;   ;InsComm. SR No.     ;Code20        ;CaptionML=ENU=Service Report No. }
      { 226 ;   ;InsComm. AFI        ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "InsComm. AFI" = FALSE THEN BEGIN
                                                                    CLEAR("InsComm. Line of Sight");
                                                                    CLEAR("InsComm. Non-Line of Sight");
                                                                    VALIDATE("InsComm. Permitting", FALSE);
                                                                  END;
                                                                END;

                                                    CaptionML=ENU=Approved for Installation (Signed by Customer) }
      { 227 ;   ;InsComm. As Plan    ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=As Plan (Signed by Customer) }
      { 228 ;   ;InsComm. TSSR       ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Technical Site Survey Report (Signed by Customer) }
      { 230 ;   ;Troubleshooting     ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF Troubleshooting = TRUE THEN
                                                                    VALIDATE("Trbltng. SR Form", TRUE);

                                                                  IF Troubleshooting = FALSE THEN BEGIN
                                                                    CLEAR("Trbltng. Under Warranty");
                                                                    CLEAR("Trbltng. DR Date");
                                                                    CLEAR("Trbltng. Date of Acceptance");
                                                                    CLEAR("Trbltng. Out of Warranty");
                                                                    CLEAR("Out of Wrrnty. 1st Trip");
                                                                    CLEAR("Out of Wrrnty. 2nd Trip");
                                                                    CLEAR("Trbltng. NCCF No.");
                                                                    VALIDATE("Trbltng. SR Form",FALSE);
                                                                  END;
                                                                END;
                                                                }
      { 231 ;   ;Trbltng. NCCF No.   ;Code20        ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Non-Conformance Complaint Form No. }
      { 232 ;   ;Trbltng. SR Form    ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "Trbltng. SR Form" = FALSE THEN
                                                                    CLEAR("Trbltng. SR No.");
                                                                END;

                                                    CaptionML=ENU=Service Report Form }
      { 233 ;   ;Trbltng. SR No.     ;Code20        ;CaptionML=ENU=Service Report No. }
      { 240 ;   ;Trbltng. Under Warranty;Boolean    ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "Trbltng. Under Warranty" = FALSE THEN BEGIN
                                                                    CLEAR("Trbltng. DR Date");
                                                                    CLEAR("Trbltng. Date of Acceptance");
                                                                  END;
                                                                END;

                                                    CaptionML=ENU=Under Warranty }
      { 241 ;   ;Trbltng. DR Date    ;Date          ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Delivery Receipt Date }
      { 242 ;   ;Trbltng. Date of Acceptance;Date   ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Date of Acceptance }
      { 250 ;   ;Trbltng. Out of Warranty;Boolean   ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "Trbltng. Out of Warranty" = FALSE THEN BEGIN
                                                                    CLEAR("Out of Wrrnty. 1st Trip");
                                                                    CLEAR("Out of Wrrnty. 2nd Trip");
                                                                  END;
                                                                END;

                                                    CaptionML=ENU=Out of Warranty }
      { 260 ;   ;Out of Wrrnty. 1st Trip;Boolean    ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=1st Trip }
      { 261 ;   ;Out of Wrrnty. 2nd Trip;Boolean    ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=2nd Trip }
      { 270 ;   ;On-Site Audit       ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;

                                                                  IF "On-Site Audit" = FALSE THEN BEGIN
                                                                    CLEAR("On-Site Aud. 1st Trip");
                                                                    CLEAR("On-Site Aud. 2nd Trip");
                                                                    CLEAR("On-Site Aud. 3rd Trip");
                                                                    CLEAR("Audit Checklist");
                                                                  END;
                                                                END;
                                                                }
      { 280 ;   ;On-Site Aud. 1st Trip;Boolean      ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=1st Trip }
      { 281 ;   ;On-Site Aud. 2nd Trip;Boolean      ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=2nd Trip }
      { 282 ;   ;On-Site Aud. 3rd Trip;Boolean      ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=3rd Trip }
      { 290 ;   ;Meeting             ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;

                                                                  IF Meeting = FALSE THEN
                                                                    CLEAR("Meeting Email/SMS Conf.");
                                                                END;
                                                                }
      { 291 ;   ;Meeting Email/SMS Conf.;Boolean    ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    CaptionML=ENU=Email/SMS Confirmation }
      { 300 ;   ;Product Presentation;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;

                                                                  IF "Product Presentation" = FALSE THEN
                                                                    CLEAR("Prod. Prstn. Email/SMS Conf.");
                                                                END;
                                                                }
      { 301 ;   ;Prod. Prstn. Email/SMS Conf.;Boolean;
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    CaptionML=ENU=Email/SMS Confirmation }
      { 310 ;   ;With P.O            ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 311 ;   ;Without P.O         ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;
                                                                }
      { 320 ;No ;Others              ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 321 ;No ;Others Remarks      ;Text100       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    CaptionML=ENU=Remarks }
      { 500 ;   ;No. Series          ;Code20         }
      { 510 ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    Editable=No }
      { 530 ;   ;Date Needed         ;Date          ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 800 ;   ;Requested By        ;Text100       ;TableRelation=Employee;
                                                    OnLookup=VAR
                                                                Employee@1000 : Record 5200;
                                                              BEGIN
                                                                IF PAGE.RUNMODAL(0,Employee) = ACTION::LookupOK THEN BEGIN
                                                                  xRec := Rec;
                                                                  "Endorsed By" := GetEmployeeName(Employee."No.");
                                                                END;
                                                              END;
                                                              }
      { 810 ;   ;Endorsed By         ;Text100       ;TableRelation=Employee;
                                                    OnLookup=VAR
                                                                Employee@1000 : Record 5200;
                                                              BEGIN
                                                                IF PAGE.RUNMODAL(0,Employee) = ACTION::LookupOK THEN BEGIN
                                                                  xRec := Rec;
                                                                  "Requested By" := GetEmployeeName(Employee."No.");
                                                                END;
                                                              END;
                                                              }
      { 900 ;   ;Status              ;Option        ;OptionCaptionML=ENU=Open,Pending Approval,Released,Cancelled,Posted;
                                                    OptionString=Open,Pending Approval,Released,Cancelled,Posted }
      { 920 ;   ;Audit Checklist     ;Boolean        }
      { 930 ;   ;Permitting          ;Boolean       ;OnValidate=BEGIN
                                                                  IF Permitting = FALSE THEN BEGIN
                                                                    CLEAR("Prmtg. AFI");
                                                                    CLEAR("Prmtg. As Plan");
                                                                    CLEAR("Prmtg. TSSR");
                                                                    CLEAR("Prmtg. Timeline of ROW");
                                                                  END;
                                                                END;
                                                                }
      { 940 ;   ;Prmtg. AFI          ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Approved for Installation (Signed by Customer) }
      { 945 ;   ;Prmtg. As Plan      ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=As Plan (Signed by Customer) }
      { 950 ;   ;Prmtg. TSSR         ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Technical Site Survey Report (Signed by Customer) }
      { 955 ;   ;Prmtg. Timeline of ROW;Boolean     ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Timeline of ROW }
      { 50190;  ;Assigned User ID    ;Code50        ;TableRelation="User Setup" }
      { 50195;  ;Approver User ID    ;Code50        ;TableRelation="User Setup" }
      { 50196;  ;Responsibility Center;Code20       ;TableRelation="Responsibility Center" }
      { 50197;  ;INTP No.            ;Code20        ;TableRelation="Internal Notice to Proceed" WHERE (Status=FILTER(<>Cancelled),
                                                                                                      Approval Status=CONST(Released));
                                                    OnValidate=VAR
                                                                  INTP@1000 : Record 50040;
                                                                BEGIN
                                                                  TestAdminRights;
                                                                  // TestJobTypeProjectRelated;

                                                                  IF "INTP No." <> '' THEN BEGIN
                                                                    INTP.GET("INTP No.");
                                                                  END ELSE BEGIN
                                                                    CLEAR(INTP);
                                                                  END;

                                                                  "Job No." := INTP."Job No.";
                                                                  "Project Name" := INTP."Project Name";
                                                                  "Project Name 2" := INTP."Project Name 2";
                                                                  IF INTP."Notice To Mobilize" THEN
                                                                    "P.O No." := INTP."P.O No. (Customer)"
                                                                  ELSE
                                                                    "P.O No." := INTP."No.";
                                                                  IF INTP."Customer No." <> '' THEN
                                                                    VALIDATE("Customer No.",INTP."Customer No.");
                                                                END;
                                                                }
      { 50200;  ;Incoming Document Entry No.;Integer }
      { 50201;  ;InsComm. Line of Sight;Boolean     ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Line of Sight }
      { 50202;  ;InsComm. Non-Line of Sight;Boolean ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Non-Line of Sight }
      { 50210;  ;InsComm. Permitting ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF "InsComm. Permitting" = FALSE THEN BEGIN
                                                                    CLEAR("InsComm. Prmt. LGU Permit");
                                                                    CLEAR("InsComm. Prmt. Brgy. Permit");
                                                                    CLEAR("InsComm. Prmt. Bldg. Permit");
                                                                    CLEAR("InsComm. Prmt. DPWH");
                                                                    CLEAR("InsComm. Prmt. MMDA");
                                                                    CLEAR("InsComm. Prmt. Traffic");
                                                                    CLEAR("InsComm. Prmt. HOA");
                                                                    CLEAR("InsComm. Prmt. ALO");
                                                                    CLEAR("InsComm. Prmt. ALP");
                                                                    CLEAR("InsComm. Prmt. FIO");
                                                                    CLEAR("InsComm. Prmt. RAAWA");
                                                                    CLEAR("InsComm. Prmt. SO");
                                                                  END;
                                                                END;

                                                    CaptionML=ENU=Permitting }
      { 50215;  ;InsComm. Prmt. LGU Permit;Boolean  ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=LGU Permit }
      { 50220;  ;InsComm. Prmt. Brgy. Permit;Boolean;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Barangay Permit }
      { 50225;  ;InsComm. Prmt. Bldg. Permit;Boolean;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Building Permit }
      { 50230;  ;InsComm. Prmt. DPWH ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=DPWH }
      { 50235;  ;InsComm. Prmt. MMDA ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=MMDA }
      { 50240;  ;InsComm. Prmt. Traffic;Boolean     ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Traffic }
      { 50245;  ;InsComm. Prmt. HOA  ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Home Owners Association (HOA) }
      { 50250;  ;InsComm. Prmt. ALO  ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Adjacent Lot Owner (ALO) }
      { 50255;  ;InsComm. Prmt. ALP  ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Access Letter/Pass }
      { 50260;  ;InsComm. Prmt. FIO  ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Facility Impelementation Order }
      { 50265;  ;InsComm. Prmt. RAAWA;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=RAAWA }
      { 50270;  ;InsComm. Prmt. SO   ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Service Order (SO) }
      { 50275;  ;InsComm. Others     ;Text50        ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Others }
      { 50280;  ;Testing             ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF Testing = TRUE THEN
                                                                    VALIDATE("Testing SR Form", TRUE);

                                                                  IF Testing = FALSE THEN BEGIN
                                                                    CLEAR("Testing Test Procedures");
                                                                    CLEAR("Testing SR Form");
                                                                    CLEAR("Testing SR No.");
                                                                  END;
                                                                END;
                                                                }
      { 50281;  ;Testing Test Procedures;Boolean    ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Test Proceedure/Parameters }
      { 50282;  ;Testing SR Form     ;Boolean       ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF "Testing SR Form" = FALSE THEN
                                                                    CLEAR("Testing SR No.");
                                                                END;

                                                    CaptionML=ENU=Service Report Form }
      { 50283;  ;Testing SR No.      ;Code20        ;CaptionML=ENU=Service Report No. }
      { 50300;  ;Preliminary Acceptance;Boolean     ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                  IF "Preliminary Acceptance" = TRUE THEN
                                                                    VALIDATE("Pre-Accpt. SR Form", TRUE);
                                                                  IF "Preliminary Acceptance" = FALSE THEN BEGIN
                                                                    CLEAR("Pre-Accpt. SR Form");
                                                                    CLEAR("Pre-Accpt. SR No.");
                                                                    CLEAR("Pre-Accpt. Sched. by Customer");
                                                                  END;
                                                                END;
                                                                }
      { 50301;  ;Pre-Accpt. SR Form  ;Boolean       ;OnValidate=BEGIN
                                                                  IF "Pre-Accpt. SR Form" = FALSE THEN
                                                                    CLEAR("Pre-Accpt. SR No.");
                                                                END;

                                                    CaptionML=ENU=Service Report Form }
      { 50302;  ;Pre-Accpt. SR No.   ;Code20        ;CaptionML=ENU=Service Report No. }
      { 50303;  ;Pre-Accpt. Sched. by Customer;Boolean;
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  TestJobTypeProjectRelated;
                                                                END;

                                                    CaptionML=ENU=Schedule Confirmed by Customer }
      { 50340;  ;Special Project of CEO;Boolean     ;OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                  IF "Special Project of CEO" = TRUE THEN
                                                                    TESTFIELD("Job Type", "Job Type"::Others);
                                                                END;
                                                                }
      { 50350;  ;Ground Manager No.  ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person));
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 50351;  ;Project Manager No. ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person));
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;
                                                                }
      { 50360;  ;Request for Exception No.;Code20   ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Invoice),
                                                                                            Request type=CONST(Request For Exception),
                                                                                            Status=FILTER(Released|Pending Approval));
                                                    OnValidate=BEGIN
                                                                  TestAdminRights;
                                                                END;

                                                    OnLookup=VAR
                                                                SalesHdr@1000 : Record 36;
                                                              BEGIN
                                                                TestAdminRights;
                                                                SalesHdr.SETFILTER(Status, '%1|%2',SalesHdr.Status::Released, SalesHdr.Status::"Pending Approval");
                                                                IF "Request for Exception No." <> '' THEN
                                                                IF  SalesHdr.GET(SalesHdr."Document Type"::Invoice, "Request for Exception No.") THEN;
                                                                IF PAGE.RUNMODAL(PAGE::"Request for Exceptions", SalesHdr) = ACTION::LookupOK THEN BEGIN
                                                                  xRec := Rec;
                                                                VALIDATE("Request for Exception No.",SalesHdr."No.");
                                                                END;
                                                              END;
                                                              }
    }
    KEYS
    {
      {    ;No.                                     ;Clustered=Yes }
      {    ;Project Name                             }
    }
    FIELDGROUPS
    {
      { 1   ;DropDown            ;No.,Project Name,Customer No.,Customer Name }
    }
    CODE
    {
      VAR
        JobOderLines@1000 : Record 50551;
        Job@1001 : Record 167;
        Error001@1002 : TextConst 'ENU=You cannot rename a %1.';
        UserSetup@1003 : Record 91;
        UserGroup@1004 : Record 9000;
        CustomSetup@1008 : Record 50001;
        ApprovalsMgmt@1005 : Codeunit 1535;
        NoSeriesMgt@1007 : Codeunit 396;
        Error002@1006 : TextConst 'ENU=You''re not allowed to modify %1 field.';
        Error003@1009 : TextConst 'ENU=You must select atleast one activity for service engineering.';

      PROCEDURE InitInsert@61();
      VAR
        NoSeriesMgt@1000 : Codeunit 396;
      BEGIN
        IF "No." = '' THEN BEGIN
          NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Document Date","No.","No. Series");
        END;
      END;

      LOCAL PROCEDURE GetNoSeriesCode@1() : Code[20];
      VAR
        CustomSetup@1000 : Record 50001;
      BEGIN
        CustomSetup.GET;
        CustomSetup.TESTFIELD("Job Order Nos.");
        EXIT(CustomSetup."Job Order Nos.");
      END;

      LOCAL PROCEDURE GetEmployeeName@2(EmpNo@1000 : Code[20]) : Text;
      VAR
        Employee@1001 : Record 5200;
      BEGIN
        IF Employee.GET(EmpNo) THEN
          EXIT(Employee."First Name"+ ' '+Employee."Last Name");
      END;

      PROCEDURE PrintDocument@3();
      VAR
        JobOrderForm@1000 : Report 50012;
      BEGIN
        CLEAR(JobOrderForm);
        JobOrderForm.SetReportFilter("No.");
        JobOrderForm.RUNMODAL;
      END;

      PROCEDURE TestJobOrderField@4();
      VAR
        INTP@1000 : Record 50040;
      BEGIN
        IF "Job Type" = "Job Type"::"Service Engineering" THEN BEGIN
          //TESTFIELD("Job No.");
          TESTFIELD("Project Name");
          TESTFIELD("P.O No.");
          TESTFIELD("Customer No.");
          TESTFIELD("Customer Name");
          // TESTFIELD("RFTS No.");
          TESTFIELD("INTP No.");
          IF INTP.GET("INTP No.") AND (INTP."Supply Only" <> INTP."Supply Only"::Yes) THEN BEGIN
            TESTFIELD("Project Manager No.");
          END;
          //IF Others = Others::"1" THEN
          //  TESTFIELD("Others Remarks");
          // TESTFIELD("Service Report No.");
          IF (NOT "Site Survey") AND (NOT Permitting) AND (NOT "Installation and Commissioning") AND (NOT Testing) AND (NOT "Preliminary Acceptance")
            AND (NOT "Final Acceptance") AND (NOT Rectification) AND (NOT Troubleshooting) AND (NOT "On-Site Audit") AND (NOT "Trial/POC")
            AND (NOT Meeting) AND (NOT "Product Presentation") AND (NOT "Trial/POC") AND (NOT "On-Site Audit") THEN
            ERROR(Error003);
        END;

        TESTFIELD("Date Requested");
        TESTFIELD("Employee No.");
        // TESTFIELD("Employee Name");
        // TESTFIELD("Customer Name");

        IF "Special Project of CEO" = TRUE THEN
          TESTFIELD(Remarks);

        ValidateJobOrderLine;
      END;

      PROCEDURE TestJobTypeProjectRelated@9();
      BEGIN
        IF "Job Type" <> "Job Type"::"Service Engineering" THEN
          TESTFIELD("Job Type", "Job Type"::"Service Engineering");
      END;

      PROCEDURE TestLinkedDocuments@5();
      VAR
        Error001@1002 : TextConst 'ENU=You''re not allowed to delete %1 because it is already linked to a purchase document.';
        PurchaseHeader@1004 : Record 38;
        PurchInvHeader@1003 : Record 122;
      BEGIN
        PurchaseHeader.SETFILTER("Job Order No.", "No.");
        PurchInvHeader.SETFILTER("Job Order No.", "No.");

        IF (PurchaseHeader.COUNT > 0) OR (PurchInvHeader.COUNT > 0) THEN
          ERROR(Error001, "No.");
      END;

      PROCEDURE AssistEdit@6() : Boolean;
      BEGIN
        CustomSetup.GET;
        CustomSetup.TESTFIELD(CustomSetup."Job Order Nos.");
        IF NoSeriesMgt.SelectSeries(CustomSetup."Job Order Nos.",xRec."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          EXIT(TRUE);
        END;
      END;

      PROCEDURE ValidateJobOrderLine@7();
      VAR
        JobOrderLines_@1000 : Record 50551;
        Error001@1001 : TextConst 'ENU=Job Order %1 must atleast have a value in Request for Vehicle, Request for Transportation or Request for Airplane Ticket.';
      BEGIN
        JobOrderLines_.SETRANGE("Job Order No.", "No.");

        IF JobOrderLines_.FINDSET THEN BEGIN
          REPEAT
            CASE JobOrderLines_."Line Type" OF
              JobOrderLines_."Line Type"::"Car Request":
                BEGIN
                  JobOrderLines_.TESTFIELD("Date Needed");
                  JobOrderLines_.TESTFIELD(Destination);
                  JobOrderLines_.TESTFIELD("Site Name");
                  JobOrderLines_.TESTFIELD("Time of Departure");
                  JobOrderLines_.TESTFIELD("Time of Arrival");
                END;
              JobOrderLines_."Line Type"::"Public Transpo Request":
                BEGIN
                  JobOrderLines_.TESTFIELD("Date Needed");
                  JobOrderLines_.TESTFIELD("Destination From");
                  JobOrderLines_.TESTFIELD("Destination To");
                  JobOrderLines_.TESTFIELD("Name of Passengers");
                  JobOrderLines_.TESTFIELD("Date From");
                  JobOrderLines_.TESTFIELD("Date To");
                END;
              JobOrderLines_."Line Type"::"Airplane Ticket Request":
                BEGIN
                  JobOrderLines_.TESTFIELD("Date Needed");
                  JobOrderLines_.TESTFIELD("First Name");
                  JobOrderLines_.TESTFIELD("Middle Name");
                  JobOrderLines_.TESTFIELD("Last Name");
                  JobOrderLines_.TESTFIELD(Birthdate);
                  JobOrderLines_.TESTFIELD(Destination);
                  JobOrderLines_.TESTFIELD("Date From");
                  JobOrderLines_.TESTFIELD("Date To");
                END;

            END;
          UNTIL JobOrderLines_.NEXT = 0;
        END ELSE BEGIN
          ERROR(Error001, "No.");
        END;
      END;

      PROCEDURE TestAdminRights@8();
      BEGIN
        IF (UserSetup.GET(USERID) AND (UserSetup."JO Admin" = FALSE)) OR NOT UserSetup.GET(USERID) THEN
          TESTFIELD(Status, Status::Open);
      END;

      PROCEDURE GetGroundManagerName@10() : Text;
      VAR
        Res@1000 : Record 156;
      BEGIN
        IF Res.GET("Ground Manager No.") THEN
          EXIT(Res.Name + Res."Name 2");

        EXIT('');
      END;

      PROCEDURE GetProjectManagerName@12() : Text;
      VAR
        Res@1000 : Record 156;
      BEGIN
        IF Res.GET("Project Manager No.") THEN
          EXIT(Res.Name + Res."Name 2");

        EXIT('');
      END;

      [Integration]
      PROCEDURE OnJobOrderNewNote@28(VAR JobOrder@1000 : Record 50012);
      BEGIN
      END;

      [Integration]
      PROCEDURE OnJobOrderNewLink@21(VAR JobOrder@1000 : Record 50012);
      BEGIN
      END;

      BEGIN
      END.
    }
  }

  OBJECT Table 50551 Job Order Line
  {
    OBJECT-PROPERTIES
    {
      Date=08/13/18;
      Time=11:13:31 AM;
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      OnInsert=VAR
                JobOrderLines_@1000 : Record 50551;
              BEGIN

                TestJobOrderHeader;
                InitLInes;

                "Created By" := USERID;
                "Created At" := CURRENTDATETIME;
              END;

      OnModify=BEGIN
                "Modified By" := USERID;
                "Modified At" := CURRENTDATETIME;
              END;

      OnDelete=BEGIN
                TestJobOrderHeader;
              END;

    }
    FIELDS
    {
      { 100 ;   ;Line No.            ;Integer       ;Editable=No }
      { 101 ;   ;Line Type           ;Option        ;OptionCaptionML=ENU=Car Request,Public Transpo Request,Airplane Ticket Request;
                                                    OptionString=Car Request,Public Transpo Request,Airplane Ticket Request }
      { 102 ;   ;Job Order No.       ;Code20        ;TableRelation="Job Order" }
      { 103 ;   ;Date Needed         ;Date          ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 104 ;   ;Destination         ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 105 ;   ;Date From           ;DateTime      ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;

                                                                  IF "Date From" > "Date To" THEN BEGIN
                                                                    "Date To" := "Date From";
                                                                  END;
                                                                  DateFrom := "Date From";
                                                                  IF DT2DATE(DateFrom) < "Date Needed" THEN BEGIN
                                                                    "Date From" := CREATEDATETIME("Date Needed",TIME);
                                                                    "Date To" := CREATEDATETIME("Date Needed",TIME);
                                                                  END;
                                                                END;
                                                                }
      { 106 ;   ;Date To             ;DateTime      ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                  // IF "Date of Departure" > "Date of Return" THEN BEGIN
                                                                  //     "Date of Return" := "Date of Departure";
                                                                  // END;
                                                                  IF "Date To" < "Date From" THEN BEGIN
                                                                    "Date From" := "Date To";
                                                                  END;
                                                                END;
                                                                }
      { 107 ;   ;Site Name           ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 108 ;   ;Province/Region     ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 109 ;   ;Remarks             ;Text50         }
      { 110 ;   ;Driver No.          ;Code20        ;TableRelation=Resource WHERE (Job Type=CONST(Driver));
                                                    OnValidate=BEGIN
                                                                  TestJobOrderVehicleAdmin;
                                                                  IF "Driver No." <> '' THEN
                                                                    Resource.GET("Driver No.")
                                                                  ELSE BEGIN
                                                                    CLEAR(Resource);
                                                                  END;

                                                                  "Driver Name" := Resource.Name;
                                                                END;
                                                                }
      { 111 ;   ;Driver Name         ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderVehicleAdmin;
                                                                END;

                                                    Editable=No }
      { 112 ;   ;Vehicle No.         ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Machine));
                                                    OnValidate=BEGIN
                                                                  TestJobOrderVehicleAdmin;
                                                                  IF "Vehicle No." <> '' THEN
                                                                    Resource.GET("Vehicle No.")
                                                                  ELSE BEGIN
                                                                    CLEAR(Resource);
                                                                  END;

                                                                  "Vehicle Descrition" := Resource.Name;
                                                                  "Vehicle Plate No." := Resource."Serial No.";
                                                                END;
                                                                }
      { 113 ;   ;Vehicle Descrition  ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderVehicleAdmin;
                                                                END;

                                                    Editable=No }
      { 114 ;   ;Vehicle Plate No.   ;Code50        ;OnValidate=BEGIN
                                                                  TestJobOrderVehicleAdmin;
                                                                END;

                                                    Editable=No }
      { 115 ;   ;Destination From    ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 116 ;   ;Destination To      ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 117 ;   ;Name of Passengers  ;Text100       ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 120 ;   ;First Name          ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 121 ;   ;Middle Name         ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 122 ;   ;Last Name           ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 123 ;   ;Birthdate           ;Date          ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 124 ;   ;Destination Airport ;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                END;
                                                                }
      { 125 ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                    OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                  TestJobOrderHeaderProjectRelated;
                                                                  IF "Job No." <> xRec."Job No." THEN
                                                                    VALIDATE("Job Task No.", '');
                                                                END;
                                                                }
      { 126 ;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                    OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                  TestJobOrderHeaderProjectRelated;
                                                                  IF ("Job No." = '') OR ("Job Task No." = '') THEN BEGIN
                                                                    CLEAR("Job Task No.");
                                                                    CLEAR("Job Task Description");
                                                                    EXIT;
                                                                  END;
                                                                  JobTask.GET("Job No.","Job Task No.");
                                                                  JobTask.TESTFIELD("Job Task Type", JobTask."Job Task Type"::Posting);
                                                                  VALIDATE("Job Task Description", JobTask.Description);
                                                                END;
                                                                }
      { 127 ;   ;Job Task Description;Text50        ;OnValidate=BEGIN
                                                                  TestJobOrderHeader;
                                                                  TestJobOrderHeaderProjectRelated;
                                                                  TESTFIELD("Job No.");
                                                                  TESTFIELD("Job Task No.");
                                                                END;
                                                                }
      { 130 ;   ;Time of Departure   ;Time           }
      { 135 ;   ;Time of Arrival     ;Time           }
      { 50100;  ;Created By          ;Text100       ;Editable=No }
      { 50101;  ;Modified By         ;Text100       ;Editable=No }
      { 50102;  ;Created At          ;DateTime      ;Editable=No }
      { 50103;  ;Modified At         ;DateTime      ;Editable=No }
      { 50120;  ;Assigned User ID    ;Code50        ;TableRelation="User Setup" }
      { 50121;  ;Approver User ID    ;Code50        ;TableRelation="User Setup" }
    }
    KEYS
    {
      {    ;Line Type,Job Order No.,Line No.        ;Clustered=Yes }
    }
    FIELDGROUPS
    {
    }
    CODE
    {
      VAR
        FixedAsset@1000 : Record 5600;
        Resource@1001 : Record 156;
        JobOrderHeader@1002 : Record 50012;
        JobTask@1003 : Record 1001;
        DateFrom@1004 : DateTime;
        UserSetup@1005 : Record 91;

      LOCAL PROCEDURE TestJobOrderHeader@4();
      BEGIN
        IF JobOrderHeader.GET("Job Order No.") THEN
          JobOrderHeader.TestAdminRights;
      END;

      LOCAL PROCEDURE TestJobOrderVehicleAdmin@1();
      VAR
        UserSetup@1000 : Record 91;
      BEGIN
        IF NOT UserSetup.GET(USERID) THEN
          UserSetup.TESTFIELD("User ID");

        IF UserSetup."Job Order Vehicle Admin" = FALSE THEN
          UserSetup.TESTFIELD("Job Order Vehicle Admin");
      END;

      LOCAL PROCEDURE TestJobOrderHeaderProjectRelated@2();
      BEGIN
        IF JobOrderHeader.GET("Job Order No.") THEN
          JobOrderHeader.TestJobTypeProjectRelated;
      END;

      PROCEDURE InitLInes@3();
      VAR
        JobOrderLines_@1000 : Record 50551;
      BEGIN
        CASE "Line Type" OF
          "Line Type"::"Car Request":
            BEGIN
              JobOrderLines_.SETRANGE("Line Type", "Line Type");
              JobOrderLines_.SETRANGE("Job Order No.", "Job Order No.");
              IF JobOrderLines_.FINDLAST THEN BEGIN
                "Date Needed" := CALCDATE('<1D>', JobOrderLines_."Date Needed");
                "Date From" := CREATEDATETIME("Date Needed", 090000T);
                "Date To" := CREATEDATETIME("Date Needed", 180000T);
              END ELSE BEGIN
                "Date Needed" := TODAY;
                "Date From" := CREATEDATETIME(TODAY, 090000T);
                "Date To" := CREATEDATETIME(TODAY, 180000T);
              END;

              "Time of Departure" := 090000T;
              "Time of Arrival" := 180000T;
            END;
          "Line Type"::"Public Transpo Request":
            BEGIN
              JobOrderLines_.SETRANGE("Line Type", "Line Type");
              JobOrderLines_.SETRANGE("Job Order No.", "Job Order No.");
                IF JobOrderLines_.FINDLAST THEN BEGIN
                  "Date Needed" := CALCDATE('<1D>', JobOrderLines_."Date Needed");
                  "Date From" := CREATEDATETIME("Date Needed", 090000T);
                  "Date To" := CREATEDATETIME("Date Needed", 180000T);
                END ELSE BEGIN
                  "Date Needed" := TODAY;
                  "Date From" := CREATEDATETIME(TODAY, 090000T);
                  "Date To" := CREATEDATETIME(TODAY, 180000T);
                END;


            END;
            ELSE
              "Date Needed" := TODAY;
              "Date From" := CREATEDATETIME(TODAY, 090000T);
              "Date To" := CREATEDATETIME(TODAY, 180000T);
        END;
      END;

      BEGIN
      END.
    }
  }

  OBJECT Page 9005 Sales Manager Role Center
  {
    OBJECT-PROPERTIES
    {
      Date=08/16/18;
      Time=[ 2:13:06 PM];
      Modified=Yes;
      Version List=NAVW19.00.00.44974,NAVOC1.00.03.00,NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      CaptionML=ENU=Role Center;
      PageType=RoleCenter;
      ActionList=ACTIONS
      {
        { 1900000006;0 ;ActionContainer;
                        ActionContainerType=Reports }
        { 13      ;1   ;Action    ;
                        CaptionML=ENU=Customer - &Order Summary;
                        RunObject=Report 107;
                        Image=Report }
        { 14      ;1   ;Action    ;
                        CaptionML=ENU=Customer - &Top 10 List;
                        RunObject=Report 111;
                        Image=Report }
        { 17      ;1   ;Separator  }
        { 18      ;1   ;Action    ;
                        CaptionML=ENU=S&ales Statistics;
                        RunObject=Report 112;
                        Image=Report }
        { 19      ;1   ;Action    ;
                        CaptionML=ENU=Salesperson - Sales &Statistics;
                        RunObject=Report 114;
                        Image=Report }
        { 20      ;1   ;Action    ;
                        CaptionML=ENU=Salesperson - &Commission;
                        RunObject=Report 115;
                        Image=Report }
        { 22      ;1   ;Separator  }
        { 24      ;1   ;Action    ;
                        CaptionML=ENU=Campaign - &Details;
                        RunObject=Report 5060;
                        Image=Report }
        { 83      ;1   ;Separator  }
        { 75      ;1   ;Action    ;
                        CaptionML=ENU=Opportunity - List;
                        RunObject=Report 5061;
                        Image=Report }
        { 79      ;1   ;Action    ;
                        CaptionML=ENU=Sales Funnel;
                        RunObject=Report 50028;
                        Image=Report }
        { 109     ;1   ;Action    ;
                        CaptionML=ENU=Vendor - Check Payment Status;
                        RunObject=Report 50029;
                        Image=Report }
        { 1900000011;0 ;ActionContainer;
                        ActionContainerType=HomeItems }
        { 9       ;1   ;Action    ;
                        CaptionML=ENU=Sales Analysis Reports;
                        RunObject=Page 9376 }
        { 12      ;1   ;Action    ;
                        CaptionML=ENU=Sales Analysis by Dimensions;
                        RunObject=Page 9371 }
        { 8       ;1   ;Action    ;
                        CaptionML=ENU=Sales Budgets;
                        RunObject=Page 9374 }
        { 5       ;1   ;Action    ;
                        CaptionML=ENU=Sales Quotes;
                        RunObject=Page 9300;
                        Image=Quote }
        { 186     ;1   ;Action    ;
                        Name=SalesQuotesOpen;
                        ShortCutKey=Return;
                        CaptionML=ENU=Open;
                        RunObject=Page 9300;
                        RunPageView=WHERE(Status=FILTER(Open));
                        Image=Edit }
        { 185     ;1   ;Action    ;
                        Name=SalesQuotesReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 9300;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 184     ;1   ;Action    ;
                        Name=SalesQuotesApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 9300;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 183     ;1   ;Action    ;
                        Name=SalesQuotesPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 9300;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 182     ;1   ;Action    ;
                        Name=SalesQuotesExpired;
                        CaptionML=ENU=Expired;
                        RunObject=Page 9300;
                        RunPageLink=Status=CONST(Expired);
                        Image=PostedOrder }
        { 181     ;1   ;Separator  }
        { 15      ;1   ;Action    ;
                        Name=<Page Sales Orders>;
                        CaptionML=ENU=Sales Orders;
                        RunObject=Page 9305;
                        Image=Order }
        { 7       ;1   ;Action    ;
                        Name=SalesOrdersOpen;
                        ShortCutKey=Return;
                        CaptionML=ENU=Open;
                        RunObject=Page 9305;
                        RunPageView=WHERE(Status=FILTER(Open));
                        Image=Edit }
        { 180     ;1   ;Action    ;
                        Name=SalesOrderReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 9305;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 179     ;1   ;Action    ;
                        Name=SalesOrderApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 9305;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 178     ;1   ;Action    ;
                        Name=SalesOrderPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 9305;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 177     ;1   ;Action    ;
                        Name=SalesOrderExpired;
                        CaptionML=ENU=Expired;
                        RunObject=Page 9305;
                        RunPageLink=Status=CONST(Expired);
                        Image=PostedOrder }
        { 176     ;1   ;Separator  }
        { 36      ;1   ;Action    ;
                        CaptionML=ENU=Dynamics CRM Sales Orders;
                        RunObject=Page 5353;
                        RunPageView=WHERE(StateCode=FILTER(Submitted),
                                          LastBackofficeSubmit=FILTER('')) }
        { 35      ;1   ;Action    ;
                        Name=<Page Sales Invoices>;
                        CaptionML=ENU=Sales Invoices;
                        RunObject=Page 9301;
                        Image=Invoice }
        { 16      ;1   ;Action    ;
                        Name=SalesInvoicesOpen;
                        ShortCutKey=Return;
                        CaptionML=ENU=Open;
                        RunObject=Page 9301;
                        RunPageView=WHERE(Status=FILTER(Open));
                        Image=Edit }
        { 191     ;1   ;Action    ;
                        Name=SalesInvoicesReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 9301;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 190     ;1   ;Action    ;
                        Name=SalesInvoicesApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 9301;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 189     ;1   ;Action    ;
                        Name=SalesInvoicesPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 9301;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 188     ;1   ;Action    ;
                        Name=SalesInvoicesExpired;
                        CaptionML=ENU=Expired;
                        RunObject=Page 9301;
                        RunPageLink=Status=CONST(Expired);
                        Image=PostedOrder }
        { 187     ;1   ;Separator  }
        { 23      ;1   ;Action    ;
                        CaptionML=ENU=Items;
                        RunObject=Page 31;
                        Image=Item }
        { 70      ;1   ;Action    ;
                        Name=<Page Job List>;
                        CaptionML=ENU=Jobs;
                        RunObject=Page 89 }
        { 196     ;1   ;Action    ;
                        Name=JobsOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 89;
                        RunPageLink=Approval Status=CONST(Open);
                        Image=PostedOrder }
        { 195     ;1   ;Action    ;
                        Name=JobsPendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 89;
                        RunPageLink=Approval Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 194     ;1   ;Action    ;
                        Name=JobsReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 89;
                        RunPageLink=Approval Status=CONST(Released);
                        Image=PostedOrder }
        { 193     ;1   ;Action    ;
                        Name=JobsPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 89;
                        RunPageLink=Approval Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 192     ;1   ;Separator  }
        { 25      ;1   ;Action    ;
                        CaptionML=ENU=Contacts;
                        RunObject=Page 5052;
                        Image=CustomerContact }
        { 26      ;1   ;Action    ;
                        CaptionML=ENU=Customers;
                        RunObject=Page 22;
                        Image=Customer }
        { 73      ;1   ;Action    ;
                        CaptionML=ENU=Vendors;
                        RunObject=Page 27 }
        { 74      ;1   ;Action    ;
                        CaptionML=ENU=Internal Notice to Proceed List;
                        RunObject=Page 50040 }
        { 200     ;1   ;Action    ;
                        Name=INTPOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50040;
                        RunPageLink=Approval Status=CONST(Open);
                        Image=PostedOrder }
        { 201     ;1   ;Action    ;
                        Name=INTPReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50040;
                        RunPageLink=Approval Status=CONST(Released);
                        Image=PostedOrder }
        { 199     ;1   ;Action    ;
                        Name=INTPPendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50040;
                        RunPageLink=Approval Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 197     ;1   ;Action    ;
                        Name=INTPCancelled;
                        CaptionML=ENU=Cancelled;
                        RunObject=Page 50040;
                        RunPageLink=Approval Status=CONST(Cancelled);
                        Image=PostedOrder }
        { 198     ;1   ;Separator  }
        { 27      ;1   ;Action    ;
                        CaptionML=ENU=Campaigns;
                        RunObject=Page 5087;
                        Image=Campaign }
        { 209     ;1   ;Action    ;
                        Name=CampaignNewProduct;
                        CaptionML=ENU=New Product;
                        RunObject=Page 5087;
                        RunPageLink=Product Status=CONST(New Product);
                        Image=PostedOrder }
        { 208     ;1   ;Action    ;
                        Name=CampaignExistingProduct;
                        CaptionML=ENU=Existing Product;
                        RunObject=Page 5087;
                        RunPageLink=Product Status=CONST(Existing Product);
                        Image=PostedOrder }
        { 207     ;1   ;Separator  }
        { 28      ;1   ;Action    ;
                        CaptionML=ENU=Segments;
                        RunObject=Page 5093;
                        Image=Segment }
        { 29      ;1   ;Action    ;
                        CaptionML=ENU=To-dos;
                        RunObject=Page 5096;
                        Image=TaskList }
        { 216     ;1   ;Action    ;
                        Name=<Page My To-Dos>;
                        CaptionML=ENU=My To-Dos;
                        RunObject=Page 50605 }
        { 215     ;1   ;Action    ;
                        Name=MyToDoNotStarted;
                        CaptionML=ENU=Not Started;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Not Started);
                        Image=PostedOrder }
        { 214     ;1   ;Action    ;
                        Name=MyToDoInProgress;
                        CaptionML=ENU=In Progress;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(In Progress);
                        Image=PostedOrder }
        { 213     ;1   ;Action    ;
                        Name=MyToDoCompleted;
                        CaptionML=ENU=Completed;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Completed);
                        Image=PostedOrder }
        { 212     ;1   ;Action    ;
                        Name=MyToDoWaiting;
                        CaptionML=ENU=Waiting;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Waiting);
                        Image=PostedOrder }
        { 211     ;1   ;Action    ;
                        Name=MyToDoPostponed;
                        CaptionML=ENU=Postponed;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Postponed);
                        Image=PostedOrder }
        { 210     ;1   ;Separator  }
        { 30      ;1   ;Action    ;
                        CaptionML=ENU=Teams;
                        RunObject=Page 5105;
                        Image=TeamSales }
        { 77      ;1   ;Action    ;
                        CaptionML=ENU=Ticket List;
                        RunObject=Page 50652 }
        { 52      ;1   ;Action    ;
                        CaptionML=ENU=Software Development Requests;
                        RunObject=Page 50657 }
        { 78      ;1   ;Action    ;
                        CaptionML=ENU=Requests to Approve;
                        RunObject=Page 654 }
        { 206     ;1   ;Action    ;
                        Name=ReqsToApproveCreated;
                        CaptionML=ENU=Created;
                        RunObject=Page 654;
                        RunPageLink=Status=CONST(Created);
                        Image=PostedOrder }
        { 205     ;1   ;Action    ;
                        Name=ReqsToApproveOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 654;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 204     ;1   ;Action    ;
                        Name=ReqsToApproveCancelled;
                        CaptionML=ENU=Cancelled;
                        RunObject=Page 654;
                        RunPageLink=Status=CONST(Canceled);
                        Image=PostedOrder }
        { 203     ;1   ;Action    ;
                        Name=ReqsToApproveRejected;
                        CaptionML=ENU=Rejected;
                        RunObject=Page 654;
                        RunPageLink=Status=CONST(Rejected);
                        Image=PostedOrder }
        { 202     ;1   ;Action    ;
                        Name=ReqsToApproveApproved;
                        CaptionML=ENU=Approved;
                        RunObject=Page 654;
                        RunPageLink=Status=CONST(Approved);
                        Image=PostedOrder }
        { 1900000012;0 ;ActionContainer;
                        ActionContainerType=ActivityButtons }
        { 64      ;1   ;ActionGroup;
                        CaptionML=ENU=General Forms;
                        Image=ReferenceData }
        { 63      ;2   ;Action    ;
                        Name=<Page Job Order>;
                        CaptionML=ENU=Job Order;
                        RunObject=Page 50012;
                        Image=PostedShipment }
        { 106     ;2   ;Action    ;
                        Name=JobOrderOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50012;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 105     ;2   ;Action    ;
                        Name=JobOrderPendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50012;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 104     ;2   ;Action    ;
                        Name=JobOrderReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50012;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 103     ;2   ;Action    ;
                        Name=JobOrderCancelled;
                        CaptionML=ENU=Cancelled;
                        RunObject=Page 50012;
                        RunPageLink=Status=CONST(Cancelled);
                        Image=PostedOrder }
        { 102     ;2   ;Action    ;
                        Name=JobOrderPosted;
                        CaptionML=ENU=Posted;
                        RunObject=Page 50012;
                        RunPageLink=Status=CONST(Posted);
                        Image=PostedOrder }
        { 85      ;2   ;Separator  }
        { 62      ;2   ;Action    ;
                        Name=<Page Cash Advance List>;
                        CaptionML=ENU=Cash Advance List;
                        RunObject=Page 50020;
                        Image=PostedOrder }
        { 112     ;2   ;Action    ;
                        Name=CashAdvanceOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50020;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 111     ;2   ;Action    ;
                        Name=CashAdvancePendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50020;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 110     ;2   ;Action    ;
                        Name=CashAdvanceReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50020;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 107     ;2   ;Separator  }
        { 60      ;2   ;Action    ;
                        Name=<Page Request for Purchase List>;
                        CaptionML=ENU=Request for Purchase List;
                        RunObject=Page 50030;
                        Image=PostedReturnReceipt }
        { 119     ;2   ;Action    ;
                        Name=RequestForPurchaseOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50030;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 118     ;2   ;Action    ;
                        Name=RequestForPurchasePendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50030;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 117     ;2   ;Action    ;
                        Name=RequestForPurchaseReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50030;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 114     ;2   ;Action    ;
                        Name=RequestForPurchasePendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 50030;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 120     ;2   ;Separator  }
        { 61      ;2   ;Action    ;
                        Name=<Page Request for Payments>;
                        CaptionML=ENU=Request for Payments;
                        RunObject=Page 50555;
                        Image=PostedOrder }
        { 123     ;2   ;Action    ;
                        Name=RequestForPaymentsOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50555;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 122     ;2   ;Action    ;
                        Name=RequestForPaymentsPendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50555;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 121     ;2   ;Action    ;
                        Name=RequestForPaymentsReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50555;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 116     ;2   ;Action    ;
                        Name=RequestForPaymentsPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 50555;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 115     ;2   ;Separator  }
        { 59      ;2   ;Action    ;
                        Name=<Page Tools & Equipment Req.>;
                        CaptionML=ENU=Tools & Equipment Requisition;
                        RunObject=Page 50569;
                        Image=PostedMemo }
        { 128     ;2   ;Action    ;
                        Name=Tools&EquipmentReqOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50569;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 130     ;2   ;Action    ;
                        Name=Tools&EquipmentReqReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50569;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 127     ;2   ;Action    ;
                        Name=Tools&EquipmentReqApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50569;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 125     ;2   ;Action    ;
                        Name=Tools&EquipmentReqPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 50569;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 124     ;2   ;Separator  }
        { 58      ;2   ;Action    ;
                        Name=<Page Withdrawals>;
                        CaptionML=ENU=Withdrawals;
                        RunObject=Page 50563;
                        Image=PostedMemo }
        { 135     ;2   ;Action    ;
                        Name=WithdrawalsOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50563;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 134     ;2   ;Action    ;
                        Name=WithdrawalsReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50563;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 133     ;2   ;Action    ;
                        Name=WithdrawalsApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50563;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 132     ;2   ;Action    ;
                        Name=WithdrawalsPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 50563;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 126     ;2   ;Separator  }
        { 57      ;2   ;Action    ;
                        Name=<Page Request for Exceptions>;
                        CaptionML=ENU=Request for Exceptions;
                        RunObject=Page 50571 }
        { 141     ;2   ;Action    ;
                        Name=RequestforExceptionOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50571;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 140     ;2   ;Action    ;
                        Name=RequestforExceptionReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50571;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 139     ;2   ;Action    ;
                        Name=RequestforExceptionApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50571;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 138     ;2   ;Action    ;
                        Name=RequestforExceptionPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 50571;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 136     ;2   ;Separator  }
        { 56      ;2   ;Action    ;
                        Name=<Page Work Change Request List>;
                        CaptionML=ENU=Work Change Request List;
                        RunObject=Page 50575;
                        Image=OrderReminder }
        { 147     ;2   ;Action    ;
                        Name=WorkChangeReqOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50575;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 146     ;2   ;Action    ;
                        Name=WorkChangeReqReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50575;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 145     ;2   ;Action    ;
                        Name=WorkChangeReqApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50575;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 144     ;2   ;Action    ;
                        Name=WorkChangeReqPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 50575;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 142     ;2   ;Separator  }
        { 55      ;2   ;Action    ;
                        Name=<Page Purch Return Order List>;
                        CaptionML=ENU=Purchase Return Orders;
                        RunObject=Page 9311 }
        { 153     ;2   ;Action    ;
                        Name=PurchReturnOrderOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 9311;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 152     ;2   ;Action    ;
                        Name=PurchReturnOrderReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 9311;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 151     ;2   ;Action    ;
                        Name=PurchReturnOrderApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 9311;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 150     ;2   ;Action    ;
                        Name=PurchReturnOrderPendingPrepay;
                        CaptionML=ENU=Pending Prepayment;
                        RunObject=Page 9311;
                        RunPageLink=Status=CONST(Pending Prepayment);
                        Image=PostedOrder }
        { 148     ;2   ;Separator  }
        { 54      ;2   ;Action    ;
                        Name=<Page Sales Return Order List>;
                        CaptionML=ENU=Sales Return Orders;
                        RunObject=Page 9304 }
        { 158     ;2   ;Action    ;
                        Name=SalesReturnOrderOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 9304;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 157     ;2   ;Action    ;
                        Name=SalesReturnOrderReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 9304;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 156     ;2   ;Action    ;
                        Name=SalesReturnOrderApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 9304;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 149     ;2   ;Separator  }
        { 53      ;2   ;Action    ;
                        Name=<Page My Documents>;
                        CaptionML=ENU=My Documents;
                        RunObject=Page 50080 }
        { 163     ;2   ;Action    ;
                        Name=MyDocumentsNew;
                        CaptionML=ENU=New;
                        RunObject=Page 50080;
                        RunPageLink=Status=CONST(New);
                        Image=PostedOrder }
        { 162     ;2   ;Action    ;
                        Name=MyDocumentsReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50080;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 160     ;2   ;Action    ;
                        Name=MyDocumentsRejected;
                        CaptionML=ENU=Rejected;
                        RunObject=Page 50080;
                        RunPageLink=Status=CONST(Rejected);
                        Image=PostedOrder }
        { 164     ;2   ;Action    ;
                        Name=MyDocumentsPosted;
                        CaptionML=ENU=Posted;
                        RunObject=Page 50080;
                        RunPageLink=Status=CONST(Posted);
                        Image=PostedOrder }
        { 165     ;2   ;Action    ;
                        Name=MyDocumentsCreated;
                        CaptionML=ENU=Created;
                        RunObject=Page 50080;
                        RunPageLink=Status=CONST(Created);
                        Image=PostedOrder }
        { 159     ;2   ;Action    ;
                        Name=MyDocumentsFailed;
                        CaptionML=ENU=Failed;
                        RunObject=Page 50080;
                        RunPageLink=Status=CONST(Failed);
                        Image=PostedOrder }
        { 161     ;2   ;Action    ;
                        Name=MyDocumentsPendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50080;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 72      ;1   ;ActionGroup;
                        CaptionML=ENU=CRM;
                        Image=AnalysisView }
        { 67      ;2   ;Action    ;
                        Name=<Page Opportunity List>;
                        CaptionML=ENU=Opportunity List;
                        RunObject=Page 5123;
                        Image=PostedOrder }
        { 86      ;2   ;Action    ;
                        Name=OpportunitiesNotStarted;
                        CaptionML=ENU=Not Started;
                        RunObject=Page 5123;
                        RunPageLink=Status=CONST(Not Started);
                        Image=PostedOrder }
        { 87      ;2   ;Action    ;
                        Name=OpportunitiesInProgress;
                        CaptionML=ENU=In Progress;
                        RunObject=Page 5123;
                        RunPageLink=Status=CONST(In Progress);
                        Image=PostedOrder }
        { 88      ;2   ;Action    ;
                        Name=OpportunitiesWon;
                        CaptionML=ENU=Won;
                        RunObject=Page 5123;
                        RunPageLink=Status=CONST(Won);
                        Image=PostedOrder }
        { 89      ;2   ;Action    ;
                        Name=OpportunitiesLost;
                        CaptionML=ENU=Lost;
                        RunObject=Page 5123;
                        RunPageLink=Status=CONST(Lost);
                        Image=PostedOrder }
        { 108     ;2   ;Separator  }
        { 71      ;2   ;Action    ;
                        Name=<Page Campaign List>;
                        CaptionML=ENU=Campaigns;
                        RunObject=Page 5087;
                        Image=PostedShipment }
        { 168     ;2   ;Action    ;
                        Name=CampaignNewProduct2;
                        CaptionML=ENU=New Product;
                        RunObject=Page 5087;
                        RunPageLink=Product Status=CONST(New Product);
                        Image=PostedOrder }
        { 167     ;2   ;Action    ;
                        Name=CampaignExistingProduct2;
                        CaptionML=ENU=Existing Product;
                        RunObject=Page 5087;
                        RunPageLink=Product Status=CONST(Existing Product);
                        Image=PostedOrder }
        { 166     ;2   ;Separator  }
        { 68      ;2   ;Action    ;
                        Name=<Page Request For Quotation List;
                        CaptionML=ENU=Request for Quotation List;
                        RunObject=Page 50015;
                        Image=PostedOrder }
        { 90      ;2   ;Action    ;
                        Name=RequestForQuotationOpen;
                        CaptionML=ENU=Open;
                        RunObject=Page 50015;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 91      ;2   ;Action    ;
                        Name=RequestForQuotationPendApproval;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50015;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 92      ;2   ;Action    ;
                        Name=RequestForQuotationReleased;
                        CaptionML=ENU=Released;
                        RunObject=Page 50015;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 95      ;2   ;Action    ;
                        Name=RequestForQuotationCancelled;
                        CaptionML=ENU=Cancelled;
                        RunObject=Page 50015;
                        RunPageLink=Status=CONST(Cancelled);
                        Image=PostedOrder }
        { 94      ;2   ;Action    ;
                        Name=RequestForQuotationClosed;
                        CaptionML=ENU=Closed;
                        RunObject=Page 50015;
                        RunPageLink=Status=CONST(Closed);
                        Image=PostedOrder }
        { 93      ;2   ;Action    ;
                        Name=RequestForQuotationCompleted;
                        CaptionML=ENU=Completed;
                        RunObject=Page 50015;
                        RunPageLink=Status=CONST(Completed);
                        Image=PostedOrder }
        { 113     ;2   ;Separator  }
        { 66      ;2   ;Action    ;
                        Name=<Page RTPS Document List 2>;
                        CaptionML=ENU=Request for Technical Support List;
                        RunObject=Page 50011;
                        Image=PostedMemo }
        { 101     ;2   ;Action    ;
                        Name=RTPSOpen2;
                        CaptionML=ENU=Open;
                        RunObject=Page 50011;
                        RunPageLink=Status=CONST(Open);
                        Image=PostedOrder }
        { 100     ;2   ;Action    ;
                        Name=RTPSPendApproval2;
                        CaptionML=ENU=Pending Approval;
                        RunObject=Page 50011;
                        RunPageLink=Status=CONST(Pending Approval);
                        Image=PostedOrder }
        { 99      ;2   ;Action    ;
                        Name=RTPSReleased2;
                        CaptionML=ENU=Released;
                        RunObject=Page 50011;
                        RunPageLink=Status=CONST(Released);
                        Image=PostedOrder }
        { 98      ;2   ;Action    ;
                        Name=RTPSCancelled2;
                        CaptionML=ENU=Cancelled;
                        RunObject=Page 50011;
                        RunPageLink=Status=CONST(Cancelled);
                        Image=PostedOrder }
        { 97      ;2   ;Action    ;
                        Name=RTPSClosed2;
                        CaptionML=ENU=Closed;
                        RunObject=Page 50011;
                        RunPageLink=Status=CONST(Closed);
                        Image=PostedOrder }
        { 96      ;2   ;Action    ;
                        Name=RTPSCompleted2;
                        CaptionML=ENU=Completed;
                        RunObject=Page 50011;
                        RunPageLink=Status=CONST(Completed);
                        Image=PostedOrder }
        { 169     ;2   ;Separator  }
        { 65      ;2   ;Action    ;
                        Name=<Page My To-Dos 2>;
                        CaptionML=ENU=My To-Dos;
                        RunObject=Page 50605 }
        { 174     ;2   ;Action    ;
                        Name=MyToDoNotStarted2;
                        CaptionML=ENU=Not Started;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Not Started);
                        Image=PostedOrder }
        { 173     ;2   ;Action    ;
                        Name=MyToDoInProgress2;
                        CaptionML=ENU=In Progress;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(In Progress);
                        Image=PostedOrder }
        { 172     ;2   ;Action    ;
                        Name=MyToDoCompleted2;
                        CaptionML=ENU=Completed;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Completed);
                        Image=PostedOrder }
        { 171     ;2   ;Action    ;
                        Name=MyToDoWaiting2;
                        CaptionML=ENU=Waiting;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Waiting);
                        Image=PostedOrder }
        { 170     ;2   ;Action    ;
                        Name=MyToDoPostponed2;
                        CaptionML=ENU=Postponed;
                        RunObject=Page 50605;
                        RunPageLink=Status=CONST(Postponed);
                        Image=PostedOrder }
        { 175     ;2   ;Separator  }
        { 69      ;2   ;Action    ;
                        Name=<Page Close Opportunity Codes>;
                        CaptionML=ENU=Close Opportunity Codes;
                        RunObject=Page 5133 }
        { 143     ;2   ;Action    ;
                        Name=<Page Sales Admin Activity>;
                        CaptionML=ENU=Sales Admin Activity;
                        RunObject=Page 50904 }
        { 82      ;1   ;ActionGroup;
                        CaptionML=ENU=Posted Documents;
                        Image=FiledPosted }
        { 81      ;2   ;Action    ;
                        CaptionML=ENU=Posted Cash Advances;
                        RunObject=Page 50024 }
        { 80      ;2   ;Action    ;
                        CaptionML=ENU=Posted Withdrawals;
                        RunObject=Page 50565 }
        { 39      ;1   ;ActionGroup;
                        CaptionML=ENU=Administration Sales/Purchase;
                        Image=AdministrationSalesPurchases }
        { 40      ;2   ;Action    ;
                        CaptionML=ENU=Salespeople/Purchasers;
                        RunObject=Page 14 }
        { 32      ;2   ;Action    ;
                        CaptionML=ENU=Cust. Invoice Discounts;
                        RunObject=Page 23 }
        { 33      ;2   ;Action    ;
                        CaptionML=ENU=Vend. Invoice Discounts;
                        RunObject=Page 28 }
        { 34      ;2   ;Action    ;
                        CaptionML=ENU=Item Disc. Groups;
                        RunObject=Page 513 }
        { 1900000004;0 ;ActionContainer;
                        ActionContainerType=ActionItems }
        { 48      ;1   ;Separator ;
                        CaptionML=ENU=Tasks;
                        IsHeader=Yes }
        { 37      ;1   ;Action    ;
                        CaptionML=ENU=Sales Price &Worksheet;
                        RunObject=Page 7023;
                        Image=PriceWorksheet }
        { 2       ;1   ;Separator  }
        { 3       ;1   ;Action    ;
                        CaptionML=ENU=Sales &Prices;
                        RunObject=Page 7002;
                        Image=SalesPrices }
        { 10      ;1   ;Action    ;
                        CaptionML=ENU=Sales Line &Discounts;
                        RunObject=Page 7004;
                        Image=SalesLineDisc }
        { 38      ;1   ;Action    ;
                        CaptionML=ENU=Change Password;
                        RunObject=Page 9809;
                        Image=Task }
      }
    }
    CONTROLS
    {
      { 1900000008;0;Container;
                  ContainerType=RoleCenterArea }

      { 1900724808;1;Group   }

      { 50  ;2   ;Part      ;
                  PagePartID=Page50636;
                  PartType=Page }

      { 76  ;2   ;Part      ;
                  PagePartID=Page50655;
                  PartType=Page }

      { 84  ;2   ;Part      ;
                  PagePartID=Page50661;
                  PartType=Page }

      { 51  ;2   ;Part      ;
                  PagePartID=Page50637;
                  PartType=Page }

      { 131 ;2   ;Part      ;
                  PagePartID=Page50641;
                  PartType=Page }

      { 47  ;2   ;Part      ;
                  PagePartID=Page50633;
                  PartType=Page }

      { 49  ;2   ;Part      ;
                  PagePartID=Page50634;
                  PartType=Page }

      { 46  ;2   ;Part      ;
                  PagePartID=Page50635;
                  PartType=Page }

      { 21  ;2   ;Part      ;
                  PagePartID=Page9175;
                  PartType=Page }

      { 1907692008;2;Part   ;
                  PagePartID=Page9150;
                  PartType=Page }

      { 41  ;2   ;Part      ;
                  PagePartID=Page50608;
                  Editable=FALSE;
                  PartType=Page }

      { 1900724708;1;Group   }

      { 137 ;2   ;Part      ;
                  PagePartID=Page50629;
                  PartType=Page }

      { 129 ;2   ;Part      ;
                  PagePartID=Page50631;
                  PartType=Page }

      { 45  ;2   ;Part      ;
                  PagePartID=Page50630;
                  PartType=Page }

      { 44  ;2   ;Part      ;
                  PagePartID=Page50632;
                  PartType=Page }

      { 43  ;2   ;Part      ;
                  PagePartID=Page50640;
                  PartType=Page }

      { 42  ;2   ;Part      ;
                  PagePartID=Page770;
                  PartType=Page }

      { 11  ;2   ;Part      ;
                  PagePartID=Page760;
                  PartType=Page }

      { 6   ;2   ;Part      ;
                  PagePartID=Page675;
                  Visible=false;
                  PartType=Page }

      { 4   ;2   ;Part      ;
                  PagePartID=Page9151;
                  Visible=false;
                  PartType=Page }

      { 1   ;2   ;Part      ;
                  PagePartID=Page681;
                  PartType=Page }

      { 31  ;2   ;Part      ;
                  PartType=System;
                  SystemPartID=MyNotes }

    }
    CODE
    {

      BEGIN
      END.
    }
  }

  OBJECT Page 50012 Job Order List
  {
    OBJECT-PROPERTIES
    {
      Date=02/19/24;
      Time=[ 4:31:00 PM];
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Editable=No;
      SourceTable=Table50012;
      PageType=List;
      CardPageID=Job Order;
      PromotedActionCategoriesML=ENU=New,Process,Report,Approve,Release,Posting,Prepare,Details,Request Approval,General;
      OnOpenPage=BEGIN
                  IF UserSetupMgt.GetJobOrderFilter <> '' THEN BEGIN
                    FILTERGROUP(2);
                    SETRANGE("Responsibility Center", UserSetupMgt.GetJobOrderFilter);
                    FILTERGROUP(0);
                  END;
                END;

      OnAfterGetCurrRecord=BEGIN
                            SetControlVisibility;
                            CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                            CurrPage.UnresolvedTicket.PAGE.SetTicketRecordReferance(Rec); // PHP Start Ticket Module
                          END;

      ActionList=ACTIONS
      {
        { 26      ;0   ;ActionContainer;
                        ActionContainerType=RelatedInformation }
        { 25      ;1   ;ActionGroup;
                        CaptionML=ENU=Navigate;
                        Image=Invoices }
        { 24      ;2   ;Action    ;
                        CaptionML=ENU=Approvals;
                        Image=Approvals;
                        OnAction=VAR
                                  ApprovalEntries@1001 : Page 658;
                                BEGIN
                                  ApprovalEntries.Setfilters(DATABASE::"Job Order",6,"No.");
                                  ApprovalEntries.RUN;
                                END;
                                  }
        { 14      ;    ;ActionContainer;
                        ActionContainerType=Reports }
        { 15      ;1   ;Action    ;
                        Name=Print;
                        Promoted=Yes;
                        PromotedIsBig=Yes;
                        Image=Report;
                        PromotedCategory=Report;
                        OnAction=VAR
                                  JobOrderForm@1001 : Report 50012;
                                  JobOrderNo@1000 : Text;
                                BEGIN
                                  CurrPage.SETSELECTIONFILTER(JobOrder);
                                  IF JobOrder.FINDFIRST THEN BEGIN
                                    REPEAT
                                      IF JobOrderNo <> '' THEN
                                        JobOrderNo := JobOrderNo + '|';
                                      JobOrderNo := JobOrderNo + FORMAT(JobOrder."No.");
                                    UNTIL JobOrder.NEXT = 0;
                                  END;
                                  JobOrder.SETFILTER("No.", JobOrderNo);
                                  JobOrderForm.SETTABLEVIEW(JobOrder);
                                  JobOrderForm.RUN;

                                  //JobOrder.SETFILTER("No.", Rec."No.");
                                  //JobOrderForm.SETTABLEVIEW(JobOrder);
                                  //JobOrderForm.RUN;
                                END;
                                  }
        { 9       ;0   ;ActionContainer;
                        ActionContainerType=ActionItems }
        { 43      ;1   ;ActionGroup;
                        CaptionML=ENU=Request Approval;
                        Image=SendApprovalRequest }
        { 42      ;2   ;Action    ;
                        Name=SendApprovalRequest;
                        CaptionML=ENU=Send A&pproval Request;
                        Promoted=Yes;
                        Enabled=NOT OpenApprovalEntriesExist;
                        Image=SendApprovalRequest;
                        PromotedCategory=Category9;
                        OnAction=VAR
                                  ApprovalsMgmt@1001 : Codeunit 1535;
                                BEGIN
                                  IF ApprovalsMgmt.CheckJOApprovalsWorkflowEnabled(Rec) THEN
                                    ApprovalsMgmt.OnSendJOForApproval(Rec);
                                END;
                                  }
        { 28      ;2   ;Action    ;
                        Name=CancelApprovalRequest;
                        CaptionML=ENU=Cancel Approval Re&quest;
                        Promoted=Yes;
                        Enabled=OpenApprovalEntriesExist;
                        Image=Cancel;
                        PromotedCategory=Category9;
                        OnAction=VAR
                                  ApprovalsMgmt@1001 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.OnCancelJOApprovalRequest(Rec);
                                END;
                                  }
        { 45      ;1   ;ActionGroup;
                        CaptionML=ENU=Functions }
        { 46      ;2   ;ActionGroup;
                        CaptionML=ENU=Export to Excel;
                        Image=ExportToExcel }
        { 47      ;3   ;Action    ;
                        AccessByPermission=TableData 50012=D;
                        CaptionML=ENU=Export Mobilization Data;
                        ToolTipML=ENU=Export Selected Job Ordert to Excel;
                        Image=Excel;
                        OnAction=VAR
                                  JobOrder@1000 : Record 50012;
                                  CustomExcelManagement@1001 : Codeunit 50004;
                                BEGIN
                                  // PHP Start
                                  JobOrder.COPY(Rec);
                                  CurrPage.SETSELECTIONFILTER(JobOrder);
                                  CustomExcelManagement.ExportJobOrderLineToExcel(JobOrder);
                                  // PHP End
                                END;
                                  }
      }
    }
    CONTROLS
    {
      { 1   ;0   ;Container ;
                  ContainerType=ContentArea }

      { 2   ;1   ;Group     ;
                  Name=Group;
                  GroupType=Repeater }

      { 3   ;2   ;Field     ;
                  Width=15;
                  SourceExpr="No.";
                  Style=Strong;
                  StyleExpr=TRUE }

      { 19  ;2   ;Field     ;
                  SourceExpr="Job Type" }

      { 20  ;2   ;Field     ;
                  SourceExpr="Project Name" }

      { 13  ;2   ;Field     ;
                  SourceExpr="P.O No." }

      { 5   ;2   ;Field     ;
                  SourceExpr="Employee No." }

      { 6   ;2   ;Field     ;
                  SourceExpr="Employee Name" }

      { 7   ;2   ;Field     ;
                  SourceExpr="Department Code" }

      { 21  ;2   ;Field     ;
                  SourceExpr=Department }

      { 8   ;2   ;Field     ;
                  SourceExpr="Date Requested" }

      { 10  ;2   ;Field     ;
                  SourceExpr="Customer No." }

      { 11  ;2   ;Field     ;
                  SourceExpr="Customer Name" }

      { 18  ;2   ;Field     ;
                  SourceExpr=Status }

      { 12  ;2   ;Field     ;
                  SourceExpr="Site Survey" }

      { 22  ;2   ;Field     ;
                  SourceExpr="Site Srvy. SR No." }

      { 23  ;2   ;Field     ;
                  SourceExpr=Permitting }

      { 41  ;2   ;Field     ;
                  SourceExpr="Service Report No." }

      { 29  ;2   ;Field     ;
                  SourceExpr="Installation and Commissioning" }

      { 30  ;2   ;Field     ;
                  SourceExpr="InsComm. SR No." }

      { 31  ;2   ;Field     ;
                  SourceExpr=Testing }

      { 32  ;2   ;Field     ;
                  SourceExpr="Testing SR No." }

      { 33  ;2   ;Field     ;
                  SourceExpr="Preliminary Acceptance" }

      { 34  ;2   ;Field     ;
                  SourceExpr="Pre-Accpt. SR No." }

      { 35  ;2   ;Field     ;
                  SourceExpr="Final Acceptance" }

      { 36  ;2   ;Field     ;
                  SourceExpr="Fnl. Accpt. SR No." }

      { 37  ;2   ;Field     ;
                  SourceExpr=Rectification }

      { 38  ;2   ;Field     ;
                  SourceExpr="Rectification SR No." }

      { 39  ;2   ;Field     ;
                  SourceExpr=Troubleshooting }

      { 40  ;2   ;Field     ;
                  SourceExpr="Trbltng. SR No." }

      { 4   ;0   ;Container ;
                  ContainerType=FactBoxArea }

      { 44  ;1   ;Part      ;
                  Name=UnresolvedTicket;
                  CaptionML=ENU=Unresolved Ticket;
                  PagePartID=Page50654;
                  PartType=Page;
                  ShowFilter=No }

      { 27  ;1   ;Part      ;
                  Name=IncomingDocAttachFactBox;
                  PagePartID=Page193;
                  PartType=Page;
                  ShowFilter=No }

      { 16  ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=Notes }

      { 17  ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=RecordLinks }

    }
    CODE
    {
      VAR
        UserSetup@1000 : Record 91;
        JobOrder@1002 : Record 50012;
        ApprovalEntries@1001 : Page 658;
        UserSetupMgt@1003 : Codeunit 5700;
        OpenApprovalEntriesExistForCurrUser@1006 : Boolean;
        OpenApprovalEntriesExist@1004 : Boolean;

      PROCEDURE FilterINTP@1(VAR INTP_@1000 : Record 50040);
      BEGIN
        FILTERGROUP(2);
        SETRANGE("INTP No.", INTP_."No.");
        FILTERGROUP(0);
      END;

      PROCEDURE OpenJobOrder@2(VAR JobTask@1000 : Record 1001);
      VAR
        JobOrderLine@1001 : Record 50551;
        JobOrder@1002 : Record 50012;
        JobOrder2@1006 : Record 50012;
        JobOrderPage@1003 : Page 50013;
        User@1004 : Record 91;
        JobOrderValue@1005 : Text;
        JobOrderValue2@1010 : Text;
        UserIDCode@1007 : Code[50];
        JobOrderListPage@1009 : Page 50012;
      BEGIN
        IF JobTask."Job Task Type" <> JobTask."Job Task Type"::Posting THEN BEGIN
          EXIT;
        END;
        IF User.GET(USERID) THEN BEGIN
          User.TESTFIELD("Employee No.");
          JobOrder.RESET;
          JobOrder.SETFILTER("Employee No.", User."Employee No.");
          IF JobOrder.FINDSET THEN BEGIN
            REPEAT
              IF JobOrderValue <> '' THEN
                JobOrderValue += '|';
              JobOrderValue += JobOrder."No.";
            UNTIL JobOrder.NEXT = 0;
            JobOrderLine.RESET;
            JobOrderLine.SETFILTER("Job Order No.", JobOrderValue);
            JobOrderLine.SETFILTER("Job No.", JobTask."Job No.");
            JobOrderLine.SETFILTER("Job Task No.", JobTask."Job Task No.");
            IF JobOrderLine.FINDSET THEN BEGIN
              REPEAT
                IF JobOrderValue2 <> '' THEN
                  JobOrderValue2 += '|';
                JobOrderValue2 += JobOrderLine."Job Order No.";
              UNTIL JobOrderLine.NEXT = 0;
              JobOrder.RESET;
              JobOrder.SETFILTER("No.", JobOrderValue2);
              PAGE.RUN(PAGE::"Job Order List",JobOrder);
            END
            ELSE
              MESSAGE('No Job Order.');
          END;
        END;
      END;

      LOCAL PROCEDURE SetControlVisibility@7();
      VAR
        ApprovalsMgmt@1002 : Codeunit 1535;
      BEGIN
        OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
        OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      END;

      BEGIN
      END.
    }
  }

  OBJECT Page 50013 Job Order
  {
    OBJECT-PROPERTIES
    {
      Date=08/16/18;
      Time=10:01:14 AM;
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      SourceTable=Table50012;
      PageType=Document;
      PromotedActionCategoriesML=ENU=New,Process,Report,Approve,Release,Posting,Prepare,Details,Request Approval,General;
      OnOpenPage=BEGIN
                  DocNoVisibility;
                END;

      OnAfterGetRecord=BEGIN
                        SetControlVisibility;

                        CurrPage.ApprovalEntry.PAGE.GetApprovers(Rec);
                        CurrPage.UnresolvedTicket.PAGE.SetTicketRecordReferance(Rec); // PHP Start Ticket Module
                      END;

      OnModifyRecord=BEGIN

                      CurrPage.ApprovalEntry.PAGE.GetApprovers(Rec);
                    END;

      OnAfterGetCurrRecord=BEGIN
                            CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);

                            ApprovalEntry.SETRANGE("Table ID",DATABASE::"Job Order");
                            ApprovalEntry.SETRANGE("Document No.",  "No.");
                            IF ApprovalEntry.FINDFIRST THEN BEGIN
                              ShowCommentFactbox := CurrPage.ApprovalCommentsFactBox.PAGE.SetRecIDFilter(ApprovalEntry."Record ID to Approve");
                            END;

                            CurrPage.ApprovalEntry.PAGE.GetApprovers(Rec);
                          END;

      ActionList=ACTIONS
      {
        { 43      ;0   ;ActionContainer;
                        ActionContainerType=RelatedInformation }
        { 57      ;1   ;ActionGroup;
                        CaptionML=ENU=Documents;
                        Visible=false }
        { 50      ;2   ;Action    ;
                        Name=Documents;
                        CaptionML=ENU=Documents List;
                        PromotedIsBig=Yes;
                        Image=Documents;
                        OnAction=VAR
                                  IncomingDocuments@1000 : Page 190;
                                BEGIN
                                  IncomingDocuments.FilterByJobOrder("No.");
                                  IncomingDocuments.RUN;
                                END;
                                  }
        { 56      ;2   ;Action    ;
                        Name=AttachFile;
                        CaptionML=ENU=Attach File;
                        Image=Attach;
                        OnAction=VAR
                                  IncomingDocument@1001 : Record 130;
                                  IncomingDocumentAttachment@1000 : Record 133;
                                BEGIN
                                  IF IncomingDocumentAttachment.Import THEN BEGIN
                                    IncomingDocument.GET(IncomingDocumentAttachment."Incoming Document Entry No.");
                                    IncomingDocument.VALIDATE("Job Order No.",Rec."No.");
                                    IncomingDocument.MODIFY(TRUE);
                                    PAGE.RUN(PAGE::"Incoming Document",IncomingDocument);
                                  END;
                                END;
                                  }
        { 132     ;    ;ActionContainer;
                        ActionContainerType=ActionItems }
        { 71      ;1   ;ActionGroup;
                        CaptionML=ENU=Function;
                        ActionContainerType=NewDocumentItems }
        { 67      ;2   ;ActionGroup;
                        Name=IncomingDocument;
                        CaptionML=ENU=Incoming Document;
                        ActionContainerType=NewDocumentItems;
                        Image=Documents }
        { 61      ;3   ;Action    ;
                        Name=IncomingDocCard;
                        CaptionML=ENU=View Incoming Document;
                        ToolTipML=;
                        Enabled=HasIncomingDocument;
                        Image=ViewOrder;
                        OnAction=VAR
                                  IncomingDocument@1000 : Record 130;
                                BEGIN
                                  IncomingDocument.ShowCardFromEntryNoUsingMyDocs("Incoming Document Entry No.");
                                END;
                                  }
        { 60      ;3   ;Action    ;
                        Name=SelectIncomingDoc;
                        AccessByPermission=TableData 130=R;
                        CaptionML=ENU=Select Incoming Document;
                        ToolTipML=;
                        Image=SelectLineToApply;
                        OnAction=VAR
                                  IncomingDocument@1000 : Record 130;
                                BEGIN
                                  VALIDATE("Incoming Document Entry No.", IncomingDocument.SelectIncomingDocumentFromMyDocuments("Incoming Document Entry No."));
                                END;
                                  }
        { 58      ;3   ;Action    ;
                        Name=IncomingDocAttachFile;
                        Ellipsis=Yes;
                        CaptionML=ENU=Create Incoming Document from File;
                        ToolTipML=;
                        Enabled=NOT HasIncomingDocument;
                        Image=Attach;
                        OnAction=VAR
                                  IncomingDocumentAttachment@1000 : Record 133;
                                BEGIN
                                  IncomingDocumentAttachment.NewAttachmentFromCustomDocument("Incoming Document Entry No.", DATABASE::"Job Order", "No.");
                                END;
                                  }
        { 49      ;3   ;Action    ;
                        Name=RemoveIncomingDoc;
                        CaptionML=ENU=Remove Incoming Document;
                        ToolTipML=;
                        Enabled=HasIncomingDocument;
                        Image=RemoveLine;
                        OnAction=BEGIN
                                  "Incoming Document Entry No." := 0;
                                END;
                                  }
        { 131     ;1   ;ActionGroup;
                        CaptionML=ENU=Approval }
        { 130     ;2   ;Action    ;
                        Name=Approve;
                        CaptionML=ENU=Approve;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        PromotedIsBig=Yes;
                        Image=Approve;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                                END;
                                  }
        { 129     ;2   ;Action    ;
                        Name=Reject;
                        CaptionML=ENU=Reject;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        PromotedIsBig=Yes;
                        Image=Reject;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                                END;
                                  }
        { 128     ;2   ;Action    ;
                        Name=Delegate;
                        CaptionML=ENU=Delegate;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        Image=Delegate;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                                END;
                                  }
        { 127     ;2   ;Action    ;
                        Name=Comment;
                        CaptionML=ENU=Comments;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        Image=ViewComments;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.GetApprovalComment(Rec);
                                END;
                                  }
        { 126     ;1   ;ActionGroup;
                        CaptionML=ENU=Release;
                        Image=ReleaseDoc }
        { 125     ;2   ;Action    ;
                        Name=Release;
                        ShortCutKey=Ctrl+F9;
                        CaptionML=ENU=Re&lease;
                        Promoted=Yes;
                        Image=ReleaseDoc;
                        PromotedCategory=Process;
                        OnAction=VAR
                                  ReleaseSalesDoc@1000 : Codeunit 414;
                                BEGIN
                                  TestJobOrderField;
                                  ValidateJobOrderLine;
                                  ReleaseMgmt.JOPerformManualRelease(Rec);
                                END;
                                  }
        { 124     ;2   ;Action    ;
                        Name=Reopen;
                        CaptionML=ENU=Re&open;
                        Promoted=Yes;
                        Image=ReOpen;
                        PromotedCategory=Process;
                        OnAction=VAR
                                  ReleaseSalesDoc@1001 : Codeunit 414;
                                BEGIN
                                  ReleaseMgmt.JOPerformManualReOpen(Rec);
                                END;
                                  }
        { 87      ;2   ;Action    ;
                        Name=Cancel;
                        Promoted=Yes;
                        Image=Error;
                        PromotedCategory=Process;
                        OnAction=VAR
                                  ReleaseSalesDoc@1001 : Codeunit 414;
                                BEGIN
                                  ReleaseMgmt.JOCancel(Rec);
                                END;
                                  }
        { 123     ;1   ;ActionGroup;
                        CaptionML=ENU=Request Approval;
                        Image=SendApprovalRequest }
        { 122     ;2   ;Action    ;
                        Name=SendApprovalRequest;
                        CaptionML=ENU=Send A&pproval Request;
                        Promoted=Yes;
                        Enabled=NOT OpenApprovalEntriesExist;
                        Image=SendApprovalRequest;
                        PromotedCategory=Category9;
                        OnAction=VAR
                                  ApprovalsMgmt@1001 : Codeunit 1535;
                                BEGIN
                                  IF ApprovalsMgmt.CheckJOApprovalsWorkflowEnabled(Rec) THEN
                                    ApprovalsMgmt.OnSendJOForApproval(Rec);
                                END;
                                  }
        { 121     ;2   ;Action    ;
                        Name=CancelApprovalRequest;
                        CaptionML=ENU=Cancel Approval Re&quest;
                        Promoted=Yes;
                        Enabled=OpenApprovalEntriesExist;
                        Image=Cancel;
                        PromotedCategory=Category9;
                        OnAction=VAR
                                  ApprovalsMgmt@1001 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.OnCancelJOApprovalRequest(Rec);
                                END;
                                  }
        { 79      ;1   ;ActionGroup;
                        CaptionML=ENU=General;
                        ActionContainerType=NewDocumentItems }
        { 80      ;2   ;Action    ;
                        Name=INTP;
                        RunObject=Page 50041;
                        RunPageLink=No.=FIELD(INTP No.);
                        Promoted=Yes;
                        Enabled=("INTP No." <> '');
                        PromotedIsBig=Yes;
                        Image=Document;
                        PromotedCategory=Category10 }
        { 78      ;2   ;Action    ;
                        Name=RFTS;
                        CaptionML=ENU=RTPS;
                        RunObject=Page 50010;
                        RunPageLink=No.=FIELD(RTPS No.);
                        Promoted=Yes;
                        Enabled=("RTPS No." <> '');
                        PromotedIsBig=Yes;
                        Image=Document;
                        PromotedCategory=Category10 }
        { 14      ;2   ;Action    ;
                        Name=Job;
                        RunObject=Page 88;
                        RunPageLink=No.=FIELD(Job No.);
                        Promoted=Yes;
                        Enabled=("Job No." <> '');
                        PromotedIsBig=Yes;
                        Image=Task;
                        PromotedCategory=Category10 }
        { 47      ;2   ;Action    ;
                        Name=ChangeLogs;
                        CaptionML=ENU=Change Logs;
                        PromotedIsBig=Yes;
                        Image=ChangeLog;
                        OnAction=VAR
                                  ChangeLogPage@1000 : Page 595;
                                  TableIds@1001 : Text;
                                BEGIN
                                  TableIds := FORMAT(DATABASE::"Job Order");
                                  ChangeLogPage.SetPageFilter(TableIds, "No.");
                                  ChangeLogPage.RUN;
                                END;
                                  }
        { 53      ;2   ;Action    ;
                        Name=Approvals;
                        CaptionML=ENU=Approvals;
                        Promoted=Yes;
                        PromotedIsBig=Yes;
                        Image=Approvals;
                        PromotedCategory=Category10;
                        OnAction=VAR
                                  ApprovalEntries@1001 : Page 658;
                                BEGIN
                                  ApprovalEntries.Setfilters(DATABASE::"Job Order",6,"No.");
                                  ApprovalEntries.RUN;
                                END;
                                  }
        { 17      ;0   ;ActionContainer;
                        ActionContainerType=Reports }
        { 85      ;1   ;Action    ;
                        Name=Print;
                        Promoted=Yes;
                        PromotedIsBig=Yes;
                        Image=Report;
                        PromotedCategory=Report;
                        OnAction=VAR
                                  JobOrderForm@1001 : Report 50012;
                                  JobOrderNo@1000 : Text;
                                BEGIN
                                  //CurrPage.SETSELECTIONFILTER(JobOrder);
                                  //IF JobOrder.FINDFIRST THEN BEGIN
                                  //  REPEAT
                                  //    IF JobOrderNo <> '' THEN
                                  //      JobOrderNo := JobOrderNo + '|';
                                  //    JobOrderNo := JobOrderNo + FORMAT(JobOrder."No.");
                                  //  UNTIL JobOrder.NEXT = 0;
                                  //END;
                                  //JobOrder.SETFILTER("No.", JobOrderNo);
                                  //JobOrderForm.SETTABLEVIEW(JobOrder);
                                  //JobOrderForm.RUN;

                                  JobOrder.SETFILTER("No.", Rec."No.");
                                  JobOrderForm.SETTABLEVIEW(JobOrder);
                                  JobOrderForm.RUN;
                                END;
                                  }
      }
    }
    CONTROLS
    {
      { 1   ;0   ;Container ;
                  ContainerType=ContentArea }

      { 2   ;1   ;Group     ;
                  Name=General;
                  CaptionML=ENU=General;
                  GroupType=Group }

      { 48  ;2   ;Field     ;
                  SourceExpr="No.";
                  Style=Strong;
                  StyleExpr=TRUE;
                  OnAssistEdit=BEGIN
                                IF AssistEdit THEN
                                  CurrPage.UPDATE;
                              END;
                                }

      { 83  ;2   ;Field     ;
                  SourceExpr="Document Date";
                  Visible=False }

      { 11  ;2   ;Field     ;
                  SourceExpr="Date Requested";
                  ShowMandatory=True }

      { 91  ;2   ;Field     ;
                  SourceExpr="Job Type" }

      { 52  ;2   ;Field     ;
                  SourceExpr="Request for Exception No." }

      { 51  ;2   ;Field     ;
                  SourceExpr="INTP No.";
                  ShowMandatory=("Job Type" = 0) }

      { 20  ;2   ;Field     ;
                  SourceExpr="Job No.";
                  Visible=FALSE }

      { 117 ;2   ;Field     ;
                  SourceExpr="Project Name";
                  RowSpan=2;
                  ShowMandatory=TRUE }

      { 3   ;2   ;Field     ;
                  SourceExpr="Project Name 2";
                  Importance=Additional;
                  RowSpan=2 }

      { 12  ;2   ;Field     ;
                  SourceExpr="P.O No.";
                  RowSpan=4 }

      { 66  ;2   ;Field     ;
                  SourceExpr="Responsibility Center";
                  Visible=False }

      { 68  ;2   ;Field     ;
                  SourceExpr="Assigned User ID";
                  Visible=False }

      { 69  ;2   ;Field     ;
                  SourceExpr="Approver User ID";
                  Visible=False }

      { 64  ;2   ;Field     ;
                  SourceExpr="Employee No.";
                  RowSpan=4 }

      { 9   ;2   ;Field     ;
                  SourceExpr="Employee Name";
                  Importance=Additional;
                  RowSpan=4 }

      { 10  ;2   ;Field     ;
                  SourceExpr="Department Code";
                  RowSpan=4 }

      { 55  ;2   ;Field     ;
                  SourceExpr=Department;
                  Importance=Additional }

      { 16  ;2   ;Field     ;
                  SourceExpr="Customer No.";
                  ShowMandatory=True }

      { 18  ;2   ;Field     ;
                  SourceExpr="Customer Name";
                  ShowMandatory=True }

      { 31  ;2   ;Field     ;
                  SourceExpr="Ground Manager No." }

      { 41  ;2   ;Field     ;
                  CaptionML=ENU=Ground Manager;
                  SourceExpr=GetGroundManagerName;
                  Importance=Additional;
                  Editable=FALSE }

      { 40  ;2   ;Field     ;
                  SourceExpr="Project Manager No." }

      { 45  ;2   ;Field     ;
                  CaptionML=ENU=Project Manager;
                  SourceExpr=GetProjectManagerName;
                  Importance=Additional;
                  Editable=FALSE }

      { 81  ;2   ;Field     ;
                  SourceExpr=Remarks }

      { 133 ;2   ;Field     ;
                  SourceExpr=Status;
                  Editable=FALSE }

      { 82  ;1   ;Group     ;
                  CaptionML=ENU=Others;
                  GroupType=Group }

      { 38  ;2   ;Field     ;
                  SourceExpr=Meeting }

      { 92  ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 86  ;3   ;Field     ;
                  SourceExpr="Meeting Email/SMS Conf.";
                  Editable=Meeting }

      { 39  ;2   ;Field     ;
                  SourceExpr="Product Presentation" }

      { 5   ;2   ;Group     ;
                  CaptionML=ENU=Supporing Documents;
                  GroupType=Group }

      { 6   ;3   ;Field     ;
                  SourceExpr="Prod. Prstn. Email/SMS Conf.";
                  Editable="Product Presentation" }

      { 112 ;2   ;Field     ;
                  SourceExpr="Trial/POC" }

      { 84  ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 88  ;3   ;Field     ;
                  SourceExpr="APCT Form";
                  Editable="Trial/POC" }

      { 94  ;3   ;Field     ;
                  SourceExpr="RFE Form";
                  Editable="Trial/POC" }

      { 34  ;2   ;Field     ;
                  SourceExpr="On-Site Audit" }

      { 62  ;2   ;Group     ;
                  CaptionML=ENU=No. of Trips;
                  GroupType=Group;
                  Layout=Rows }

      { 35  ;3   ;Field     ;
                  SourceExpr="On-Site Aud. 1st Trip";
                  Editable="On-Site Audit" }

      { 36  ;3   ;Field     ;
                  SourceExpr="On-Site Aud. 2nd Trip";
                  Editable="On-Site Audit" }

      { 37  ;3   ;Field     ;
                  SourceExpr="On-Site Aud. 3rd Trip";
                  Editable="On-Site Audit" }

      { 93  ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 89  ;3   ;Field     ;
                  SourceExpr="Audit Checklist";
                  Editable="On-Site Audit" }

      { 19  ;2   ;Field     ;
                  SourceExpr="Special Project of CEO" }

      { 101 ;1   ;Group     ;
                  CaptionML=ENU=Site Survey;
                  GroupType=Group }

      { 111 ;2   ;Field     ;
                  SourceExpr="Site Survey" }

      { 46  ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 21  ;3   ;Field     ;
                  SourceExpr="Site Srvy. SR Form";
                  Editable="Site Survey" }

      { 100 ;3   ;Field     ;
                  SourceExpr="Site Srvy. SR No.";
                  Editable=("Site Survey" AND "Site Srvy. SR Form") }

      { 99  ;3   ;Field     ;
                  CaptionML=ENU=RTPS No.;
                  SourceExpr="RTPS No.";
                  Editable="Site Survey" }

      { 145 ;1   ;Group     ;
                  CaptionML=ENU=Permitting;
                  GroupType=Group }

      { 15  ;2   ;Field     ;
                  SourceExpr=Permitting }

      { 96  ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 95  ;3   ;Field     ;
                  SourceExpr="Prmtg. AFI";
                  Editable="Permitting";
                  Style=Strong;
                  StyleExpr=TRUE }

      { 97  ;3   ;Field     ;
                  SourceExpr="Prmtg. As Plan";
                  Editable="Permitting" }

      { 98  ;3   ;Field     ;
                  SourceExpr="Prmtg. TSSR";
                  Editable="Permitting" }

      { 4   ;3   ;Field     ;
                  SourceExpr="Prmtg. Timeline of ROW";
                  Editable=Permitting }

      { 8   ;2   ;Field     ;
                  SourceExpr="Service Report No.";
                  Style=Strong;
                  StyleExpr=TRUE;
                  ShowMandatory=("Job Type" = 0) }

      { 146 ;1   ;Group     ;
                  CaptionML=ENU=Installation and Commissioning;
                  GroupType=Group }

      { 25  ;2   ;Field     ;
                  SourceExpr="Installation and Commissioning";
                  Style=Ambiguous;
                  StyleExpr=TRUE }

      { 42  ;2   ;Group     ;
                  CaptionML=ENU=No. of Trips;
                  GroupType=Group;
                  Layout=Rows }

      { 26  ;3   ;Field     ;
                  SourceExpr="InsComm. 1st Trip";
                  Editable="Installation and Commissioning" }

      { 27  ;3   ;Field     ;
                  SourceExpr="InsComm. 2nd Trip";
                  Editable="Installation and Commissioning" }

      { 28  ;3   ;Field     ;
                  SourceExpr="InsComm. 3rd Trip";
                  Editable="Installation and Commissioning" }

      { 106 ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 107 ;3   ;Field     ;
                  SourceExpr="InsComm. RFE Form";
                  Editable="Installation and Commissioning" }

      { 108 ;3   ;Field     ;
                  SourceExpr="InsComm. SR Form";
                  Editable="Installation and Commissioning" }

      { 109 ;3   ;Field     ;
                  SourceExpr="InsComm. SR No.";
                  Editable="Installation and Commissioning" AND "InsComm. SR Form" }

      { 115 ;3   ;Field     ;
                  SourceExpr="InsComm. AFI";
                  Editable="Installation and Commissioning" }

      { 7   ;3   ;Field     ;
                  SourceExpr="InsComm. Line of Sight";
                  Editable="InsComm. AFI" }

      { 13  ;3   ;Field     ;
                  SourceExpr="InsComm. Non-Line of Sight";
                  Editable="InsComm. AFI" }

      { 144 ;2   ;Field     ;
                  SourceExpr="InsComm. Permitting";
                  Editable="Installation and Commissioning" AND "InsComm. AFI" }

      { 143 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. LGU Permit";
                  Editable="InsComm. Permitting" }

      { 142 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. Brgy. Permit";
                  Editable="InsComm. Permitting" }

      { 141 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. Bldg. Permit";
                  Editable="InsComm. Permitting" }

      { 140 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. DPWH";
                  Editable="InsComm. Permitting" }

      { 139 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. MMDA";
                  Editable="InsComm. Permitting" }

      { 138 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. Traffic";
                  Editable="InsComm. Permitting" }

      { 137 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. HOA";
                  Editable="InsComm. Permitting" }

      { 136 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. ALO";
                  Editable="InsComm. Permitting" }

      { 135 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. ALP";
                  Editable="InsComm. Permitting" }

      { 134 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. FIO";
                  Editable="InsComm. Permitting" }

      { 120 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. RAAWA";
                  Editable="InsComm. Permitting" }

      { 119 ;2   ;Field     ;
                  SourceExpr="InsComm. Prmt. SO";
                  Editable="InsComm. Permitting" }

      { 116 ;2   ;Field     ;
                  SourceExpr="InsComm. As Plan";
                  Editable="Installation and Commissioning" }

      { 114 ;2   ;Field     ;
                  SourceExpr="InsComm. TSSR";
                  Editable="Installation and Commissioning" }

      { 118 ;2   ;Field     ;
                  SourceExpr="InsComm. Others";
                  Editable="Installation and Commissioning" }

      { 148 ;1   ;Group     ;
                  CaptionML=ENU=Testing;
                  GroupType=Group }

      { 152 ;2   ;Field     ;
                  SourceExpr=Testing }

      { 153 ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 150 ;3   ;Field     ;
                  SourceExpr="Testing SR Form";
                  Editable="Testing" }

      { 151 ;3   ;Field     ;
                  SourceExpr="Testing SR No.";
                  Editable="Testing SR Form" }

      { 149 ;3   ;Field     ;
                  SourceExpr="Testing Test Procedures";
                  Editable="Testing" }

      { 154 ;1   ;Group     ;
                  CaptionML=ENU=Preliminary Acceptance;
                  GroupType=Group }

      { 155 ;2   ;Field     ;
                  SourceExpr="Preliminary Acceptance" }

      { 156 ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 157 ;3   ;Field     ;
                  SourceExpr="Pre-Accpt. SR Form";
                  Editable="Preliminary Acceptance" }

      { 158 ;3   ;Field     ;
                  SourceExpr="Pre-Accpt. SR No.";
                  Editable="Pre-Accpt. SR Form" }

      { 159 ;3   ;Field     ;
                  SourceExpr="Pre-Accpt. Sched. by Customer";
                  Editable="Preliminary Acceptance" }

      { 166 ;1   ;Group     ;
                  CaptionML=ENU=Final Acceptance;
                  GroupType=Group }

      { 24  ;2   ;Field     ;
                  SourceExpr="Final Acceptance" }

      { 160 ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 161 ;3   ;Field     ;
                  SourceExpr="Fnl. Accpt. SR Form";
                  Editable="Final Acceptance" }

      { 162 ;3   ;Field     ;
                  SourceExpr="Fnl. Accpt. SR No.";
                  Editable="Fnl. Accpt. SR Form" }

      { 163 ;3   ;Field     ;
                  SourceExpr="Fnl. Accpt. Schd. by Cust.";
                  Editable="Final Acceptance" }

      { 164 ;3   ;Field     ;
                  SourceExpr="Fnl. Accpt. Punchlist Report";
                  Editable="Final Acceptance" }

      { 165 ;3   ;Field     ;
                  SourceExpr="Fnl. Accpt. PAC";
                  Editable="Final Acceptance" }

      { 147 ;1   ;Group     ;
                  CaptionML=ENU=Rectification;
                  GroupType=Group }

      { 23  ;2   ;Field     ;
                  SourceExpr=Rectification }

      { 102 ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 104 ;3   ;Field     ;
                  SourceExpr="Rectification SR Form";
                  Editable=Rectification }

      { 105 ;3   ;Field     ;
                  SourceExpr="Rectification SR No.";
                  Editable=Rectification AND "Rectification SR Form" }

      { 103 ;3   ;Field     ;
                  SourceExpr="Rectification Punchlist Report";
                  Editable=Rectification }

      { 167 ;1   ;Group     ;
                  CaptionML=ENU=Troubleshooting;
                  GroupType=Group }

      { 29  ;2   ;Field     ;
                  SourceExpr=Troubleshooting }

      { 30  ;2   ;Field     ;
                  SourceExpr="Trbltng. Under Warranty";
                  Editable=Troubleshooting }

      { 170 ;2   ;Field     ;
                  SourceExpr="Trbltng. DR Date";
                  Editable="Trbltng. Under Warranty" }

      { 171 ;2   ;Field     ;
                  SourceExpr="Trbltng. Date of Acceptance";
                  Editable="Trbltng. Under Warranty" }

      { 172 ;2   ;Field     ;
                  SourceExpr="Trbltng. Out of Warranty";
                  Editable=Troubleshooting }

      { 63  ;2   ;Group     ;
                  CaptionML=ENU=No. of Trips;
                  GroupType=Group;
                  Layout=Rows }

      { 32  ;3   ;Field     ;
                  SourceExpr="Out of Wrrnty. 1st Trip";
                  Editable="Trbltng. Out of Warranty" }

      { 33  ;3   ;Field     ;
                  SourceExpr="Out of Wrrnty. 2nd Trip";
                  Editable="Trbltng. Out of Warranty" }

      { 73  ;2   ;Group     ;
                  CaptionML=ENU=Supporting Documents;
                  GroupType=Group }

      { 77  ;3   ;Field     ;
                  SourceExpr="Trbltng. NCCF No.";
                  Editable=Troubleshooting }

      { 168 ;3   ;Field     ;
                  SourceExpr="Trbltng. SR Form";
                  Editable=Troubleshooting }

      { 169 ;3   ;Field     ;
                  SourceExpr="Trbltng. SR No.";
                  Editable="Trbltng. SR Form" }

      { 90  ;1   ;Part      ;
                  Name=Vehicle Request;
                  CaptionML=ENU=Vehicle Request;
                  SubPageView=SORTING(Line No.,Line Type,Job Order No.);
                  SubPageLink=Job Order No.=FIELD(No.),
                              Line Type=CONST(Car Request);
                  PagePartID=Page50070;
                  PartType=Page;
                  UpdatePropagation=Both }

      { 110 ;1   ;Part      ;
                  Name=Public Transportation Request;
                  CaptionML=ENU=Public Transportation Request;
                  SubPageLink=Job Order No.=FIELD(No.);
                  PagePartID=Page50071;
                  PartType=Page }

      { 44  ;1   ;Part      ;
                  Name=JO Airplane Ticket;
                  CaptionML=ENU=Airplane Ticket Request;
                  SubPageLink=Job Order No.=FIELD(No.);
                  PagePartID=Page50072;
                  PartType=Page }

      { 22  ;1   ;Part      ;
                  Name=ApprovalEntry;
                  CaptionML=ENU=Approver;
                  SubPageView=SORTING(Entry No.)
                              ORDER(Descending);
                  SubPageLink=Document No.=FIELD(No.),
                              Table ID=CONST(50012);
                  PagePartID=Page50088;
                  Editable=False;
                  PartType=Page;
                  ShowFilter=No }

      { 76  ;    ;Container ;
                  ContainerType=FactBoxArea }

      { 54  ;1   ;Part      ;
                  Name=UnresolvedTicket;
                  CaptionML=ENU=Unresolved Ticket;
                  PagePartID=Page50654;
                  PartType=Page;
                  ShowFilter=No }

      { 70  ;1   ;Part      ;
                  Name=ApprovalCommentsFactBox;
                  PagePartID=Page9104;
                  Visible=ShowCommentFactbox;
                  PartType=Page }

      { 75  ;1   ;Part      ;
                  Name=IncomingDocAttachFactBox;
                  PagePartID=Page193;
                  PartType=Page;
                  ShowFilter=No }

      { 74  ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=Notes }

      { 72  ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=RecordLinks }

    }
    CODE
    {
      VAR
        CustomSetup@1005 : Record 50001;
        OpenApprovalEntriesExistForCurrUser@1002 : Boolean;
        OpenApprovalEntriesExist@1001 : Boolean;
        DocNoVisible@1004 : Boolean;
        ReleaseMgmt@1000 : Codeunit 50551;
        ApprovalEntries@1003 : Page 658;
        HasIncomingDocument@1006 : Boolean;
        INTP@1007 : Record 50040;
        Job@1008 : Record 167;
        ShowCommentFactbox@1011 : Boolean;
        ApprovalEntry@1010 : Record 454;
        ApprovalCommentLine@1009 : Record 455;
        JobOrder@1012 : Record 50012;

      LOCAL PROCEDURE SetControlVisibility@7();
      VAR
        ApprovalsMgmt@1002 : Codeunit 1535;
      BEGIN
        HasIncomingDocument := "Incoming Document Entry No." <> 0;
        OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
        OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      END;

      LOCAL PROCEDURE DocNoVisibility@1();
      VAR
        NoSeries@1000 : Record 308;
      BEGIN
        CustomSetup.GET;
        IF CustomSetup."Job Order Nos." <> '' THEN BEGIN
          IF NoSeries.GET(CustomSetup."Job Order Nos.") AND (NoSeries."Manual Nos." = FALSE) THEN BEGIN
            DocNoVisible := FALSE;
          END ELSE BEGIN
            DocNoVisible := TRUE;
          END;
        END;
      END;

      PROCEDURE OpenJobOrder@2(VAR JobTask@1000 : Record 1001;VAR LineType@1008 : Option);
      VAR
        JobOrderLine@1001 : Record 50551;
        JobOrder@1002 : Record 50012;
        JobOrder2@1006 : Record 50012;
        JobOrderPage@1003 : Page 50013;
        User@1004 : Record 91;
        JobOrderValue@1005 : Text;
        UserIDCode@1007 : Code[50];
      BEGIN
        IF JobTask."Job Task Type" <> JobTask."Job Task Type"::Posting THEN BEGIN
          EXIT;
        END;
        IF User.GET(USERID) THEN BEGIN
          User.TESTFIELD("Employee No.");
          //IF STRLEN(User."Employee No.") > 0 THEN BEGIN

            JobOrder.RESET;
            JobOrder.SETFILTER("Employee No.", User."Employee No.");
            IF JobOrder.FINDSET THEN BEGIN
              REPEAT
                IF JobOrderValue <> '' THEN
                  JobOrderValue += '|';
                JobOrderValue += JobOrder."No.";
              UNTIL JobOrder.NEXT = 0;
              JobOrderLine.RESET;
              JobOrderLine.SETFILTER("Line Type", '%1', LineType);
              JobOrderLine.SETFILTER("Job Order No.", JobOrderValue);
              JobOrderLine.SETFILTER("Job No.", JobTask."Job No.");
              JobOrderLine.SETFILTER("Job Task No.", JobTask."Job Task No.");
              IF JobOrderLine.FINDFIRST THEN BEGIN
                //REPEAT

                //UNTIL JobOrderLine.NEXT = 0;
                JobOrder2.RESET;
                JobOrder2.SETFILTER("No.", JobOrderLine."Job Order No.");
                IF JobOrder2.FINDFIRST THEN BEGIN
                  JobOrderPage.SETRECORD(JobOrder2);
                  JobOrderPage.RUN;
                END;
              END
              ELSE
                MESSAGE('No Job Order.');
            END;
          END;
        //END;
      END;

      BEGIN
      END.
    }
  }

  OBJECT Page 50086 Job Orders
  {
    OBJECT-PROPERTIES
    {
      Date=09/12/18;
      Time=[ 7:22:05 PM];
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Editable=No;
      InsertAllowed=No;
      DeleteAllowed=No;
      ModifyAllowed=No;
      SourceTable=Table50012;
      PageType=List;
      CardPageID=Job Order Document;
      OnAfterGetCurrRecord=BEGIN
                            CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                          END;

      ActionList=ACTIONS
      {
        { 26      ;0   ;ActionContainer;
                        ActionContainerType=RelatedInformation }
        { 25      ;1   ;ActionGroup;
                        CaptionML=ENU=Navigate;
                        Image=Invoices }
        { 24      ;2   ;Action    ;
                        CaptionML=ENU=Approvals;
                        Image=Approvals;
                        OnAction=VAR
                                  ApprovalEntries@1001 : Page 658;
                                BEGIN
                                  ApprovalEntries.Setfilters(DATABASE::"Job Order",6,"No.");
                                  ApprovalEntries.RUN;
                                END;
                                  }
        { 14      ;    ;ActionContainer;
                        ActionContainerType=Reports }
        { 12      ;1   ;Action    ;
                        Name=Print;
                        Promoted=Yes;
                        PromotedIsBig=Yes;
                        Image=Report;
                        PromotedCategory=Report;
                        OnAction=BEGIN
                                  //ReleaseMgmt.RFTSPerformManualRelease(Rec);
                                  //REPORT.RUNMODAL(50012,GUIALLOWED,FALSE,Rec)
                                  PrintDocument;
                                  //SalesHeader.SETFILTER(SalesHeader."No.","No.");
                                  //SalesLine.SETRANGE("Document Type", SalesLine."Document Type"::Invoice);
                                  //SalesLine.SETFILTER("Document No.",Rec."No.");
                                  //IF SalesLine.COUNT > 12 THEN
                                    //ERROR(SIReportError);

                                  //REPORT.RUN(50113,TRUE,TRUE,SalesHeader); //50113 - Sales Invoice (Goods) BIR
                                END;
                                  }
      }
    }
    CONTROLS
    {
      { 1   ;0   ;Container ;
                  ContainerType=ContentArea }

      { 2   ;1   ;Group     ;
                  Name=Group;
                  GroupType=Repeater }

      { 3   ;2   ;Field     ;
                  Width=15;
                  SourceExpr="No.";
                  Style=Strong;
                  StyleExpr=TRUE }

      { 19  ;2   ;Field     ;
                  SourceExpr="Job Type" }

      { 20  ;2   ;Field     ;
                  SourceExpr="Project Name" }

      { 13  ;2   ;Field     ;
                  SourceExpr="P.O No." }

      { 5   ;2   ;Field     ;
                  SourceExpr="Employee No." }

      { 6   ;2   ;Field     ;
                  SourceExpr="Employee Name" }

      { 7   ;2   ;Field     ;
                  SourceExpr="Department Code" }

      { 21  ;2   ;Field     ;
                  SourceExpr=Department }

      { 8   ;2   ;Field     ;
                  SourceExpr="Date Requested" }

      { 10  ;2   ;Field     ;
                  SourceExpr="Customer No." }

      { 11  ;2   ;Field     ;
                  SourceExpr="Customer Name" }

      { 18  ;2   ;Field     ;
                  SourceExpr=Status }

      { 4   ;0   ;Container ;
                  ContainerType=FactBoxArea }

      { 27  ;1   ;Part      ;
                  Name=IncomingDocAttachFactBox;
                  PagePartID=Page193;
                  PartType=Page;
                  ShowFilter=No }

      { 16  ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=Notes }

      { 17  ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=RecordLinks }

    }
    CODE
    {
      VAR
        UserSetup@1000 : Record 91;
        ApprovalEntries@1001 : Page 658;

      BEGIN
      END.
    }
  }

  OBJECT Page 50087 Job Order Document
  {
    OBJECT-PROPERTIES
    {
      Date=08/03/18;
      Time=[ 6:37:35 PM];
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Editable=No;
      InsertAllowed=No;
      DeleteAllowed=No;
      ModifyAllowed=No;
      SourceTable=Table50012;
      PageType=Document;
      PromotedActionCategoriesML=ENU=New,Process,Report,Approve,Release,Posting,Prepare,Details,Request Approval,General;
      OnOpenPage=BEGIN
                  DocNoVisibility;
                END;

      OnAfterGetRecord=BEGIN
                        SetControlVisibility;
                      END;

      OnAfterGetCurrRecord=BEGIN
                            CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                          END;

      ActionList=ACTIONS
      {
        { 95      ;0   ;ActionContainer;
                        ActionContainerType=RelatedInformation }
        { 94      ;1   ;Action    ;
                        Name=ChangeLogs;
                        CaptionML=ENU=Change Logs;
                        PromotedIsBig=Yes;
                        Image=ChangeLog;
                        OnAction=VAR
                                  ChangeLogPage@1000 : Page 595;
                                  TableIds@1001 : Text;
                                BEGIN
                                  TableIds := FORMAT(DATABASE::"Job Order");
                                  ChangeLogPage.SetPageFilter(TableIds, "No.");
                                  ChangeLogPage.RUN;
                                END;
                                  }
        { 93      ;1   ;Action    ;
                        Name=Approvals;
                        CaptionML=ENU=Approvals;
                        Image=Approvals;
                        OnAction=VAR
                                  ApprovalEntries@1001 : Page 658;
                                BEGIN
                                  ApprovalEntries.Setfilters(DATABASE::"Job Order",6,"No.");
                                  ApprovalEntries.RUN;
                                END;
                                  }
        { 87      ;1   ;ActionGroup;
                        CaptionML=ENU=General;
                        ActionContainerType=NewDocumentItems }
        { 86      ;2   ;Action    ;
                        Name=INTP;
                        RunObject=Page 50041;
                        RunPageLink=No.=FIELD(INTP No.);
                        Promoted=Yes;
                        Enabled=("INTP No." <> '');
                        PromotedIsBig=Yes;
                        Image=Document;
                        PromotedCategory=Category10 }
        { 85      ;2   ;Action    ;
                        Name=RFTS;
                        CaptionML=ENU=RTPS;
                        RunObject=Page 50010;
                        RunPageLink=No.=FIELD(RTPS No.);
                        Promoted=Yes;
                        Enabled=("RTPS No." <> '');
                        PromotedIsBig=Yes;
                        Image=Document;
                        PromotedCategory=Category10 }
        { 84      ;2   ;Action    ;
                        Name=Job;
                        RunObject=Page 88;
                        RunPageLink=No.=FIELD(Job No.);
                        Promoted=Yes;
                        Enabled=("Job No." <> '');
                        PromotedIsBig=Yes;
                        Image=Task;
                        PromotedCategory=Category10 }
        { 83      ;    ;ActionContainer;
                        ActionContainerType=ActionItems }
        { 82      ;1   ;ActionGroup;
                        ActionContainerType=NewDocumentItems }
        { 81      ;2   ;ActionGroup;
                        Name=IncomingDocument;
                        CaptionML=ENU=Incoming Document;
                        ActionContainerType=NewDocumentItems;
                        Image=Documents }
        { 80      ;3   ;Action    ;
                        Name=IncomingDocCard;
                        CaptionML=ENU=View Incoming Document;
                        ToolTipML=;
                        Enabled=HasIncomingDocument;
                        Image=ViewOrder;
                        OnAction=VAR
                                  IncomingDocument@1000 : Record 130;
                                BEGIN
                                  IncomingDocument.ShowCardFromEntryNoUsingMyDocs("Incoming Document Entry No.");
                                END;
                                  }
        { 79      ;3   ;Action    ;
                        Name=SelectIncomingDoc;
                        AccessByPermission=TableData 130=R;
                        CaptionML=ENU=Select Incoming Document;
                        ToolTipML=;
                        Image=SelectLineToApply;
                        OnAction=VAR
                                  IncomingDocument@1000 : Record 130;
                                BEGIN
                                  VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocumentFromMyDocuments("Incoming Document Entry No."));
                                END;
                                  }
        { 78      ;3   ;Action    ;
                        Name=IncomingDocAttachFile;
                        Ellipsis=Yes;
                        CaptionML=ENU=Create Incoming Document from File;
                        ToolTipML=;
                        Enabled=NOT HasIncomingDocument;
                        Image=Attach;
                        OnAction=VAR
                                  IncomingDocumentAttachment@1000 : Record 133;
                                BEGIN
                                  IncomingDocumentAttachment.NewAttachmentFromCustomDocument("Incoming Document Entry No.", DATABASE::"Job Order", "No.");
                                END;
                                  }
        { 71      ;3   ;Action    ;
                        Name=RemoveIncomingDoc;
                        CaptionML=ENU=Remove Incoming Document;
                        ToolTipML=;
                        Enabled=HasIncomingDocument;
                        Image=RemoveLine;
                        OnAction=BEGIN
                                  "Incoming Document Entry No." := 0;
                                END;
                                  }
        { 70      ;1   ;ActionGroup;
                        CaptionML=ENU=Approval }
        { 67      ;2   ;Action    ;
                        Name=Approve;
                        CaptionML=ENU=Approve;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        PromotedIsBig=Yes;
                        Image=Approve;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                                END;
                                  }
        { 61      ;2   ;Action    ;
                        Name=Reject;
                        CaptionML=ENU=Reject;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        PromotedIsBig=Yes;
                        Image=Reject;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                                END;
                                  }
        { 60      ;2   ;Action    ;
                        Name=Delegate;
                        CaptionML=ENU=Delegate;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        Image=Delegate;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                                END;
                                  }
        { 58      ;2   ;Action    ;
                        Name=Comment;
                        CaptionML=ENU=Comments;
                        Promoted=Yes;
                        Visible=OpenApprovalEntriesExistForCurrUser;
                        Image=ViewComments;
                        PromotedCategory=Category4;
                        OnAction=VAR
                                  ApprovalsMgmt@1000 : Codeunit 1535;
                                BEGIN
                                  ApprovalsMgmt.GetApprovalComment(Rec);
                                END;
                                  }
        { 14      ;0   ;ActionContainer;
                        ActionContainerType=Reports }
        { 17      ;1   ;Action    ;
                        Name=Print;
                        Promoted=Yes;
                        PromotedIsBig=Yes;
                        Image=Report;
                        PromotedCategory=Report;
                        OnAction=BEGIN
                                  PrintDocument;
                                END;
                                  }
      }
    }
    CONTROLS
    {
      { 90  ;0   ;Container ;
                  ContainerType=ContentArea }

      { 89  ;1   ;Group     ;
                  Name=General;
                  CaptionML=ENU=General Information;
                  GroupType=Group }

      { 88  ;2   ;Field     ;
                  SourceExpr="No.";
                  Visible=DocNoVisible;
                  Style=Strong;
                  StyleExpr=TRUE;
                  OnAssistEdit=BEGIN
                                IF AssistEdit THEN
                                  CurrPage.UPDATE;
                              END;
                                }

      { 77  ;2   ;Field     ;
                  SourceExpr="Job Type" }

      { 76  ;2   ;Field     ;
                  SourceExpr="INTP No." }

      { 75  ;2   ;Field     ;
                  SourceExpr="Job No." }

      { 74  ;2   ;Field     ;
                  SourceExpr="RTPS No." }

      { 73  ;2   ;Group     ;
                  GroupType=GridLayout }

      { 72  ;3   ;Group     ;
                  GroupType=Group }

      { 69  ;4   ;Field     ;
                  SourceExpr="Project Name";
                  MultiLine=Yes;
                  RowSpan=2;
                  ShowMandatory=True }

      { 68  ;2   ;Group     ;
                  Visible=False;
                  GroupType=GridLayout }

      { 66  ;3   ;Group     ;
                  GroupType=Group }

      { 65  ;4   ;Field     ;
                  SourceExpr="Project Name 2";
                  Importance=Additional;
                  MultiLine=Yes;
                  RowSpan=2 }

      { 64  ;2   ;Field     ;
                  SourceExpr="P.O No.";
                  RowSpan=4 }

      { 63  ;2   ;Field     ;
                  SourceExpr="Service Report No.";
                  Style=Strong;
                  StyleExpr=TRUE }

      { 62  ;2   ;Field     ;
                  SourceExpr="Responsibility Center";
                  Visible=False }

      { 59  ;2   ;Field     ;
                  SourceExpr="Assigned User ID";
                  Visible=False }

      { 57  ;2   ;Field     ;
                  SourceExpr="Approver User ID";
                  Visible=False }

      { 56  ;2   ;Field     ;
                  SourceExpr="Employee No.";
                  RowSpan=4 }

      { 55  ;2   ;Field     ;
                  SourceExpr="Employee Name";
                  RowSpan=4 }

      { 54  ;2   ;Field     ;
                  SourceExpr="Department Code";
                  RowSpan=4 }

      { 53  ;2   ;Field     ;
                  SourceExpr=Department }

      { 52  ;2   ;Field     ;
                  SourceExpr="Date Requested";
                  RowSpan=4 }

      { 51  ;2   ;Field     ;
                  SourceExpr="Customer No.";
                  Importance=Additional }

      { 50  ;2   ;Field     ;
                  SourceExpr="Customer Name";
                  Importance=Additional }

      { 49  ;2   ;Group     ;
                  GroupType=GridLayout }

      { 48  ;3   ;Group     ;
                  GroupType=Group }

      { 47  ;4   ;Field     ;
                  CaptionML=ENU=Remarks;
                  SourceExpr=Remarks;
                  MultiLine=Yes;
                  RowSpan=2 }

      { 46  ;2   ;Field     ;
                  SourceExpr="Other Activities";
                  RowSpan=3 }

      { 45  ;2   ;Field     ;
                  SourceExpr="Sales Related";
                  RowSpan=3;
                  ShowCaption=Yes }

      { 44  ;2   ;Group     ;
                  CaptionML=ENU=Type Of Service;
                  GroupType=Group;
                  Layout=Rows }

      { 43  ;3   ;Field     ;
                  SourceExpr="Ordinary P.O." }

      { 42  ;3   ;Field     ;
                  SourceExpr=TurnKey }

      { 41  ;2   ;Group     ;
                  CaptionML=ENU=Site Survey;
                  GroupType=Group;
                  Layout=Rows }

      { 40  ;3   ;Field     ;
                  SourceExpr="Site Survey" }

      { 39  ;3   ;Field     ;
                  SourceExpr="Trial/POC" }

      { 38  ;3   ;Field     ;
                  SourceExpr=OSP }

      { 37  ;3   ;Field     ;
                  SourceExpr=Rectification }

      { 36  ;3   ;Field     ;
                  SourceExpr="Final Acceptance" }

      { 35  ;2   ;Group     ;
                  CaptionML=ENU=Installation and Commissioning;
                  GroupType=Group;
                  Layout=Rows }

      { 34  ;3   ;Field     ;
                  SourceExpr="Installation and Commissioning";
                  Style=Ambiguous;
                  StyleExpr=TRUE }

      { 33  ;3   ;Field     ;
                  SourceExpr="InsComm. 1st Trip" }

      { 32  ;3   ;Field     ;
                  SourceExpr="InsComm. 2nd Trip" }

      { 31  ;3   ;Field     ;
                  SourceExpr="InsComm. 3rd Trip" }

      { 29  ;2   ;Group     ;
                  CaptionML=ENU=Project Purpose;
                  GroupType=Group;
                  Layout=Rows }

      { 30  ;3   ;Field     ;
                  SourceExpr=Troubleshooting }

      { 28  ;3   ;Field     ;
                  SourceExpr="Trbltng. Under Warranty" }

      { 27  ;3   ;Field     ;
                  SourceExpr="Trbltng. Out of Warranty" }

      { 26  ;3   ;Field     ;
                  CaptionML=ENU=1st Trip;
                  SourceExpr="Out of Wrrnty. 1st Trip" }

      { 25  ;3   ;Field     ;
                  CaptionML=ENU=2nd Trip;
                  SourceExpr="Out of Wrrnty. 2nd Trip" }

      { 24  ;2   ;Group     ;
                  CaptionML=ENU=Quality Audit;
                  GroupType=Group;
                  Layout=Rows }

      { 23  ;3   ;Field     ;
                  SourceExpr="On-Site Audit" }

      { 22  ;3   ;Field     ;
                  CaptionML=ENU=1st Trip;
                  SourceExpr="On-Site Aud. 1st Trip" }

      { 21  ;3   ;Field     ;
                  CaptionML=ENU=2nd Trip;
                  SourceExpr="On-Site Aud. 2nd Trip" }

      { 20  ;3   ;Field     ;
                  CaptionML=ENU=3rd Trip;
                  SourceExpr="On-Site Aud. 3rd Trip" }

      { 19  ;2   ;Group     ;
                  CaptionML=ENU=Meeting;
                  GroupType=Group }

      { 18  ;3   ;Field     ;
                  SourceExpr=Meeting }

      { 16  ;3   ;Field     ;
                  SourceExpr="Product Presentation" }

      { 15  ;3   ;Field     ;
                  SourceExpr="With P.O" }

      { 13  ;3   ;Field     ;
                  SourceExpr="Without P.O" }

      { 12  ;2   ;Group     ;
                  CaptionML=ENU=Others;
                  GroupType=Group }

      { 11  ;3   ;Field     ;
                  SourceExpr=Others;
                  OnValidate=BEGIN
                              IF Others = FALSE THEN
                                "Others Remarks" := '';
                            END;
                              }

      { 10  ;3   ;Field     ;
                  SourceExpr="Others Remarks";
                  Enabled=Others }

      { 9   ;2   ;Field     ;
                  SourceExpr=Status;
                  Editable=FALSE }

      { 8   ;1   ;Part      ;
                  Name=Vehicle Request;
                  CaptionML=ENU=Vehicle Request;
                  SubPageView=SORTING(Line No.,Line Type,Job Order No.);
                  SubPageLink=Job Order No.=FIELD(No.),
                              Line Type=CONST(Car Request);
                  PagePartID=Page50070;
                  PartType=Page;
                  UpdatePropagation=Both }

      { 7   ;1   ;Part      ;
                  Name=Public Transportation Request;
                  CaptionML=ENU=Public Transportation Request;
                  SubPageLink=Job Order No.=FIELD(No.);
                  PagePartID=Page50071;
                  PartType=Page }

      { 6   ;1   ;Part      ;
                  Name=JO Airplane Ticket;
                  CaptionML=ENU=Airplane Ticket Request;
                  SubPageLink=Job Order No.=FIELD(No.);
                  PagePartID=Page50072;
                  PartType=Page }

      { 5   ;1   ;Part      ;
                  Name=ApprovalEntry;
                  CaptionML=ENU=Approver;
                  SubPageView=SORTING(Entry No.)
                              ORDER(Descending);
                  SubPageLink=Document No.=FIELD(No.),
                              Document Type=FILTER(' '),
                              Table ID=CONST(50012);
                  PagePartID=Page50088;
                  Editable=False;
                  PartType=Page;
                  ShowFilter=No }

      { 4   ;    ;Container ;
                  ContainerType=FactBoxArea }

      { 3   ;1   ;Part      ;
                  Name=IncomingDocAttachFactBox;
                  PagePartID=Page193;
                  PartType=Page;
                  ShowFilter=No }

      { 2   ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=Notes }

      { 1   ;1   ;Part      ;
                  PartType=System;
                  SystemPartID=RecordLinks }

    }
    CODE
    {
      VAR
        CustomSetup@1005 : Record 50001;
        OpenApprovalEntriesExistForCurrUser@1002 : Boolean;
        OpenApprovalEntriesExist@1001 : Boolean;
        DocNoVisible@1004 : Boolean;
        ReleaseMgmt@1000 : Codeunit 50551;
        ApprovalEntries@1003 : Page 658;
        HasIncomingDocument@1006 : Boolean;
        INTP@1007 : Record 50040;
        Job@1008 : Record 167;

      LOCAL PROCEDURE SetControlVisibility@7();
      VAR
        ApprovalsMgmt@1002 : Codeunit 1535;
      BEGIN
        HasIncomingDocument := "Incoming Document Entry No." <> 0;
        OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
        OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      END;

      LOCAL PROCEDURE DocNoVisibility@1();
      VAR
        NoSeries@1000 : Record 308;
      BEGIN
        CustomSetup.GET;
        IF CustomSetup."Job Order Nos." <> '' THEN BEGIN
          IF NoSeries.GET(CustomSetup."Job Order Nos.") AND (NoSeries."Manual Nos." = FALSE) THEN BEGIN
            DocNoVisible := FALSE;
          END ELSE BEGIN
            DocNoVisible := TRUE;
          END;
        END;
      END;

      BEGIN
      END.
    }
  }

1:47 PM Tuesday, July 30, 2024

  Fix the error in selecting the department
  Fix the selection of purpose if Job Type is equal to others
  
  OBJECT Modification "Job Order"(Table 50012)
  {
    OBJECT-PROPERTIES
    {
      Date=06/26/18;
      Time=[ 3:08:06 AM];
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Target="Job Order"(Table 50012);
    }
    CHANGES
    {
      { Insertion         ;Documentation=BEGIN
                                          1:26 PM Tuesday, July 30, 2024
                                          ** Adjust on validate employee no. Add condition if employee dept. code is not empty.
                                          ** Adjust TestJobOrderDetails function, activity is not required if job type is not equal to others.
                                        END;
                                          }
      { CodeModification  ;OriginalCode=BEGIN
                                          TestDefaultNoSeries;

                                          IF "Document Date" = 0D THEN
                                          #4..7
                                            VALIDATE("Created By User ID", USERID);

                                          IF "Employee No." = '' THEN
                                            VALIDATE("Employee No.", UserSetupManagement.GetUserSetupEmployeeNo)
                                          ELSE
                                            VALIDATE("Employee No.");

                                          IF "Responsibility Center" = '' THEN
                                            "Responsibility Center" := UserSetup."JO Ctr. Filter";

                                          "Assigned User ID" := UserSetup."User ID";
                                          "Approver User ID" := UserSetup."Approver ID";

                                          TestJobOrderDetails;
                                        END;

                          ModifiedCode=BEGIN
                                          #1..10
                                            VALIDATE("Employee No.", UserSetupManagement.GetUserSetupEmployeeNo);
                                          #14..21
                                        END;

                          Target=InitRecord(PROCEDURE 17) }
      { CodeModification  ;OriginalCode=BEGIN
                                          TESTFIELD("Document Date");
                                          TESTFIELD("Date Requested");
                                          TESTFIELD("Employee No.");
                                          #4..9
                                            TESTFIELD("Customer Name");
                                          END;

                                          IF Meeting OR "Product Presentation" OR "Trial/POC" OR "Site Survey" OR Permitting OR "Installation and Commissioning" OR Testing OR
                                            "On-Site Audit" OR "Preliminary Acceptance" OR "Final Acceptance" OR Rectification OR Troubleshooting OR Others = FALSE THEN
                                            ERROR(Err01);

                                          TESTFIELD("Created By User ID");
                                        END;

                          ModifiedCode=BEGIN
                                          #1..12
                                          IF "Job Type" IN ["Job Type"::"Service Engineering", "Job Type"::"Inspection Upon Delivery", "Job Type"::"Pre-Delivery Inspection"] THEN BEGIN
                                            IF Meeting OR "Product Presentation" OR "Trial/POC" OR "Site Survey" OR Permitting OR "Installation and Commissioning" OR Testing OR
                                              "On-Site Audit" OR "Preliminary Acceptance" OR "Final Acceptance" OR Rectification OR Troubleshooting OR Others = FALSE THEN
                                              ERROR(Err01);
                                          END;

                                          TESTFIELD("Created By User ID");
                                        END;

                          Target=TestJobOrderDetails(PROCEDURE 15) }
    }
    CODE
    {

      BEGIN
      END.
    }
  }

2:57 PM Wednesday, July 31, 2024
  Date of Migration: 11:06 PM Wednesday, July 31, 2024
  OBJECT Modification "Approvals Mgmt."(Codeunit 1535)
  {
    OBJECT-PROPERTIES
    {
      Date=06/26/18;
      Time=12:26:17 AM;
      Modified=Yes;
      Version List=NAVW19.00.00.49146,X8OC0.01,NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Target="Approvals Mgmt."(Codeunit 1535);
    }
    CHANGES
    {
      { Insertion         ;Documentation=BEGIN
                                          5:06 PM Monday, July 29, 2024
                                            Custom approval request per Approver Type : Function CreateApprovalRequests
                                            Extend the function of MakeApprovalEntry Local to Global
                                            Remove the custom function made to extend the Approval Entry for Approval Type
                                        END;
                                          }
      { Insertion         ;Target=CreateApprovalRequests(PROCEDURE 6);
                          InsertAfter=ApprovalEntryArgument(Variable 1002);
                          ChangedElements=VariableCollection
                          {
                            CustomApprovalManagement@1004 : Codeunit 50582;
                          }
                            }
      { CodeModification  ;OriginalCode=BEGIN
                                          PopulateApprovalEntryArgument(RecRef,WorkflowStepInstance,ApprovalEntryArgument);

                                          IF WorkflowStepArgument.GET(WorkflowStepInstance.Argument) THEN
                                            CASE WorkflowStepArgument."Approver Type" OF
                                              WorkflowStepArgument."Approver Type"::"Salesperson/Purchaser":
                                                CreateApprReqForApprTypeSalespersPurchaser(WorkflowStepArgument,ApprovalEntryArgument);
                                              WorkflowStepArgument."Approver Type"::Approver:
                                                CreateApprReqForApprTypeApprover(WorkflowStepArgument,ApprovalEntryArgument);
                                              WorkflowStepArgument."Approver Type"::"Workflow User Group":
                                                CreateApprReqForApprTypeWorkflowUserGroup(WorkflowStepArgument,ApprovalEntryArgument);
                                              // PHP Start - Additional Workflow Approver Type

                                              WorkflowStepArgument."Approver Type"::"Cost Analyst Incharge":
                                                CreateApprReqForApprTypeCostAnalyst(WorkflowStepArgument,ApprovalEntryArgument);

                                              WorkflowStepArgument."Approver Type"::"Project Manager Incharge":
                                                CreateApprReqForApprTypeProjectManager(WorkflowStepArgument,ApprovalEntryArgument);

                                              WorkflowStepArgument."Approver Type"::"Endorse To":
                                                CreateApprReqForApprTypeEndorseTo(WorkflowStepArgument,ApprovalEntryArgument);

                                              WorkflowStepArgument."Approver Type"::"Ground Manager":
                                                CreateApprReqForApprTypeGroundManager(WorkflowStepArgument,ApprovalEntryArgument);
                                              // PHP End
                                            END;

                                          IF WorkflowStepArgument."Show Confirmation Message" THEN
                                            InformUserOnStatusChange(RecRef,WorkflowStepInstance.ID);
                                        END;

                          ModifiedCode=BEGIN
                                          #1..10
                                              // PHP Start
                                              // Custom approval request per Approver Type
                                              ELSE
                                                CustomApprovalManagement.CustomCreateApprovalRequest(WorkflowStepArgument,ApprovalEntryArgument);
                                          #24..28
                                        END;

                          Target=CreateApprovalRequests(PROCEDURE 6) }
      { Deletion          ;Target=CreateApprReqForApprTypeCostAnalyst(PROCEDURE 169);
                          ChangedElements=PROCEDURECollection
                          {
                            LOCAL PROCEDURE CreateApprReqForApprTypeCostAnalyst@169(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            BEGIN
                              CreateApprovalRequestForCostAnalyst(WorkflowStepArgument,ApprovalEntryArgument);
                            END;

                          }
                            }
      { Deletion          ;Target=CreateApprReqForApprTypeProjectManager(PROCEDURE 170);
                          ChangedElements=PROCEDURECollection
                          {
                            LOCAL PROCEDURE CreateApprReqForApprTypeProjectManager@170(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            BEGIN
                              CreateApprovalRequestForProjectManager(WorkflowStepArgument,ApprovalEntryArgument);
                            END;

                          }
                            }
      { Deletion          ;Target=CreateApprReqForApprTypeEndorseTo(PROCEDURE 173);
                          ChangedElements=PROCEDURECollection
                          {
                            LOCAL PROCEDURE CreateApprReqForApprTypeEndorseTo@173(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            BEGIN
                              // PHP Start Additional Approver Type - for Cash Advance
                              CreateApprovalRequestForEndorseTo(WorkflowStepArgument,ApprovalEntryArgument);
                              // PHP Start
                            END;

                          }
                            }
      { Deletion          ;Target=CreateApprReqForApprTypeGroundManager(PROCEDURE 175);
                          ChangedElements=PROCEDURECollection
                          {
                            LOCAL PROCEDURE CreateApprReqForApprTypeGroundManager@175(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            BEGIN
                              // PHP Start Additional Approver Type - for Cash Advance
                              CreateApprovalRequestForGroundManager(WorkflowStepArgument,ApprovalEntryArgument);
                              // PHP Start
                            END;

                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForCostAnalyst(PROCEDURE 172);
                          ChangedElements=PROCEDURECollection
                          {
                            LOCAL PROCEDURE CreateApprovalRequestForCostAnalyst@172(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              Res@1003 : Record 156;
                              PurchHeader@1008 : Record 38;
                              SalesHeader@1010 : Record 36;
                              RFQ@1009 : Record 50013;
                              Job@1011 : Record 167;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              UserSetupMgt@1002 : Codeunit 5700;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              // PHP start
                              UsrId := USERID;

                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,UsrId);


                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Purchase Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(PurchHeader);
                                    IF NOT Res.GET(PurchHeader."Cost Analyst No.") THEN
                                      PurchHeader.TESTFIELD("Cost Analyst No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Sales Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(SalesHeader);
                                    IF NOT Res.GET(SalesHeader."Cost Analyst") THEN
                                      SalesHeader.TESTFIELD("Cost Analyst");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Request For Quotation":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(RFQ);
                                    IF NOT Res.GET(RFQ."Cost Analyst No.") THEN
                                      RFQ.TESTFIELD("Cost Analyst No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::Job:
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(Job);
                                    IF NOT Res.GET(Job."Cost Analyst No.") THEN
                                      ERROR(ErrTableNotIncluded, Job.FIELDNAME("Cost Analyst No."));
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                ELSE
                                  ERROR(NoWorkflowEnabledErr);

                              END;

                              IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                IF NOT UserSetup."Approval Administrator" THEN
                                  ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                UsrId := USERID;
                              END;

                              SequenceNo += 1;
                              MakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);

                              // PHP End
                            END;

                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForProjectManager(PROCEDURE 171);
                          ChangedElements=PROCEDURECollection
                          {
                            LOCAL PROCEDURE CreateApprovalRequestForProjectManager@171(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              Res@1003 : Record 156;
                              PurchHeader@1008 : Record 38;
                              JobOrder@1009 : Record 50012;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              UserSetupMgt@1002 : Codeunit 5700;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              UsrId := USERID;

                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,UsrId);


                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Purchase Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(PurchHeader);
                                    IF NOT Res.GET(PurchHeader."Project Manager No.") THEN
                                      PurchHeader.TESTFIELD("Project Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Job Order":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(JobOrder);
                                    IF NOT Res.GET(JobOrder."Project Manager No.") THEN
                                      JobOrder.TESTFIELD("Project Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                ELSE
                                  ERROR(NoWorkflowEnabledErr);
                              END;

                              IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                IF NOT UserSetup."Approval Administrator" THEN
                                  ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                UsrId := USERID;
                              END;

                              SequenceNo += 1;
                              MakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                            END;

                          }
                            }
      { PropertyModification;
                          Target=ExtendMakeApprovalEntry(PROCEDURE 174).ApproverId(Parameter 1001);
                          Property=Name;
                          OriginalValue=WorkflowStepArgument;
                          ModifiedValue=ApproverId }
      { PropertyDeletion  ;Target=ExtendMakeApprovalEntry(PROCEDURE 174).ApproverId(Parameter 1001);
                          Property=Subtype;
                          OriginalValue=1523 }
      { PropertyModification;
                          Target=ExtendMakeApprovalEntry(PROCEDURE 174).ApproverId(Parameter 1001);
                          Property=Data type;
                          OriginalValue=Record;
                          ModifiedValue=Code }
      { PropertyInsertion ;Target=ExtendMakeApprovalEntry(PROCEDURE 174).ApproverId(Parameter 1001);
                          Property=Length;
                          ModifiedValue=50 }
      { PropertyModification;
                          Target=ExtendMakeApprovalEntry(PROCEDURE 174).WorkflowStepArgument(Parameter 1000);
                          Property=Name;
                          OriginalValue=ApprovalEntryArgument;
                          ModifiedValue=WorkflowStepArgument }
      { PropertyModification;
                          Target=ExtendMakeApprovalEntry(PROCEDURE 174).WorkflowStepArgument(Parameter 1000);
                          Property=Subtype;
                          OriginalValue=454;
                          ModifiedValue=1523 }
      { Insertion         ;Target=ExtendMakeApprovalEntry(PROCEDURE 174);
                          ChangedElements=ParameterCollection
                          {
                            { 1003;ApprovalEntryArgument    ;Record       ;Subtype=454 }
                            { 1002;SequenceNo               ;Integer       }
                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForEndorseTo(PROCEDURE 174).UserSetup(Variable 1006);
                          ChangedElements=VariableCollection
                          {
                            UserSetup@1006 : Record 91;
                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForEndorseTo(PROCEDURE 174).Res(Variable 1003);
                          ChangedElements=VariableCollection
                          {
                            Res@1003 : Record 156;
                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForEndorseTo(PROCEDURE 174).PurchHeader(Variable 1008);
                          ChangedElements=VariableCollection
                          {
                            PurchHeader@1008 : Record 38;
                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForEndorseTo(PROCEDURE 174).UsrId(Variable 1005);
                          ChangedElements=VariableCollection
                          {
                            UsrId@1005 : Code[50];
                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForEndorseTo(PROCEDURE 174).SequenceNo(Variable 1004);
                          ChangedElements=VariableCollection
                          {
                            SequenceNo@1004 : Integer;
                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForEndorseTo(PROCEDURE 174).UserSetupMgt(Variable 1002);
                          ChangedElements=VariableCollection
                          {
                            UserSetupMgt@1002 : Codeunit 5700;
                          }
                            }
      { Deletion          ;Target=CreateApprovalRequestForEndorseTo(PROCEDURE 174).RecRef(Variable 1007);
                          ChangedElements=VariableCollection
                          {
                            RecRef@1007 : RecordRef;
                          }
                            }
      { PropertyDeletion  ;Target=ExtendMakeApprovalEntry(PROCEDURE 174);
                          Property=Local;
                          OriginalValue=Yes }
      { PropertyModification;
                          Target=ExtendMakeApprovalEntry(PROCEDURE 174);
                          Property=Name;
                          OriginalValue=CreateApprovalRequestForEndorseTo;
                          ModifiedValue=ExtendMakeApprovalEntry }
      { CodeModification  ;OriginalCode=BEGIN
                                          // PHP Start
                                          UsrId := USERID;

                                          SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                                          IF NOT UserSetup.GET(USERID) THEN
                                            ERROR(UserIdNotInSetupErr,UsrId);


                                          CASE ApprovalEntryArgument."Table ID" OF
                                            DATABASE::"Purchase Header":
                                              BEGIN
                                                RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                                RecRef.SETTABLE(PurchHeader);
                                                IF NOT Res.GET(PurchHeader."Endorse To") THEN
                                                  PurchHeader.TESTFIELD("Endorse To");
                                                Res.TESTFIELD("Time Sheet Owner User ID");
                                                UsrId := Res."Time Sheet Owner User ID";
                                              END;
                                            ELSE
                                              ERROR(ErrTableNotIncluded, PurchHeader.FIELDNAME("Endorse To"));
                                          END;

                                          IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                            IF NOT UserSetup."Approval Administrator" THEN
                                              ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                            UsrId := USERID;
                                          END;

                                          SequenceNo += 1;
                                          MakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                                          // PHP End
                                        END;

                          ModifiedCode=BEGIN
                                          // PHP Start
                                          // Extend the function of MakeApprovalEntry Local to Global
                                          MakeApprovalEntry(ApprovalEntryArgument,SequenceNo,ApproverId,WorkflowStepArgument);
                                          // PHP End
                                        END;

                          Target=ExtendMakeApprovalEntry(PROCEDURE 174) }
      { Deletion          ;Target=CreateApprovalRequestForGroundManager(PROCEDURE 176);
                          ChangedElements=PROCEDURECollection
                          {
                            LOCAL PROCEDURE CreateApprovalRequestForGroundManager@176(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              Res@1003 : Record 156;
                              PurchHeader@1008 : Record 38;
                              JobOrder@1009 : Record 50012;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              UserSetupMgt@1002 : Codeunit 5700;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              // PHP Start
                              UsrId := USERID;

                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,UsrId);


                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Purchase Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(PurchHeader);
                                    IF NOT Res.GET(PurchHeader."Ground Manager No.") THEN
                                      PurchHeader.TESTFIELD("Ground Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Job Order":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(JobOrder);
                                    IF NOT Res.GET(JobOrder."Ground Manager No.") THEN
                                      JobOrder.TESTFIELD("Ground Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                ELSE
                                  ERROR(NoWorkflowEnabledErr);
                              END;

                              IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                IF NOT UserSetup."Approval Administrator" THEN
                                  ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                UsrId := USERID;
                              END;

                              SequenceNo += 1;
                              MakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                              // PHP End
                            END;

                          }
                            }
      { Move              ;Target=MakeApprovalEntry(PROCEDURE 23);
                          InsertAfter=CreateApprovalRequestForUser(PROCEDURE 22);
                          IncludeSiblings=CalcPurchaseDocAmount(PROCEDURE 24),CalcSalesDocAmount(PROCEDURE 82),PopulateApprovalEntryArgument(PROCEDURE 80),CreateApprovalEntryNotification(PROCEDURE 50),SetApproverType(PROCEDURE 71),SetLimitType(PROCEDURE 81),IsSufficientPurchApprover(PROCEDURE 12),IsSufficientSalesApprover(PROCEDURE 13),IsSufficientGenJournalLineApprover(PROCEDURE 89),IsSufficientApprover(PROCEDURE 20),GetAvailableCreditLimit(PROCEDURE 25),PrePostApprovalRFP(PROCEDURE 113),PrePostApprovalCheckSales(PROCEDURE 38),PrePostApprovalCheckPurch(PROCEDURE 39),IsProjApprovalsWorkflowEnabled(PROCEDURE 119),IsRFTSApprovalsWorkflowEnabled(PROCEDURE 121),IsTERFApprovalsWorkflowEnabled(PROCEDURE 136),IsNTPApprovalsWorkflowEnabled(PROCEDURE 140),IsJOApprovalsWorkflowEnabled(PROCEDURE 123),IsRFQApprovalsWorkflowEnabled(PROCEDURE 125),IsCAApprovalsWorkflowEnabled(PROCEDURE 127),IsRFPurApprovalsWorkflowEnabled(PROCEDURE 148),IsIncomingDocApprovalsWorkflowEnabled(PROCEDURE 102),IsPurchaseApprovalsWorkflowEnabled(PROCEDURE 59),IsSalesApprovalsWorkflowEnabled(PROCEDURE 17),IsRFPHeaderApprovalsWorkflowEnabled(PROCEDURE 115),IsOverdueNotificationsWorkflowEnabled(PROCEDURE 42),IsOverdueRFENotificationWorkflowEnabled(PROCEDURE 152),IsGeneralJournalBatchApprovalsWorkflowEnabled(PROCEDURE 70),IsGeneralJournalLineApprovalsWorkflowEnabled(PROCEDURE 72),CheckPurchaseApprovalsWorkflowEnabled(PROCEDURE 77),CheckIncomingDocApprovalsWorkflowEnabled(PROCEDURE 192),CheckSalesApprovalsWorkflowEnabled(PROCEDURE 155),CheckRFPApprovalsWorkflowEnabled(PROCEDURE 117),CheckCustomerApprovalsWorkflowEnabled(PROCEDURE 11),CheckVendorApprovalsWorkflowEnabled(PROCEDURE 83),CheckItemApprovalsWorkflowEnabled(PROCEDURE 84),CheckPROJApprovalsWorkflowEnabled(PROCEDURE 103),CheckRFTSApprovalsWorkflowEnabled(PROCEDURE 130),CheckJOApprovalsWorkflowEnabled(PROCEDURE 131),CheckRFQApprovalsWorkflowEnabled(PROCEDURE 132),CheckCApprovalsWorkflowEnabled(PROCEDURE 133),CheckTERFApprovalsWorkflowEnabled(PROCEDURE 135),CheckNTPApprovalsWorkflowEnabled(PROCEDURE 141),CheckRFPurApprovalsWorkflowEnabled(PROCEDURE 147),CheckGeneralJournalBatchApprovalsWorkflowEnabled(PROCEDURE 74),CheckGeneralJournalLineApprovalsWorkflowEnabled(PROCEDURE 73),PostApprovalEntriesMoveGenJournalLine(PROCEDURE 91),DeleteApprovalEntriesAfterDeleteGenJournalLine(PROCEDURE 94),PostApprovalEntriesMoveGenJournalBatch(PROCEDURE 36),DeleteApprovalEntriesAfterDeleteGenJournalBatch(PROCEDURE 98),DeleteApprovalEntriesAfterDeleteCustomer(PROCEDURE 99),PostApprovalEntries(PROCEDURE 105),PostApprovalCommentLines(PROCEDURE 90),ShowPostedApprovalEntries(PROCEDURE 60),DeletePostedApprovalEntries(PROCEDURE 40),DeletePostedApprovalCommentLines(PROCEDURE 37),SetStatusToPendingApproval(PROCEDURE 47),InformUserOnStatusChange(PROCEDURE 110),GetApprovalComment(PROCEDURE 53),HasOpenApprovalEntriesForCurrentUser(PROCEDURE 14),HasOpenApprovalEntries(PROCEDURE 154),HasApprovalEntries(PROCEDURE 15),HasPendingApprovalEntries(PROCEDURE 156),HasAnyOpenJournalLineApprovalEntries(PROCEDURE 187),TrySendJournalBatchApprovalRequest(PROCEDURE 54),TrySendJournalLineApprovalRequests(PROCEDURE 183),TryCancelJournalBatchApprovalRequest(PROCEDURE 189),TryCancelJournalLineApprovalRequests(PROCEDURE 88),ShowJournalApprovalEntries(PROCEDURE 55),GetGeneralJournalBatch(PROCEDURE 87),RenameApprovalEntries(PROCEDURE 79),ChangeApprovalComments(PROCEDURE 85),DeleteApprovalEntries(PROCEDURE 93),DeleteApprovalCommentLines(PROCEDURE 92),CopyApprovalEntryQuoteToOrder(PROCEDURE 101),GetLastSequenceNo(PROCEDURE 16),OpenApprovalEntriesPage(PROCEDURE 75),FindUserSetupBySalesPurchCode(PROCEDURE 109),CheckUserAsApprovalAdministrator(PROCEDURE 114),OnSendJobForApproval(PROCEDURE 145),OnCancelJobApprovalRequest(PROCEDURE 146),ShowJobApprovalStatus(PROCEDURE 150),IsJobApprovalsWorkflowEnabled(PROCEDURE 144),CheckJobApprovalsWorkflowEnabled(PROCEDURE 151),OnChangeOfReturnedDateOfTERF(PROCEDURE 153),IsSendReturnedMaterialNotificationWorkflowEnabled(PROCEDURE 158),CheckSendReturnedMaterialNotificationWorkflowEnabled(PROCEDURE 157),IsSendReleasedMaterialNotificationWorkflowEnabled(PROCEDURE 160),CheckSendReleasedMaterialNotificationWorkflowEnabled(PROCEDURE 159),IsOnChangeOfApproverIDNotificationWorkflowEnabled(PROCEDURE 164),CheckOnChangeOfApproverIDNotificationWorkflowEnabled(PROCEDURE 162),IsOnReopenPurchDocNotificationWorkflowEnabled(PROCEDURE 166),CheckReopenPurchDocNotificationWorkflowEnabled(PROCEDURE 165),IsOnChangeOfINTPStatusNotificationWorkflowEnabled(PROCEDURE 168),CheckChangeOfINTPStatusNotificationWorkflowEnabled(PROCEDURE 167),IsOnSendOpportunityNotificationWorkflowEnabled(PROCEDURE 177),IsOnSendNewToDoNotificationWorkflowEnabled(PROCEDURE 178),IsOnSendCompletedToDoNotificationWorkflowEnabled(PROCEDURE 180),IsOnSendCanceledToDoNotificationWorkflowEnabled(PROCEDURE 184),IsOnSendToDoReminderNotificationWorkflowEnabled(PROCEDURE 179),IsOnSendUserCredentialNotificationWorkflowEnabled(PROCEDURE 181),IsOnSendOpportunityStatusIsChangeToInprogresslNotificationWorkflowEnabled(PROCEDURE 182),IsOnCreatePersonInvolveWorkflowEnabled(PROCEDURE 185) }
    }
    CODE
    {

      BEGIN
      END.
    }
  }

  OBJECT Modification "Custom Approval Management"(Codeunit 50582)
  {
    OBJECT-PROPERTIES
    {
      Date=06/26/18;
      Time=12:40:03 AM;
      Modified=Yes;
      Version List=NAVOC1.00.02,NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Target="Custom Approval Management"(Codeunit 50582);
    }
    CHANGES
    {
      { Insertion         ;Documentation=BEGIN
                                          10:33 PM Monday, July 29, 2024
                                            Migrated the functions from Codeunit 1535 Approvals Mgmt. for Create an approval request for the record using approver.
                                        END;
                                          }
      { Insertion         ;InsertAfter=IsINTPFieldChangeWorkflowEnabled(PROCEDURE 12);
                          ChangedElements=PROCEDURECollection
                          {
                            PROCEDURE CustomCreateApprovalRequest@18(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            BEGIN
                              CASE WorkflowStepArgument."Approver Type" OF
                                WorkflowStepArgument."Approver Type"::"Cost Analyst Incharge":
                                  CreateApprovalRequestForCostAnalyst(WorkflowStepArgument, ApprovalEntryArgument);
                                WorkflowStepArgument."Approver Type"::"Project Manager Incharge":
                                  CreateApprovalRequestForProjectManager(WorkflowStepArgument, ApprovalEntryArgument);
                                WorkflowStepArgument."Approver Type"::"Endorse To":
                                  CreateApprovalRequestForEndorseTo(WorkflowStepArgument, ApprovalEntryArgument);
                                WorkflowStepArgument."Approver Type"::"Ground Manager":
                                  CreateApprovalRequestForGroundManager(WorkflowStepArgument, ApprovalEntryArgument);
                                WorkflowStepArgument."Approver Type"::Employee:
                                  CreateApprovalRequestForEmployee(WorkflowStepArgument, ApprovalEntryArgument);
                              END;
                            END;

                            LOCAL PROCEDURE GetLastSequenceNo@14(ApprovalEntryArgument@1000 : Record 454) : Integer;
                            VAR
                              ApprovalEntry@1001 : Record 454;
                            BEGIN
                              WITH ApprovalEntry DO BEGIN
                                SETCURRENTKEY("Record ID to Approve","Workflow Step Instance ID","Sequence No.");
                                SETRANGE("Table ID",ApprovalEntryArgument."Table ID");
                                SETRANGE("Record ID to Approve",ApprovalEntryArgument."Record ID to Approve");
                                SETRANGE("Workflow Step Instance ID",ApprovalEntryArgument."Workflow Step Instance ID");
                                IF FINDLAST THEN
                                  EXIT("Sequence No.");
                              END;
                              EXIT(0);
                            END;

                            LOCAL PROCEDURE CreateApprovalRequestForCostAnalyst@172(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              Res@1003 : Record 156;
                              PurchHeader@1008 : Record 38;
                              SalesHeader@1010 : Record 36;
                              RFQ@1009 : Record 50013;
                              Job@1011 : Record 167;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              UserSetupMgt@1002 : Codeunit 5700;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              // PHP start
                              UsrId := USERID;

                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,UsrId);


                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Purchase Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(PurchHeader);
                                    IF NOT Res.GET(PurchHeader."Cost Analyst No.") THEN
                                      PurchHeader.TESTFIELD("Cost Analyst No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Sales Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(SalesHeader);
                                    IF NOT Res.GET(SalesHeader."Cost Analyst") THEN
                                      SalesHeader.TESTFIELD("Cost Analyst");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Request For Quotation":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(RFQ);
                                    IF NOT Res.GET(RFQ."Cost Analyst No.") THEN
                                      RFQ.TESTFIELD("Cost Analyst No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::Job:
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(Job);
                                    IF NOT Res.GET(Job."Cost Analyst No.") THEN
                                      ERROR(ErrTableNotIncluded, Job.FIELDNAME("Cost Analyst No."));
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                ELSE
                                  ERROR(NoWorkflowEnabledErr);

                              END;

                              IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                IF NOT UserSetup."Approval Administrator" THEN
                                  ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                UsrId := USERID;
                              END;

                              SequenceNo += 1;
                              ApprovalsMgmt.ExtendMakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                            END;

                            LOCAL PROCEDURE CreateApprovalRequestForProjectManager@171(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              Res@1003 : Record 156;
                              PurchHeader@1008 : Record 38;
                              JobOrder@1009 : Record 50012;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              UserSetupMgt@1002 : Codeunit 5700;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              UsrId := USERID;

                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,UsrId);


                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Purchase Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(PurchHeader);
                                    IF NOT Res.GET(PurchHeader."Project Manager No.") THEN
                                      PurchHeader.TESTFIELD("Project Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Job Order":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(JobOrder);
                                    IF NOT Res.GET(JobOrder."Project Manager No.") THEN
                                      JobOrder.TESTFIELD("Project Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                ELSE
                                  ERROR(NoWorkflowEnabledErr);
                              END;

                              IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                IF NOT UserSetup."Approval Administrator" THEN
                                  ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                UsrId := USERID;
                              END;

                              SequenceNo += 1;
                              ApprovalsMgmt.ExtendMakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                            END;

                            LOCAL PROCEDURE CreateApprovalRequestForEndorseTo@174(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              Res@1003 : Record 156;
                              PurchHeader@1008 : Record 38;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              UserSetupMgt@1002 : Codeunit 5700;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              UsrId := USERID;

                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,UsrId);


                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Purchase Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(PurchHeader);
                                    IF NOT Res.GET(PurchHeader."Endorse To") THEN
                                      PurchHeader.TESTFIELD("Endorse To");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                ELSE
                                  ERROR(ErrTableNotIncluded, PurchHeader.FIELDNAME("Endorse To"));
                              END;

                              IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                IF NOT UserSetup."Approval Administrator" THEN
                                  ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                UsrId := USERID;
                              END;

                              SequenceNo += 1;
                              ApprovalsMgmt.ExtendMakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                            END;

                            LOCAL PROCEDURE CreateApprovalRequestForGroundManager@176(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              Res@1003 : Record 156;
                              PurchHeader@1008 : Record 38;
                              JobOrder@1009 : Record 50012;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              UserSetupMgt@1002 : Codeunit 5700;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              UsrId := USERID;

                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,UsrId);


                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Purchase Header":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(PurchHeader);
                                    IF NOT Res.GET(PurchHeader."Ground Manager No.") THEN
                                      PurchHeader.TESTFIELD("Ground Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                DATABASE::"Job Order":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(JobOrder);
                                    IF NOT Res.GET(JobOrder."Ground Manager No.") THEN
                                      JobOrder.TESTFIELD("Ground Manager No.");
                                    Res.TESTFIELD("Time Sheet Owner User ID");
                                    UsrId := Res."Time Sheet Owner User ID";
                                  END;
                                ELSE
                                  ERROR(NoWorkflowEnabledErr);
                              END;

                              IF NOT UserSetup.GET(UsrId) THEN BEGIN
                                IF NOT UserSetup."Approval Administrator" THEN
                                  ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                UsrId := USERID;
                              END;

                              SequenceNo += 1;
                              ApprovalsMgmt.ExtendMakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                            END;

                            LOCAL PROCEDURE CreateApprovalRequestForEmployee@21(WorkflowStepArgument@1001 : Record 1523;ApprovalEntryArgument@1000 : Record 454);
                            VAR
                              UserSetup@1006 : Record 91;
                              JobOrder@1009 : Record 50012;
                              UserSetupMgt@1002 : Codeunit 5700;
                              UsrId@1005 : Code[50];
                              SequenceNo@1004 : Integer;
                              RecRef@1007 : RecordRef;
                            BEGIN
                              SequenceNo := GetLastSequenceNo(ApprovalEntryArgument);

                              IF NOT UserSetup.GET(USERID) THEN
                                ERROR(UserIdNotInSetupErr,USERID);

                              CASE ApprovalEntryArgument."Table ID" OF
                                DATABASE::"Job Order":
                                  BEGIN
                                    RecRef.GET(ApprovalEntryArgument."Record ID to Approve");
                                    RecRef.SETTABLE(JobOrder);

                                    UserSetup.RESET;
                                    UserSetup.SETRANGE("Employee No.", JobOrder."Employee No.");
                                    IF NOT UserSetup.FINDFIRST THEN
                                      ERROR(EmployeeNoNotInSetupErr, JobOrder."Employee No.");

                                    CASE TRUE OF
                                      (UserSetup."Approver ID" <> ''):
                                        UsrId := UserSetup."Approver ID";
                                      UserSetup."Approval Administrator",UserSetup."Unlimited Request Approval":
                                        UsrId := UserSetup."User ID";
                                      ELSE
                                        ERROR(ApproverUserIdNotInSetupErr,UserSetup."User ID");
                                    END;
                                  END;
                                ELSE
                                  ERROR(NoWorkflowEnabledErr);
                              END;

                              SequenceNo += 1;
                              ApprovalsMgmt.ExtendMakeApprovalEntry(ApprovalEntryArgument,SequenceNo,UsrId,WorkflowStepArgument);
                            END;

                          }
                            }
      { Insertion         ;InsertAfter=WorkflowManagement(Variable 1002);
                          ChangedElements=VariableCollection
                          {
                            UserIdNotInSetupErr@1009 : TextConst '@@@=User ID NAVUser does not exist in the Approval User Setup window.;ENU=User ID %1 does not exist in the Approval User Setup window.';
                            EmployeeNoNotInSetupErr@1004 : TextConst 'ENU=Employee No. %1 does not exist in the Approval User Setup window.';
                            ErrTableNotIncluded@1005 : TextConst 'ENU=This record is not supported by related approval workflow. %1 must be setup.';
                            ApproverUserIdNotInSetupErr@1006 : TextConst '@@@=You must set up an approver for user ID NAVUser in the Approval User Setup window.;ENU=You must set up an approver for user ID %1 in the Approval User Setup window.';
                            ApprovalsMgmt@1007 : Codeunit 1535;
                          }
                            }
    }
    CODE
    {

      BEGIN
      END.
    }
  }

  OBJECT Modification "Workflow Step Argument"(Table 1523)
  {
    OBJECT-PROPERTIES
    {
      Date=06/26/18;
      Time=[ 7:59:14 AM];
      Modified=Yes;
      Version List=NAVW19.00,NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Target="Workflow Step Argument"(Table 1523);
    }
    CHANGES
    {
      { Insertion         ;Documentation=BEGIN
                                          11:35 AM Monday, July 29, 2024
                                            Additional Field:
                                              Message 2, Message 3, Message 4
                                            Additonal Option to Approver Type Field:
                                              Cost Analyst Incharge,Project Manager Incharge,Endorse To,Ground Manager,Employee
                                            Additional Code to Onvalidate:
                                              Approver Type, Approver Limit Type
                                        END;
                                          }
      { CodeModification  ;OriginalCode=BEGIN
                                          // PHP Start
                                          IF "Approver Type" IN ["Approver Type"::"Cost Analyst Incharge", "Approver Type"::"Project Manager Incharge",
                                            "Approver Type"::"Endorse To", "Approver Type"::"Ground Manager"] THEN
                                            VALIDATE("Approver Limit Type", "Approver Limit Type"::"Direct Approver");
                                          // PHP End
                                        END;

                          ModifiedCode=BEGIN
                                          // PHP Start
                                          IF "Approver Type" IN ["Approver Type"::"Cost Analyst Incharge", "Approver Type"::"Project Manager Incharge",
                                            "Approver Type"::"Endorse To", "Approver Type"::"Ground Manager", "Approver Type"::Employee] THEN
                                            VALIDATE("Approver Limit Type", "Approver Limit Type"::"Direct Approver");
                                          // PHP End
                                        END;

                          Target="Approver Type"(Field 12).OnValidate }
      { PropertyModification;
                          Target="Approver Type"(Field 12);
                          Property=OptionCaptionML;
                          OriginalValue=ENU=Salesperson/Purchaser,Approver,Workflow User Group,Cost Analyst Incharge,Project Manager Incharge,Endorse To,Ground Manager;
                          ModifiedValue=ENU=Salesperson/Purchaser,Approver,Workflow User Group,Cost Analyst Incharge,Project Manager Incharge,Endorse To,Ground Manager,Employee }
      { PropertyModification;
                          Target="Approver Type"(Field 12);
                          Property=OptionString;
                          OriginalValue=Salesperson/Purchaser,Approver,Workflow User Group,Cost Analyst Incharge,Project Manager Incharge,Endorse To,Ground Manager;
                          ModifiedValue=Salesperson/Purchaser,Approver,Workflow User Group,Cost Analyst Incharge,Project Manager Incharge,Endorse To,Ground Manager,Employee }
      { CodeModification  ;OriginalCode=BEGIN
                                          // PHP Start - Limit the user on changing the approver limit type. Must be Direct Approver
                                          IF ("Approver Limit Type" <> "Approver Limit Type"::"Direct Approver") AND
                                            ("Approver Type" IN ["Approver Type"::"Cost Analyst Incharge", "Approver Type"::"Project Manager Incharge",
                                            "Approver Type"::"Endorse To", "Approver Type"::"Ground Manager"]) THEN
                                            TESTFIELD("Approver Limit Type", "Approver Limit Type"::"Direct Approver");
                                          // PHP End
                                        END;

                          ModifiedCode=BEGIN
                                          #1..3
                                            "Approver Type"::"Endorse To", "Approver Type"::"Ground Manager", "Approver Type"::Employee]) THEN
                                            TESTFIELD("Approver Limit Type", "Approver Limit Type"::"Direct Approver");
                                          // PHP End
                                        END;

                          Target="Approver Limit Type"(Field 13).OnValidate }
    }
    CODE
    {

      BEGIN
      END.
    }
  }

  OBJECT Modification "Job Order"(Table 50012)
  {
    OBJECT-PROPERTIES
    {
      Date=06/26/18;
      Time=12:00:51 AM;
      Modified=Yes;
      Version List=NAVOC1.00.02.48;
    }
    PROPERTIES
    {
      Target="Job Order"(Table 50012);
    }
    CHANGES
    {
      { CodeModification  ;OriginalCode=BEGIN
                                          1:26 PM Tuesday, July 30, 2024
                                          ** Adjust on validate employee no. Add condition if employee dept. code is not empty.
                                          ** Adjust TestJobOrderDetails function, activity is not required if job type is not equal to others.
                                        END;

                          ModifiedCode=BEGIN
                                          1:26 PM Tuesday, July 30, 2024
                                          ** Adjust InitRecord function, removed validate employee no.
                                          ** Adjust TestJobOrderDetails function, activity is not required if job type is not equal to others.
                                        END;

                          Target=Documentation }
      { CodeModification  ;OriginalCode=BEGIN
                                          TESTFIELD("Document Date");
                                          TESTFIELD("Date Requested");
                                          TESTFIELD("Employee No.");
                                          #4..9
                                            TESTFIELD("Customer Name");
                                          END;

                                          IF "Job Type" IN ["Job Type"::"Service Engineering", "Job Type"::"Inspection Upon Delivery", "Job Type"::"Pre-Delivery Inspection"] THEN BEGIN
                                            IF Meeting OR "Product Presentation" OR "Trial/POC" OR "Site Survey" OR Permitting OR "Installation and Commissioning" OR Testing OR
                                              "On-Site Audit" OR "Preliminary Acceptance" OR "Final Acceptance" OR Rectification OR Troubleshooting OR Others = FALSE THEN
                                              ERROR(Err01);
                                          END;

                                          TESTFIELD("Created By User ID");
                                        END;

                          ModifiedCode=BEGIN
                                          #1..12
                                          IF "Job Type" <> "Job Type"::Others THEN BEGIN
                                          #14..19
                                        END;

                          Target=TestJobOrderDetails(PROCEDURE 15) }
    }
    CODE
    {

      BEGIN
      END.
    }
  }



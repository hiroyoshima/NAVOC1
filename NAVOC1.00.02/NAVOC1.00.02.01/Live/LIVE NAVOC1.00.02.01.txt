OBJECT Table 38 Purchase Header
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=12:29:13 AM;
    Modified=Yes;
    Version List=NAVW19.00.00.49968,PHL0.01,PF-01,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Buy-from Vendor Name;
    OnInsert=VAR
               ArchiveManagement@1000 : Codeunit 5063;
             BEGIN
               IF NOT SkipInitialization THEN
                 InitInsert;

               IF GETFILTER("Buy-from Vendor No.") <> '' THEN
                 IF GETRANGEMIN("Buy-from Vendor No.") = GETRANGEMAX("Buy-from Vendor No.") THEN
                   VALIDATE("Buy-from Vendor No.",GETRANGEMIN("Buy-from Vendor No."));

               "Doc. No. Occurrence" := ArchiveManagement.GetNextOccurrenceNo(DATABASE::"Purchase Header","Document Type","No.");

               // PHP Start
               "Created By User ID" := USERID;
               IF (("Request Type" = "Request Type"::"Cash Advance") OR ("Request Type" = "Request Type"::Liquidation)) AND ("Job No." = '') THEN BEGIN
                 IF UserSetup.GET(USERID) AND (UserSetup."Vendor Individual No." <> '') AND (FromJobPlanningLines = FALSE) THEN
                   VALIDATE("Buy-from Vendor No.", UserSetup."Vendor Individual No.");
               END;
               // PHP End
             END;

    OnDelete=VAR
               ArchiveManagement@1000 : Codeunit 5063;
             BEGIN
               IF NOT UserSetupMgt.CheckRespCenter(1,"Responsibility Center") THEN
                 ERROR(
                   Text023,
                   RespCenter.TABLECAPTION,UserSetupMgt.GetPurchasesFilter);

               PurchPost.DeleteHeader(
                 Rec,PurchRcptHeader,PurchInvHeader,PurchCrMemoHeader,
                 ReturnShptHeader,PurchInvHeaderPrepmt,PurchCrMemoHeaderPrepmt);

               ArchiveManagement.AutoArchivePurchDocument(Rec);

               VALIDATE("Applies-to ID",'');
               VALIDATE("Incoming Document Entry No.",0);

               ApprovalsMgmt.DeleteApprovalEntries(RECORDID);
               PurchLine.LOCKTABLE;

               WhseRequest.SETRANGE("Source Type",DATABASE::"Purchase Line");
               WhseRequest.SETRANGE("Source Subtype","Document Type");
               WhseRequest.SETRANGE("Source No.","No.");
               WhseRequest.DELETEALL(TRUE);

               PurchLine.SETRANGE("Document Type","Document Type");
               PurchLine.SETRANGE("Document No.","No.");
               PurchLine.SETRANGE(Type,PurchLine.Type::"Charge (Item)");
               DeletePurchaseLines;
               PurchLine.SETRANGE(Type);
               DeletePurchaseLines;

               PurchCommentLine.SETRANGE("Document Type","Document Type");
               PurchCommentLine.SETRANGE("No.","No.");
               PurchCommentLine.DELETEALL;

               IF (PurchRcptHeader."No." <> '') OR
                  (PurchInvHeader."No." <> '') OR
                  (PurchCrMemoHeader."No." <> '') OR
                  (ReturnShptHeader."No." <> '') OR
                  (PurchInvHeaderPrepmt."No." <> '') OR
                  (PurchCrMemoHeaderPrepmt."No." <> '')
               THEN
                 MESSAGE(PostedDocsToPrintCreatedMsg);
             END;

    OnRename=BEGIN
               ERROR(Text003,TABLECAPTION);
             END;

    CaptionML=ENU=Purchase Header;
    LookupPageID=Page53;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF "Request Type" = "Request Type"::"Cash Advance" THEN BEGIN
                                                                  IF ("Buy-from Vendor No." = '') THEN
                                                                    TESTFIELD("Buy-from Vendor No.");
                                                                END;

                                                                InitRecOnVendUpdate;
                                                                TESTFIELD(Status,Status::Open);
                                                                IF ("Buy-from Vendor No." <> xRec."Buy-from Vendor No.") AND
                                                                   (xRec."Buy-from Vendor No." <> '')
                                                                THEN BEGIN
                                                                  CheckDropShipmentLineExists;
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text004,FALSE,FIELDCAPTION("Buy-from Vendor No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    PurchLine.SETRANGE("Document Type","Document Type");
                                                                    PurchLine.SETRANGE("Document No.","No.");
                                                                    IF "Buy-from Vendor No." = '' THEN BEGIN
                                                                      IF NOT PurchLine.ISEMPTY THEN
                                                                        ERROR(
                                                                          Text005,
                                                                          FIELDCAPTION("Buy-from Vendor No."));
                                                                      INIT;
                                                                      PurchSetup.GET;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      InitNoSeries;
                                                                      EXIT;
                                                                    END;
                                                                    IF "Document Type" = "Document Type"::Order THEN
                                                                      PurchLine.SETFILTER("Quantity Received",'<>0')
                                                                    ELSE
                                                                      IF "Document Type" = "Document Type"::Invoice THEN BEGIN
                                                                        PurchLine.SETRANGE("Buy-from Vendor No.",xRec."Buy-from Vendor No.");
                                                                        PurchLine.SETFILTER("Receipt No.",'<>%1','');
                                                                      END;
                                                                    IF PurchLine.FINDFIRST THEN
                                                                      IF "Document Type" = "Document Type"::Order THEN
                                                                        PurchLine.TESTFIELD("Quantity Received",0)
                                                                      ELSE
                                                                        PurchLine.TESTFIELD("Receipt No.",'');

                                                                    PurchLine.SETRANGE("Receipt No.");
                                                                    PurchLine.SETRANGE("Quantity Received");
                                                                    PurchLine.SETRANGE("Buy-from Vendor No.");

                                                                    IF "Document Type" = "Document Type"::Order THEN BEGIN
                                                                      PurchLine.SETFILTER("Prepmt. Amt. Inv.",'<>0');
                                                                      IF PurchLine.FIND('-') THEN
                                                                        PurchLine.TESTFIELD("Prepmt. Amt. Inv.",0);
                                                                      PurchLine.SETRANGE("Prepmt. Amt. Inv.");
                                                                    END;

                                                                    IF "Document Type" = "Document Type"::"Return Order" THEN
                                                                      PurchLine.SETFILTER("Return Qty. Shipped",'<>0')
                                                                    ELSE
                                                                      IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
                                                                        PurchLine.SETRANGE("Buy-from Vendor No.",xRec."Buy-from Vendor No.");
                                                                        PurchLine.SETFILTER("Return Shipment No.",'<>%1','');
                                                                      END;
                                                                    IF PurchLine.FINDFIRST THEN
                                                                      IF "Document Type" = "Document Type"::"Return Order" THEN
                                                                        PurchLine.TESTFIELD("Return Qty. Shipped",0)
                                                                      ELSE
                                                                        PurchLine.TESTFIELD("Return Shipment No.",'');

                                                                    PurchLine.RESET;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                GetVend("Buy-from Vendor No.");
                                                                Vend.CheckBlockedVendOnDocs(Vend,FALSE);
                                                                Vend.TESTFIELD("Gen. Bus. Posting Group");
                                                                "Buy-from Vendor Name" := Vend.Name;
                                                                "Buy-from Vendor Name 2" := Vend."Name 2";
                                                                "Buy-from Address" := Vend.Address;
                                                                "Buy-from Address 2" := Vend."Address 2";
                                                                "Buy-from City" := Vend.City;
                                                                "Buy-from Post Code" := Vend."Post Code";
                                                                "Buy-from County" := Vend.County;
                                                                "Buy-from Country/Region Code" := Vend."Country/Region Code";
                                                                IF NOT SkipBuyFromContact THEN
                                                                  "Buy-from Contact" := Vend.Contact;
                                                                "Gen. Bus. Posting Group" := Vend."Gen. Bus. Posting Group";
                                                                "VAT Bus. Posting Group" := Vend."VAT Bus. Posting Group";
                                                                "WHT Business Posting Group" := Vend."WHT Business Posting Group";  //PHL0.01
                                                                "Tax Area Code" := Vend."Tax Area Code";
                                                                "Tax Liable" := Vend."Tax Liable";
                                                                "VAT Country/Region Code" := Vend."Country/Region Code";
                                                                "VAT Registration No." := Vend."VAT Registration No.";
                                                                VALIDATE("Lead Time Calculation",Vend."Lead Time Calculation");
                                                                // PHP Start - Change of Responsibility Center | New Request Type

                                                                CASE "Request Type" OF
                                                                  "Request Type"::"Cash Advance":
                                                                    "Responsibility Center" := UserSetupMgt.GetCashAdvanceFilter;
                                                                  "Request Type"::Liquidation:
                                                                    "Responsibility Center" := UserSetupMgt.GetCashAdvanceLiquidationFilter;
                                                                  "Request Type"::"Request for Payment":
                                                                    "Responsibility Center" := UserSetupMgt.GetRFPayFilter;
                                                                  "Request Type"::"Request for Purchase":
                                                                    "Responsibility Center" := UserSetupMgt.GetRFPurFilter;
                                                                ELSE
                                                                 // Original Code
                                                                   "Responsibility Center" := UserSetupMgt.GetRespCenter(1,Vend."Responsibility Center");
                                                                 // End of Original Code
                                                                END;
                                                                // PHP End
                                                                VALIDATE("Sell-to Customer No.",'');
                                                                VALIDATE("Location Code",UserSetupMgt.GetLocation(1,Vend."Location Code","Responsibility Center"));

                                                                IF "Buy-from Vendor No." = xRec."Pay-to Vendor No." THEN
                                                                  IF ReceivedPurchLinesExist OR ReturnShipmentExist THEN BEGIN
                                                                    TESTFIELD("VAT Bus. Posting Group",xRec."VAT Bus. Posting Group");
                                                                    TESTFIELD("Gen. Bus. Posting Group",xRec."Gen. Bus. Posting Group");
                                                                  END;

                                                                "Buy-from IC Partner Code" := Vend."IC Partner Code";
                                                                "Send IC Document" := ("Buy-from IC Partner Code" <> '') AND ("IC Direction" = "IC Direction"::Outgoing);

                                                                IF Vend."Pay-to Vendor No." <> '' THEN
                                                                  VALIDATE("Pay-to Vendor No.",Vend."Pay-to Vendor No.")
                                                                ELSE BEGIN
                                                                  IF "Buy-from Vendor No." = "Pay-to Vendor No." THEN
                                                                    SkipPayToContact := TRUE;
                                                                  VALIDATE("Pay-to Vendor No.","Buy-from Vendor No.");
                                                                  SkipPayToContact := FALSE;
                                                                END;
                                                                "Order Address Code" := '';

                                                                VALIDATE("Order Address Code");

                                                                IF (xRec."Buy-from Vendor No." <> "Buy-from Vendor No.") OR
                                                                   (xRec."Currency Code" <> "Currency Code") OR
                                                                   (xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group") OR
                                                                   (xRec."VAT Bus. Posting Group" <> "VAT Bus. Posting Group")
                                                                THEN
                                                                  RecreatePurchLines(FIELDCAPTION("Buy-from Vendor No."));

                                                                IF NOT SkipBuyFromContact THEN
                                                                  UpdateBuyFromCont("Buy-from Vendor No.");

                                                                // PHP Start - Parameter for separating the Local and Foreign Purchases
                                                                VALIDATE("Vendor Type", Vend."Vendor Type");
                                                                // PHP End
                                                              END;

                                                   CaptionML=ENU=Buy-from Vendor No. }
    { 3   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 4   ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                IF (xRec."Pay-to Vendor No." <> "Pay-to Vendor No.") AND
                                                                   (xRec."Pay-to Vendor No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text004,FALSE,FIELDCAPTION("Pay-to Vendor No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    PurchLine.SETRANGE("Document Type","Document Type");
                                                                    PurchLine.SETRANGE("Document No.","No.");

                                                                    IF "Document Type" = "Document Type"::Order THEN
                                                                      PurchLine.SETFILTER("Quantity Received",'<>0');
                                                                    IF "Document Type" = "Document Type"::Invoice THEN
                                                                      PurchLine.SETFILTER("Receipt No.",'<>%1','');
                                                                    IF PurchLine.FINDFIRST THEN
                                                                      IF "Document Type" = "Document Type"::Order THEN
                                                                        PurchLine.TESTFIELD("Quantity Received",0)
                                                                      ELSE
                                                                        PurchLine.TESTFIELD("Receipt No.",'');

                                                                    PurchLine.SETRANGE("Receipt No.");
                                                                    PurchLine.SETRANGE("Quantity Received");

                                                                    IF "Document Type" = "Document Type"::Order THEN BEGIN
                                                                      PurchLine.SETFILTER("Prepmt. Amt. Inv.",'<>0');
                                                                      IF PurchLine.FIND('-') THEN
                                                                        PurchLine.TESTFIELD("Prepmt. Amt. Inv.",0);
                                                                      PurchLine.SETRANGE("Prepmt. Amt. Inv.");
                                                                    END;

                                                                    IF "Document Type" = "Document Type"::"Return Order" THEN
                                                                      PurchLine.SETFILTER("Return Qty. Shipped",'<>0');
                                                                    IF "Document Type" = "Document Type"::"Credit Memo" THEN
                                                                      PurchLine.SETFILTER("Return Shipment No.",'<>%1','');
                                                                    IF PurchLine.FINDFIRST THEN
                                                                      IF "Document Type" = "Document Type"::"Return Order" THEN
                                                                        PurchLine.TESTFIELD("Return Qty. Shipped",0)
                                                                      ELSE
                                                                        PurchLine.TESTFIELD("Return Shipment No.",'');

                                                                    PurchLine.RESET;
                                                                  END ELSE
                                                                    "Pay-to Vendor No." := xRec."Pay-to Vendor No.";
                                                                END;

                                                                GetVend("Pay-to Vendor No.");
                                                                Vend.CheckBlockedVendOnDocs(Vend,FALSE);
                                                                Vend.TESTFIELD("Vendor Posting Group");

                                                                "Pay-to Name" := Vend.Name;
                                                                "Pay-to Name 2" := Vend."Name 2";
                                                                "Pay-to Address" := Vend.Address;
                                                                "Pay-to Address 2" := Vend."Address 2";
                                                                "Pay-to City" := Vend.City;
                                                                "Pay-to Post Code" := Vend."Post Code";
                                                                "Pay-to County" := Vend.County;
                                                                "Pay-to Country/Region Code" := Vend."Country/Region Code";
                                                                IF NOT SkipPayToContact THEN
                                                                  "Pay-to Contact" := Vend.Contact;
                                                                "Payment Terms Code" := Vend."Payment Terms Code";
                                                                "Prepmt. Payment Terms Code" := Vend."Payment Terms Code";

                                                                IF "Document Type" = "Document Type"::"Credit Memo" THEN BEGIN
                                                                  "Payment Method Code" := '';
                                                                  IF PaymentTerms.GET("Payment Terms Code") THEN
                                                                    IF PaymentTerms."Calc. Pmt. Disc. on Cr. Memos" THEN
                                                                      "Payment Method Code" := Vend."Payment Method Code"
                                                                END ELSE
                                                                  "Payment Method Code" := Vend."Payment Method Code";

                                                                "Shipment Method Code" := Vend."Shipment Method Code";
                                                                "Vendor Posting Group" := Vend."Vendor Posting Group";
                                                                GLSetup.GET;
                                                                IF GLSetup."Bill-to/Sell-to VAT Calc." = GLSetup."Bill-to/Sell-to VAT Calc."::"Bill-to/Pay-to No." THEN BEGIN
                                                                  "VAT Bus. Posting Group" := Vend."VAT Bus. Posting Group";
                                                                  "VAT Country/Region Code" := Vend."Country/Region Code";
                                                                  "VAT Registration No." := Vend."VAT Registration No.";
                                                                  "Gen. Bus. Posting Group" := Vend."Gen. Bus. Posting Group";
                                                                END;
                                                                "Prices Including VAT" := Vend."Prices Including VAT";
                                                                "Currency Code" := Vend."Currency Code";
                                                                "Invoice Disc. Code" := Vend."Invoice Disc. Code";
                                                                "Language Code" := Vend."Language Code";
                                                                // "Purchaser Code" := Vend."Purchaser Code"; // Original Code
                                                                VALIDATE("Payment Terms Code");
                                                                VALIDATE("Prepmt. Payment Terms Code");
                                                                VALIDATE("Payment Method Code");
                                                                VALIDATE("Currency Code");
                                                                VALIDATE("Creditor No.",Vend."Creditor No.");

                                                                IF "Document Type" = "Document Type"::Order THEN
                                                                  VALIDATE("Prepayment %",Vend."Prepayment %");

                                                                IF "Pay-to Vendor No." = xRec."Pay-to Vendor No." THEN BEGIN
                                                                  IF ReceivedPurchLinesExist THEN
                                                                    TESTFIELD("Currency Code",xRec."Currency Code");
                                                                END;
                                                                // PHP Start
                                                                IF "INTP No." <> '' THEN
                                                                // PHP End
                                                                 CreateDim(
                                                                   DATABASE::Vendor,"Pay-to Vendor No.",
                                                                   DATABASE::"Salesperson/Purchaser","Purchaser Code",
                                                                   DATABASE::Campaign,"Campaign No.",
                                                                   DATABASE::"Responsibility Center","Responsibility Center");
                                                                IF (xRec."Buy-from Vendor No." = "Buy-from Vendor No.") AND
                                                                   (xRec."Pay-to Vendor No." <> "Pay-to Vendor No.")
                                                                THEN
                                                                  RecreatePurchLines(FIELDCAPTION("Pay-to Vendor No."));

                                                                IF NOT SkipPayToContact THEN
                                                                  UpdatePayToCont("Pay-to Vendor No.");

                                                                "Pay-to IC Partner Code" := Vend."IC Partner Code";

                                                                // PHP Start
                                                                IF "Vendor Type" = "Vendor Type"::Foreign THEN BEGIN
                                                                  VALIDATE("Shipper No.", "Buy-from Vendor No.");
                                                                END;

                                                                // PHP End
                                                              END;

                                                   CaptionML=ENU=Pay-to Vendor No.;
                                                   NotBlank=Yes }
    { 5   ;   ;Pay-to Name         ;Text50        ;CaptionML=ENU=Pay-to Name }
    { 6   ;   ;Pay-to Name 2       ;Text50        ;CaptionML=ENU=Pay-to Name 2 }
    { 7   ;   ;Pay-to Address      ;Text50        ;CaptionML=ENU=Pay-to Address }
    { 8   ;   ;Pay-to Address 2    ;Text50        ;CaptionML=ENU=Pay-to Address 2 }
    { 9   ;   ;Pay-to City         ;Text30        ;TableRelation=IF (Pay-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Pay-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Pay-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Pay-to City }
    { 10  ;   ;Pay-to Contact      ;Text50        ;CaptionML=ENU=Pay-to Contact }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Sell-to Customer No.));
                                                   OnValidate=BEGIN
                                                                IF ("Document Type" = "Document Type"::Order) AND
                                                                   (xRec."Ship-to Code" <> "Ship-to Code")
                                                                THEN BEGIN
                                                                  PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
                                                                  PurchLine.SETRANGE("Document No.","No.");
                                                                  PurchLine.SETFILTER("Sales Order Line No.",'<>0');
                                                                  IF NOT PurchLine.ISEMPTY THEN
                                                                    ERROR(
                                                                      YouCannotChangeFieldErr,
                                                                      FIELDCAPTION("Ship-to Code"));
                                                                END;

                                                                IF "Ship-to Code" <> '' THEN BEGIN
                                                                  ShipToAddr.GET("Sell-to Customer No.","Ship-to Code");
                                                                  "Ship-to Name" := ShipToAddr.Name;
                                                                  "Ship-to Name 2" := ShipToAddr."Name 2";
                                                                  "Ship-to Address" := ShipToAddr.Address;
                                                                  "Ship-to Address 2" := ShipToAddr."Address 2";
                                                                  "Ship-to City" := ShipToAddr.City;
                                                                  "Ship-to Post Code" := ShipToAddr."Post Code";
                                                                  "Ship-to County" := ShipToAddr.County;
                                                                  "Ship-to Country/Region Code" := ShipToAddr."Country/Region Code";
                                                                  "Ship-to Contact" := ShipToAddr.Contact;
                                                                  "Shipment Method Code" := ShipToAddr."Shipment Method Code";
                                                                  IF ShipToAddr."Location Code" <> '' THEN
                                                                    VALIDATE("Location Code",ShipToAddr."Location Code");
                                                                END ELSE BEGIN
                                                                  TESTFIELD("Sell-to Customer No.");
                                                                  Cust.GET("Sell-to Customer No.");
                                                                  "Ship-to Name" := Cust.Name;
                                                                  "Ship-to Name 2" := Cust."Name 2";
                                                                  "Ship-to Address" := Cust.Address;
                                                                  "Ship-to Address 2" := Cust."Address 2";
                                                                  "Ship-to City" := Cust.City;
                                                                  "Ship-to Post Code" := Cust."Post Code";
                                                                  "Ship-to County" := Cust.County;
                                                                  "Ship-to Country/Region Code" := Cust."Country/Region Code";
                                                                  "Ship-to Contact" := Cust.Contact;
                                                                  "Shipment Method Code" := Cust."Shipment Method Code";
                                                                  IF Cust."Location Code" <> '' THEN
                                                                    VALIDATE("Location Code",Cust."Location Code");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Ship-to Code }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to City }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 19  ;   ;Order Date          ;Date          ;OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;

                                                                IF ("Document Type" IN ["Document Type"::Quote,"Document Type"::Order]) AND
                                                                   NOT ("Order Date" = xRec."Order Date")
                                                                THEN
                                                                  PriceMessageIfPurchLinesExist(FIELDCAPTION("Order Date"));
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Order Date }
    { 20  ;   ;Posting Date        ;Date          ;OnValidate=VAR
                                                                SkipJobCurrFactorUpdate@1000 : Boolean;
                                                              BEGIN
                                                                TestNoSeriesDate(
                                                                  "Posting No.","Posting No. Series",
                                                                  FIELDCAPTION("Posting No."),FIELDCAPTION("Posting No. Series"));
                                                                TestNoSeriesDate(
                                                                  "Prepayment No.","Prepayment No. Series",
                                                                  FIELDCAPTION("Prepayment No."),FIELDCAPTION("Prepayment No. Series"));
                                                                TestNoSeriesDate(
                                                                  "Prepmt. Cr. Memo No.","Prepmt. Cr. Memo No. Series",
                                                                  FIELDCAPTION("Prepmt. Cr. Memo No."),FIELDCAPTION("Prepmt. Cr. Memo No. Series"));

                                                                // IF "Incoming Document Entry No." = 0 THEN // ORIGINAL CODE
                                                                //  VALIDATE("Document Date","Posting Date"); // ORIGINAL CODE

                                                                IF ("Document Type" IN ["Document Type"::Invoice,"Document Type"::"Credit Memo"]) AND
                                                                   NOT ("Posting Date" = xRec."Posting Date")
                                                                THEN
                                                                  PriceMessageIfPurchLinesExist(FIELDCAPTION("Posting Date"));

                                                                IF "Currency Code" <> '' THEN BEGIN
                                                                  UpdateCurrencyFactor;
                                                                  IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                    SkipJobCurrFactorUpdate := NOT ConfirmUpdateCurrencyFactor;
                                                                END;

                                                                IF "Posting Date" <> xRec."Posting Date" THEN
                                                                  IF DeferralHeadersExist THEN
                                                                    ConfirmUpdateDeferralDate;

                                                                IF PurchLinesExist THEN
                                                                  JobUpdatePurchLines(SkipJobCurrFactorUpdate);
                                                              END;

                                                   CaptionML=ENU=Posting Date }
    { 21  ;   ;Expected Receipt Date;Date         ;OnValidate=BEGIN
                                                                UpdatePurchLines(FIELDCAPTION("Expected Receipt Date"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Expected Receipt Date }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=ENU=Posting Description }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   OnValidate=VAR
                                                                InStr@1001 : InStream;
                                                                OutStr@1000 : OutStream;
                                                              BEGIN
                                                                IF ("Payment Terms Code" <> '') AND ("Document Date" <> 0D) THEN BEGIN
                                                                  PaymentTerms.GET("Payment Terms Code");
                                                                  IF (("Document Type" IN ["Document Type"::"Return Order","Document Type"::"Credit Memo"]) AND
                                                                      NOT PaymentTerms."Calc. Pmt. Disc. on Cr. Memos")
                                                                  THEN BEGIN
                                                                    VALIDATE("Due Date","Document Date");
                                                                    VALIDATE("Pmt. Discount Date",0D);
                                                                    VALIDATE("Payment Discount %",0);
                                                                  END ELSE BEGIN
                                                                    "Due Date" := CALCDATE(PaymentTerms."Due Date Calculation","Document Date");
                                                                    "Pmt. Discount Date" := CALCDATE(PaymentTerms."Discount Date Calculation","Document Date");
                                                                    IF NOT UpdateDocumentDate THEN
                                                                      VALIDATE("Payment Discount %",PaymentTerms."Discount %")
                                                                  END;
                                                                END ELSE BEGIN
                                                                  VALIDATE("Due Date","Document Date");
                                                                  IF NOT UpdateDocumentDate THEN BEGIN
                                                                    VALIDATE("Pmt. Discount Date",0D);
                                                                    VALIDATE("Payment Discount %",0);
                                                                  END;
                                                                END;
                                                                IF xRec."Payment Terms Code" = "Prepmt. Payment Terms Code" THEN
                                                                  VALIDATE("Prepmt. Payment Terms Code","Payment Terms Code");
                                                              END;

                                                   CaptionML=ENU=Payment Terms Code }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 25  ;   ;Payment Discount %  ;Decimal       ;OnValidate=BEGIN
                                                                IF NOT (CurrFieldNo IN [0,FIELDNO("Posting Date"),FIELDNO("Document Date")]) THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                GLSetup.GET;
                                                                IF "Payment Discount %" < GLSetup."VAT Tolerance %" THEN
                                                                  "VAT Base Discount %" := "Payment Discount %"
                                                                ELSE
                                                                  "VAT Base Discount %" := GLSetup."VAT Tolerance %";
                                                                VALIDATE("VAT Base Discount %");
                                                              END;

                                                   CaptionML=ENU=Payment Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=ENU=Pmt. Discount Date }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   OnValidate=VAR
                                                                ShipmentMethod@1000 : Record 10;
                                                              BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;

                                                                // IF "Shipment Method Code" <> '' THEN BEGIN
                                                                //  ShipmentMethod.GET("Shipment Method Code");
                                                                // END ELSE BEGIN
                                                                //  CLEAR(ShipmentMethod);
                                                                // END;
                                                                //
                                                                // "Shipment Method" := ShipmentMethod.Description;
                                                              END;

                                                   CaptionML=ENU=Shipment Method Code }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;

                                                                IF ("Location Code" <> xRec."Location Code") AND
                                                                   (xRec."Buy-from Vendor No." = "Buy-from Vendor No.")
                                                                THEN
                                                                  MessageIfPurchLinesExist(FIELDCAPTION("Location Code"));

                                                                UpdateShipToAddress;

                                                                IF "Location Code" = '' THEN BEGIN
                                                                  IF InvtSetup.GET THEN
                                                                    "Inbound Whse. Handling Time" := InvtSetup."Inbound Whse. Handling Time";
                                                                END ELSE BEGIN
                                                                  IF Location.GET("Location Code") THEN;
                                                                  "Inbound Whse. Handling Time" := Location."Inbound Whse. Handling Time";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Location Code }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1),
                                                                                               Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Vendor Posting Group;Code10        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=ENU=Vendor Posting Group;
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF NOT (CurrFieldNo IN [0,FIELDNO("Posting Date")]) OR ("Currency Code" <> xRec."Currency Code") THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                IF (CurrFieldNo <> FIELDNO("Currency Code")) AND ("Currency Code" = xRec."Currency Code") THEN
                                                                  UpdateCurrencyFactor
                                                                ELSE
                                                                  IF "Currency Code" <> xRec."Currency Code" THEN BEGIN
                                                                    UpdateCurrencyFactor;
                                                                    IF PurchLinesExist THEN
                                                                      IF CONFIRM(ChangeCurrencyQst,FALSE,FIELDCAPTION("Currency Code")) THEN BEGIN
                                                                        SetHideValidationDialog(TRUE);
                                                                        RecreatePurchLines(FIELDCAPTION("Currency Code"));
                                                                        SetHideValidationDialog(FALSE);
                                                                      END ELSE
                                                                        ERROR(Text018,FIELDCAPTION("Currency Code"));
                                                                  END ELSE
                                                                    IF "Currency Code" <> '' THEN BEGIN
                                                                      UpdateCurrencyFactor;
                                                                      IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                        ConfirmUpdateCurrencyFactor;
                                                                    END;
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 33  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Currency Factor" <> xRec."Currency Factor" THEN
                                                                  UpdatePurchLines(FIELDCAPTION("Currency Factor"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Currency Factor;
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=No }
    { 35  ;   ;Prices Including VAT;Boolean       ;OnValidate=VAR
                                                                PurchLine@1000 : Record 39;
                                                                Currency@1001 : Record 4;
                                                                RecalculatePrice@1002 : Boolean;
                                                              BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;

                                                                IF "Prices Including VAT" <> xRec."Prices Including VAT" THEN BEGIN
                                                                  PurchLine.SETRANGE("Document Type","Document Type");
                                                                  PurchLine.SETRANGE("Document No.","No.");
                                                                  PurchLine.SETFILTER("Direct Unit Cost",'<>%1',0);
                                                                  PurchLine.SETFILTER("VAT %",'<>%1',0);
                                                                  IF PurchLine.FIND('-') THEN BEGIN
                                                                    RecalculatePrice :=
                                                                      CONFIRM(
                                                                        STRSUBSTNO(
                                                                          Text025 +
                                                                          Text027,
                                                                          FIELDCAPTION("Prices Including VAT"),PurchLine.FIELDCAPTION("Direct Unit Cost")),
                                                                        TRUE);
                                                                    PurchLine.SetPurchHeader(Rec);

                                                                    IF RecalculatePrice AND "Prices Including VAT" THEN
                                                                      PurchLine.MODIFYALL(Amount,0,TRUE);

                                                                    IF "Currency Code" = '' THEN
                                                                      Currency.InitRoundingPrecision
                                                                    ELSE
                                                                      Currency.GET("Currency Code");

                                                                    PurchLine.FINDSET;
                                                                    REPEAT
                                                                      PurchLine.TESTFIELD("Quantity Invoiced",0);
                                                                      PurchLine.TESTFIELD("Prepmt. Amt. Inv.",0);
                                                                      IF NOT RecalculatePrice THEN BEGIN
                                                                        PurchLine."VAT Difference" := 0;
                                                                        PurchLine.UpdateAmounts;
                                                                      END ELSE
                                                                        IF "Prices Including VAT" THEN BEGIN
                                                                          PurchLine."Direct Unit Cost" :=
                                                                            ROUND(
                                                                              PurchLine."Direct Unit Cost" * (1 + PurchLine."VAT %" / 100),
                                                                              Currency."Unit-Amount Rounding Precision");
                                                                          IF PurchLine.Quantity <> 0 THEN BEGIN
                                                                            PurchLine."Line Discount Amount" :=
                                                                              ROUND(
                                                                                PurchLine.Quantity * PurchLine."Direct Unit Cost" * PurchLine."Line Discount %" / 100,
                                                                                Currency."Amount Rounding Precision");
                                                                            PurchLine.VALIDATE("Inv. Discount Amount",
                                                                              ROUND(
                                                                                PurchLine."Inv. Discount Amount" * (1 + PurchLine."VAT %" / 100),
                                                                                Currency."Amount Rounding Precision"));
                                                                          END;
                                                                        END ELSE BEGIN
                                                                          PurchLine."Direct Unit Cost" :=
                                                                            ROUND(
                                                                              PurchLine."Direct Unit Cost" / (1 + PurchLine."VAT %" / 100),
                                                                              Currency."Unit-Amount Rounding Precision");
                                                                          IF PurchLine.Quantity <> 0 THEN BEGIN
                                                                            PurchLine."Line Discount Amount" :=
                                                                              ROUND(
                                                                                PurchLine.Quantity * PurchLine."Direct Unit Cost" * PurchLine."Line Discount %" / 100,
                                                                                Currency."Amount Rounding Precision");
                                                                            PurchLine.VALIDATE("Inv. Discount Amount",
                                                                              ROUND(
                                                                                PurchLine."Inv. Discount Amount" / (1 + PurchLine."VAT %" / 100),
                                                                                Currency."Amount Rounding Precision"));
                                                                          END;
                                                                        END;
                                                                      PurchLine.MODIFY;
                                                                    UNTIL PurchLine.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Prices Including VAT }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                MessageIfPurchLinesExist(FIELDCAPTION("Invoice Disc. Code"));
                                                              END;

                                                   CaptionML=ENU=Invoice Disc. Code }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   OnValidate=BEGIN
                                                                MessageIfPurchLinesExist(FIELDCAPTION("Language Code"));
                                                              END;

                                                   CaptionML=ENU=Language Code }
    { 43  ;   ;Purchaser Code      ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=VAR
                                                                ApprovalEntry@1001 : Record 454;
                                                                SalesPurchaser@1000 : Record 13;
                                                              BEGIN
                                                                ApprovalEntry.SETRANGE("Table ID",DATABASE::"Purchase Header");
                                                                ApprovalEntry.SETRANGE("Document Type","Document Type");
                                                                ApprovalEntry.SETRANGE("Document No.","No.");
                                                                ApprovalEntry.SETFILTER(Status,'%1|%2',ApprovalEntry.Status::Created,ApprovalEntry.Status::Open);
                                                                IF NOT ApprovalEntry.ISEMPTY THEN
                                                                  ERROR(Text042,FIELDCAPTION("Purchaser Code"));

                                                                // PHP (0) Uncomment to activate the autodimension in Purchaser code
                                                                // CreateDim(
                                                                //   DATABASE::"Salesperson/Purchaser","Purchaser Code",
                                                                //   DATABASE::Vendor,"Pay-to Vendor No.",
                                                                //   DATABASE::Campaign,"Campaign No.",
                                                                //   DATABASE::"Responsibility Center","Responsibility Center");
                                                                // PHP(1)

                                                                // PHP Start
                                                                IF SalesPurchaser.GET("Purchaser Code") THEN
                                                                  "Ship-to Contact" := SalesPurchaser.Name
                                                                ELSE
                                                                  CLEAR("Ship-to Contact");
                                                                // PHP End
                                                              END;

                                                   CaptionML=ENU=Purchaser Code }
    { 45  ;   ;Order Class         ;Code10        ;CaptionML=ENU=Order Class }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purch. Comment Line" WHERE (Document Type=FIELD(Document Type),
                                                                                                  No.=FIELD(No.),
                                                                                                  Document Line No.=CONST(0)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=ENU=No. Printed;
                                                   Editable=No }
    { 51  ;   ;On Hold             ;Code3         ;CaptionML=ENU=On Hold }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnValidate=BEGIN
                                                                IF "Applies-to Doc. No." <> '' THEN
                                                                  TESTFIELD("Bal. Account No.",'');

                                                                IF ("Applies-to Doc. No." <> xRec."Applies-to Doc. No.") AND (xRec."Applies-to Doc. No." <> '') AND
                                                                   ("Applies-to Doc. No." <> '')
                                                                THEN BEGIN
                                                                  SetAmountToApply("Applies-to Doc. No.","Buy-from Vendor No.");
                                                                  SetAmountToApply(xRec."Applies-to Doc. No.","Buy-from Vendor No.");
                                                                END ELSE
                                                                  IF ("Applies-to Doc. No." <> xRec."Applies-to Doc. No.") AND (xRec."Applies-to Doc. No." = '') THEN
                                                                    SetAmountToApply("Applies-to Doc. No.","Buy-from Vendor No.")
                                                                  ELSE
                                                                    IF ("Applies-to Doc. No." <> xRec."Applies-to Doc. No.") AND ("Applies-to Doc. No." = '') THEN
                                                                      SetAmountToApply(xRec."Applies-to Doc. No.","Buy-from Vendor No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              TESTFIELD("Bal. Account No.",'');
                                                              VendLedgEntry.SETCURRENTKEY("Vendor No.",Open,Positive,"Due Date");
                                                              VendLedgEntry.SETRANGE("Vendor No.","Pay-to Vendor No.");
                                                              VendLedgEntry.SETRANGE(Open,TRUE);
                                                              IF "Applies-to Doc. No." <> '' THEN BEGIN
                                                                VendLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                                VendLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                                IF VendLedgEntry.FINDFIRST THEN;
                                                                VendLedgEntry.SETRANGE("Document Type");
                                                                VendLedgEntry.SETRANGE("Document No.");
                                                              END ELSE
                                                                IF "Applies-to Doc. Type" <> 0 THEN BEGIN
                                                                  VendLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                                  IF VendLedgEntry.FINDFIRST THEN;
                                                                  VendLedgEntry.SETRANGE("Document Type");
                                                                END ELSE
                                                                  IF Amount <> 0 THEN BEGIN
                                                                    VendLedgEntry.SETRANGE(Positive,Amount < 0);
                                                                    IF VendLedgEntry.FINDFIRST THEN;
                                                                    VendLedgEntry.SETRANGE(Positive);
                                                                  END;
                                                              ApplyVendEntries.SetPurch(Rec,VendLedgEntry,PurchHeader.FIELDNO("Applies-to Doc. No."));
                                                              ApplyVendEntries.SETTABLEVIEW(VendLedgEntry);
                                                              ApplyVendEntries.SETRECORD(VendLedgEntry);
                                                              ApplyVendEntries.LOOKUPMODE(TRUE);
                                                              IF ApplyVendEntries.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ApplyVendEntries.GetVendLedgEntry(VendLedgEntry);
                                                                GenJnlApply.CheckAgainstApplnCurrency(
                                                                  "Currency Code",VendLedgEntry."Currency Code",GenJnILine."Account Type"::Vendor,TRUE);
                                                                "Applies-to Doc. Type" := VendLedgEntry."Document Type";
                                                                "Applies-to Doc. No." := VendLedgEntry."Document No.";
                                                              END;
                                                              CLEAR(ApplyVendEntries);
                                                            END;

                                                   CaptionML=ENU=Applies-to Doc. No. }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   OnValidate=BEGIN
                                                                IF "Bal. Account No." <> '' THEN
                                                                  CASE "Bal. Account Type" OF
                                                                    "Bal. Account Type"::"G/L Account":
                                                                      BEGIN
                                                                        GLAcc.GET("Bal. Account No.");
                                                                        GLAcc.CheckGLAcc;
                                                                        GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                      END;
                                                                    "Bal. Account Type"::"Bank Account":
                                                                      BEGIN
                                                                        BankAcc.GET("Bal. Account No.");
                                                                        BankAcc.TESTFIELD(Blocked,FALSE);
                                                                        BankAcc.TESTFIELD("Currency Code","Currency Code");
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Bal. Account No. }
    { 56  ;   ;Recalculate Invoice Disc.;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purchase Line" WHERE (Document Type=FIELD(Document Type),
                                                                                            Document No.=FIELD(No.),
                                                                                            Recalculate Invoice Disc.=CONST(Yes)));
                                                   CaptionML=ENU=Recalculate Invoice Disc.;
                                                   Editable=No }
    { 57  ;   ;Receive             ;Boolean       ;CaptionML=ENU=Receive }
    { 58  ;   ;Invoice             ;Boolean       ;CaptionML=ENU=Invoice }
    { 59  ;   ;Print Posted Documents;Boolean     ;CaptionML=ENU=Print Posted Documents }
    { 60  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line".Amount WHERE (Document Type=FIELD(Document Type),
                                                                                                 Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Amount Including VAT" WHERE (Document Type=FIELD(Document Type),
                                                                                                                 Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount Including VAT;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 62  ;   ;Receiving No.       ;Code20        ;CaptionML=ENU=Receiving No. }
    { 63  ;   ;Posting No.         ;Code20        ;CaptionML=ENU=Posting No. }
    { 64  ;   ;Last Receiving No.  ;Code20        ;TableRelation="Purch. Rcpt. Header";
                                                   CaptionML=ENU=Last Receiving No.;
                                                   Editable=No }
    { 65  ;   ;Last Posting No.    ;Code20        ;TableRelation="Purch. Inv. Header";
                                                   CaptionML=ENU=Last Posting No.;
                                                   Editable=No }
    { 66  ;   ;Vendor Order No.    ;Code35        ;CaptionML=ENU=Vendor Order No. }
    { 67  ;   ;Vendor Shipment No. ;Code35        ;CaptionML=ENU=Vendor Shipment No. }
    { 68  ;   ;Vendor Invoice No.  ;Code35        ;CaptionML=ENU=Vendor Invoice No. }
    { 69  ;   ;Vendor Cr. Memo No. ;Code35        ;CaptionML=ENU=Vendor Cr. Memo No. }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=ENU=VAT Registration No. }
    { 72  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                IF ("Document Type" = "Document Type"::Order) AND
                                                                   (xRec."Sell-to Customer No." <> "Sell-to Customer No.")
                                                                THEN BEGIN
                                                                  PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
                                                                  PurchLine.SETRANGE("Document No.","No.");
                                                                  PurchLine.SETFILTER("Sales Order Line No.",'<>0');
                                                                  IF NOT PurchLine.ISEMPTY THEN
                                                                    ERROR(
                                                                      YouCannotChangeFieldErr,
                                                                      FIELDCAPTION("Sell-to Customer No."));

                                                                  PurchLine.SETRANGE("Sales Order Line No.");
                                                                  PurchLine.SETFILTER("Special Order Sales Line No.",'<>0');
                                                                  IF NOT PurchLine.ISEMPTY THEN
                                                                    ERROR(
                                                                      YouCannotChangeFieldErr,
                                                                      FIELDCAPTION("Sell-to Customer No."));
                                                                END;

                                                                IF "Sell-to Customer No." = '' THEN
                                                                  VALIDATE("Location Code",UserSetupMgt.GetLocation(1,'',"Responsibility Center"))
                                                                ELSE
                                                                  VALIDATE("Ship-to Code",'');
                                                              END;

                                                   CaptionML=ENU=Sell-to Customer No. }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                IF (xRec."Buy-from Vendor No." = "Buy-from Vendor No.") AND
                                                                   (xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group")
                                                                THEN BEGIN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    "VAT Bus. Posting Group" := GenBusPostingGrp."Def. VAT Bus. Posting Group";
                                                                  RecreatePurchLines(FIELDCAPTION("Gen. Bus. Posting Group"));
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   OnValidate=BEGIN
                                                                UpdatePurchLines(FIELDCAPTION("Transaction Type"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Transaction Type }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   OnValidate=BEGIN
                                                                UpdatePurchLines(FIELDCAPTION("Transport Method"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Transport Method }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=ENU=VAT Country/Region Code }
    { 79  ;   ;Buy-from Vendor Name;Text50        ;CaptionML=ENU=Buy-from Vendor Name }
    { 80  ;   ;Buy-from Vendor Name 2;Text50      ;CaptionML=ENU=Buy-from Vendor Name 2 }
    { 81  ;   ;Buy-from Address    ;Text50        ;CaptionML=ENU=Buy-from Address }
    { 82  ;   ;Buy-from Address 2  ;Text50        ;CaptionML=ENU=Buy-from Address 2 }
    { 83  ;   ;Buy-from City       ;Text30        ;TableRelation=IF (Buy-from Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Buy-from Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Buy-from Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Buy-from City }
    { 84  ;   ;Buy-from Contact    ;Text50        ;CaptionML=ENU=Buy-from Contact }
    { 85  ;   ;Pay-to Post Code    ;Code20        ;TableRelation=IF (Pay-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Pay-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Pay-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=ENU=Pay-to Post Code }
    { 86  ;   ;Pay-to County       ;Text30        ;CaptionML=ENU=Pay-to County }
    { 87  ;   ;Pay-to Country/Region Code;Code10  ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Pay-to Country/Region Code }
    { 88  ;   ;Buy-from Post Code  ;Code20        ;TableRelation=IF (Buy-from Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Buy-from Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Buy-from Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=ENU=Buy-from Post Code }
    { 89  ;   ;Buy-from County     ;Text30        ;CaptionML=ENU=Buy-from County }
    { 90  ;   ;Buy-from Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=ENU=Buy-from Country/Region Code }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to Post Code }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to County }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country/Region Code }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Bank Account;
                                                   OptionString=G/L Account,Bank Account }
    { 95  ;   ;Order Address Code  ;Code10        ;TableRelation="Order Address".Code WHERE (Vendor No.=FIELD(Buy-from Vendor No.));
                                                   OnValidate=BEGIN
                                                                IF "Order Address Code" <> '' THEN BEGIN
                                                                  OrderAddr.GET("Buy-from Vendor No.","Order Address Code");
                                                                  "Buy-from Vendor Name" := OrderAddr.Name;
                                                                  "Buy-from Vendor Name 2" := OrderAddr."Name 2";
                                                                  "Buy-from Address" := OrderAddr.Address;
                                                                  "Buy-from Address 2" := OrderAddr."Address 2";
                                                                  "Buy-from City" := OrderAddr.City;
                                                                  "Buy-from Contact" := OrderAddr.Contact;
                                                                  "Buy-from Post Code" := OrderAddr."Post Code";
                                                                  "Buy-from County" := OrderAddr.County;
                                                                  "Buy-from Country/Region Code" := OrderAddr."Country/Region Code";

                                                                  IF ("Document Type" = "Document Type"::"Return Order") OR
                                                                     ("Document Type" = "Document Type"::"Credit Memo")
                                                                  THEN BEGIN
                                                                    "Ship-to Name" := OrderAddr.Name;
                                                                    "Ship-to Name 2" := OrderAddr."Name 2";
                                                                    "Ship-to Address" := OrderAddr.Address;
                                                                    "Ship-to Address 2" := OrderAddr."Address 2";
                                                                    "Ship-to City" := OrderAddr.City;
                                                                    "Ship-to Post Code" := OrderAddr."Post Code";
                                                                    "Ship-to County" := OrderAddr.County;
                                                                    "Ship-to Country/Region Code" := OrderAddr."Country/Region Code";
                                                                    "Ship-to Contact" := OrderAddr.Contact;
                                                                  END
                                                                END ELSE BEGIN
                                                                  GetVend("Buy-from Vendor No.");
                                                                  "Buy-from Vendor Name" := Vend.Name;
                                                                  "Buy-from Vendor Name 2" := Vend."Name 2";
                                                                  "Buy-from Address" := Vend.Address;
                                                                  "Buy-from Address 2" := Vend."Address 2";
                                                                  "Buy-from City" := Vend.City;
                                                                  "Buy-from Contact" := Vend.Contact;
                                                                  "Buy-from Post Code" := Vend."Post Code";
                                                                  "Buy-from County" := Vend.County;
                                                                  "Buy-from Country/Region Code" := Vend."Country/Region Code";

                                                                  IF ("Document Type" = "Document Type"::"Return Order") OR
                                                                     ("Document Type" = "Document Type"::"Credit Memo")
                                                                  THEN BEGIN
                                                                    "Ship-to Name" := Vend.Name;
                                                                    "Ship-to Name 2" := Vend."Name 2";
                                                                    "Ship-to Address" := Vend.Address;
                                                                    "Ship-to Address 2" := Vend."Address 2";
                                                                    "Ship-to City" := Vend.City;
                                                                    "Ship-to Post Code" := Vend."Post Code";
                                                                    "Ship-to County" := Vend.County;
                                                                    "Ship-to Country/Region Code" := Vend."Country/Region Code";
                                                                    "Ship-to Contact" := Vend.Contact;
                                                                    "Shipment Method Code" := Vend."Shipment Method Code";
                                                                    IF Vend."Location Code" <> '' THEN
                                                                      VALIDATE("Location Code",Vend."Location Code");
                                                                  END
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Order Address Code }
    { 97  ;   ;Entry Point         ;Code10        ;TableRelation="Entry/Exit Point";
                                                   OnValidate=BEGIN
                                                                UpdatePurchLines(FIELDCAPTION("Entry Point"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Entry Point }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=ENU=Correction }
    { 99  ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                IF xRec."Document Date" <> "Document Date" THEN
                                                                  UpdateDocumentDate := TRUE;
                                                                VALIDATE("Payment Terms Code");
                                                                VALIDATE("Prepmt. Payment Terms Code");
                                                              END;

                                                   CaptionML=ENU=Document Date }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   OnValidate=BEGIN
                                                                UpdatePurchLines(FIELDCAPTION(Area),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Area }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   OnValidate=BEGIN
                                                                UpdatePurchLines(FIELDCAPTION("Transaction Specification"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Transaction Specification }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=BEGIN
                                                                PaymentMethod.INIT;
                                                                IF "Payment Method Code" <> '' THEN
                                                                  PaymentMethod.GET("Payment Method Code");
                                                                "Bal. Account Type" := PaymentMethod."Bal. Account Type";
                                                                "Bal. Account No." := PaymentMethod."Bal. Account No.";
                                                                IF "Bal. Account No." <> '' THEN BEGIN
                                                                  TESTFIELD("Applies-to Doc. No.",'');
                                                                  TESTFIELD("Applies-to ID",'');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Payment Method Code }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 108 ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Posting No. Series" <> '' THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  TestNoSeries;
                                                                  NoSeriesMgt.TestSeries(GetPostingNoSeriesCode,"Posting No. Series");
                                                                END;
                                                                TESTFIELD("Posting No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH PurchHeader DO BEGIN
                                                                PurchHeader := Rec;
                                                                PurchSetup.GET;
                                                                TestNoSeries;
                                                                IF NoSeriesMgt.LookupSeries(GetPostingNoSeriesCode,"Posting No. Series") THEN
                                                                  VALIDATE("Posting No. Series");
                                                                Rec := PurchHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Posting No. Series }
    { 109 ;   ;Receiving No. Series;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Receiving No. Series" <> '' THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  PurchSetup.TESTFIELD("Posted Receipt Nos.");
                                                                  NoSeriesMgt.TestSeries(PurchSetup."Posted Receipt Nos.","Receiving No. Series");
                                                                END;
                                                                TESTFIELD("Receiving No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH PurchHeader DO BEGIN
                                                                PurchHeader := Rec;
                                                                PurchSetup.GET;
                                                                PurchSetup.TESTFIELD("Posted Receipt Nos.");
                                                                IF NoSeriesMgt.LookupSeries(PurchSetup."Posted Receipt Nos.","Receiving No. Series") THEN
                                                                  VALIDATE("Receiving No. Series");
                                                                Rec := PurchHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Receiving No. Series }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                MessageIfPurchLinesExist(FIELDCAPTION("Tax Area Code"));
                                                              END;

                                                   CaptionML=ENU=Tax Area Code }
    { 115 ;   ;Tax Liable          ;Boolean       ;OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                MessageIfPurchLinesExist(FIELDCAPTION("Tax Liable"));
                                                              END;

                                                   CaptionML=ENU=Tax Liable }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                IF (xRec."Buy-from Vendor No." = "Buy-from Vendor No.") AND
                                                                   (xRec."VAT Bus. Posting Group" <> "VAT Bus. Posting Group")
                                                                THEN
                                                                  RecreatePurchLines(FIELDCAPTION("VAT Bus. Posting Group"));
                                                              END;

                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 118 ;   ;Applies-to ID       ;Code50        ;OnValidate=VAR
                                                                TempVendLedgEntry@1000 : Record 25;
                                                              BEGIN
                                                                IF "Applies-to ID" <> '' THEN
                                                                  TESTFIELD("Bal. Account No.",'');
                                                                IF ("Applies-to ID" <> xRec."Applies-to ID") AND (xRec."Applies-to ID" <> '') THEN BEGIN
                                                                  VendLedgEntry.SETCURRENTKEY("Vendor No.",Open);
                                                                  VendLedgEntry.SETRANGE("Vendor No.","Pay-to Vendor No.");
                                                                  VendLedgEntry.SETRANGE(Open,TRUE);
                                                                  VendLedgEntry.SETRANGE("Applies-to ID",xRec."Applies-to ID");
                                                                  IF VendLedgEntry.FINDFIRST THEN
                                                                    VendEntrySetApplID.SetApplId(VendLedgEntry,TempVendLedgEntry,'');
                                                                  VendLedgEntry.RESET;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Applies-to ID }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;OnValidate=BEGIN
                                                                GLSetup.GET;
                                                                IF "VAT Base Discount %" > GLSetup."VAT Tolerance %" THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed :=
                                                                      CONFIRM(
                                                                        Text007 +
                                                                        Text008,FALSE,
                                                                        FIELDCAPTION("VAT Base Discount %"),
                                                                        GLSetup.FIELDCAPTION("VAT Tolerance %"),
                                                                        GLSetup.TABLECAPTION);
                                                                  IF NOT Confirmed THEN
                                                                    "VAT Base Discount %" := xRec."VAT Base Discount %";
                                                                END;

                                                                IF ("VAT Base Discount %" = xRec."VAT Base Discount %") AND
                                                                   (CurrFieldNo <> 0)
                                                                THEN
                                                                  EXIT;

                                                                PurchLine.SETRANGE("Document Type","Document Type");
                                                                PurchLine.SETRANGE("Document No.","No.");
                                                                PurchLine.SETFILTER(Type,'<>%1',PurchLine.Type::" ");
                                                                PurchLine.SETFILTER(Quantity,'<>0');
                                                                PurchLine.LOCKTABLE;
                                                                IF PurchLine.FINDSET THEN BEGIN
                                                                  MODIFY;
                                                                  REPEAT
                                                                    PurchLine.UpdateAmounts;
                                                                    PurchLine.MODIFY;
                                                                  UNTIL PurchLine.NEXT = 0;
                                                                END;
                                                                PurchLine.RESET;
                                                              END;

                                                   CaptionML=ENU=VAT Base Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 120 ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Released,Pending Approval,Pending Prepayment;
                                                   OptionString=Open,Released,Pending Approval,Pending Prepayment;
                                                   Editable=No }
    { 121 ;   ;Invoice Discount Calculation;Option;CaptionML=ENU=Invoice Discount Calculation;
                                                   OptionCaptionML=ENU=None,%,Amount;
                                                   OptionString=None,%,Amount;
                                                   Editable=No }
    { 122 ;   ;Invoice Discount Value;Decimal     ;CaptionML=ENU=Invoice Discount Value;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 123 ;   ;Send IC Document    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Send IC Document" THEN BEGIN
                                                                  TESTFIELD("Buy-from IC Partner Code");
                                                                  TESTFIELD("IC Direction","IC Direction"::Outgoing);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Send IC Document }
    { 124 ;   ;IC Status           ;Option        ;CaptionML=ENU=IC Status;
                                                   OptionCaptionML=ENU=New,Pending,Sent;
                                                   OptionString=New,Pending,Sent }
    { 125 ;   ;Buy-from IC Partner Code;Code20    ;TableRelation="IC Partner";
                                                   CaptionML=ENU=Buy-from IC Partner Code;
                                                   Editable=No }
    { 126 ;   ;Pay-to IC Partner Code;Code20      ;TableRelation="IC Partner";
                                                   CaptionML=ENU=Pay-to IC Partner Code;
                                                   Editable=No }
    { 129 ;   ;IC Direction        ;Option        ;OnValidate=BEGIN
                                                                IF "IC Direction" = "IC Direction"::Incoming THEN
                                                                  "Send IC Document" := FALSE;
                                                              END;

                                                   CaptionML=ENU=IC Direction;
                                                   OptionCaptionML=ENU=Outgoing,Incoming;
                                                   OptionString=Outgoing,Incoming }
    { 130 ;   ;Prepayment No.      ;Code20        ;CaptionML=ENU=Prepayment No. }
    { 131 ;   ;Last Prepayment No. ;Code20        ;TableRelation="Purch. Inv. Header";
                                                   CaptionML=ENU=Last Prepayment No. }
    { 132 ;   ;Prepmt. Cr. Memo No.;Code20        ;CaptionML=ENU=Prepmt. Cr. Memo No. }
    { 133 ;   ;Last Prepmt. Cr. Memo No.;Code20   ;TableRelation="Purch. Cr. Memo Hdr.";
                                                   CaptionML=ENU=Last Prepmt. Cr. Memo No. }
    { 134 ;   ;Prepayment %        ;Decimal       ;OnValidate=BEGIN
                                                                IF xRec."Prepayment %" <> "Prepayment %" THEN
                                                                  UpdatePurchLines(FIELDCAPTION("Prepayment %"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Prepayment %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 135 ;   ;Prepayment No. Series;Code10       ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Prepayment No. Series" <> '' THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  PurchSetup.TESTFIELD("Posted Prepmt. Inv. Nos.");
                                                                  NoSeriesMgt.TestSeries(GetPostingPrepaymentNoSeriesCode,"Prepayment No. Series");
                                                                END;
                                                                TESTFIELD("Prepayment No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH PurchHeader DO BEGIN
                                                                PurchHeader := Rec;
                                                                PurchSetup.GET;
                                                                PurchSetup.TESTFIELD("Posted Prepmt. Inv. Nos.");
                                                                IF NoSeriesMgt.LookupSeries(GetPostingPrepaymentNoSeriesCode,"Prepayment No. Series") THEN
                                                                  VALIDATE("Prepayment No. Series");
                                                                Rec := PurchHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Prepayment No. Series }
    { 136 ;   ;Compress Prepayment ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Compress Prepayment }
    { 137 ;   ;Prepayment Due Date ;Date          ;CaptionML=ENU=Prepayment Due Date }
    { 138 ;   ;Prepmt. Cr. Memo No. Series;Code10 ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Prepmt. Cr. Memo No. Series" <> '' THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  PurchSetup.TESTFIELD("Posted Prepmt. Cr. Memo Nos.");
                                                                  NoSeriesMgt.TestSeries(GetPostingPrepaymentNoSeriesCode,"Prepmt. Cr. Memo No. Series");
                                                                END;
                                                                TESTFIELD("Prepmt. Cr. Memo No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH PurchHeader DO BEGIN
                                                                PurchHeader := Rec;
                                                                PurchSetup.GET;
                                                                PurchSetup.TESTFIELD("Posted Prepmt. Cr. Memo Nos.");
                                                                IF NoSeriesMgt.LookupSeries(GetPostingPrepaymentNoSeriesCode,"Prepmt. Cr. Memo No. Series") THEN
                                                                  VALIDATE("Prepmt. Cr. Memo No. Series");
                                                                Rec := PurchHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Prepmt. Cr. Memo No. Series }
    { 139 ;   ;Prepmt. Posting Description;Text50 ;CaptionML=ENU=Prepmt. Posting Description }
    { 142 ;   ;Prepmt. Pmt. Discount Date;Date    ;CaptionML=ENU=Prepmt. Pmt. Discount Date }
    { 143 ;   ;Prepmt. Payment Terms Code;Code10  ;TableRelation="Payment Terms";
                                                   OnValidate=VAR
                                                                PaymentTerms@1000 : Record 3;
                                                              BEGIN
                                                                IF ("Prepmt. Payment Terms Code" <> '') AND ("Document Date" <> 0D) THEN BEGIN
                                                                  PaymentTerms.GET("Prepmt. Payment Terms Code");
                                                                  IF (("Document Type" IN ["Document Type"::"Return Order","Document Type"::"Credit Memo"]) AND
                                                                      NOT PaymentTerms."Calc. Pmt. Disc. on Cr. Memos")
                                                                  THEN BEGIN
                                                                    VALIDATE("Prepayment Due Date","Document Date");
                                                                    VALIDATE("Prepmt. Pmt. Discount Date",0D);
                                                                    VALIDATE("Prepmt. Payment Discount %",0);
                                                                  END ELSE BEGIN
                                                                    "Prepayment Due Date" := CALCDATE(PaymentTerms."Due Date Calculation","Document Date");
                                                                    "Prepmt. Pmt. Discount Date" := CALCDATE(PaymentTerms."Discount Date Calculation","Document Date");
                                                                    IF NOT UpdateDocumentDate THEN
                                                                      VALIDATE("Prepmt. Payment Discount %",PaymentTerms."Discount %")
                                                                  END;
                                                                END ELSE BEGIN
                                                                  VALIDATE("Prepayment Due Date","Document Date");
                                                                  IF NOT UpdateDocumentDate THEN BEGIN
                                                                    VALIDATE("Prepmt. Pmt. Discount Date",0D);
                                                                    VALIDATE("Prepmt. Payment Discount %",0);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Prepmt. Payment Terms Code }
    { 144 ;   ;Prepmt. Payment Discount %;Decimal ;OnValidate=BEGIN
                                                                IF NOT (CurrFieldNo IN [0,FIELDNO("Posting Date"),FIELDNO("Document Date")]) THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                                GLSetup.GET;
                                                                IF "Payment Discount %" < GLSetup."VAT Tolerance %" THEN
                                                                  "VAT Base Discount %" := "Payment Discount %"
                                                                ELSE
                                                                  "VAT Base Discount %" := GLSetup."VAT Tolerance %";
                                                                VALIDATE("VAT Base Discount %");
                                                              END;

                                                   CaptionML=ENU=Prepmt. Payment Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 151 ;   ;Quote No.           ;Code20        ;CaptionML=ENU=Quote No.;
                                                   Editable=No }
    { 160 ;   ;Job Queue Status    ;Option        ;OnLookup=VAR
                                                              JobQueueEntry@1000 : Record 472;
                                                            BEGIN
                                                              IF "Job Queue Status" = "Job Queue Status"::" " THEN
                                                                EXIT;
                                                              JobQueueEntry.ShowStatusMsg("Job Queue Entry ID");
                                                            END;

                                                   CaptionML=ENU=Job Queue Status;
                                                   OptionCaptionML=ENU=" ,Scheduled for Posting,Error,Posting";
                                                   OptionString=[ ,Scheduled for Posting,Error,Posting];
                                                   Editable=No }
    { 161 ;   ;Job Queue Entry ID  ;GUID          ;CaptionML=ENU=Job Queue Entry ID;
                                                   Editable=No }
    { 165 ;   ;Incoming Document Entry No.;Integer;TableRelation="Incoming Document";
                                                   OnValidate=VAR
                                                                IncomingDocument@1000 : Record 130;
                                                              BEGIN
                                                                IF "Incoming Document Entry No." = xRec."Incoming Document Entry No." THEN
                                                                  EXIT;
                                                                IF "Incoming Document Entry No." = 0 THEN
                                                                  IncomingDocument.RemoveReferenceToWorkingDocument(xRec."Incoming Document Entry No.")
                                                                ELSE
                                                                  IncomingDocument.SetPurchDoc(Rec);
                                                              END;

                                                   CaptionML=ENU=Incoming Document Entry No. }
    { 170 ;   ;Creditor No.        ;Code20        ;CaptionML=ENU=Creditor No.;
                                                   Numeric=Yes }
    { 171 ;   ;Payment Reference   ;Code50        ;OnValidate=BEGIN
                                                                IF "Payment Reference" <> '' THEN
                                                                  TESTFIELD("Creditor No.");
                                                              END;

                                                   CaptionML=ENU=Payment Reference;
                                                   Numeric=Yes }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 1305;   ;Invoice Discount Amount;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Inv. Discount Amount" WHERE (Document No.=FIELD(No.),
                                                                                                                 Document Type=FIELD(Document Type)));
                                                   CaptionML=ENU=Invoice Discount Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5000;   ;Blocked             ;Boolean        }
    { 5043;   ;No. of Archived Versions;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Max("Purchase Header Archive"."Version No." WHERE (Document Type=FIELD(Document Type),
                                                                                                                  No.=FIELD(No.),
                                                                                                                  Doc. No. Occurrence=FIELD(Doc. No. Occurrence)));
                                                   CaptionML=ENU=No. of Archived Versions;
                                                   Editable=No }
    { 5048;   ;Doc. No. Occurrence ;Integer       ;CaptionML=ENU=Doc. No. Occurrence }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   OnValidate=BEGIN
                                                                // CreateDim(
                                                                //  DATABASE::Campaign,"Campaign No.",
                                                                //  DATABASE::Vendor,"Pay-to Vendor No.",
                                                                //  DATABASE::"Salesperson/Purchaser","Purchaser Code",
                                                                //  DATABASE::"Responsibility Center","Responsibility Center");
                                                              END;

                                                   CaptionML=ENU=Campaign No. }
    { 5052;   ;Buy-from Contact No.;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                ContBusinessRelation@1000 : Record 5054;
                                                                Cont@1002 : Record 5050;
                                                              BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;

                                                                IF ("Buy-from Contact No." <> xRec."Buy-from Contact No.") AND
                                                                   (xRec."Buy-from Contact No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text004,FALSE,FIELDCAPTION("Buy-from Contact No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    PurchLine.SETRANGE("Document Type","Document Type");
                                                                    PurchLine.SETRANGE("Document No.","No.");
                                                                    IF ("Buy-from Contact No." = '') AND ("Buy-from Vendor No." = '') THEN BEGIN
                                                                      IF NOT PurchLine.ISEMPTY THEN
                                                                        ERROR(
                                                                          Text005,
                                                                          FIELDCAPTION("Buy-from Contact No."));
                                                                      INIT;
                                                                      PurchSetup.GET;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      InitNoSeries;
                                                                      EXIT;
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                IF ("Buy-from Vendor No." <> '') AND ("Buy-from Contact No." <> '') THEN BEGIN
                                                                  Cont.GET("Buy-from Contact No.");
                                                                  ContBusinessRelation.RESET;
                                                                  ContBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Vendor);
                                                                  ContBusinessRelation.SETRANGE("No.","Buy-from Vendor No.");
                                                                  IF ContBusinessRelation.FINDFIRST THEN
                                                                    IF ContBusinessRelation."Contact No." <> Cont."Company No." THEN
                                                                      ERROR(Text038,Cont."No.",Cont.Name,"Buy-from Vendor No.");
                                                                END;

                                                                UpdateBuyFromVend("Buy-from Contact No.");
                                                              END;

                                                   OnLookup=VAR
                                                              Cont@1001 : Record 5050;
                                                              ContBusinessRelation@1000 : Record 5054;
                                                            BEGIN
                                                              IF "Buy-from Vendor No." <> '' THEN
                                                                IF Cont.GET("Buy-from Contact No.") THEN
                                                                  Cont.SETRANGE("Company No.",Cont."Company No.")
                                                                ELSE BEGIN
                                                                  ContBusinessRelation.RESET;
                                                                  ContBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Vendor);
                                                                  ContBusinessRelation.SETRANGE("No.","Buy-from Vendor No.");
                                                                  IF ContBusinessRelation.FINDFIRST THEN
                                                                    Cont.SETRANGE("Company No.",ContBusinessRelation."Contact No.")
                                                                  ELSE
                                                                    Cont.SETRANGE("No.",'');
                                                                END;

                                                              IF "Buy-from Contact No." <> '' THEN
                                                                IF Cont.GET("Buy-from Contact No.") THEN ;
                                                              IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                                                xRec := Rec;
                                                                VALIDATE("Buy-from Contact No.",Cont."No.");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Buy-from Contact No. }
    { 5053;   ;Pay-to Contact No.  ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                ContBusinessRelation@1004 : Record 5054;
                                                                Cont@1002 : Record 5050;
                                                              BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;

                                                                IF ("Pay-to Contact No." <> xRec."Pay-to Contact No.") AND
                                                                   (xRec."Pay-to Contact No." <> '')
                                                                THEN BEGIN
                                                                  IF HideValidationDialog THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text004,FALSE,FIELDCAPTION("Pay-to Contact No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    PurchLine.SETRANGE("Document Type","Document Type");
                                                                    PurchLine.SETRANGE("Document No.","No.");
                                                                    IF ("Pay-to Contact No." = '') AND ("Pay-to Vendor No." = '') THEN BEGIN
                                                                      IF NOT PurchLine.ISEMPTY THEN
                                                                        ERROR(
                                                                          Text005,
                                                                          FIELDCAPTION("Pay-to Contact No."));
                                                                      INIT;
                                                                      PurchSetup.GET;
                                                                      "No. Series" := xRec."No. Series";
                                                                      InitRecord;
                                                                      InitNoSeries;
                                                                      EXIT;
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    "Pay-to Contact No." := xRec."Pay-to Contact No.";
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                IF ("Pay-to Vendor No." <> '') AND ("Pay-to Contact No." <> '') THEN BEGIN
                                                                  Cont.GET("Pay-to Contact No.");
                                                                  ContBusinessRelation.RESET;
                                                                  ContBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Vendor);
                                                                  ContBusinessRelation.SETRANGE("No.","Pay-to Vendor No.");
                                                                  IF ContBusinessRelation.FINDFIRST THEN
                                                                    IF ContBusinessRelation."Contact No." <> Cont."Company No." THEN
                                                                      ERROR(Text038,Cont."No.",Cont.Name,"Pay-to Vendor No.");
                                                                END;

                                                                UpdatePayToVend("Pay-to Contact No.");
                                                              END;

                                                   OnLookup=VAR
                                                              Cont@1000 : Record 5050;
                                                              ContBusinessRelation@1001 : Record 5054;
                                                            BEGIN
                                                              IF "Pay-to Vendor No." <> '' THEN
                                                                IF Cont.GET("Pay-to Contact No.") THEN
                                                                  Cont.SETRANGE("Company No.",Cont."Company No.")
                                                                ELSE BEGIN
                                                                  ContBusinessRelation.RESET;
                                                                  ContBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Vendor);
                                                                  ContBusinessRelation.SETRANGE("No.","Pay-to Vendor No.");
                                                                  IF ContBusinessRelation.FINDFIRST THEN
                                                                    Cont.SETRANGE("Company No.",ContBusinessRelation."Contact No.")
                                                                  ELSE
                                                                    Cont.SETRANGE("No.",'');
                                                                END;

                                                              IF "Pay-to Contact No." <> '' THEN
                                                                IF Cont.GET("Pay-to Contact No.") THEN ;
                                                              IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                                                xRec := Rec;
                                                                VALIDATE("Pay-to Contact No.",Cont."No.");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Pay-to Contact No. }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                // TestPurchaseHeaderDocStatus;
                                                                IF NOT UserSetupMgt.CheckRespCenter(1,"Responsibility Center") THEN
                                                                  ERROR(
                                                                    Text028,
                                                                    RespCenter.TABLECAPTION,UserSetupMgt.GetPurchasesFilter);

                                                                "Location Code" := UserSetupMgt.GetLocation(1,'',"Responsibility Center");
                                                                IF "Location Code" = '' THEN BEGIN
                                                                  IF InvtSetup.GET THEN
                                                                    "Inbound Whse. Handling Time" := InvtSetup."Inbound Whse. Handling Time";
                                                                END ELSE BEGIN
                                                                  IF Location.GET("Location Code") THEN;
                                                                  "Inbound Whse. Handling Time" := Location."Inbound Whse. Handling Time";
                                                                END;

                                                                UpdateShipToAddress;

                                                                // PHP Start Uncomment to update the dim using the responsibility Center
                                                                // CreateDim(
                                                                //   DATABASE::"Responsibility Center","Responsibility Center",
                                                                //   DATABASE::Vendor,"Pay-to Vendor No.",
                                                                //   DATABASE::"Salesperson/Purchaser","Purchaser Code",
                                                                //   DATABASE::Campaign,"Campaign No.");
                                                                 IF xRec."Responsibility Center" <> "Responsibility Center" THEN BEGIN
                                                                   UpdatePurchLineRespCenter;
                                                                   "Assigned User ID" := '';
                                                                  END;
                                                                // PHP End
                                                              END;

                                                   CaptionML=ENU=Responsibility Center }
    { 5752;   ;Completely Received ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Min("Purchase Line"."Completely Received" WHERE (Document Type=FIELD(Document Type),
                                                                                                                Document No.=FIELD(No.),
                                                                                                                Type=FILTER(<>' '),
                                                                                                                Location Code=FIELD(Location Filter)));
                                                   CaptionML=ENU=Completely Received;
                                                   Editable=No }
    { 5753;   ;Posting from Whse. Ref.;Integer    ;AccessByPermission=TableData 14=R;
                                                   CaptionML=ENU=Posting from Whse. Ref. }
    { 5754;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Location;
                                                   CaptionML=ENU=Location Filter }
    { 5790;   ;Requested Receipt Date;Date        ;OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                IF "Promised Receipt Date" <> 0D THEN
                                                                  ERROR(
                                                                    Text034,
                                                                    FIELDCAPTION("Requested Receipt Date"),
                                                                    FIELDCAPTION("Promised Receipt Date"));

                                                                IF "Requested Receipt Date" <> xRec."Requested Receipt Date" THEN
                                                                  UpdatePurchLines(FIELDCAPTION("Requested Receipt Date"),CurrFieldNo <> 0);
                                                              END;

                                                   AccessByPermission=TableData 99000880=R;
                                                   CaptionML=ENU=Requested Receipt Date }
    { 5791;   ;Promised Receipt Date;Date         ;OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                IF "Promised Receipt Date" <> xRec."Promised Receipt Date" THEN
                                                                  UpdatePurchLines(FIELDCAPTION("Promised Receipt Date"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Promised Receipt Date }
    { 5792;   ;Lead Time Calculation;DateFormula  ;OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                LeadTimeMgt.CheckLeadTimeIsNotNegative("Lead Time Calculation");

                                                                IF "Lead Time Calculation" <> xRec."Lead Time Calculation" THEN
                                                                  UpdatePurchLines(FIELDCAPTION("Lead Time Calculation"),CurrFieldNo <> 0);
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Lead Time Calculation }
    { 5793;   ;Inbound Whse. Handling Time;DateFormula;
                                                   OnValidate=BEGIN
                                                                // TESTFIELD(Status,Status::Open);
                                                                TestPurchaseHeaderDocStatus;
                                                                IF "Inbound Whse. Handling Time" <> xRec."Inbound Whse. Handling Time" THEN
                                                                  UpdatePurchLines(FIELDCAPTION("Inbound Whse. Handling Time"),CurrFieldNo <> 0);
                                                              END;

                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=ENU=Inbound Whse. Handling Time }
    { 5796;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 5800;   ;Vendor Authorization No.;Code35    ;CaptionML=ENU=Vendor Authorization No. }
    { 5801;   ;Return Shipment No. ;Code20        ;CaptionML=ENU=Return Shipment No. }
    { 5802;   ;Return Shipment No. Series;Code10  ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Return Shipment No. Series" <> '' THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  PurchSetup.TESTFIELD("Posted Return Shpt. Nos.");
                                                                  NoSeriesMgt.TestSeries(PurchSetup."Posted Return Shpt. Nos.","Return Shipment No. Series");
                                                                END;
                                                                TESTFIELD("Return Shipment No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH PurchHeader DO BEGIN
                                                                PurchHeader := Rec;
                                                                PurchSetup.GET;
                                                                PurchSetup.TESTFIELD("Posted Return Shpt. Nos.");
                                                                IF NoSeriesMgt.LookupSeries(PurchSetup."Posted Return Shpt. Nos.","Return Shipment No. Series") THEN
                                                                  VALIDATE("Return Shipment No. Series");
                                                                Rec := PurchHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Return Shipment No. Series }
    { 5803;   ;Ship                ;Boolean       ;CaptionML=ENU=Ship }
    { 5804;   ;Last Return Shipment No.;Code20    ;TableRelation="Return Shipment Header";
                                                   CaptionML=ENU=Last Return Shipment No.;
                                                   Editable=No }
    { 9000;   ;Assigned User ID    ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                IF NOT UserSetupMgt.CheckRespCenter2(1,"Responsibility Center","Assigned User ID") THEN
                                                                  ERROR(
                                                                    Text049,"Assigned User ID",
                                                                    RespCenter.TABLECAPTION,UserSetupMgt.GetPurchasesFilter2("Assigned User ID"));
                                                              END;

                                                   CaptionML=ENU=Assigned User ID }
    { 9001;   ;Pending Approvals   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Approval Entry" WHERE (Table ID=CONST(38),
                                                                                             Document Type=FIELD(Document Type),
                                                                                             Document No.=FIELD(No.),
                                                                                             Status=FILTER(Open|Created)));
                                                   CaptionML=ENU=Pending Approvals }
    { 50001;  ;Request Type        ;Option        ;CaptionML=ENU=Request Type;
                                                   OptionCaptionML=ENU=" ,Cash Advance,Request for Payment,Liquidation,Reimbursement,Request for Purchase";
                                                   OptionString=[ ,Cash Advance,Request for Payment,Liquidation,Reimbursement,Request for Purchase];
                                                   Editable=No }
    { 50030;  ;Reference RFP No.   ;Code20        ;TableRelation="Request for Purchase";
                                                   OnValidate=BEGIN
                                                                //cduGlobalReference.GetRequestforPurchaseLines("Request for Purchase No.","No.");
                                                              END;

                                                   Editable=No }
    { 50031;  ;Created By User ID  ;Text50        ;Editable=No }
    { 50500;  ;WHT Business Posting Group;Code10  ;TableRelation="WHT Business Posting Group";
                                                   CaptionML=ENU=WHT Business Posting Group;
                                                   Description=PHL0.01 }
    { 50510;  ;Job Order No.       ;Code20        ;TableRelation="Job Order" WHERE (Status=FILTER(<>Open));
                                                   OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                                IF JobOrder.GET("Job Order No.") THEN BEGIN
                                                                  VALIDATE("Service Report No.", JobOrder."Service Report No.");
                                                                  IF JobOrder."Site Survey" THEN
                                                                    VALIDATE("Type of Activity", "Type of Activity"::"Site Survey");
                                                                  IF JobOrder."Installation and Commissioning" THEN
                                                                    VALIDATE("Type of Activity", "Type of Activity"::Installation);
                                                                  IF JobOrder."Preliminary Acceptance" THEN
                                                                    VALIDATE("Type of Activity", "Type of Activity"::PAT);
                                                                  IF JobOrder.Troubleshooting THEN
                                                                    VALIDATE("Type of Activity", "Type of Activity"::Troubleshooting);
                                                                  IF JobOrder.Permitting THEN
                                                                    VALIDATE("Type of Activity", "Type of Activity"::Permitting);
                                                                  IF JobOrder.Rectification THEN
                                                                    VALIDATE("Type of Activity", "Type of Activity"::Rectification);

                                                                END ELSE BEGIN
                                                                  CLEAR("Service Report No.");
                                                                END;
                                                              END;
                                                               }
    { 50600;  ;Job No.             ;Code20        ;TableRelation=Job WHERE (Blocked=CONST(" "));
                                                   OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50610;  ;Job Type            ;Option        ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;

                                                   OptionCaptionML=ENU=" ,Service Engineering,Others,Pre-Delivery Inspection,Inspection Upon Delivery";
                                                   OptionString=[ ,Service Engineering,Others,Pre-Delivery Inspection,Inspection Upon Delivery] }
    { 50615;  ;Canvass Sheet No.   ;Code20        ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50620;  ;AWL/BL No.          ;Code20        ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50625;  ;Service Report No.  ;Code50         }
    { 50630;  ;INTP No.            ;Code20        ;TableRelation="Internal Notice to Proceed" WHERE (Status=FILTER(<>Cancelled),
                                                                                                     Approval Status=CONST(Released));
                                                   OnValidate=VAR
                                                                INTP@1000 : Record 50040;
                                                                TempDimensionSet@1001 : TEMPORARY Record 480;
                                                                DimValue@1002 : Record 349;
                                                                Res@1003 : Record 156;
                                                              BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                                TESTFIELD("Buy-from Vendor No.");
                                                                IF INTP.GET("INTP No.") THEN BEGIN
                                                                  // "Dimension Set ID" := DimMgt.EditDimensionSet2(INTP."Dimension Set ID", STRSUBSTNO('%1 %2',"Document Type","No."),
                                                                  // "Shortcut Dimension 1 Code", "Shortcut Dimension 2 Code");
                                                                  CreateDim2(DATABASE::"Internal Notice to Proceed", "INTP No.");
                                                                  IF ("Dimension Set ID" <> xRec."Dimension Set ID") AND PurchLinesExist THEN BEGIN
                                                                    MODIFY;
                                                                    UpdateAllLineDim("Dimension Set ID", xRec."Dimension Set ID");
                                                                  END;
                                                                //  IF Status = Status::Open THEN BEGIN
                                                                //    IF Res.GET(INTP."Project Manager No.") THEN
                                                                //      VALIDATE("Project Manager No.", INTP."Project Manager No.");
                                                                //    IF Res.GET(INTP."Sales Engineer No.") THEN
                                                                //      VALIDATE("Technical In-Charge", INTP."Sales Engineer No.");
                                                                //    IF ("Request Type" = "Request Type"::"Request for Purchase") AND Res.GET(INTP."Cost Analyst No.") THEN
                                                                //      VALIDATE("Cost Analyst No.", INTP."Cost Analyst No.");
                                                                //  END;
                                                                END;
                                                              END;
                                                               }
    { 50631;  ;Special Instruction ;Text250       ;OnValidate=BEGIN
                                                                // TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50633;  ;Warranty            ;Text250       ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50636;  ;Shipment Method     ;Text100       ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50640;  ;Terms and Condition ;BLOB          ;SubType=Memo }
    { 50641;  ;Shipping Instruction;BLOB          ;SubType=Memo }
    { 50642;  ;Penalty Clause      ;BLOB          ;SubType=Memo }
    { 50700;  ;Outstanding Amount  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount" WHERE (Document Type=FIELD(Document Type),
                                                                                                               Document No.=FIELD(No.))) }
    { 50710;  ;Vendor Type         ;Option        ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;

                                                                IF "Vendor Type" = "Vendor Type"::"Local" THEN
                                                                  "Generate Notice of Shipment" := "Generate Notice of Shipment"::No;
                                                                IF "Vendor Type" = "Vendor Type"::Foreign THEN
                                                                  "Generate Notice of Shipment" := "Generate Notice of Shipment"::Yes;

                                                                IF "Vendor Type" <> xRec."Vendor Type" THEN BEGIN
                                                                  CLEAR("Consignee Code");
                                                                END;
                                                              END;

                                                   OptionCaptionML=ENU=Local,Foreign,Employee;
                                                   OptionString=Local,Foreign,Employee }
    { 50720;  ;Cash Advance No.    ;Code20        ;TableRelation="Purch. Inv. Header".No. WHERE (Request Type=CONST(Cash Advance));
                                                   OnLookup=VAR
                                                              PstdCA@1000 : Page 50024;
                                                              PurchInvHeader_@1001 : Record 122;
                                                            BEGIN
                                                              IF "Cash Advance No." <> '' THEN
                                                                IF PurchInvHeader_.GET("Cash Advance No.") THEN ;
                                                              IF PAGE.RUNMODAL(PAGE::"Posted Cash Advances", PurchInvHeader_) = ACTION::LookupOK THEN BEGIN
                                                                xRec := xRec;
                                                                VALIDATE("Cash Advance No.", PurchInvHeader_."No.");
                                                              END;
                                                            END;
                                                             }
    { 50725;  ;Endorse To          ;Code20        ;TableRelation=Resource }
    { 50730;  ;Purpose             ;Text50        ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50735;  ;Ship-to Email Address;Text50       ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50740;  ;Date of Activity From;Date         ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                                IF "Date of Activity From" > "Date of Activity To" THEN
                                                                  "Date of Activity To" := "Date of Activity From";
                                                              END;
                                                               }
    { 50745;  ;Date of Activity To ;Date          ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                                IF "Date of Activity To" < "Date of Activity From" THEN
                                                                  "Date of Activity From" := "Date of Activity To";
                                                              END;
                                                               }
    { 50750;  ;Ground Manager No.  ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person),
                                                                                 Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50755;  ;NOC In-Charge No.   ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person),
                                                                                 Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50760;  ;Request for Exception No.;Code20   ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Invoice),
                                                                                           Request type=CONST(Request For Exception),
                                                                                           Status=FILTER(Released|Pending Approval));
                                                   OnLookup=VAR
                                                              SalesHdr@1000 : Record 36;
                                                            BEGIN
                                                              // PHP Start
                                                              TestPurchaseHeaderDocStatus;
                                                              SalesHdr.SETFILTER(Status, '%1|%2',SalesHdr.Status::Released, SalesHdr.Status::"Pending Approval");
                                                              IF "Request for Exception No." <> '' THEN
                                                                IF  SalesHdr.GET(SalesHdr."Document Type"::Invoice, "Request for Exception No.") THEN;
                                                              IF PAGE.RUNMODAL(PAGE::"Request for Exceptions", SalesHdr) = ACTION::LookupOK THEN BEGIN
                                                                  xRec := Rec;
                                                                VALIDATE("Request for Exception No.",SalesHdr."No.");
                                                              END;
                                                            END;
                                                             }
    { 50765;  ;Work Change Request No.;Code20     ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Invoice),
                                                                                           Request type=CONST(Work Change Request),
                                                                                           Status=FILTER(Released|Pending Approval));
                                                   OnLookup=VAR
                                                              SalesHdr@1000 : Record 36;
                                                            BEGIN
                                                               TestPurchaseHeaderDocStatus;
                                                               SalesHdr.SETFILTER(Status, '%1|%2',SalesHdr.Status::Released, SalesHdr.Status::"Pending Approval");
                                                               IF "Work Change Request No." <> '' THEN
                                                                IF  SalesHdr.GET(SalesHdr."Document Type"::Invoice, "Work Change Request No.") THEN;
                                                               IF PAGE.RUNMODAL(PAGE::"Work Change Request List", SalesHdr) = ACTION::LookupOK THEN BEGIN
                                                                  xRec := Rec;
                                                                VALIDATE("Work Change Request No.",SalesHdr."No.");
                                                               END;
                                                            END;
                                                             }
    { 50770;  ;Project Manager No. ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person),
                                                                                 Blocked=CONST(No));
                                                   OnValidate=VAR
                                                                Res@1000 : Record 156;
                                                              BEGIN
                                                                TestPurchaseHeaderDocStatus;

                                                                // IF ("Request Type" = "Request Type"::"Cash Advance") AND Res.GET("Project Manager No.") AND (WORKDATE < 083120D) THEN
                                                                //  MESSAGE('The system has detected a project manger. This document will be routed to the project manager incharge %1.', Res.Name);
                                                              END;
                                                               }
    { 50775;  ;Payment Terms       ;BLOB          ;SubType=Memo }
    { 50780;  ;Generate Notice of Shipment;Option ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;

                                                   OptionCaptionML=ENU=" ,Yes,No";
                                                   OptionString=[ ,Yes,No] }
    { 50785;  ;Freight Budget      ;Decimal       ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;

                                                   AutoFormatType=2 }
    { 50790;  ;Shipper No.         ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50791;  ;Consignee Code      ;Code20        ;TableRelation=Customer }
    { 50795;  ;Shipping Marks      ;BLOB          ;SubType=Memo }
    { 50800;  ;Insurance           ;BLOB          ;SubType=Memo }
    { 50810;  ;Preferred Bank Account;Code10      ;TableRelation="Vendor Bank Account".Code WHERE (Vendor No.=FIELD(Pay-to Vendor No.));
                                                   CaptionML=ENU=Preferred Bank Account }
    { 50820;  ;Technical In-Charge ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person),
                                                                                 Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50825;  ;Employee No.        ;Code20        ;TableRelation=Employee }
    { 50830;  ;Cost Analyst No.    ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person),
                                                                                 Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                              END;
                                                               }
    { 50835;  ;TSSR Status         ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Max("Incoming Document"."TSSR Status" WHERE (Post Code=FIELD(FILTER(Buy-from Post Code)),
                                                                                                            Country/Region Code=FIELD(FILTER(Buy-from Country/Region Code))));
                                                   CaptionML=ENU=Technical Site Survey Status;
                                                   OptionCaptionML=ENU=" ,Not Yet Submitted by PIE/Surveyor Incharge,Awaits Approval from Technical,Awaits Approval from GT,Approved by Client";
                                                   OptionString=[ ,Not Yet Submitted by PIE/Surveyor Incharge,Awaits Approval from Technical,Awaits Approval from GT,Approved by Client];
                                                   Editable=No }
    { 50840;  ;Prepayment Invoices ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE (Prepayment Order No.=FIELD(No.)));
                                                   Editable=No }
    { 50841;  ;Receipts            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Rcpt. Header" WHERE (Order No.=FIELD(No.)));
                                                   Editable=No }
    { 50842;  ;Invoices            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE (Order No.=FIELD(No.)));
                                                   Editable=No }
    { 50850;  ;Type of Activity    ;Option        ;OnValidate=BEGIN
                                                                TestPurchaseHeaderDocStatus;
                                                                IF "Type of Activity" <> "Type of Activity"::" " THEN BEGIN
                                                                  VALIDATE(Purpose, FORMAT("Type of Activity"));
                                                                  VALIDATE("Job Type", "Job Type"::"Service Engineering");
                                                                END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,Site Survey,Asset Checklist,Installation,Commissioning & Testing,Pre-PAT,PAT,Punchlist Clearing,Troubleshooting,Permitting,Rectification,Pre-Delivery Inspection,Inspection Upon Delivery";
                                                   OptionString=[ ,Site Survey,Asset Checklist,Installation,Commissioning & Testing,Pre-PAT,PAT,Punchlist Clearing,Troubleshooting,Permitting,Rectification,Pre-Delivery Inspection,Inspection Upon Delivery];
                                                   Description=Daily Deployment Report }
    { 50851;  ;No. of Visit        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Daily Deployment Report" WHERE (Post Code=FIELD(Buy-from Post Code),
                                                                                                      Follow-up Visit=CONST(Yes),
                                                                                                      Type of Activity=FIELD(Type of Activity)));
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 50855;  ;Customer Deposit    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Job Ledger Entry" WHERE (Job No.=FIELD(Job No.),
                                                                                               Entry Type=CONST(Sale)));
                                                   Editable=No }
    { 50860;  ;With Job Entry      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purchase Line" WHERE (Document Type=FIELD(Document Type),
                                                                                            Document No.=FIELD(No.),
                                                                                            Job No.=FILTER(<>'')));
                                                   Editable=No }
    { 50870;  ;With Prepayment Invoice;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purch. Inv. Header" WHERE (Prepayment Order No.=FIELD(No.)));
                                                   Editable=No }
    { 50880;  ;Project Category    ;Code20        ;TableRelation="Project Category" }
    { 50890;  ;Outstanding Amount (LCY);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount (LCY)" WHERE (Document Type=FIELD(Document Type),
                                                                                                                     Document No.=FIELD(No.)));
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document Type,No.                       ;Clustered=Yes }
    {    ;No.,Document Type                        }
    {    ;Document Type,Buy-from Vendor No.        }
    {    ;Document Type,Pay-to Vendor No.          }
    {    ;Buy-from Vendor No.                      }
    {    ;Incoming Document Entry No.              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text003@1003 : TextConst 'ENU=You cannot rename a %1.';
      Text004@1004 : TextConst 'ENU=Do you want to change %1?';
      Text005@1005 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.';
      YouCannotChangeFieldErr@1006 : TextConst '@@@=%1 - fieldcaption;ENU=You cannot change %1 because the order is associated with one or more sales orders.';
      Text007@1007 : TextConst 'ENU=%1 is greater than %2 in the %3 table.\';
      Text008@1008 : TextConst 'ENU=Confirm change?';
      Text009@1009 : TextConst 'ENU="Deleting this document will cause a gap in the number series for receipts. "';
      Text010@1010 : TextConst 'ENU=An empty receipt %1 will be created to fill this gap in the number series.\\';
      Text011@1011 : TextConst 'ENU=Do you want to continue?';
      Text012@1012 : TextConst 'ENU="Deleting this document will cause a gap in the number series for posted invoices. "';
      Text013@1013 : TextConst 'ENU=An empty posted invoice %1 will be created to fill this gap in the number series.\\';
      Text014@1014 : TextConst 'ENU="Deleting this document will cause a gap in the number series for posted credit memos. "';
      Text015@1015 : TextConst 'ENU=An empty posted credit memo %1 will be created to fill this gap in the number series.\\';
      Text016@1016 : TextConst 'ENU=If you change %1, the existing purchase lines will be deleted and new purchase lines based on the new information in the header will be created.\\';
      Text018@1017 : TextConst 'ENU=You must delete the existing purchase lines before you can change %1.';
      Text019@1018 : TextConst 'ENU=You have changed %1 on the purchase header, but it has not been changed on the existing purchase lines.\';
      Text020@1019 : TextConst 'ENU=You must update the existing purchase lines manually.';
      Text021@1020 : TextConst 'ENU=The change may affect the exchange rate used on the price calculation of the purchase lines.';
      Text022@1021 : TextConst 'ENU=Do you want to update the exchange rate?';
      Text023@1022 : TextConst 'ENU=You cannot delete this document. Your identification is set up to process from %1 %2 only.';
      Text025@1024 : TextConst 'ENU="You have modified the %1 field. Note that the recalculation of VAT may cause penny differences, so you must check the amounts afterwards. "';
      Text027@1026 : TextConst 'ENU=Do you want to update the %2 field on the lines to reflect the new value of %1?';
      Text028@1027 : TextConst 'ENU=Your identification is set up to process from %1 %2 only.';
      Text029@1028 : TextConst 'ENU="Deleting this document will cause a gap in the number series for return shipments. "';
      Text030@1029 : TextConst 'ENU=An empty return shipment %1 will be created to fill this gap in the number series.\\';
      Text032@1031 : TextConst 'ENU=You have modified %1.\\';
      Text033@1032 : TextConst 'ENU=Do you want to update the lines?';
      PurchSetup@1033 : Record 312;
      GLSetup@1034 : Record 98;
      GLAcc@1035 : Record 15;
      PurchLine@1036 : Record 39;
      xPurchLine@1080 : Record 39;
      VendLedgEntry@1037 : Record 25;
      Vend@1038 : Record 23;
      PaymentTerms@1039 : Record 3;
      PaymentMethod@1040 : Record 289;
      CurrExchRate@1041 : Record 330;
      PurchHeader@1042 : Record 38;
      PurchCommentLine@1043 : Record 43;
      ShipToAddr@1044 : Record 222;
      Cust@1045 : Record 18;
      CompanyInfo@1046 : Record 79;
      PostCode@1047 : Record 225;
      OrderAddr@1048 : Record 224;
      BankAcc@1049 : Record 270;
      PurchRcptHeader@1050 : Record 120;
      PurchInvHeader@1051 : Record 122;
      PurchCrMemoHeader@1052 : Record 124;
      ReturnShptHeader@1053 : Record 6650;
      PurchInvHeaderPrepmt@1090 : Record 122;
      PurchCrMemoHeaderPrepmt@1089 : Record 124;
      GenBusPostingGrp@1054 : Record 250;
      GenJnILine@1055 : Record 81;
      RespCenter@1056 : Record 5714;
      Location@1057 : Record 14;
      WhseRequest@1058 : Record 5765;
      InvtSetup@1059 : Record 313;
      CustomSetup@1023 : Record 50001;
      JobOrder@1083 : Record 50012;
      IncomingDocument@1088 : Record 130;
      InternalNoticeToProceed@1098 : Record 50040;
      NoSeriesMgt@1060 : Codeunit 396;
      TransferExtendedText@1061 : Codeunit 378;
      GenJnlApply@1062 : Codeunit 225;
      PurchPost@1063 : Codeunit 90;
      VendEntrySetApplID@1064 : Codeunit 111;
      DimMgt@1065 : Codeunit 408;
      ApprovalsMgmt@1082 : Codeunit 1535;
      UserSetupMgt@1066 : Codeunit 5700;
      LeadTimeMgt@1000 : Codeunit 5404;
      ApplyVendEntries@1068 : Page 233;
      CurrencyDate@1069 : Date;
      HideValidationDialog@1070 : Boolean;
      Confirmed@1071 : Boolean;
      Text034@1072 : TextConst 'ENU=You cannot change the %1 when the %2 has been filled in.';
      Text037@1076 : TextConst 'ENU=Contact %1 %2 is not related to vendor %3.';
      Text038@1075 : TextConst 'ENU=Contact %1 %2 is related to a different company than vendor %3.';
      Text039@1077 : TextConst 'ENU=Contact %1 %2 is not related to a vendor.';
      SkipBuyFromContact@1030 : Boolean;
      SkipPayToContact@1078 : Boolean;
      Text040@1079 : TextConst 'ENU="You can not change the %1 field because %2 %3 has %4 = %5 and the %6 has already been assigned %7 %8."';
      Text041@1182 : TextConst 'ENU=The purchase %1 %2 has item tracking. Do you want to delete it anyway?';
      Text042@1084 : TextConst 'ENU=You must cancel the approval process if you wish to change the %1.';
      Text045@1086 : TextConst 'ENU=Deleting this document will cause a gap in the number series for prepayment invoices. An empty prepayment invoice %1 will be created to fill this gap in the number series.\\Do you want to continue?';
      Text046@1087 : TextConst 'ENU=Deleting this document will cause a gap in the number series for prepayment credit memos. An empty prepayment credit memo %1 will be created to fill this gap in the number series.\\Do you want to continue?';
      Text049@1092 : TextConst 'ENU=%1 is set up to process from %2 %3 only.';
      Text050@1067 : TextConst 'ENU=Reservations exist for this order. These reservations will be canceled if a date conflict is caused by this change.\\';
      Text051@1025 : TextConst 'ENU=You may have changed a dimension.\\Do you want to update the lines?';
      Text052@1091 : TextConst 'ENU=The %1 field on the purchase order %2 must be the same as on sales order %3.';
      NameAddressDetails@1093 : Text[512];
      DropShptNameAddressDetails@1094 : Text[512];
      SpecOrderNameAddressDetails@1121 : Text[512];
      UpdateDocumentDate@1120 : Boolean;
      PrepaymentInvoicesNotPaidErr@1074 : TextConst '@@@=You cannot post the document of type Order with the number 1001 before all related prepayment invoices are posted.;ENU=You cannot post the document of type %1 with the number %2 before all related prepayment invoices are posted.';
      Text054@1096 : TextConst 'ENU=There are unpaid prepayment invoices that are related to the document of type %1 with the number %2.';
      DeferralLineQst@1155 : TextConst '@@@="%1=The posting date on the document.";ENU=You have changed the %1 on the purchase header, do you want to update the deferral schedules for the lines with this date?';
      ChangeCurrencyQst@1073 : TextConst 'ENU=If you change %1, the existing purchase lines will be deleted and new purchase lines based on the new information in the header will be created. You may need to update the price information manually.\\Do you want to change %1?';
      PostedDocsToPrintCreatedMsg@1081 : TextConst 'ENU=One or more documents have been posted during deletion, which you can print from the related posted document.';
      UserSetup@1001 : Record 91;
      Text055@1002 : TextConst 'ENU=Purchase Order No. %1, is Blocked.';
      Text056@1085 : TextConst 'ENU=%1 must have a value.';
      FromJob@1095 : Integer;
      FromJobPlanningLines@1097 : Boolean;
      Resource@1099 : Record 156;
      TransactionTypes@1102 : Record 258;
      TransportMethod@1100 : Record 259;
      Currency@1101 : Record 4;
      TransactionSpec@1103 : Record 285;
      EntryExitPoint@1104 : Record 282;
      Areas@1105 : Record 284;
      VendorBankAcc@1106 : Record 288;

    LOCAL PROCEDURE InitInsert@41();
    BEGIN
      IF "No." = '' THEN BEGIN
        TestNoSeries;
        NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Posting Date","No.","No. Series");
      END;

      InitRecord;
    END;

    LOCAL PROCEDURE SkipInitialization@42() : Boolean;
    BEGIN
      IF "No." = '' THEN
        EXIT(FALSE);

      IF "Buy-from Vendor No." = '' THEN
        EXIT(FALSE);

      IF xRec."Document Type" <> "Document Type" THEN
        EXIT(FALSE);

      IF GETFILTER("Buy-from Vendor No.") <> '' THEN
        IF GETRANGEMIN("Buy-from Vendor No.") = GETRANGEMAX("Buy-from Vendor No.") THEN
          IF "Buy-from Vendor No." = GETRANGEMIN("Buy-from Vendor No.") THEN
            EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE InitRecord@10();
    BEGIN
      PurchSetup.GET;

      CASE "Document Type" OF
        "Document Type"::Quote,"Document Type"::Order:
          BEGIN
            NoSeriesMgt.SetDefaultSeries("Posting No. Series",PurchSetup."Posted Invoice Nos.");
            NoSeriesMgt.SetDefaultSeries("Receiving No. Series",PurchSetup."Posted Receipt Nos.");
            IF "Document Type" = "Document Type"::Order THEN BEGIN
              NoSeriesMgt.SetDefaultSeries("Prepayment No. Series",PurchSetup."Posted Prepmt. Inv. Nos.");
              NoSeriesMgt.SetDefaultSeries("Prepmt. Cr. Memo No. Series",PurchSetup."Posted Prepmt. Cr. Memo Nos.");
            END;
          END;
        "Document Type"::Invoice:
          BEGIN
            IF ("No. Series" <> '') AND
               (PurchSetup."Invoice Nos." = PurchSetup."Posted Invoice Nos.")
            THEN
              "Posting No. Series" := "No. Series"
            ELSE
              NoSeriesMgt.SetDefaultSeries("Posting No. Series",PurchSetup."Posted Invoice Nos.");
            IF PurchSetup."Receipt on Invoice" THEN
              NoSeriesMgt.SetDefaultSeries("Receiving No. Series",PurchSetup."Posted Receipt Nos.");
          END;
        "Document Type"::"Return Order":
          BEGIN
            NoSeriesMgt.SetDefaultSeries("Posting No. Series",PurchSetup."Posted Credit Memo Nos.");
            NoSeriesMgt.SetDefaultSeries("Return Shipment No. Series",PurchSetup."Posted Return Shpt. Nos.");
          END;
        "Document Type"::"Credit Memo":
          BEGIN
            IF ("No. Series" <> '') AND
               (PurchSetup."Credit Memo Nos." = PurchSetup."Posted Credit Memo Nos.")
            THEN
              "Posting No. Series" := "No. Series"
            ELSE
              NoSeriesMgt.SetDefaultSeries("Posting No. Series",PurchSetup."Posted Credit Memo Nos.");
            IF PurchSetup."Return Shipment on Credit Memo" THEN
              NoSeriesMgt.SetDefaultSeries("Return Shipment No. Series",PurchSetup."Posted Return Shpt. Nos.");
          END;
      END;

      IF "Document Type" IN
         ["Document Type"::Order,"Document Type"::Invoice,"Document Type"::"Return Order","Document Type"::Quote]
      THEN
        "Order Date" := WORKDATE;

      IF "Document Type" = "Document Type"::Invoice THEN
        "Expected Receipt Date" := WORKDATE;

      IF NOT ("Document Type" IN ["Document Type"::"Blanket Order","Document Type"::Quote]) AND
         ("Posting Date" = 0D)
      THEN
        "Posting Date" := WORKDATE;

      IF PurchSetup."Default Posting Date" = PurchSetup."Default Posting Date"::"No Date" THEN
        "Posting Date" := 0D;

      "Document Date" := WORKDATE;

      VALIDATE("Sell-to Customer No.",'');

      IF "Document Type" IN ["Document Type"::"Return Order","Document Type"::"Credit Memo"] THEN BEGIN
        GLSetup.GET;
        Correction := GLSetup."Mark Cr. Memos as Corrections";
      END;

      "Posting Description" := FORMAT("Document Type") + ' ' + "No.";

      IF InvtSetup.GET THEN
        "Inbound Whse. Handling Time" := InvtSetup."Inbound Whse. Handling Time";

      // PHP Start - changing responsibility Center | New Request Type
      CASE "Request Type" OF
        "Request Type"::Liquidation:
            "Responsibility Center" := UserSetupMgt.GetCashAdvanceLiquidationFilter;
        "Request Type"::"Cash Advance":
            "Responsibility Center" := UserSetupMgt.GetCashAdvanceFilter;
        "Request Type"::"Request for Payment":
            "Responsibility Center" := UserSetupMgt.GetRFPayFilter;
        "Request Type"::"Request for Purchase":
            "Responsibility Center" := UserSetupMgt.GetRFPurFilter;
        ELSE
          // Start Original Code
          "Responsibility Center" := UserSetupMgt.GetRespCenter(1,"Responsibility Center");
          // End Original Code
      END;
      VALIDATE("Purchaser Code",UserSetupMgt.GetSalespersonPurchaserCode);
      IF "Request Type" = "Request Type"::"Request for Purchase" THEN BEGIN
        VALIDATE("Buy-from Vendor No.", PurchSetup."Default Vendor as Company");
        VALIDATE("Employee No.", UserSetupMgt.GetEmployeeNo);
      END;
      // PHP End
    END;

    LOCAL PROCEDURE InitNoSeries@52();
    BEGIN
      IF xRec."Receiving No." <> '' THEN BEGIN
        "Receiving No. Series" := xRec."Receiving No. Series";
        "Receiving No." := xRec."Receiving No.";
      END;
      IF xRec."Posting No." <> '' THEN BEGIN
        "Posting No. Series" := xRec."Posting No. Series";
        "Posting No." := xRec."Posting No.";
      END;
      IF xRec."Return Shipment No." <> '' THEN BEGIN
        "Return Shipment No. Series" := xRec."Return Shipment No. Series";
        "Return Shipment No." := xRec."Return Shipment No.";
      END;
      IF xRec."Prepayment No." <> '' THEN BEGIN
        "Prepayment No. Series" := xRec."Prepayment No. Series";
        "Prepayment No." := xRec."Prepayment No.";
      END;
      IF xRec."Prepmt. Cr. Memo No." <> '' THEN BEGIN
        "Prepmt. Cr. Memo No. Series" := xRec."Prepmt. Cr. Memo No. Series";
        "Prepmt. Cr. Memo No." := xRec."Prepmt. Cr. Memo No.";
      END;

      // PHP Start
      "Request Type" := xRec."Request Type";
      // PHP End
    END;

    PROCEDURE AssistEdit@2(OldPurchHeader@1000 : Record 38) : Boolean;
    BEGIN
      PurchSetup.GET;
      TestNoSeries;
      IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldPurchHeader."No. Series","No. Series") THEN BEGIN
        PurchSetup.GET;
        TestNoSeries;
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6() : Boolean;
    BEGIN
      PurchSetup.GET;
      // PHP Start
      CustomSetup.GET;
      // PHP End
      CASE "Document Type" OF
        "Document Type"::Quote:
          PurchSetup.TESTFIELD("Quote Nos.");
        "Document Type"::Order:
          BEGIN
            // PHP Start
            IF "Request Type" = "Request Type"::Liquidation THEN // Liquidation in Order
              CustomSetup.TESTFIELD("Cash Advance Liquidation No.");
            IF "Request Type" = "Request Type"::"Cash Advance" THEN // Cash advance in Order
              CustomSetup.TESTFIELD("Cash Advance Nos.");
            // PHP End
            PurchSetup.TESTFIELD("Order Nos.");
          END;
        "Document Type"::Invoice:
          BEGIN
            // PHP Start | New Request Type
            CustomSetup.GET;
            CASE "Request Type" OF
              "Request Type"::"Cash Advance":
                BEGIN
                  CustomSetup.TESTFIELD("Cash Advance Nos.");
                END;
              "Request Type"::"Request for Payment":
                BEGIN
                  CustomSetup.TESTFIELD("RFPAY Nos.");
                END;
              "Request Type"::"Request for Purchase":
                BEGIN
                  PurchSetup.TESTFIELD("Default Vendor as Company");
                  PurchSetup.TESTFIELD("Request for Purchase Nos.");
                END;
            END;
            // PHP End
            PurchSetup.TESTFIELD("Invoice Nos.");
            PurchSetup.TESTFIELD("Posted Invoice Nos.");
          END;
        "Document Type"::"Return Order":
          PurchSetup.TESTFIELD("Return Order Nos.");
        "Document Type"::"Credit Memo":
          BEGIN
            PurchSetup.TESTFIELD("Credit Memo Nos.");
            PurchSetup.TESTFIELD("Posted Credit Memo Nos.");
          END;
        "Document Type"::"Blanket Order":
          PurchSetup.TESTFIELD("Blanket Order Nos.");
      END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Quote:
          EXIT(PurchSetup."Quote Nos.");
        "Document Type"::Order:
          BEGIN
            // PHP START - No Series for Cash Advance Liquidation
            CustomSetup.GET;
            IF ("Request Type" = "Request Type"::Liquidation) AND (CustomSetup."Cash Advance Liquidation No." <> '') THEN
              EXIT(CustomSetup."Cash Advance Liquidation No.");
            IF("Request Type" = "Request Type"::"Cash Advance") AND (CustomSetup."Cash Advance Nos." <> '') THEN
              EXIT(CustomSetup."Cash Advance Nos.");
            // PHP END
            EXIT(PurchSetup."Order Nos.");
          END;
        "Document Type"::Invoice:
          BEGIN
            // PHP START - No Series for Request for Cash Advance | New Request Type
            CustomSetup.GET;
            CASE "Request Type" OF
              "Request Type"::"Cash Advance":
                EXIT(CustomSetup."Cash Advance Nos.");
              "Request Type"::"Request for Payment":
                EXIT(CustomSetup."RFPAY Nos.");
              "Request Type"::"Request for Purchase":
                EXIT(PurchSetup."Request for Purchase Nos.");
            END;
            // PHP END

            EXIT(PurchSetup."Invoice Nos.");
          END;
        "Document Type"::"Return Order":
          EXIT(PurchSetup."Return Order Nos.");
        "Document Type"::"Credit Memo":
          EXIT(PurchSetup."Credit Memo Nos.");
        "Document Type"::"Blanket Order":
          EXIT(PurchSetup."Blanket Order Nos.");
      END;
    END;

    LOCAL PROCEDURE GetPostingNoSeriesCode@8() : Code[10];
    BEGIN
      IF "Document Type" IN ["Document Type"::"Return Order","Document Type"::"Credit Memo"] THEN
        EXIT(PurchSetup."Posted Credit Memo Nos.");
      EXIT(PurchSetup."Posted Invoice Nos.");
    END;

    LOCAL PROCEDURE GetPostingPrepaymentNoSeriesCode@37() : Code[10];
    BEGIN
      IF "Document Type" IN ["Document Type"::"Return Order","Document Type"::"Credit Memo"] THEN
        EXIT(PurchSetup."Posted Prepmt. Cr. Memo Nos.");
      EXIT(PurchSetup."Posted Prepmt. Inv. Nos.");
    END;

    LOCAL PROCEDURE TestNoSeriesDate@40(No@1000 : Code[20];NoSeriesCode@1001 : Code[10];NoCapt@1002 : Text[1024];NoSeriesCapt@1004 : Text[1024]);
    VAR
      NoSeries@1005 : Record 308;
    BEGIN
      IF (No <> '') AND (NoSeriesCode <> '') THEN BEGIN
        NoSeries.GET(NoSeriesCode);
        IF NoSeries."Date Order" THEN
          ERROR(
            Text040,
            FIELDCAPTION("Posting Date"),NoSeriesCapt,NoSeriesCode,
            NoSeries.FIELDCAPTION("Date Order"),NoSeries."Date Order","Document Type",
            NoCapt,No);
      END;
    END;

    PROCEDURE ConfirmDeletion@11() : Boolean;
    BEGIN
      PurchPost.TestDeleteHeader(
        Rec,PurchRcptHeader,PurchInvHeader,PurchCrMemoHeader,
        ReturnShptHeader,PurchInvHeaderPrepmt,PurchCrMemoHeaderPrepmt);
      IF PurchRcptHeader."No." <> '' THEN
        IF NOT CONFIRM(
             Text009 +
             Text010 +
             Text011,TRUE,
             PurchRcptHeader."No.")
        THEN
          EXIT;
      IF PurchInvHeader."No." <> '' THEN
        IF NOT CONFIRM(
             Text012 +
             Text013 +
             Text011,TRUE,
             PurchInvHeader."No.")
        THEN
          EXIT;
      IF PurchCrMemoHeader."No." <> '' THEN
        IF NOT CONFIRM(
             Text014 +
             Text015 +
             Text011,TRUE,
             PurchCrMemoHeader."No.")
        THEN
          EXIT;
      IF ReturnShptHeader."No." <> '' THEN
        IF NOT CONFIRM(
             Text029 +
             Text030 +
             Text011,TRUE,
             ReturnShptHeader."No.")
        THEN
          EXIT;
      IF "Prepayment No." <> '' THEN
        IF NOT CONFIRM(
             Text045,TRUE,
             PurchInvHeaderPrepmt."No.")
        THEN
          EXIT;
      IF "Prepmt. Cr. Memo No." <> '' THEN
        IF NOT CONFIRM(
             Text046,TRUE,
             PurchCrMemoHeaderPrepmt."No.")
        THEN
          EXIT;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetVend@1(VendNo@1000 : Code[20]);
    BEGIN
      IF VendNo <> Vend."No." THEN
        Vend.GET(VendNo);
    END;

    PROCEDURE PurchLinesExist@3() : Boolean;
    BEGIN
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type","Document Type");
      PurchLine.SETRANGE("Document No.","No.");
      EXIT(PurchLine.FINDFIRST);
    END;

    LOCAL PROCEDURE RecreatePurchLines@4(ChangedFieldName@1000 : Text[100]);
    VAR
      PurchLineTmp@1001 : TEMPORARY Record 39;
      ItemChargeAssgntPurch@1005 : Record 5805;
      TempItemChargeAssgntPurch@1004 : TEMPORARY Record 5805;
      TempInteger@1003 : TEMPORARY Record 2000000026;
      SalesHeader@1006 : Record 36;
      SalesLine@1007 : Record 37;
      CopyDocMgt@1008 : Codeunit 6620;
      ExtendedTextAdded@1002 : Boolean;
    BEGIN
      IF PurchLinesExist THEN BEGIN
        IF HideValidationDialog THEN
          Confirmed := TRUE
        ELSE
          Confirmed :=
            CONFIRM(
              Text016 +
              Text004,FALSE,ChangedFieldName);
        IF Confirmed THEN BEGIN
          PurchLine.LOCKTABLE;
          ItemChargeAssgntPurch.LOCKTABLE;
          MODIFY;

          PurchLine.RESET;
          PurchLine.SETRANGE("Document Type","Document Type");
          PurchLine.SETRANGE("Document No.","No.");
          IF PurchLine.FINDSET THEN BEGIN
            REPEAT
              PurchLine.TESTFIELD("Quantity Received",0);
              PurchLine.TESTFIELD("Quantity Invoiced",0);
              PurchLine.TESTFIELD("Return Qty. Shipped",0);
              PurchLine.CALCFIELDS("Reserved Qty. (Base)");
              PurchLine.TESTFIELD("Reserved Qty. (Base)",0);
              PurchLine.TESTFIELD("Receipt No.",'');
              PurchLine.TESTFIELD("Return Shipment No.",'');
              PurchLine.TESTFIELD("Blanket Order No.",'');
              IF PurchLine."Drop Shipment" OR PurchLine."Special Order" THEN BEGIN
                CASE TRUE OF
                  PurchLine."Drop Shipment":
                    SalesHeader.GET(SalesHeader."Document Type"::Order,PurchLine."Sales Order No.");
                  PurchLine."Special Order":
                    SalesHeader.GET(SalesHeader."Document Type"::Order,PurchLine."Special Order Sales No.");
                END;
                TESTFIELD("Sell-to Customer No.",SalesHeader."Sell-to Customer No.");
                TESTFIELD("Ship-to Code",SalesHeader."Ship-to Code");
              END;

              PurchLine.TESTFIELD("Prepmt. Amt. Inv.",0);
              PurchLineTmp := PurchLine;
              IF PurchLine.Nonstock THEN BEGIN
                PurchLine.Nonstock := FALSE;
                PurchLine.MODIFY;
              END;
              PurchLineTmp.INSERT;
            UNTIL PurchLine.NEXT = 0;

            ItemChargeAssgntPurch.SETRANGE("Document Type","Document Type");
            ItemChargeAssgntPurch.SETRANGE("Document No.","No.");
            IF ItemChargeAssgntPurch.FINDSET THEN BEGIN
              REPEAT
                TempItemChargeAssgntPurch.INIT;
                TempItemChargeAssgntPurch := ItemChargeAssgntPurch;
                TempItemChargeAssgntPurch.INSERT;
              UNTIL ItemChargeAssgntPurch.NEXT = 0;
              ItemChargeAssgntPurch.DELETEALL;
            END;

            PurchLine.DELETEALL(TRUE);

            PurchLine.INIT;
            PurchLine."Line No." := 0;
            PurchLineTmp.FINDSET;
            ExtendedTextAdded := FALSE;

            REPEAT
              IF PurchLineTmp."Attached to Line No." = 0 THEN BEGIN
                PurchLine.INIT;
                PurchLine."Line No." := PurchLine."Line No." + 10000;
                PurchLine.VALIDATE(Type,PurchLineTmp.Type);
                IF PurchLineTmp."No." = '' THEN BEGIN
                  PurchLine.VALIDATE(Description,PurchLineTmp.Description);
                  PurchLine.VALIDATE("Description 2",PurchLineTmp."Description 2");
                END ELSE BEGIN
                  PurchLine.VALIDATE("No.",PurchLineTmp."No.");
                  // PHP Start Retain the Description if the lines has been updated
                  PurchLine.VALIDATE(Description,PurchLineTmp.Description);
                  PurchLine.VALIDATE("Description 2",PurchLineTmp."Description 2");
                  PurchLine.VALIDATE("INTP No.",PurchLineTmp."INTP No.");
                  PurchLine.VALIDATE(Remarks,PurchLineTmp.Remarks);
                  PurchLine.VALIDATE("Job Created Entry",PurchLineTmp."Job Created Entry");
                  PurchLine.VALIDATE("Vendor Part No.",PurchLineTmp."Vendor Part No.");
                  IF PurchLine."Dimension Set ID" <> PurchLineTmp."Dimension Set ID" THEN
                    PurchLine."Dimension Set ID" := PurchLineTmp."Dimension Set ID";
                  PurchLine."Request Type" := "Request Type";
                  PurchLine."RFP Document Type" := PurchLineTmp."RFP Document Type";
                  PurchLine."RFP Document No." := PurchLineTmp."RFP Document No.";
                  PurchLine."RFP Line No." := PurchLineTmp."RFP Line No.";

                  DimMgt.UpdateGlobalDimFromDimSetID(
                      PurchLine."Dimension Set ID",PurchLine."Shortcut Dimension 1 Code",PurchLine."Shortcut Dimension 2 Code");
                  // PHP End
                  IF PurchLine.Type <> PurchLine.Type::" " THEN
                    CASE TRUE OF
                      PurchLineTmp."Drop Shipment":
                        BEGIN
                          SalesLine.GET(SalesLine."Document Type"::Order,
                            PurchLineTmp."Sales Order No.",
                            PurchLineTmp."Sales Order Line No.");
                          CopyDocMgt.TransfldsFromSalesToPurchLine(SalesLine,PurchLine);
                          PurchLine."Drop Shipment" := PurchLineTmp."Drop Shipment";
                          PurchLine."Purchasing Code" := SalesLine."Purchasing Code";
                          PurchLine."Sales Order No." := PurchLineTmp."Sales Order No.";
                          PurchLine."Sales Order Line No." := PurchLineTmp."Sales Order Line No.";
                          EVALUATE(PurchLine."Inbound Whse. Handling Time",'<0D>');
                          PurchLine.VALIDATE("Inbound Whse. Handling Time");

                          SalesLine.VALIDATE("Unit Cost (LCY)",PurchLine."Unit Cost (LCY)");
                          SalesLine."Purchase Order No." := PurchLine."Document No.";
                          SalesLine."Purch. Order Line No." := PurchLine."Line No.";
                          SalesLine.MODIFY;
                        END;
                      PurchLineTmp."Special Order":
                        BEGIN
                          SalesLine.GET(SalesLine."Document Type"::Order,
                            PurchLineTmp."Special Order Sales No.",
                            PurchLineTmp."Special Order Sales Line No.");
                          CopyDocMgt.TransfldsFromSalesToPurchLine(SalesLine,PurchLine);
                          PurchLine."Special Order" := PurchLineTmp."Special Order";
                          PurchLine."Purchasing Code" := SalesLine."Purchasing Code";
                          PurchLine."Special Order Sales No." := PurchLineTmp."Special Order Sales No.";
                          PurchLine."Special Order Sales Line No." := PurchLineTmp."Special Order Sales Line No.";

                          SalesLine.VALIDATE("Unit Cost (LCY)",PurchLine."Unit Cost (LCY)");
                          SalesLine."Special Order Purchase No." := PurchLine."Document No.";
                          SalesLine."Special Order Purch. Line No." := PurchLine."Line No.";
                          SalesLine.MODIFY;
                        END;
                      ELSE BEGIN
                        PurchLine.VALIDATE("Unit of Measure Code",PurchLineTmp."Unit of Measure Code");
                        PurchLine.VALIDATE("Variant Code",PurchLineTmp."Variant Code");
                        PurchLine."Prod. Order No." := PurchLineTmp."Prod. Order No.";
                        IF PurchLine."Prod. Order No." <> '' THEN BEGIN
                          PurchLine.Description := PurchLineTmp.Description;
                          PurchLine.VALIDATE("VAT Prod. Posting Group",PurchLineTmp."VAT Prod. Posting Group");
                          PurchLine.VALIDATE("Gen. Prod. Posting Group",PurchLineTmp."Gen. Prod. Posting Group");
                          PurchLine.VALIDATE("Expected Receipt Date",PurchLineTmp."Expected Receipt Date");
                          PurchLine.VALIDATE("Requested Receipt Date",PurchLineTmp."Requested Receipt Date");
                          PurchLine.VALIDATE("Qty. per Unit of Measure",PurchLineTmp."Qty. per Unit of Measure");
                        END;
                        IF (PurchLineTmp."Job No." <> '') AND (PurchLineTmp."Job Task No." <> '') THEN BEGIN
                          PurchLine.VALIDATE("Job No.",PurchLineTmp."Job No.");
                          PurchLine.VALIDATE("Job Task No.",PurchLineTmp."Job Task No.");
                          PurchLine."Job Line Type" := PurchLineTmp."Job Line Type";
                        END;
                        IF PurchLineTmp.Quantity <> 0 THEN
                          PurchLine.VALIDATE(Quantity,PurchLineTmp.Quantity);
                        IF ("Currency Code" = xRec."Currency Code") AND (PurchLine."Direct Unit Cost" = 0) THEN
                          PurchLine.VALIDATE("Direct Unit Cost",PurchLineTmp."Direct Unit Cost");
                        PurchLine."Routing No." := PurchLineTmp."Routing No.";
                        PurchLine."Routing Reference No." := PurchLineTmp."Routing Reference No.";
                        PurchLine."Operation No." := PurchLineTmp."Operation No.";
                        PurchLine."Work Center No." := PurchLineTmp."Work Center No.";
                        PurchLine."Prod. Order Line No." := PurchLineTmp."Prod. Order Line No.";
                        PurchLine."Overhead Rate" := PurchLineTmp."Overhead Rate";
                      END;
                    END;
                END;

                PurchLine.INSERT;
                ExtendedTextAdded := FALSE;

                IF PurchLine.Type = PurchLine.Type::Item THEN BEGIN
                  ClearItemAssgntPurchFilter(TempItemChargeAssgntPurch);
                  TempItemChargeAssgntPurch.SETRANGE("Applies-to Doc. Type",PurchLineTmp."Document Type");
                  TempItemChargeAssgntPurch.SETRANGE("Applies-to Doc. No.",PurchLineTmp."Document No.");
                  TempItemChargeAssgntPurch.SETRANGE("Applies-to Doc. Line No.",PurchLineTmp."Line No.");
                  IF TempItemChargeAssgntPurch.FINDSET THEN
                    REPEAT
                      IF NOT TempItemChargeAssgntPurch.MARK THEN BEGIN
                        TempItemChargeAssgntPurch."Applies-to Doc. Line No." := PurchLine."Line No.";
                        TempItemChargeAssgntPurch.Description := PurchLine.Description;
                        TempItemChargeAssgntPurch.MODIFY;
                        TempItemChargeAssgntPurch.MARK(TRUE);
                      END;
                    UNTIL TempItemChargeAssgntPurch.NEXT = 0;
                END;
                IF PurchLine.Type = PurchLine.Type::"Charge (Item)" THEN BEGIN
                  TempInteger.INIT;
                  TempInteger.Number := PurchLine."Line No.";
                  TempInteger.INSERT;
                END;
              END ELSE
                IF NOT ExtendedTextAdded THEN BEGIN
                  TransferExtendedText.PurchCheckIfAnyExtText(PurchLine,TRUE);
                  TransferExtendedText.InsertPurchExtText(PurchLine);
                  PurchLine.FINDLAST;
                  ExtendedTextAdded := TRUE;
                END;
            UNTIL PurchLineTmp.NEXT = 0;

            ClearItemAssgntPurchFilter(TempItemChargeAssgntPurch);
            PurchLineTmp.SETRANGE(Type,PurchLine.Type::"Charge (Item)");
            IF PurchLineTmp.FINDSET THEN
              REPEAT
                TempItemChargeAssgntPurch.SETRANGE("Document Line No.",PurchLineTmp."Line No.");
                IF TempItemChargeAssgntPurch.FINDSET THEN BEGIN
                  REPEAT
                    TempInteger.FINDFIRST;
                    ItemChargeAssgntPurch.INIT;
                    ItemChargeAssgntPurch := TempItemChargeAssgntPurch;
                    ItemChargeAssgntPurch."Document Line No." := TempInteger.Number;
                    ItemChargeAssgntPurch.VALIDATE("Unit Cost",0);
                    ItemChargeAssgntPurch.INSERT;
                  UNTIL TempItemChargeAssgntPurch.NEXT = 0;
                  TempInteger.DELETE;
                END;
              UNTIL PurchLineTmp.NEXT = 0;

            PurchLineTmp.SETRANGE(Type);
            PurchLineTmp.DELETEALL;
            ClearItemAssgntPurchFilter(TempItemChargeAssgntPurch);
            TempItemChargeAssgntPurch.DELETEALL;
          END;
        END ELSE
          ERROR(
            Text018,ChangedFieldName);
      END;
    END;

    LOCAL PROCEDURE MessageIfPurchLinesExist@5(ChangedFieldName@1000 : Text[100]);
    BEGIN
      IF PurchLinesExist AND NOT HideValidationDialog THEN
        MESSAGE(
          Text019 +
          Text020,
          ChangedFieldName);
    END;

    LOCAL PROCEDURE PriceMessageIfPurchLinesExist@7(ChangedFieldName@1000 : Text[100]);
    BEGIN
      IF PurchLinesExist AND NOT HideValidationDialog THEN
        MESSAGE(
          Text019 +
          Text021,ChangedFieldName);
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@12();
    BEGIN
      IF "Currency Code" <> '' THEN BEGIN
        IF "Posting Date" <> 0D THEN
          CurrencyDate := "Posting Date"
        ELSE
          CurrencyDate := WORKDATE;

        "Currency Factor" := CurrExchRate.ExchangeRate(CurrencyDate,"Currency Code");
      END ELSE
        "Currency Factor" := 0;
    END;

    LOCAL PROCEDURE ConfirmUpdateCurrencyFactor@13() : Boolean;
    BEGIN
      IF HideValidationDialog THEN
        Confirmed := TRUE
      ELSE
        Confirmed := CONFIRM(Text022,FALSE);
      IF Confirmed THEN
        VALIDATE("Currency Factor")
      ELSE
        "Currency Factor" := xRec."Currency Factor";
      EXIT(Confirmed);
    END;

    PROCEDURE SetHideValidationDialog@14(NewHideValidationDialog@1000 : Boolean);
    BEGIN
      HideValidationDialog := NewHideValidationDialog;
    END;

    LOCAL PROCEDURE UpdatePurchLines@15(ChangedFieldName@1000 : Text[100];AskQuestion@1001 : Boolean);
    VAR
      PurchLineReserve@1003 : Codeunit 99000834;
      Question@1002 : Text[250];
    BEGIN
      IF NOT PurchLinesExist THEN
        EXIT;

      IF AskQuestion THEN BEGIN
        Question := STRSUBSTNO(
            Text032 +
            Text033,ChangedFieldName);
        IF GUIALLOWED THEN
          IF DIALOG.CONFIRM(Question,TRUE) THEN
            CASE ChangedFieldName OF
              FIELDCAPTION("Expected Receipt Date"),
              FIELDCAPTION("Requested Receipt Date"),
              FIELDCAPTION("Promised Receipt Date"),
              FIELDCAPTION("Lead Time Calculation"),
              FIELDCAPTION("Inbound Whse. Handling Time"):
                ConfirmResvDateConflict;
            END
          ELSE
            EXIT;
      END;

      PurchLine.LOCKTABLE;
      MODIFY;

      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type","Document Type");
      PurchLine.SETRANGE("Document No.","No.");
      IF PurchLine.FINDSET THEN
        REPEAT
          xPurchLine := PurchLine;
          CASE ChangedFieldName OF
            FIELDCAPTION("Expected Receipt Date"):
              IF PurchLine."No." <> '' THEN
                PurchLine.VALIDATE("Expected Receipt Date","Expected Receipt Date");
            FIELDCAPTION("Currency Factor"):
              IF PurchLine.Type <> PurchLine.Type::" " THEN
                PurchLine.VALIDATE("Direct Unit Cost");
            FIELDCAPTION("Transaction Type"):
              PurchLine.VALIDATE("Transaction Type","Transaction Type");
            FIELDCAPTION("Transport Method"):
              PurchLine.VALIDATE("Transport Method","Transport Method");
            FIELDCAPTION("Entry Point"):
              PurchLine.VALIDATE("Entry Point","Entry Point");
            FIELDCAPTION(Area):
              PurchLine.VALIDATE(Area,Area);
            FIELDCAPTION("Transaction Specification"):
              PurchLine.VALIDATE("Transaction Specification","Transaction Specification");
            FIELDCAPTION("Requested Receipt Date"):
              IF PurchLine."No." <> '' THEN
                PurchLine.VALIDATE("Requested Receipt Date","Requested Receipt Date");
            FIELDCAPTION("Prepayment %"):
              IF PurchLine."No." <> '' THEN
                PurchLine.VALIDATE("Prepayment %","Prepayment %");
            FIELDCAPTION("Promised Receipt Date"):
              IF PurchLine."No." <> '' THEN
                PurchLine.VALIDATE("Promised Receipt Date","Promised Receipt Date");
            FIELDCAPTION("Lead Time Calculation"):
              IF PurchLine."No." <> '' THEN
                PurchLine.VALIDATE("Lead Time Calculation","Lead Time Calculation");
            FIELDCAPTION("Inbound Whse. Handling Time"):
              IF PurchLine."No." <> '' THEN
                PurchLine.VALIDATE("Inbound Whse. Handling Time","Inbound Whse. Handling Time");
            PurchLine.FIELDCAPTION("Deferral Code"):
              IF PurchLine."No." <> '' THEN
                PurchLine.VALIDATE("Deferral Code");
          END;
          PurchLine.MODIFY(TRUE);
          PurchLineReserve.VerifyChange(PurchLine,xPurchLine);
        UNTIL PurchLine.NEXT = 0;
    END;

    LOCAL PROCEDURE ConfirmResvDateConflict@31();
    VAR
      ResvEngMgt@1000 : Codeunit 99000831;
    BEGIN
      IF ResvEngMgt.ResvExistsForPurchHeader(Rec) THEN
        IF NOT CONFIRM(Text050 + Text011,FALSE) THEN
          ERROR('');
    END;

    PROCEDURE CreateDim@16(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20];Type3@1004 : Integer;No3@1005 : Code[20];Type4@1006 : Integer;No4@1007 : Code[20]);
    VAR
      SourceCodeSetup@1010 : Record 242;
      TableID@1011 : ARRAY [10] OF Integer;
      No@1012 : ARRAY [10] OF Code[20];
      OldDimSetID@1008 : Integer;
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      TableID[3] := Type3;
      No[3] := No3;
      TableID[4] := Type4;
      No[4] := No4;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(TableID,No,SourceCodeSetup.Purchases,"Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);

      IF (OldDimSetID <> "Dimension Set ID") AND PurchLinesExist THEN BEGIN
        MODIFY;
        UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@19(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      OldDimSetID@1005 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
      IF "No." <> '' THEN
        MODIFY;

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF PurchLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE ReceivedPurchLinesExist@20() : Boolean;
    BEGIN
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type","Document Type");
      PurchLine.SETRANGE("Document No.","No.");
      PurchLine.SETFILTER("Quantity Received",'<>0');
      EXIT(PurchLine.FINDFIRST);
    END;

    LOCAL PROCEDURE ReturnShipmentExist@5800() : Boolean;
    BEGIN
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type","Document Type");
      PurchLine.SETRANGE("Document No.","No.");
      PurchLine.SETFILTER("Return Qty. Shipped",'<>0');
      EXIT(PurchLine.FINDFIRST);
    END;

    LOCAL PROCEDURE UpdateShipToAddress@21();
    BEGIN
      IF "Document Type" IN ["Document Type"::"Return Order","Document Type"::"Credit Memo"] THEN
        EXIT;

      IF ("Location Code" <> '') AND
         Location.GET("Location Code") AND
         ("Sell-to Customer No." = '')
      THEN BEGIN
        "Ship-to Name" := Location.Name;
        "Ship-to Name 2" := Location."Name 2";
        "Ship-to Address" := Location.Address;
        "Ship-to Address 2" := Location."Address 2";
        "Ship-to City" := Location.City;
        "Ship-to Post Code" := Location."Post Code";
        "Ship-to County" := Location.County;
        "Ship-to Country/Region Code" := Location."Country/Region Code";
        "Ship-to Contact" := Location.Contact;
        // PHP Start
        "Ship-to Email Address" := Location."E-Mail";
        // PHP End
      END;

      IF ("Location Code" = '') AND
         ("Sell-to Customer No." = '')
      THEN BEGIN
        CompanyInfo.GET;
        "Ship-to Code" := '';
        "Ship-to Name" := CompanyInfo."Ship-to Name";
        "Ship-to Name 2" := CompanyInfo."Ship-to Name 2";
        "Ship-to Address" := CompanyInfo."Ship-to Address";
        "Ship-to Address 2" := CompanyInfo."Ship-to Address 2";
        "Ship-to City" := CompanyInfo."Ship-to City";
        "Ship-to Post Code" := CompanyInfo."Ship-to Post Code";
        "Ship-to County" := CompanyInfo."Ship-to County";
        "Ship-to Country/Region Code" := CompanyInfo."Ship-to Country/Region Code";
        "Ship-to Contact" := CompanyInfo."Ship-to Contact";
          // PHP Start
        "Ship-to Email Address" := CompanyInfo."E-Mail";
        // PHP End
      END;
    END;

    LOCAL PROCEDURE DeletePurchaseLines@17();
    BEGIN
      IF PurchLine.FINDSET THEN BEGIN
        HandleItemTrackingDeletion;
        REPEAT
          PurchLine.SuspendStatusCheck(TRUE);
          PurchLine.DELETE(TRUE);
        UNTIL PurchLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE HandleItemTrackingDeletion@36();
    VAR
      ReservEntry@1000 : Record 337;
      ReservEntry2@1001 : Record 337;
    BEGIN
      WITH ReservEntry DO BEGIN
        RESET;
        SETCURRENTKEY(
          "Source ID","Source Ref. No.","Source Type","Source Subtype",
          "Source Batch Name","Source Prod. Order Line","Reservation Status");
        SETRANGE("Source Type",DATABASE::"Purchase Line");
        SETRANGE("Source Subtype","Document Type");
        SETRANGE("Source ID","No.");
        SETRANGE("Source Batch Name",'');
        SETRANGE("Source Prod. Order Line",0);
        SETFILTER("Item Tracking",'> %1',"Item Tracking"::None);
        IF ISEMPTY THEN
          EXIT;

        IF HideValidationDialog OR NOT GUIALLOWED THEN
          Confirmed := TRUE
        ELSE
          Confirmed := CONFIRM(Text041,FALSE,LOWERCASE(FORMAT("Document Type")),"No.");

        IF NOT Confirmed THEN
          ERROR('');

        IF FINDSET THEN
          REPEAT
            ReservEntry2 := ReservEntry;
            ReservEntry2.ClearItemTrackingFields;
            ReservEntry2.MODIFY;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ClearItemAssgntPurchFilter@22(VAR TempItemChargeAssgntPurch@1000 : Record 5805);
    BEGIN
      TempItemChargeAssgntPurch.SETRANGE("Document Line No.");
      TempItemChargeAssgntPurch.SETRANGE("Applies-to Doc. Type");
      TempItemChargeAssgntPurch.SETRANGE("Applies-to Doc. No.");
      TempItemChargeAssgntPurch.SETRANGE("Applies-to Doc. Line No.");
    END;

    LOCAL PROCEDURE UpdateBuyFromCont@24(VendorNo@1000 : Code[20]);
    VAR
      ContBusRel@1003 : Record 5054;
      Vend@1004 : Record 23;
    BEGIN
      IF Vend.GET(VendorNo) THEN BEGIN
        IF Vend."Primary Contact No." <> '' THEN
          "Buy-from Contact No." := Vend."Primary Contact No."
        ELSE BEGIN
          ContBusRel.RESET;
          ContBusRel.SETCURRENTKEY("Link to Table","No.");
          ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
          ContBusRel.SETRANGE("No.","Buy-from Vendor No.");
          IF ContBusRel.FINDFIRST THEN
            "Buy-from Contact No." := ContBusRel."Contact No."
          ELSE
            "Buy-from Contact No." := '';
        END;
        "Buy-from Contact" := Vend.Contact;
      END;
    END;

    LOCAL PROCEDURE UpdatePayToCont@27(VendorNo@1000 : Code[20]);
    VAR
      ContBusRel@1003 : Record 5054;
      Vend@1001 : Record 23;
    BEGIN
      IF Vend.GET(VendorNo) THEN BEGIN
        IF Vend."Primary Contact No." <> '' THEN
          "Pay-to Contact No." := Vend."Primary Contact No."
        ELSE BEGIN
          ContBusRel.RESET;
          ContBusRel.SETCURRENTKEY("Link to Table","No.");
          ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
          ContBusRel.SETRANGE("No.","Pay-to Vendor No.");
          IF ContBusRel.FINDFIRST THEN
            "Pay-to Contact No." := ContBusRel."Contact No."
          ELSE
            "Pay-to Contact No." := '';
        END;
        "Pay-to Contact" := Vend.Contact;
      END;
    END;

    LOCAL PROCEDURE UpdateBuyFromVend@25(ContactNo@1002 : Code[20]);
    VAR
      ContBusinessRelation@1007 : Record 5054;
      Vend@1006 : Record 23;
      Cont@1005 : Record 5050;
    BEGIN
      IF Cont.GET(ContactNo) THEN BEGIN
        "Buy-from Contact No." := Cont."No.";
        IF Cont.Type = Cont.Type::Person THEN
          "Buy-from Contact" := Cont.Name
        ELSE
          IF Vend.GET("Buy-from Vendor No.") THEN
            "Buy-from Contact" := Vend.Contact
          ELSE
            "Buy-from Contact" := ''
      END ELSE BEGIN
        "Buy-from Contact" := '';
        EXIT;
      END;

      ContBusinessRelation.RESET;
      ContBusinessRelation.SETCURRENTKEY("Link to Table","Contact No.");
      ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Vendor);
      ContBusinessRelation.SETRANGE("Contact No.",Cont."Company No.");
      IF ContBusinessRelation.FINDFIRST THEN BEGIN
        IF ("Buy-from Vendor No." <> '') AND
           ("Buy-from Vendor No." <> ContBusinessRelation."No.")
        THEN
          ERROR(Text037,Cont."No.",Cont.Name,"Buy-from Vendor No.");
        IF "Buy-from Vendor No." = '' THEN BEGIN
          SkipBuyFromContact := TRUE;
          VALIDATE("Buy-from Vendor No.",ContBusinessRelation."No.");
          SkipBuyFromContact := FALSE;
        END;
      END ELSE
        ERROR(Text039,Cont."No.",Cont.Name);

      IF ("Buy-from Vendor No." = "Pay-to Vendor No.") OR
         ("Pay-to Vendor No." = '')
      THEN
        VALIDATE("Pay-to Contact No.","Buy-from Contact No.");
    END;

    LOCAL PROCEDURE UpdatePayToVend@26(ContactNo@1000 : Code[20]);
    VAR
      ContBusinessRelation@1005 : Record 5054;
      Vend@1004 : Record 23;
      Cont@1003 : Record 5050;
    BEGIN
      IF Cont.GET(ContactNo) THEN BEGIN
        "Pay-to Contact No." := Cont."No.";
        IF Cont.Type = Cont.Type::Person THEN
          "Pay-to Contact" := Cont.Name
        ELSE
          IF Vend.GET("Pay-to Vendor No.") THEN
            "Pay-to Contact" := Vend.Contact
          ELSE
            "Pay-to Contact" := '';
      END ELSE BEGIN
        "Pay-to Contact" := '';
        EXIT;
      END;

      ContBusinessRelation.RESET;
      ContBusinessRelation.SETCURRENTKEY("Link to Table","Contact No.");
      ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Vendor);
      ContBusinessRelation.SETRANGE("Contact No.",Cont."Company No.");
      IF ContBusinessRelation.FINDFIRST THEN BEGIN
        IF "Pay-to Vendor No." = '' THEN BEGIN
          SkipPayToContact := TRUE;
          VALIDATE("Pay-to Vendor No.",ContBusinessRelation."No.");
          SkipPayToContact := FALSE;
        END ELSE
          IF "Pay-to Vendor No." <> ContBusinessRelation."No." THEN
            ERROR(Text037,Cont."No.",Cont.Name,"Pay-to Vendor No.");
      END ELSE
        ERROR(Text039,Cont."No.",Cont.Name);
    END;

    PROCEDURE CreateInvtPutAwayPick@29();
    VAR
      WhseRequest@1000 : Record 5765;
    BEGIN
      TESTFIELD(Status,Status::Released);

      WhseRequest.RESET;
      WhseRequest.SETCURRENTKEY("Source Document","Source No.");
      CASE "Document Type" OF
        "Document Type"::Order:
          WhseRequest.SETRANGE("Source Document",WhseRequest."Source Document"::"Purchase Order");
        "Document Type"::"Return Order":
          WhseRequest.SETRANGE("Source Document",WhseRequest."Source Document"::"Purchase Return Order");
      END;
      WhseRequest.SETRANGE("Source No.","No.");
      REPORT.RUNMODAL(REPORT::"Create Invt Put-away/Pick/Mvmt",TRUE,FALSE,WhseRequest);
    END;

    PROCEDURE ShowDocDim@32();
    VAR
      OldDimSetID@1000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2',"Document Type","No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF PurchLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE UpdateAllLineDim@34(NewParentDimSetID@1000 : Integer;OldParentDimSetID@1001 : Integer);
    VAR
      NewDimSetID@1002 : Integer;
      ReceivedShippedItemLineDimChangeConfirmed@1003 : Boolean;
    BEGIN
      // Update all lines with changed dimensions.

      IF NewParentDimSetID = OldParentDimSetID THEN
        EXIT;
      IF NOT CONFIRM(Text051) THEN
        EXIT;

      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type","Document Type");
      PurchLine.SETRANGE("Document No.","No.");
      PurchLine.LOCKTABLE;
      IF PurchLine.FIND('-') THEN
        REPEAT
          NewDimSetID := DimMgt.GetDeltaDimSetID(PurchLine."Dimension Set ID",NewParentDimSetID,OldParentDimSetID);
          IF PurchLine."Dimension Set ID" <> NewDimSetID THEN BEGIN
            PurchLine."Dimension Set ID" := NewDimSetID;

            IF NOT HideValidationDialog AND GUIALLOWED THEN
              VerifyReceivedShippedItemLineDimChange(ReceivedShippedItemLineDimChangeConfirmed);

            DimMgt.UpdateGlobalDimFromDimSetID(
              PurchLine."Dimension Set ID",PurchLine."Shortcut Dimension 1 Code",PurchLine."Shortcut Dimension 2 Code");
            // PHP Start
            IF "INTP No." <> '' THEN
              PurchLine.VALIDATE("INTP No.", "INTP No.");
            // PHP End
            PurchLine.MODIFY;
          END;
        UNTIL PurchLine.NEXT = 0;
    END;

    LOCAL PROCEDURE VerifyReceivedShippedItemLineDimChange@71(VAR ReceivedShippedItemLineDimChangeConfirmed@1000 : Boolean);
    BEGIN
      IF PurchLine.IsReceivedShippedItemDimChanged THEN
        IF NOT ReceivedShippedItemLineDimChangeConfirmed THEN
          ReceivedShippedItemLineDimChangeConfirmed := PurchLine.ConfirmReceivedShippedItemDimChange;
    END;

    PROCEDURE SetAmountToApply@18(AppliesToDocNo@1000 : Code[20];VendorNo@1001 : Code[20]);
    VAR
      VendLedgEntry@1002 : Record 25;
    BEGIN
      VendLedgEntry.SETCURRENTKEY("Document No.");
      VendLedgEntry.SETRANGE("Document No.",AppliesToDocNo);
      VendLedgEntry.SETRANGE("Vendor No.",VendorNo);
      VendLedgEntry.SETRANGE(Open,TRUE);
      IF VendLedgEntry.FINDFIRST THEN BEGIN
        IF VendLedgEntry."Amount to Apply" = 0 THEN  BEGIN
          VendLedgEntry.CALCFIELDS("Remaining Amount");
          VendLedgEntry."Amount to Apply" := VendLedgEntry."Remaining Amount";
        END ELSE
          VendLedgEntry."Amount to Apply" := 0;
        VendLedgEntry."Accepted Payment Tolerance" := 0;
        VendLedgEntry."Accepted Pmt. Disc. Tolerance" := FALSE;
        CODEUNIT.RUN(CODEUNIT::"Vend. Entry-Edit",VendLedgEntry);
      END;
    END;

    PROCEDURE SetShipToForSpecOrder@23();
    BEGIN
      IF Location.GET("Location Code") THEN BEGIN
        "Ship-to Code" := '';
        "Ship-to Name" := Location.Name;
        "Ship-to Name 2" := Location."Name 2";
        "Ship-to Address" := Location.Address;
        "Ship-to Address 2" := Location."Address 2";
        "Ship-to City" := Location.City;
        "Ship-to Post Code" := Location."Post Code";
        "Ship-to County" := Location.County;
        "Ship-to Country/Region Code" := Location."Country/Region Code";
        "Ship-to Contact" := Location.Contact;
        "Location Code" := Location.Code;
      END ELSE BEGIN
        CompanyInfo.GET;
        "Ship-to Code" := '';
        "Ship-to Name" := CompanyInfo."Ship-to Name";
        "Ship-to Name 2" := CompanyInfo."Ship-to Name 2";
        "Ship-to Address" := CompanyInfo."Ship-to Address";
        "Ship-to Address 2" := CompanyInfo."Ship-to Address 2";
        "Ship-to City" := CompanyInfo."Ship-to City";
        "Ship-to Post Code" := CompanyInfo."Ship-to Post Code";
        "Ship-to County" := CompanyInfo."Ship-to County";
        "Ship-to Country/Region Code" := CompanyInfo."Ship-to Country/Region Code";
        "Ship-to Contact" := CompanyInfo."Ship-to Contact";
        "Location Code" := '';
      END;
    END;

    LOCAL PROCEDURE JobUpdatePurchLines@28(SkipJobCurrFactorUpdate@1000 : Boolean);
    BEGIN
      WITH PurchLine DO BEGIN
        SETFILTER("Job No.",'<>%1','');
        SETFILTER("Job Task No.",'<>%1','');
        LOCKTABLE;
        IF FINDSET(TRUE,FALSE) THEN BEGIN
          SetPurchHeader(Rec);
          REPEAT
            IF NOT SkipJobCurrFactorUpdate THEN
              JobSetCurrencyFactor;
            CreateTempJobJnlLine(FALSE);
            UpdateJobPrices;
            MODIFY;
          UNTIL NEXT = 0;
        END;
      END
    END;

    PROCEDURE GetPstdDocLinesToRevere@47();
    VAR
      PurchPostedDocLines@1002 : Page 5855;
    BEGIN
      GetVend("Buy-from Vendor No.");
      PurchPostedDocLines.SetToPurchHeader(Rec);
      PurchPostedDocLines.SETRECORD(Vend);
      PurchPostedDocLines.LOOKUPMODE := TRUE;
      IF PurchPostedDocLines.RUNMODAL = ACTION::LookupOK THEN
        PurchPostedDocLines.CopyLineToDoc;

      CLEAR(PurchPostedDocLines);
    END;

    PROCEDURE SetSecurityFilterOnRespCenter@43();
    BEGIN
      // Start Original Code
      IF UserSetupMgt.GetPurchasesFilter <> '' THEN BEGIN
       FILTERGROUP(2);
       SETRANGE("Responsibility Center",UserSetupMgt.GetPurchasesFilter);
       FILTERGROUP(0);
      END;

      SETRANGE("Date Filter",0D,WORKDATE - 1);
      // End Original Code
    END;

    PROCEDURE CalcInvDiscForHeader@45();
    VAR
      PurchaseInvDisc@1000 : Codeunit 70;
    BEGIN
      PurchSetup.GET;
      IF PurchSetup."Calc. Inv. Discount" THEN
        PurchaseInvDisc.CalculateIncDiscForHeader(Rec);
    END;

    PROCEDURE AddShipToAddress@46(SalesHeader@1000 : Record 36;ShowError@1001 : Boolean);
    VAR
      PurchLine2@1002 : Record 39;
    BEGIN
      IF ShowError THEN BEGIN
        PurchLine2.RESET;
        PurchLine2.SETRANGE("Document Type","Document Type"::Order);
        PurchLine2.SETRANGE("Document No.","No.");
        IF NOT PurchLine2.ISEMPTY THEN BEGIN
          IF "Ship-to Name" <> SalesHeader."Ship-to Name" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Name"),"No.",SalesHeader."No.");
          IF "Ship-to Name 2" <> SalesHeader."Ship-to Name 2" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Name 2"),"No.",SalesHeader."No.");
          IF "Ship-to Address" <> SalesHeader."Ship-to Address" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Address"),"No.",SalesHeader."No.");
          IF "Ship-to Address 2" <> SalesHeader."Ship-to Address 2" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Address 2"),"No.",SalesHeader."No.");
          IF "Ship-to Post Code" <> SalesHeader."Ship-to Post Code" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Post Code"),"No.",SalesHeader."No.");
          IF "Ship-to City" <> SalesHeader."Ship-to City" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to City"),"No.",SalesHeader."No.");
          IF "Ship-to Contact" <> SalesHeader."Ship-to Contact" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Contact"),"No.",SalesHeader."No.");
        END ELSE BEGIN
          // no purchase line exists
          "Ship-to Name" := SalesHeader."Ship-to Name";
          "Ship-to Name 2" := SalesHeader."Ship-to Name 2";
          "Ship-to Address" := SalesHeader."Ship-to Address";
          "Ship-to Address 2" := SalesHeader."Ship-to Address 2";
          "Ship-to Post Code" := SalesHeader."Ship-to Post Code";
          "Ship-to City" := SalesHeader."Ship-to City";
          "Ship-to Contact" := SalesHeader."Ship-to Contact";
        END;
      END;
    END;

    PROCEDURE DropShptOrderExists@48(SalesHeader@1000 : Record 36) : Boolean;
    VAR
      SalesLine2@1001 : Record 37;
    BEGIN
      // returns TRUE if sales is either Drop Shipment of Special Order
      SalesLine2.RESET;
      SalesLine2.SETRANGE("Document Type",SalesLine2."Document Type"::Order);
      SalesLine2.SETRANGE("Document No.",SalesHeader."No.");
      SalesLine2.SETRANGE("Drop Shipment",TRUE);
      EXIT(NOT SalesLine2.ISEMPTY);
    END;

    PROCEDURE SpecialOrderExists@81(SalesHeader@1000 : Record 36) : Boolean;
    VAR
      SalesLine3@1001 : Record 37;
    BEGIN
      SalesLine3.RESET;
      SalesLine3.SETRANGE("Document Type",SalesLine3."Document Type"::Order);
      SalesLine3.SETRANGE("Document No.",SalesHeader."No.");
      SalesLine3.SETRANGE("Special Order",TRUE);
      EXIT(NOT SalesLine3.ISEMPTY);
    END;

    LOCAL PROCEDURE CheckDropShipmentLineExists@153();
    VAR
      SalesShipmentLine@1000 : Record 111;
    BEGIN
      SalesShipmentLine.SETRANGE("Purchase Order No.","No.");
      SalesShipmentLine.SETRANGE("Drop Shipment",TRUE);
      IF NOT SalesShipmentLine.ISEMPTY THEN
        ERROR(YouCannotChangeFieldErr,FIELDCAPTION("Buy-from Vendor No."));
    END;

    PROCEDURE QtyToReceiveIsZero@30() : Boolean;
    BEGIN
      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type","Document Type");
      PurchLine.SETRANGE("Document No.","No.");
      PurchLine.SETFILTER("Qty. to Receive",'<>0');
      EXIT(PurchLine.ISEMPTY);
    END;

    LOCAL PROCEDURE IsApprovedForPosting@50() : Boolean;
    VAR
      PrepaymentMgt@1000 : Codeunit 441;
    BEGIN
      IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN BEGIN
        IF PrepaymentMgt.TestPurchasePrepayment(Rec) THEN
          ERROR(STRSUBSTNO(PrepaymentInvoicesNotPaidErr,"Document Type","No."));
        IF PrepaymentMgt.TestPurchasePayment(Rec) THEN
          IF NOT CONFIRM(STRSUBSTNO(Text054,"Document Type","No."),TRUE) THEN
            EXIT(FALSE);
        EXIT(TRUE);
      END;
    END;

    PROCEDURE IsApprovedForPostingBatch@51() : Boolean;
    VAR
      PrepaymentMgt@1000 : Codeunit 441;
    BEGIN
      IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN BEGIN
        IF PrepaymentMgt.TestPurchasePrepayment(Rec) THEN
          EXIT(FALSE);
        IF PrepaymentMgt.TestPurchasePayment(Rec) THEN
          EXIT(FALSE);
        EXIT(TRUE);
      END;
    END;

    PROCEDURE SendToPosting@57(PostingCodeunitID@1000 : Integer);
    BEGIN
      IF NOT IsApprovedForPosting THEN
        EXIT;
      CODEUNIT.RUN(PostingCodeunitID,Rec);
    END;

    PROCEDURE CancelBackgroundPosting@33();
    VAR
      PurchasePostViaJobQueue@1000 : Codeunit 98;
    BEGIN
      PurchasePostViaJobQueue.CancelQueueEntry(Rec);
    END;

    PROCEDURE CheckDropShptAddressDetails@79(SalesHeader@1000 : Record 36) : Boolean;
    BEGIN
      NameAddressDetails := DropShptNameAddressDetails;
      DropShptNameAddressDetails :=
        SalesHeader."Ship-to Name" + SalesHeader."Ship-to Name 2" +
        SalesHeader."Ship-to Address" + SalesHeader."Ship-to Address 2" +
        SalesHeader."Ship-to Post Code" + SalesHeader."Ship-to City" +
        SalesHeader."Ship-to Contact";
      IF NameAddressDetails = '' THEN
        NameAddressDetails := DropShptNameAddressDetails;
      EXIT(NameAddressDetails = DropShptNameAddressDetails);
    END;

    PROCEDURE AddSpecialOrderToAddress@80(SalesHeader@1000 : Record 36;ShowError@1001 : Boolean);
    VAR
      PurchLine3@1003 : Record 39;
      LocationCode@1004 : Record 14;
    BEGIN
      IF ShowError THEN BEGIN
        PurchLine3.RESET;
        PurchLine3.SETRANGE("Document Type","Document Type"::Order);
        PurchLine3.SETRANGE("Document No.","No.");
        IF NOT PurchLine3.ISEMPTY THEN BEGIN
          LocationCode.GET("Location Code");
          IF "Ship-to Name" <> LocationCode.Name THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Name"),"No.",SalesHeader."No.");
          IF "Ship-to Name 2" <> LocationCode."Name 2" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Name 2"),"No.",SalesHeader."No.");
          IF "Ship-to Address" <> LocationCode.Address THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Address"),"No.",SalesHeader."No.");
          IF "Ship-to Address 2" <> LocationCode."Address 2" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Address 2"),"No.",SalesHeader."No.");
          IF "Ship-to Post Code" <> LocationCode."Post Code" THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Post Code"),"No.",SalesHeader."No.");
          IF "Ship-to City" <> LocationCode.City THEN
            ERROR(Text052,FIELDCAPTION("Ship-to City"),"No.",SalesHeader."No.");
          IF "Ship-to Contact" <> LocationCode.Contact THEN
            ERROR(Text052,FIELDCAPTION("Ship-to Contact"),"No.",SalesHeader."No.");
        END ELSE
          SetShipToForSpecOrder;
      END;
    END;

    PROCEDURE CheckSpecOrderAddressDetails@82(SalesHeader@1000 : Record 36) : Boolean;
    VAR
      LocationCode@1001 : Record 14;
    BEGIN
      NameAddressDetails := SpecOrderNameAddressDetails;
      IF LocationCode.GET(SalesHeader."Location Code") THEN
        SpecOrderNameAddressDetails :=
          LocationCode.Name + LocationCode."Name 2" +
          LocationCode.Address + LocationCode."Address 2" +
          LocationCode."Post Code" + LocationCode.City +
          LocationCode.Contact
      ELSE BEGIN
        CompanyInfo.GET;
        SpecOrderNameAddressDetails :=
          CompanyInfo."Ship-to Name" + CompanyInfo."Ship-to Name 2" +
          CompanyInfo."Ship-to Address" + CompanyInfo."Ship-to Address 2" +
          CompanyInfo."Ship-to Post Code" + CompanyInfo."Ship-to City" +
          CompanyInfo."Ship-to Contact";
      END;
      IF NameAddressDetails = '' THEN
        NameAddressDetails := SpecOrderNameAddressDetails;
      EXIT(NameAddressDetails = SpecOrderNameAddressDetails);
    END;

    LOCAL PROCEDURE InitRecOnVendUpdate@39();
    BEGIN
      IF NOT SkipInitialization THEN
        InitInsert;
    END;

    PROCEDURE InvoicedLineExists@56() : Boolean;
    VAR
      PurchLine@1000 : Record 39;
    BEGIN
      PurchLine.SETRANGE("Document Type","Document Type");
      PurchLine.SETRANGE("Document No.","No.");
      PurchLine.SETFILTER(Type,'<>%1',PurchLine.Type::" ");
      PurchLine.SETFILTER("Quantity Invoiced",'<>%1',0);
      EXIT(NOT PurchLine.ISEMPTY);
    END;

    PROCEDURE CreateDimSetForPrepmtAccDefaultDim@44();
    VAR
      PurchaseLine@1001 : Record 39;
      TempPurchaseLine@1002 : TEMPORARY Record 39;
    BEGIN
      PurchaseLine.SETRANGE("Document Type","Document Type");
      PurchaseLine.SETRANGE("Document No.","No.");
      PurchaseLine.SETFILTER("Prepmt. Amt. Inv.",'<>%1',0);
      IF PurchaseLine.FINDSET THEN
        REPEAT
          CollectParamsInBufferForCreateDimSet(TempPurchaseLine,PurchaseLine);
        UNTIL PurchaseLine.NEXT = 0;
      TempPurchaseLine.RESET;
      TempPurchaseLine.MARKEDONLY(FALSE);
      IF TempPurchaseLine.FINDSET THEN
        REPEAT
          PurchaseLine.CreateDim(DATABASE::"G/L Account",TempPurchaseLine."No.",
            DATABASE::Job,TempPurchaseLine."Job No.",
            DATABASE::"Responsibility Center",TempPurchaseLine."Responsibility Center",
            DATABASE::"Work Center",TempPurchaseLine."Work Center No.");
        UNTIL TempPurchaseLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CollectParamsInBufferForCreateDimSet@49(VAR TempPurchaseLine@1000 : TEMPORARY Record 39;PurchaseLine@1001 : Record 39);
    VAR
      GenPostingSetup@1002 : Record 252;
      DefaultDimension@1003 : Record 352;
    BEGIN
      TempPurchaseLine.SETRANGE("Gen. Bus. Posting Group",PurchaseLine."Gen. Bus. Posting Group");
      TempPurchaseLine.SETRANGE("Gen. Prod. Posting Group",PurchaseLine."Gen. Prod. Posting Group");
      IF NOT TempPurchaseLine.FINDFIRST THEN BEGIN
        GenPostingSetup.GET(PurchaseLine."Gen. Bus. Posting Group",PurchaseLine."Gen. Prod. Posting Group");
        GenPostingSetup.TESTFIELD("Purch. Prepayments Account");
        DefaultDimension.SETRANGE("Table ID",DATABASE::"G/L Account");
        DefaultDimension.SETRANGE("No.",GenPostingSetup."Purch. Prepayments Account");
        InsertTempPurchaseLineInBuffer(TempPurchaseLine,PurchaseLine,
          GenPostingSetup."Purch. Prepayments Account",DefaultDimension.ISEMPTY);
      END ELSE
        IF NOT TempPurchaseLine.MARK THEN BEGIN
          TempPurchaseLine.SETRANGE("Job No.",PurchaseLine."Job No.");
          TempPurchaseLine.SETRANGE("Responsibility Center",PurchaseLine."Responsibility Center");
          TempPurchaseLine.SETRANGE("Work Center No.",PurchaseLine."Work Center No.");
          IF TempPurchaseLine.ISEMPTY THEN
            InsertTempPurchaseLineInBuffer(TempPurchaseLine,PurchaseLine,TempPurchaseLine."No.",FALSE)
        END;
    END;

    LOCAL PROCEDURE InsertTempPurchaseLineInBuffer@35(VAR TempPurchaseLine@1000 : TEMPORARY Record 39;PurchaseLine@1001 : Record 39;AccountNo@1002 : Code[20];DefaultDimenstionsNotExist@1003 : Boolean);
    BEGIN
      TempPurchaseLine.INIT;
      TempPurchaseLine."Line No." := PurchaseLine."Line No.";
      TempPurchaseLine."No." := AccountNo;
      TempPurchaseLine."Job No." := PurchaseLine."Job No.";
      TempPurchaseLine."Responsibility Center" := PurchaseLine."Responsibility Center";
      TempPurchaseLine."Work Center No." := PurchaseLine."Work Center No.";
      TempPurchaseLine."Gen. Bus. Posting Group" := PurchaseLine."Gen. Bus. Posting Group";
      TempPurchaseLine."Gen. Prod. Posting Group" := PurchaseLine."Gen. Prod. Posting Group";
      TempPurchaseLine.MARK := DefaultDimenstionsNotExist;
      TempPurchaseLine.INSERT;
    END;

    PROCEDURE OpenPurchaseOrderStatistics@60();
    BEGIN
      CalcInvDiscForHeader;
      CreateDimSetForPrepmtAccDefaultDim;
      COMMIT;
      PAGE.RUNMODAL(PAGE::"Purchase Order Statistics",Rec);
    END;

    PROCEDURE GetCardpageID@58() : Integer;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Quote:
          EXIT(PAGE::"Purchase Quote");
        "Document Type"::Order:
          EXIT(PAGE::"Purchase Order");
        "Document Type"::Invoice:
          BEGIN
           // PHP Start | New Request Type
            IF "Request Type" = "Request Type"::"Cash Advance" THEN
              EXIT(PAGE::"Cash Advance");
            IF "Request Type" = "Request Type"::"Request for Payment" THEN
              EXIT(PAGE::"Request for Payment");
            IF "Request Type" = "Request Type"::"Request for Purchase" THEN
              EXIT(PAGE::"Request for Purchase");
           // PHP End
          EXIT(PAGE::"Purchase Invoice");
        END;
        "Document Type"::"Credit Memo":
          EXIT(PAGE::"Purchase Credit Memo");
        "Document Type"::"Blanket Order":
          EXIT(PAGE::"Blanket Purchase Order");
        "Document Type"::"Return Order":
          EXIT(PAGE::"Purchase Return Order");
      END;
    END;

    [Integration(TRUE)]
    PROCEDURE OnCheckPurchasePostRestrictions@54();
    BEGIN
    END;

    [Integration(TRUE)]
    PROCEDURE OnCheckPurchaseReleaseRestrictions@55();
    BEGIN
    END;

    PROCEDURE SetStatus@53(NewStatus@1000 : Option);
    BEGIN
      Status := NewStatus;
      MODIFY;
    END;

    PROCEDURE TriggerOnAfterPostPurchaseDoc@116(VAR GenJnlPostLine@1001 : Codeunit 12;PurchRcpHdrNo@1002 : Code[20];RetShptHdrNo@1003 : Code[20];PurchInvHdrNo@1004 : Code[20];PurchCrMemoHdrNo@1005 : Code[20]);
    VAR
      PurchPost@1000 : Codeunit 90;
    BEGIN
      PurchPost.OnAfterPostPurchaseDoc(Rec,GenJnlPostLine,PurchRcpHdrNo,RetShptHdrNo,PurchInvHdrNo,PurchCrMemoHdrNo);
    END;

    PROCEDURE DeferralHeadersExist@38() : Boolean;
    VAR
      DeferralHeader@1000 : Record 1701;
      DeferralUtilities@1001 : Codeunit 1720;
    BEGIN
      DeferralHeader.SETRANGE("Deferral Doc. Type",DeferralUtilities.GetPurchDeferralDocType);
      DeferralHeader.SETRANGE("Gen. Jnl. Template Name",'');
      DeferralHeader.SETRANGE("Gen. Jnl. Batch Name",'');
      DeferralHeader.SETRANGE("Document Type","Document Type");
      DeferralHeader.SETRANGE("Document No.","No.");
      EXIT(NOT DeferralHeader.ISEMPTY);
    END;

    LOCAL PROCEDURE ConfirmUpdateDeferralDate@85();
    BEGIN
      IF HideValidationDialog THEN
        Confirmed := TRUE
      ELSE
        Confirmed := CONFIRM(DeferralLineQst,FALSE,FIELDCAPTION("Posting Date"));
      IF Confirmed THEN
        UpdatePurchLines(PurchLine.FIELDCAPTION("Deferral Code"),FALSE);
    END;

    PROCEDURE BatchConfirmUpdateDeferralDate@59(VAR BatchConfirm@1000 : ' ,Skip,Update';ReplacePostingDate@1001 : Boolean;PostingDateReq@1002 : Date);
    BEGIN
      IF (NOT ReplacePostingDate) OR (PostingDateReq = "Posting Date") OR (BatchConfirm = BatchConfirm::Skip) THEN
        EXIT;

      IF NOT DeferralHeadersExist THEN
        EXIT;

      "Posting Date" := PostingDateReq;
      CASE BatchConfirm OF
        BatchConfirm::" ":
          BEGIN
            ConfirmUpdateDeferralDate;
            IF Confirmed THEN
              BatchConfirm := BatchConfirm::Update
            ELSE
              BatchConfirm := BatchConfirm::Skip;
          END;
        BatchConfirm::Update:
          UpdatePurchLines(PurchLine.FIELDCAPTION("Deferral Code"),FALSE);
      END;
      COMMIT;
    END;

    PROCEDURE SetShipToAddress@117(ShipToName@1000 : Text[50];ShipToName2@1001 : Text[50];ShipToAddress@1002 : Text[50];ShipToAddress2@1003 : Text[50];ShipToCity@1004 : Text[30];ShipToPostCode@1005 : Code[20];ShipToCounty@1006 : Text[30];ShipToCountryRegionCode@1007 : Code[10]);
    BEGIN
      "Ship-to Name" := ShipToName;
      "Ship-to Name 2" := ShipToName2;
      "Ship-to Address" := ShipToAddress;
      "Ship-to Address 2" := ShipToAddress2;
      "Ship-to City" := ShipToCity;
      "Ship-to Post Code" := ShipToPostCode;
      "Ship-to County" := ShipToCounty;
      "Ship-to Country/Region Code" := ShipToCountryRegionCode;
    END;

    PROCEDURE InitFromPurchHeader@109(SourcePurchHeader@1000 : Record 38);
    BEGIN
      "Document Date" := SourcePurchHeader."Document Date";
      "Expected Receipt Date" := SourcePurchHeader."Expected Receipt Date";
      "Shortcut Dimension 1 Code" := SourcePurchHeader."Shortcut Dimension 1 Code";
      "Shortcut Dimension 2 Code" := SourcePurchHeader."Shortcut Dimension 2 Code";
      "Dimension Set ID" := SourcePurchHeader."Dimension Set ID";
      "Location Code" := SourcePurchHeader."Location Code";
      SetShipToAddress(
        SourcePurchHeader."Ship-to Name",SourcePurchHeader."Ship-to Name 2",SourcePurchHeader."Ship-to Address",
        SourcePurchHeader."Ship-to Address 2",SourcePurchHeader."Ship-to City",SourcePurchHeader."Ship-to Post Code",
        SourcePurchHeader."Ship-to County",SourcePurchHeader."Ship-to Country/Region Code");
      "Ship-to Contact" := SourcePurchHeader."Ship-to Contact";
    END;

    PROCEDURE TestfieldPurchaseHeader@64();
    VAR
      INTP@1009 : Record 50040;
      PurchLine@1001 : Record 39;
      PurchLine2@1008 : Record 39;
      Contact@1007 : Record 5050;
      PurchPost@1000 : Codeunit 90;
      ApprovalsMgmt@1006 : Codeunit 1535;
      DimMgt@1004 : Codeunit 408;
      TableIDArr@1003 : ARRAY [10] OF Integer;
      NumberArr@1002 : ARRAY [10] OF Code[20];
      Text035@1005 : TextConst 'ENU=The dimensions used in %1 %2, are invalid. %3';
    BEGIN
      TESTFIELD("Document Date");

      CASE "Document Type" OF
        "Document Type"::Order:
          BEGIN
            // PHP Start - Kim
            // General
            IF "Vendor Type" = "Vendor Type"::Employee THEN
              FIELDERROR("Vendor Type");
            TESTFIELD("Buy-from Vendor No.");
            TESTFIELD("Buy-from Contact No.");
            IF ("Buy-from Contact No." <> '') AND Contact.GET("Buy-from Contact No.") THEN BEGIN
              Contact.TESTFIELD(Name);
              Contact.TESTFIELD("Job Title");
            END;
            TESTFIELD("Buy-from Vendor Name");
            IF "Vendor Type" = "Vendor Type"::Foreign THEN BEGIN
              TESTFIELD("Consignee Code");
            END;
            TESTFIELD("Order Date");
            TESTFIELD("Document Date");
            TESTFIELD("Purchaser Code");
            IF "Vendor Type" = "Vendor Type"::"Local" THEN
              TESTFIELD("Canvass Sheet No.");

            // Lines
            PurchLine.SETRANGE("Document Type","Document Type");
            PurchLine.SETRANGE("Document No.", "No.");
            IF PurchLine.FINDSET THEN BEGIN
              REPEAT
                IF PurchLine.Type IN [PurchLine.Type::"Fixed Asset", PurchLine.Type::"G/L Account", PurchLine.Type::Item] THEN BEGIN
                  PurchLine.TESTFIELD("No.");
                  PurchLine.TESTFIELD(Quantity);
                  PurchLine.TESTFIELD("Unit of Measure Code");
                  IF ("Vendor Type" = "Vendor Type"::Foreign) THEN
                    PurchLine.TESTFIELD("VAT %", 0);
                  IF "Prices Including VAT" = TRUE THEN
                    PurchLine.TESTFIELD("VAT Prod. Posting Group");
                  PurchPost.CheckDimValuePosting2(PurchLine);
                END;
              UNTIL PurchLine.NEXT = 0
            END;

            // Invoicing
            TESTFIELD("Pay-to Vendor No.");
            TESTFIELD("Pay-to Name");
            IF "Vendor Type" = "Vendor Type"::Foreign THEN
              TESTFIELD("Preferred Bank Account");
            TESTFIELD("Due Date");
            TESTFIELD("Payment Method Code");
            IF "Vendor Type" = "Vendor Type"::Foreign THEN
              TESTFIELD("Prices Including VAT", FALSE);
            TESTFIELD("VAT Bus. Posting Group");

            //Shipping
            TESTFIELD("Ship-to Name");
            TESTFIELD("Ship-to Address");
            TESTFIELD("Ship-to Email Address");
            TESTFIELD("Location Code");
            TESTFIELD("Ship-to Contact");
            TESTFIELD("Ship-to Email Address");
            IF "Generate Notice of Shipment" = "Generate Notice of Shipment"::" " THEN
              FIELDERROR("Generate Notice of Shipment");
            IF "Generate Notice of Shipment" = "Generate Notice of Shipment"::Yes THEN BEGIN
              TESTFIELD("Shipper No.");
              TESTFIELD("Transport Method");
              TESTFIELD("Shipment Method Code");
              TESTFIELD("Shipment Method");
            END;
            TESTFIELD("Requested Receipt Date");
            TESTFIELD("Promised Receipt Date");
            TESTFIELD("Expected Receipt Date");

      //      CALCFIELDS("Insurance");
      //      IF NOT "Insurance".HASVALUE THEN
      //        ERROR(Text056, FIELDNAME(Insurance));

            // Foreign Trade

            // Prepayment
            IF "Prepayment %" > 0 THEN BEGIN
              TESTFIELD("Prepmt. Payment Terms Code");
              TESTFIELD("Prepayment Due Date");
            END;

            // Additional Instruction
            TESTFIELD(Warranty);
            TESTFIELD("Special Instruction");
            // PHP end - Kim
          END;
        "Document Type"::Invoice:
          BEGIN
            CASE "Request Type" OF
              "Request Type"::"Cash Advance":
                BEGIN
                  TESTFIELD("Buy-from Vendor No.");
                  IF "Job Type" = "Job Type"::"Service Engineering" THEN BEGIN
                    // TESTFIELD("Job No.");
                    TESTFIELD("Job Order No.");
                    TESTFIELD("INTP No.");
                    TESTFIELD("Date of Activity From");
                    TESTFIELD("Date of Activity To");
      //              IF "Type of Activity" = "Type of Activity"::" " THEN
      //                FIELDERROR("Type of Activity");
                  END;
                  TESTFIELD(Purpose);
                  // Check if purchase line does have a blank Job No.
                  PurchLine.SETRANGE("Document Type","Document Type");
                  PurchLine.SETRANGE("Document No.", "No.");
                  PurchLine.SETFILTER("Job No.",'<>''''');
                  IF PurchLine.FINDSET THEN BEGIN
                    PurchLine.SETFILTER("Job No.",'''''');
                    IF PurchLine.FINDFIRST THEN
                      PurchLine.FIELDERROR("Job No.");
                  END;
                  PurchLine.SETRANGE("Job No.");
                  IF PurchLine.FINDSET THEN
                    REPEAT
                      IF PurchLine.Type IN [PurchLine.Type::"Fixed Asset", PurchLine.Type::"Charge (Item)"] THEN
                        PurchLine.FIELDERROR(Type);
                      IF PurchLine.Type IN [PurchLine.Type::"G/L Account", PurchLine.Type::Item] THEN BEGIN
                        PurchLine.TESTFIELD("No.");
                        PurchLine.TESTFIELD(Quantity);
                        PurchLine.TESTFIELD("Unit of Measure Code");
                      END;
      //                IF "INTP No." <> PurchLine."INTP No." THEN BEGIN
      //                  PurchLine.VALIDATE("INTP No.", "INTP No.");
      //                  PurchLine.MODIFY(TRUE);
      //                END;
                      PurchPost.CheckDimValuePosting2(PurchLine);
                    UNTIL PurchLine.NEXT = 0;

                  // Check if Purchase Documents Requires Job
                  IF INTP.GET("INTP No.") AND INTP."Require Job in Purch. Docs." THEN BEGIN
                    IF PurchLine.FINDSET THEN
                      REPEAT
                        PurchLine.TESTFIELD("Job No.");
                        PurchLine.TESTFIELD("Job Task No.");
                        PurchLine.TESTFIELD("Job Planning Line No.");
                      UNTIL PurchLine.NEXT = 0;
                  END;

                  TESTFIELD("Due Date");
                  TESTFIELD("Prices Including VAT", FALSE);
                END;

              "Request Type"::"Request for Payment":
                BEGIN
                  TESTFIELD("Buy-from Vendor No.");

                  // Check if Purchase Documents Requires Job
                  IF INTP.GET("INTP No.") AND INTP."Require Job in Purch. Docs." THEN BEGIN
                    PurchLine.RESET;
                    PurchLine.SETRANGE("Document Type","Document Type");
                    PurchLine.SETRANGE("Document No.", "No.");
                    PurchLine.SETFILTER("No.", '<>''''');
                    IF PurchLine.FINDSET THEN
                      REPEAT
                        PurchLine.TESTFIELD("Job No.");
                        PurchLine.TESTFIELD("Job Task No.");
                      UNTIL PurchLine.NEXT = 0;
                  END;
                  // Lines
                  PurchLine.RESET;
                  PurchLine.SETRANGE("Document Type","Document Type");
                  PurchLine.SETRANGE("Document No.", "No.");
                  IF PurchLine.FINDSET THEN BEGIN
                    REPEAT
                      IF PurchLine.Type IN [PurchLine.Type::"Fixed Asset", PurchLine.Type::"G/L Account", PurchLine.Type::Item] THEN BEGIN
                        PurchLine.TESTFIELD("No.");
                        PurchLine.TESTFIELD(Quantity);
                        PurchLine.TESTFIELD("Unit of Measure Code");
                        IF INTP.GET("INTP No.") AND INTP."Require Job in Purch. Docs." THEN BEGIN
                          PurchLine.TESTFIELD("Job No.");
                          PurchLine.TESTFIELD("Job Task No.");
                        END;
                        IF ("Vendor Type" = "Vendor Type"::Foreign) THEN
                          PurchLine.TESTFIELD("VAT %", 0);
                        IF "Prices Including VAT" = TRUE THEN
                          PurchLine.TESTFIELD("VAT Prod. Posting Group");
                        PurchPost.CheckDimValuePosting2(PurchLine);
                      END;
                    UNTIL PurchLine.NEXT = 0
                  END;

                  // Invoice
                  TESTFIELD("Due Date");
                  TESTFIELD("Payment Method Code");
                END;
              "Request Type"::"Request for Purchase":
                BEGIN
                  IF "Vendor Type" = "Vendor Type"::Employee THEN
                    FIELDERROR("Vendor Type");
                  TESTFIELD("Employee No.");
                  IF "INTP No." <> '' THEN
                    TESTFIELD("Cost Analyst No.");
                  TESTFIELD(Purpose);
                  TESTFIELD("Purchaser Code");
                END;
            END;
          END;
      END;


      // Check dimension value posting
      TableIDArr[1] := DATABASE::"Purchase Header";
      NumberArr[1] := "No.";
      IF NOT DimMgt.CheckDimValuePosting(TableIDArr,NumberArr,"Dimension Set ID") THEN
        ERROR(
          Text035,
          "Document Type","No.",DimMgt.GetDimValuePostingErr);

      IF NOT ("Request Type" IN ["Request Type"::"Request for Purchase"]) THEN BEGIN
        PurchLine.SETRANGE("Document Type","Document Type");
        PurchLine.SETRANGE("Document No.", "No.");
        IF PurchLine.FINDSET THEN BEGIN
          REPEAT
            IF (PurchLine.Type <> PurchLine.Type::" ") AND (PurchLine.Type <> PurchLine.Type::"Charge (Item)") THEN BEGIN
              PurchLine.TESTFIELD("No.");
              PurchLine.TESTFIELD(Quantity);
              PurchLine.TESTFIELD("Unit of Measure Code");
              PurchPost.CheckDimValuePosting2(PurchLine);
            END;
          UNTIL PurchLine.NEXT = 0
        END;
      END;
    END;

    LOCAL PROCEDURE TestStatusOpen@61();
    BEGIN
      CASE "Request Type" OF
        "Request Type"::"Cash Advance":
          BEGIN
            IF (UserSetup.GET(USERID) AND UserSetup."CA Admin" = TRUE) THEN
              EXIT;
            TESTFIELD(Status, Status::Open);
          END;
          ELSE BEGIN
            TESTFIELD(Status,Status::Open);
          END;
      END;
    END;

    PROCEDURE CreateDim2@88(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1010 : Record 242;
      TableID@1011 : ARRAY [10] OF Integer;
      No@1012 : ARRAY [10] OF Code[20];
      OldDimSetID@1008 : Integer;
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      // TableID[2] := Type2;
      // No[2] := No2;
      // TableID[3] := Type3;
      // No[3] := No3;
      // TableID[4] := Type4;
      // No[4] := No4;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(TableID,No,SourceCodeSetup.Purchases,"Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);

      // IF (OldDimSetID <> "Dimension Set ID") AND PurchLinesExist THEN BEGIN
      //   MODIFY;
      //   UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      // END;
    END;

    LOCAL PROCEDURE TestPurchaseHeaderDocStatus@97();
    BEGIN
      IF NOT UserSetupMgt.CheckIfApprovalAdministrator THEN
        TESTFIELD(Status, Status::Open);
    END;

    LOCAL PROCEDURE UpdatePurchLineRespCenter@108();
    VAR
      PurchLines@1000 : Record 39;
    BEGIN
      // PHP Start
      PurchLines.SETRANGE("Document No.", "No.");
      PurchLines.SETRANGE("Document Type", "Document Type");
      IF PurchLines.FINDSET THEN
        REPEAT
          PurchLines."Responsibility Center" := "Responsibility Center";
          PurchLines.MODIFY;
        UNTIL PurchLines.NEXT = 0;
      // PHP End
    END;

    PROCEDURE GetRFPurToPurchase@65();
    VAR
      RFPurLines@1002 : Page 518;
    BEGIN
      // GetVend("Buy-from Vendor No.");
      RFPurLines.SetToPurchHeader(Rec);
      RFPurLines.LOOKUPMODE := TRUE;
      IF RFPurLines.RUNMODAL = ACTION::LookupOK THEN
        RFPurLines.CopyLineToDoc;

      CLEAR(RFPurLines);
    END;

    PROCEDURE GetJobPlanningLines@62(JPL@1000 : Boolean);
    BEGIN
      FromJobPlanningLines := FALSE;
      IF JPL = TRUE THEN
        FromJobPlanningLines := TRUE;
    END;

    LOCAL PROCEDURE GetPermittingDocsFromIncDoc@72();
    BEGIN
      // PHP START
      IncomingDocument.SETRANGE("Post Code", "Buy-from Post Code");
      IncomingDocument.SETRANGE("Record Type", IncomingDocument."Record Type"::Document);
    END;

    PROCEDURE GetTSSRStatus@66() : Text;
    VAR
      IncomingDocs@1000 : Record 130;
    BEGIN
      // PHP START
      IncomingDocs.SETRANGE("Post Code", "Buy-from Post Code");
      IncomingDocs.SETRANGE("Record Type", IncomingDocs."Record Type"::Document);
      IncomingDocs.SETRANGE("Record Class", IncomingDocs."Record Class"::TSSR);
      IF IncomingDocs.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocs."TSSR Status"));

      EXIT('');
    END;

    PROCEDURE GetRAAWAStatus@63() : Text;
    BEGIN
      // PHP START
      GetPermittingDocsFromIncDoc;
      IncomingDocument.SETRANGE("Record Class", IncomingDocument."Record Class"::RAAWA);
      IF IncomingDocument.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocument."RAAWA Status"));

      EXIT('');
    END;

    PROCEDURE GetFIOStatus@67() : Text;
    BEGIN
      // PHP START
      GetPermittingDocsFromIncDoc;
      IncomingDocument.SETRANGE("Record Class", IncomingDocument."Record Class"::FIO);
      IF IncomingDocument.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocument."FIO Status"));

      EXIT('');
    END;

    PROCEDURE GetAccessLetterRequired@83() : Text;
    BEGIN
      // PHP START
      GetPermittingDocsFromIncDoc;
      IncomingDocument.SETRANGE("Record Class", IncomingDocument."Record Class"::"Access Letter");
      IF IncomingDocument.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocument."Access Letter Required"));

      EXIT('');
    END;

    PROCEDURE GetAccessLetterStatus@68() : Text;
    BEGIN
      // PHP START
      GetPermittingDocsFromIncDoc;
      IncomingDocument.SETRANGE("Record Class", IncomingDocument."Record Class"::"Access Letter");
      IF IncomingDocument.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocument."Access Letter Status"));

      EXIT('');
    END;

    PROCEDURE GetBldgPermitRequired@69() : Text;
    BEGIN
      // PHP START
      GetPermittingDocsFromIncDoc;
      IncomingDocument.SETRANGE("Record Class", IncomingDocument."Record Class"::"Building Permit");
      IF IncomingDocument.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocument."Bldg. Permit Required"));

      EXIT('');
    END;

    PROCEDURE GetBldgPermitStatus@86() : Text;
    BEGIN
      // PHP START
      GetPermittingDocsFromIncDoc;
      IncomingDocument.SETRANGE("Record Class", IncomingDocument."Record Class"::"Building Permit");
      IF IncomingDocument.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocument."Bldg. Permit Status"));

      EXIT('');
    END;

    PROCEDURE GetSOStatus@70() : Text;
    BEGIN
      // PHP START
      GetPermittingDocsFromIncDoc;
      IncomingDocument.SETRANGE("Record Class", IncomingDocument."Record Class"::SO);
      IF IncomingDocument.FINDFIRST THEN
        EXIT(FORMAT(IncomingDocument."SO Status"));

      EXIT('');
    END;

    PROCEDURE GetINTPPRojectName@89() : Text;
    BEGIN
      IF InternalNoticeToProceed.GET("INTP No.") THEN
        EXIT(InternalNoticeToProceed."Project Name" + ' ' + InternalNoticeToProceed."Project Name 2");

      EXIT('');
    END;

    PROCEDURE GetINTPCustomerName@90() : Text;
    BEGIN
      IF InternalNoticeToProceed.GET("INTP No.") THEN
        EXIT(InternalNoticeToProceed."Customer Name" + ' ' + InternalNoticeToProceed."Customer Name 2");

      EXIT('');
    END;

    PROCEDURE GetINTPPONo@75() : Text;
    BEGIN
      IF InternalNoticeToProceed.GET("INTP No.") THEN
        EXIT(InternalNoticeToProceed."P.O No. (Customer)");

      EXIT('');
    END;

    PROCEDURE GetResTechIncharge@76() : Text;
    BEGIN
      IF Resource.GET("Technical In-Charge")  THEN
        EXIT(Resource.Name + ' ' + Resource."Name 2");

      EXIT('');
    END;

    PROCEDURE GetPostCodeSiteName@87() : Text;
    BEGIN
      PostCode.SETRANGE(Code, "Buy-from Post Code");
      IF PostCode.FINDFIRST THEN
        EXIT(PostCode.Name);

      EXIT('');
    END;

    PROCEDURE GetPostCodeSiteAddress@91() : Text;
    BEGIN
      PostCode.SETRANGE(Code, "Buy-from Post Code");
      IF PostCode.FINDFIRST THEN
        EXIT(PostCode.Address + ' ' + PostCode."Address 2");

      EXIT('');
    END;

    PROCEDURE GetRFENo@73() : Text;
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      IF SalesHeader.GET(SalesHeader."Document Type"::Invoice, "Request for Exception No.") THEN
        EXIT(SalesHeader."No.");

      EXIT('');
    END;

    PROCEDURE GetRFEStatus@74() : Text;
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      IF SalesHeader.GET(SalesHeader."Document Type"::Invoice, "Request for Exception No.") THEN
        EXIT(FORMAT(SalesHeader.Status));

      EXIT('');
    END;

    PROCEDURE GetSalesPurchName@77() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF SalesPrsnPurch.GET("Purchaser Code") THEN
        EXIT(FORMAT(SalesPrsnPurch.Name));

      EXIT('');
    END;

    PROCEDURE GetRespCenterName@78() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF RespCenter.GET("Responsibility Center") THEN
        EXIT(FORMAT(RespCenter.Name));

      EXIT('');
    END;

    PROCEDURE GetTransportMethodDesc@84() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF TransportMethod.GET("Transport Method") THEN
        EXIT(FORMAT(TransportMethod.Description));

      EXIT('');
    END;

    PROCEDURE GetCurrencyDesc@94() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF Currency.GET("Currency Code") THEN
        EXIT(FORMAT(Currency.Description));

      EXIT('');
    END;

    PROCEDURE GetTransactionTypeDesc@95() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF TransactionTypes.GET("Transaction Type") THEN
        EXIT(FORMAT(TransactionTypes.Description));

      EXIT('');
    END;

    PROCEDURE GetTransactionSpecText@96() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF TransactionSpec.GET("Transaction Type") THEN
        EXIT(FORMAT(TransactionSpec.Text));

      EXIT('');
    END;

    PROCEDURE GetEntryExitPointDesc@98() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF EntryExitPoint.GET("Entry Point") THEN
        EXIT(FORMAT(EntryExitPoint.Description));

      EXIT('');
    END;

    PROCEDURE GetAreaText@99() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF Areas.GET(Area) THEN
        EXIT(FORMAT(Areas.Text));

      EXIT('');
    END;

    PROCEDURE GetPaymentTermsDesc@92() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF PaymentTerms.GET("Payment Terms Code") THEN
        EXIT(FORMAT(PaymentTerms.Description));

      EXIT('');
    END;

    PROCEDURE GetPaymentMethodDesc@93() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF PaymentMethod.GET("Payment Method Code") THEN
        EXIT(FORMAT(PaymentMethod.Description));

      EXIT('');
    END;

    PROCEDURE GetVendorBankAccBankName@100() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF VendorBankAcc.GET("Pay-to Vendor No.", "Preferred Bank Account") THEN
        EXIT(FORMAT(VendorBankAcc.Name + ' ' + VendorBankAcc."Name 2"));

      EXIT('');
    END;

    PROCEDURE GetVendorBankAccBankAddress@101() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF VendorBankAcc.GET("Pay-to Vendor No.", "Preferred Bank Account") THEN
        EXIT(FORMAT(VendorBankAcc.Address + ' ' + VendorBankAcc."Address 2"));

      EXIT('');
    END;

    PROCEDURE GetVendorBankAccBankAccNo@102() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF VendorBankAcc.GET("Pay-to Vendor No.", "Preferred Bank Account") THEN
        EXIT(FORMAT(VendorBankAcc."Bank Account No."));

      EXIT('');
    END;

    PROCEDURE GetVendorBankAccSwiftCode@103() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF VendorBankAcc.GET("Pay-to Vendor No.", "Preferred Bank Account") THEN
        EXIT(FORMAT(VendorBankAcc."SWIFT Code"));

      EXIT('');
    END;

    PROCEDURE GetVendorBankAccIBANCode@104() : Text;
    VAR
      SalesPrsnPurch@1000 : Record 13;
    BEGIN
      IF VendorBankAcc.GET("Pay-to Vendor No.", "Preferred Bank Account") THEN
        EXIT(FORMAT(VendorBankAcc.IBAN));

      EXIT('');
    END;

    PROCEDURE GetEmpName@106() : Text;
    VAR
      Emp@1000 : Record 5200;
    BEGIN
      IF Emp.GET("Employee No.") THEN
        EXIT(Emp.FullName);

      EXIT('');
    END;

    BEGIN
    {
      !! Documentation Table 38 Purchase Header

      11:17 PM Sunday, October 6, 2024
        Additional Type of Activity Pre-Delivery Inspection and Inspection Upon Delivery
        Additional field Outstanding Amount LCY. Will be used for segregating the approval process of 500k and below PO Approval.
        ! TODO Create a column for calculating the Amount LCY
    }
    END.
  }
}

OBJECT Table 270 Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=12:46:56 AM;
    Modified=Yes;
    Version List=NAVW19.00.00.49968,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    Permissions=TableData 271=r;
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 GLSetup.GET;
                 GLSetup.TESTFIELD("Bank Account Nos.");
                 NoSeriesMgt.InitSeries(GLSetup."Bank Account Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               IF NOT InsertFromContact THEN
                 UpdateContFromBank.OnInsert(Rec);

               DimMgt.UpdateDefaultDim(
                 DATABASE::"Bank Account","No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;

               IF (Name <> xRec.Name) OR
                  ("Search Name" <> xRec."Search Name") OR
                  ("Name 2" <> xRec."Name 2") OR
                  (Address <> xRec.Address) OR
                  ("Address 2" <> xRec."Address 2") OR
                  (City <> xRec.City) OR
                  ("Phone No." <> xRec."Phone No.") OR
                  ("Telex No." <> xRec."Telex No.") OR
                  ("Territory Code" <> xRec."Territory Code") OR
                  ("Currency Code" <> xRec."Currency Code") OR
                  ("Language Code" <> xRec."Language Code") OR
                  ("Our Contact Code" <> xRec."Our Contact Code") OR
                  ("Country/Region Code" <> xRec."Country/Region Code") OR
                  ("Fax No." <> xRec."Fax No.") OR
                  ("Telex Answer Back" <> xRec."Telex Answer Back") OR
                  ("Post Code" <> xRec."Post Code") OR
                  (County <> xRec.County) OR
                  ("E-Mail" <> xRec."E-Mail") OR
                  ("Home Page" <> xRec."Home Page")
               THEN BEGIN
                 MODIFY;
                 UpdateContFromBank.OnModify(Rec);
                 IF NOT FIND THEN BEGIN
                   RESET;
                   IF FIND THEN;
                 END;
               END;
             END;

    OnDelete=BEGIN
               MoveEntries.MoveBankAccEntries(Rec);

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::"Bank Account");
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               UpdateContFromBank.OnDelete(Rec);

               DimMgt.DeleteDefaultDim(DATABASE::"Bank Account","No.");
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=ENU=Bank Account;
    LookupPageID=Page371;
    DrillDownPageID=Page371;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GLSetup.GET;
                                                                  NoSeriesMgt.TestManual(GLSetup."Bank Account Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   AltSearchField=Search Name;
                                                   CaptionML=ENU=No. }
    { 2   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=ENU=Name }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=ENU=Search Name }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 5   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 8   ;   ;Contact             ;Text50        ;CaptionML=ENU=Contact }
    { 9   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 10  ;   ;Telex No.           ;Text20        ;CaptionML=ENU=Telex No. }
    { 13  ;   ;Bank Account No.    ;Text30        ;CaptionML=ENU=Bank Account No. }
    { 14  ;   ;Transit No.         ;Text20        ;CaptionML=ENU=Transit No. }
    { 15  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=ENU=Territory Code }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 18  ;   ;Chain Name          ;Code10        ;CaptionML=ENU=Chain Name }
    { 20  ;   ;Min. Balance        ;Decimal       ;CaptionML=ENU=Min. Balance;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 21  ;   ;Bank Acc. Posting Group;Code10     ;TableRelation="Bank Account Posting Group";
                                                   CaptionML=ENU=Bank Acc. Posting Group }
    { 22  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = xRec."Currency Code" THEN
                                                                  EXIT;

                                                                BankAcc.RESET;
                                                                BankAcc := Rec;
                                                                BankAcc.CALCFIELDS(Balance,"Balance (LCY)");
                                                                BankAcc.TESTFIELD(Balance,0);
                                                                BankAcc.TESTFIELD("Balance (LCY)",0);

                                                                IF NOT BankAccLedgEntry.SETCURRENTKEY("Bank Account No.",Open) THEN
                                                                  BankAccLedgEntry.SETCURRENTKEY("Bank Account No.");
                                                                BankAccLedgEntry.SETRANGE("Bank Account No.","No.");
                                                                BankAccLedgEntry.SETRANGE(Open,TRUE);
                                                                IF BankAccLedgEntry.FINDLAST THEN
                                                                  ERROR(
                                                                    Text000,
                                                                    FIELDCAPTION("Currency Code"));
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 26  ;   ;Statistics Group    ;Integer       ;CaptionML=ENU=Statistics Group }
    { 29  ;   ;Our Contact Code    ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Our Contact Code }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 37  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 38  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Bank Account),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 39  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 41  ;   ;Last Statement No.  ;Code20        ;CaptionML=ENU=Last Statement No. }
    { 42  ;   ;Last Payment Statement No.;Code20  ;OnValidate=VAR
                                                                TextManagement@1000 : Codeunit 41;
                                                              BEGIN
                                                                TextManagement.EvaluateIncStr("Last Payment Statement No.",FIELDCAPTION("Last Payment Statement No."));
                                                              END;

                                                   CaptionML=ENU=Last Payment Statement No. }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=No }
    { 55  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 56  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Filter;
                                                   CaptionClass='1,3,1' }
    { 57  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Filter;
                                                   CaptionClass='1,3,2' }
    { 58  ;   ;Balance             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=ENU=Balance;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Balance (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   CaptionML=ENU=Balance (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 60  ;   ;Net Change          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Net Change;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Net Change (LCY)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Net Change (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 62  ;   ;Total on Checks     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Check Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                      Entry Status=FILTER(Posted),
                                                                                                      Statement Status=FILTER(<>Closed)));
                                                   CaptionML=ENU=Total on Checks;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 84  ;   ;Fax No.             ;Text30        ;CaptionML=ENU=Fax No. }
    { 85  ;   ;Telex Answer Back   ;Text20        ;CaptionML=ENU=Telex Answer Back }
    { 89  ;   ;Picture             ;BLOB          ;CaptionML=ENU=Picture;
                                                   SubType=Bitmap }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Post Code }
    { 92  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 93  ;   ;Last Check No.      ;Code20        ;AccessByPermission=TableData 272=R;
                                                   CaptionML=ENU=Last Check No. }
    { 94  ;   ;Balance Last Statement;Decimal     ;CaptionML=ENU=Balance Last Statement;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 95  ;   ;Balance at Date     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry".Amount WHERE (Bank Account No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                             Posting Date=FIELD(UPPERLIMIT(Date Filter))));
                                                   CaptionML=ENU=Balance at Date;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 96  ;   ;Balance at Date (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Posting Date=FIELD(UPPERLIMIT(Date Filter))));
                                                   CaptionML=ENU=Balance at Date (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 97  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Debit Amount" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Debit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 98  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Credit Amount" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                      Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                      Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Credit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 99  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Debit Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                           Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                           Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Debit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 100 ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Bank Account Ledger Entry"."Credit Amount (LCY)" WHERE (Bank Account No.=FIELD(No.),
                                                                                                                            Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                            Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                            Posting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Credit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 101 ;   ;Bank Branch No.     ;Text20        ;CaptionML=ENU=Bank Branch No. }
    { 102 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=E-Mail }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=Home Page }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 108 ;   ;Check Report ID     ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   CaptionML=ENU=Check Report ID }
    { 109 ;   ;Check Report Name   ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                             Object ID=FIELD(Check Report ID)));
                                                   CaptionML=ENU=Check Report Name;
                                                   Editable=No }
    { 110 ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=ENU=IBAN }
    { 111 ;   ;SWIFT Code          ;Code20        ;CaptionML=ENU=SWIFT Code }
    { 113 ;   ;Bank Statement Import Format;Code20;TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Import));
                                                   CaptionML=ENU=Bank Statement Import Format }
    { 115 ;   ;Credit Transfer Msg. Nos.;Code10   ;TableRelation="No. Series";
                                                   CaptionML=ENU=Credit Transfer Msg. Nos. }
    { 116 ;   ;Direct Debit Msg. Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=ENU=Direct Debit Msg. Nos. }
    { 117 ;   ;SEPA Direct Debit Exp. Format;Code20;
                                                   TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Export));
                                                   CaptionML=ENU=SEPA Direct Debit Exp. Format }
    { 170 ;   ;Creditor No.        ;Code35        ;CaptionML=ENU=Creditor No. }
    { 1210;   ;Payment Export Format;Code20       ;TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Export));
                                                   CaptionML=ENU=Payment Export Format }
    { 1211;   ;Bank Clearing Code  ;Text50        ;CaptionML=ENU=Bank Clearing Code }
    { 1212;   ;Bank Clearing Standard;Text50      ;TableRelation="Bank Clearing Standard";
                                                   CaptionML=ENU=Bank Clearing Standard }
    { 1213;   ;Bank Name - Data Conversion;Text50 ;TableRelation="Bank Data Conv. Bank" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Bank Name - Data Conversion }
    { 1250;   ;Match Tolerance Type;Option        ;OnValidate=BEGIN
                                                                IF "Match Tolerance Type" <> xRec."Match Tolerance Type" THEN
                                                                  "Match Tolerance Value" := 0;
                                                              END;

                                                   CaptionML=ENU=Match Tolerance Type;
                                                   OptionCaptionML=ENU=Percentage,Amount;
                                                   OptionString=Percentage,Amount }
    { 1251;   ;Match Tolerance Value;Decimal      ;OnValidate=BEGIN
                                                                IF "Match Tolerance Value" < 0 THEN
                                                                  ERROR(InvalidValueErr);

                                                                IF "Match Tolerance Type" = "Match Tolerance Type"::Percentage THEN
                                                                  IF "Match Tolerance Value" > 99 THEN
                                                                    ERROR(InvalidPercentageValueErr,FIELDCAPTION("Match Tolerance Type"),
                                                                      FORMAT("Match Tolerance Type"::Percentage));
                                                              END;

                                                   CaptionML=ENU=Match Tolerance Value;
                                                   DecimalPlaces=0:5 }
    { 1260;   ;Positive Pay Export Code;Code20    ;TableRelation="Bank Export/Import Setup".Code WHERE (Direction=CONST(Export-Positive Pay));
                                                   CaptionML=ENU=Positive Pay Export Code }
    { 50500;  ;Last FT No.         ;Code20         }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Bank Acc. Posting Group                  }
    {    ;Currency Code                            }
    {    ;Country/Region Code                      }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Name,Bank Account No.,Currency Code  }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot change %1 because there are one or more open ledger entries for this bank account.';
      Text003@1003 : TextConst 'ENU=Do you wish to create a contact for %1 %2?';
      GLSetup@1004 : Record 98;
      BankAcc@1005 : Record 270;
      BankAccLedgEntry@1006 : Record 271;
      CommentLine@1007 : Record 97;
      PostCode@1008 : Record 225;
      NoSeriesMgt@1009 : Codeunit 396;
      MoveEntries@1010 : Codeunit 361;
      UpdateContFromBank@1011 : Codeunit 5058;
      DimMgt@1012 : Codeunit 408;
      InsertFromContact@1013 : Boolean;
      Text004@1014 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      BankAccIdentifierIsEmptyErr@1001 : TextConst 'ENU=You must specify either a %1 or an %2.';
      InvalidPercentageValueErr@1002 : TextConst '@@@=%1 is "field caption and %2 is "Percentage";ENU=If %1 is %2, then the value must be between 0 and 99.';
      InvalidValueErr@1015 : TextConst 'ENU=The value must be positive.';

    PROCEDURE AssistEdit@2(OldBankAcc@1000 : Record 270) : Boolean;
    BEGIN
      WITH BankAcc DO BEGIN
        BankAcc := Rec;
        GLSetup.GET;
        GLSetup.TESTFIELD("Bank Account Nos.");
        IF NoSeriesMgt.SelectSeries(GLSetup."Bank Account Nos.",OldBankAcc."No. Series","No. Series") THEN BEGIN
          GLSetup.GET;
          GLSetup.TESTFIELD("Bank Account Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := BankAcc;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Bank Account","No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE ShowContact@1();
    VAR
      ContBusRel@1000 : Record 5054;
      Cont@1001 : Record 5050;
    BEGIN
      IF "No." = '' THEN
        EXIT;

      ContBusRel.SETCURRENTKEY("Link to Table","No.");
      ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::"Bank Account");
      ContBusRel.SETRANGE("No.","No.");
      IF NOT ContBusRel.FINDFIRST THEN BEGIN
        IF NOT CONFIRM(Text003,FALSE,TABLECAPTION,"No.") THEN
          EXIT;
        UpdateContFromBank.InsertNewContact(Rec,FALSE);
        ContBusRel.FINDFIRST;
      END;
      COMMIT;

      Cont.SETCURRENTKEY("Company Name","Company No.",Type,Name);
      Cont.SETRANGE("Company No.",ContBusRel."Contact No.");
      PAGE.RUN(PAGE::"Contact List",Cont);
    END;

    PROCEDURE SetInsertFromContact@3(FromContact@1000 : Boolean);
    BEGIN
      InsertFromContact := FromContact;
    END;

    PROCEDURE GetPaymentExportCodeunitID@6() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetBankExportImportSetup(BankExportImportSetup);
      EXIT(BankExportImportSetup."Processing Codeunit ID");
    END;

    PROCEDURE GetPaymentExportXMLPortID@4() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetBankExportImportSetup(BankExportImportSetup);
      BankExportImportSetup.TESTFIELD("Processing XMLport ID");
      EXIT(BankExportImportSetup."Processing XMLport ID");
    END;

    PROCEDURE GetDDExportCodeunitID@11() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetDDExportImportSetup(BankExportImportSetup);
      BankExportImportSetup.TESTFIELD("Processing Codeunit ID");
      EXIT(BankExportImportSetup."Processing Codeunit ID");
    END;

    PROCEDURE GetDDExportXMLPortID@9() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      GetDDExportImportSetup(BankExportImportSetup);
      BankExportImportSetup.TESTFIELD("Processing XMLport ID");
      EXIT(BankExportImportSetup."Processing XMLport ID");
    END;

    PROCEDURE GetBankExportImportSetup@8(VAR BankExportImportSetup@1001 : Record 1200);
    BEGIN
      TESTFIELD("Payment Export Format");
      BankExportImportSetup.GET("Payment Export Format");
    END;

    PROCEDURE GetDDExportImportSetup@12(VAR BankExportImportSetup@1001 : Record 1200);
    BEGIN
      TESTFIELD("SEPA Direct Debit Exp. Format");
      BankExportImportSetup.GET("SEPA Direct Debit Exp. Format");
    END;

    PROCEDURE GetCreditTransferMessageNo@5() : Code[20];
    VAR
      NoSeriesManagement@1000 : Codeunit 396;
    BEGIN
      TESTFIELD("Credit Transfer Msg. Nos.");
      EXIT(NoSeriesManagement.GetNextNo("Credit Transfer Msg. Nos.",TODAY,TRUE));
    END;

    PROCEDURE GetDirectDebitMessageNo@10() : Code[20];
    VAR
      NoSeriesManagement@1000 : Codeunit 396;
    BEGIN
      TESTFIELD("Direct Debit Msg. Nos.");
      EXIT(NoSeriesManagement.GetNextNo("Direct Debit Msg. Nos.",TODAY,TRUE));
    END;

    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::"Bank Account",GETPOSITION)
      ELSE
        MESSAGE(Text004);
    END;

    PROCEDURE GetDataExchDef@13(VAR DataExchDef@1000 : Record 1222);
    VAR
      BankExportImportSetup@1001 : Record 1200;
    BEGIN
      TESTFIELD("Bank Statement Import Format");

      BankExportImportSetup.GET("Bank Statement Import Format");
      BankExportImportSetup.TESTFIELD("Data Exch. Def. Code");

      DataExchDef.GET(BankExportImportSetup."Data Exch. Def. Code");
      DataExchDef.TESTFIELD(Type,DataExchDef.Type::"Bank Statement Import");
    END;

    PROCEDURE GetBankAccountNoWithCheck@14() AccountNo : Text;
    BEGIN
      AccountNo := GetBankAccountNo;
      IF AccountNo = '' THEN
        ERROR(BankAccIdentifierIsEmptyErr,FIELDCAPTION("Bank Account No."),FIELDCAPTION(IBAN));
    END;

    PROCEDURE GetBankAccountNo@15() : Text;
    BEGIN
      IF IBAN <> '' THEN
        EXIT(DELCHR(IBAN,'=<>'));

      IF "Bank Account No." <> '' THEN
        EXIT("Bank Account No.");
    END;

    PROCEDURE IsInLocalCurrency@16() : Boolean;
    VAR
      GeneralLedgerSetup@1000 : Record 98;
    BEGIN
      IF "Currency Code" = '' THEN
        EXIT(TRUE);

      GeneralLedgerSetup.GET;
      EXIT("Currency Code" = GeneralLedgerSetup.GetCurrencyCode(''));
    END;

    PROCEDURE GetPosPayExportCodeunitID@17() : Integer;
    VAR
      BankExportImportSetup@1000 : Record 1200;
    BEGIN
      TESTFIELD("Positive Pay Export Code");
      BankExportImportSetup.GET("Positive Pay Export Code");
      EXIT(BankExportImportSetup."Processing Codeunit ID");
    END;

    BEGIN
    {
      !! Documentation Table 270 Bank Account

      4:43 PM Thursday, August 29, 2024
        Additional column for Last FT No. to be used for FT Report
    }
    END.
  }
}

OBJECT Report 2 General Journal - Test
{
  OBJECT-PROPERTIES
  {
    Date=08/16/18;
    Time=11:55:07 PM;
    Modified=Yes;
    Version List=NAVW19.00.00.45480,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    CaptionML=ENU=General Journal - Test;
  }
  DATASET
  {
    { 3502;    ;DataItem;                    ;
               DataItemTable=Table232;
               DataItemTableView=SORTING(Journal Template Name,Name);
               OnPreDataItem=BEGIN
                               GLSetup.GET;
                               SalesSetup.GET;
                               PurchSetup.GET;
                               AmountLCY := 0;
                               BalanceLCY := 0;
                             END;
                              }

    { 68  ;1   ;Column  ;JnlTmplName_GenJnlBatch;
               SourceExpr="Journal Template Name" }

    { 69  ;1   ;Column  ;Name_GenJnlBatch    ;
               SourceExpr=Name }

    { 3   ;1   ;Column  ;CompanyName         ;
               SourceExpr=COMPANYNAME }

    { 1   ;1   ;Column  ;GeneralJnlTestCaption;
               SourceExpr=GeneralJnlTestCap }

    { 54  ;1   ;Column  ;HideReconcillation  ;
               SourceExpr=HideReconcillation }

    { 5444;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               PrintOnlyIfDetail=Yes }

    { 8   ;2   ;Column  ;JnlTemplateName_GenJnlBatch;
               SourceExpr="Gen. Journal Batch"."Journal Template Name" }

    { 10  ;2   ;Column  ;JnlName_GenJnlBatch ;
               SourceExpr="Gen. Journal Batch".Name }

    { 60  ;2   ;Column  ;GenJnlLineFilter    ;
               SourceExpr=GenJnlLineFilter }

    { 53  ;2   ;Column  ;GenJnlLineFilterTableCaption;
               SourceExpr="Gen. Journal Line".TABLECAPTION + ': ' + GenJnlLineFilter }

    { 70  ;2   ;Column  ;Number_Integer      ;
               SourceExpr=Number }

    { 4   ;2   ;Column  ;PageNoCaption       ;
               SourceExpr=PageNoCap }

    { 7   ;2   ;Column  ;JnlTmplNameCaption_GenJnlBatch;
               SourceExpr="Gen. Journal Batch".FIELDCAPTION("Journal Template Name") }

    { 9   ;2   ;Column  ;JournalBatchCaption ;
               SourceExpr=JnlBatchNameCap }

    { 11  ;2   ;Column  ;PostingDateCaption  ;
               SourceExpr=PostingDateCap }

    { 12  ;2   ;Column  ;DocumentTypeCaption ;
               SourceExpr=DocumentTypeCap }

    { 13  ;2   ;Column  ;DocNoCaption_GenJnlLine;
               SourceExpr="Gen. Journal Line".FIELDCAPTION("Document No.") }

    { 40  ;2   ;Column  ;ExtrnlDocNoCaption_GenJnlLine;
               SourceExpr="Gen. Journal Line".FIELDCAPTION("External Document No.") }

    { 14  ;2   ;Column  ;AccountTypeCaption  ;
               SourceExpr=AccountTypeCap }

    { 15  ;2   ;Column  ;AccNoCaption_GenJnlLine;
               SourceExpr="Gen. Journal Line".FIELDCAPTION("Account No.") }

    { 16  ;2   ;Column  ;AccNameCaption      ;
               SourceExpr=AccNameCap }

    { 17  ;2   ;Column  ;DescCaption_GenJnlLine;
               SourceExpr="Gen. Journal Line".FIELDCAPTION(Description) }

    { 18  ;2   ;Column  ;PostingTypeCaption  ;
               SourceExpr=GenPostingTypeCap }

    { 19  ;2   ;Column  ;GenBusPostGroupCaption;
               SourceExpr=GenBusPostingGroupCap }

    { 20  ;2   ;Column  ;GenProdPostGroupCaption;
               SourceExpr=GenProdPostingGroupCap }

    { 21  ;2   ;Column  ;AmountCaption_GenJnlLine;
               SourceExpr="Gen. Journal Line".FIELDCAPTION(Amount) }

    { 22  ;2   ;Column  ;BalAccNoCaption_GenJnlLine;
               SourceExpr="Gen. Journal Line".FIELDCAPTION("Bal. Account No.") }

    { 23  ;2   ;Column  ;BalLCYCaption_GenJnlLine;
               SourceExpr="Gen. Journal Line".FIELDCAPTION("Balance (LCY)") }

    { 65  ;2   ;Column  ;JournalTemplateName ;
               SourceExpr=JournalTemplateName }

    { 7024;2   ;DataItem;                    ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Line No.);
               OnPreDataItem=BEGIN
                               COPYFILTER("Journal Batch Name","Gen. Journal Batch".Name);
                               GenJnlLineFilter := GETFILTERS;

                               GenJnlTemplate.GET("Gen. Journal Batch"."Journal Template Name");
                               IF GenJnlTemplate.Recurring THEN BEGIN
                                 IF GETFILTER("Posting Date") <> '' THEN
                                   AddError(
                                     STRSUBSTNO(
                                       Text000,
                                       FIELDCAPTION("Posting Date")));
                                 SETRANGE("Posting Date",0D,WORKDATE);
                                 IF GETFILTER("Expiration Date") <> '' THEN
                                   AddError(
                                     STRSUBSTNO(
                                       Text000,
                                       FIELDCAPTION("Expiration Date")));
                                 SETFILTER("Expiration Date",'%1 | %2..',0D,WORKDATE);
                               END;

                               IF "Gen. Journal Batch"."No. Series" <> '' THEN BEGIN
                                 NoSeries.GET("Gen. Journal Batch"."No. Series");
                                 LastEntrdDocNo := '';
                                 LastEntrdDate := 0D;
                               END;

                               // PHP Start
                                IF GenJnlTemplate.Type = GenJnlTemplate.Type::"Cash Receipts" THEN
                                 HideReconcillation := TRUE
                                ELSE
                                 HideReconcillation := FALSE;

                                JournalTemplateName := GenJnlTemplate.Description;
                               // PHP End


                               CurrentCustomerVendors := 0;
                               VATEntryCreated := FALSE;

                               GenJnlLine2.RESET;
                               GenJnlLine2.COPYFILTERS("Gen. Journal Line");

                               GLAccNetChange.DELETEALL;
                               CurrReport.CREATETOTALS("Amount (LCY)","Balance (LCY)");
                             END;

               OnAfterGetRecord=VAR
                                  PaymentTerms@1004 : Record 3;
                                  DimMgt@1001 : Codeunit 408;
                                  TableID@1002 : ARRAY [10] OF Integer;
                                  No@1003 : ARRAY [10] OF Code[20];
                                  SalesInvoiceHeader@1000 : Record 112;
                                  SalesCrMemoHeader@1005 : Record 114;
                                BEGIN
                                  IF "Currency Code" = '' THEN
                                    "Amount (LCY)" := Amount;

                                  UpdateLineBalance;

                                  AccName := '';
                                  BalAccName := '';

                                  IF NOT EmptyLine THEN BEGIN
                                    MakeRecurringTexts("Gen. Journal Line");

                                    AmountError := FALSE;

                                    IF ("Account No." = '') AND ("Bal. Account No." = '') THEN
                                      AddError(STRSUBSTNO(Text001,FIELDCAPTION("Account No."),FIELDCAPTION("Bal. Account No.")))
                                    ELSE
                                      IF ("Account Type" <> "Account Type"::"Fixed Asset") AND
                                         ("Bal. Account Type" <> "Bal. Account Type"::"Fixed Asset")
                                      THEN
                                        TestFixedAssetFields("Gen. Journal Line");
                                    CheckICDocument;
                                    IF "Account No." <> '' THEN
                                      CASE "Account Type" OF
                                        "Account Type"::"G/L Account":
                                          BEGIN
                                            IF ("Gen. Bus. Posting Group" <> '') OR ("Gen. Prod. Posting Group" <> '') OR
                                               ("VAT Bus. Posting Group" <> '') OR ("VAT Prod. Posting Group" <> '')
                                            THEN BEGIN
                                              IF "Gen. Posting Type" = 0 THEN
                                                AddError(STRSUBSTNO(Text002,FIELDCAPTION("Gen. Posting Type")));
                                            END;
                                            IF ("Gen. Posting Type" <> "Gen. Posting Type"::" ") AND
                                               ("VAT Posting" = "VAT Posting"::"Automatic VAT Entry")
                                            THEN BEGIN
                                              IF "VAT Amount" + "VAT Base Amount" <> Amount THEN
                                                AddError(
                                                  STRSUBSTNO(
                                                    Text003,FIELDCAPTION("VAT Amount"),FIELDCAPTION("VAT Base Amount"),
                                                    FIELDCAPTION(Amount)));
                                              IF "Currency Code" <> '' THEN
                                                IF "VAT Amount (LCY)" + "VAT Base Amount (LCY)" <> "Amount (LCY)" THEN
                                                  AddError(
                                                    STRSUBSTNO(
                                                      Text003,FIELDCAPTION("VAT Amount (LCY)"),
                                                      FIELDCAPTION("VAT Base Amount (LCY)"),FIELDCAPTION("Amount (LCY)")));
                                            END;
                                            TestJobFields("Gen. Journal Line");
                                          END;
                                        "Account Type"::Customer,"Account Type"::Vendor:
                                          BEGIN
                                            IF "Gen. Posting Type" <> 0 THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text004,
                                                  FIELDCAPTION("Gen. Posting Type"),FIELDCAPTION("Account Type"),"Account Type"));
                                            IF ("Gen. Bus. Posting Group" <> '') OR ("Gen. Prod. Posting Group" <> '') OR
                                               ("VAT Bus. Posting Group" <> '') OR ("VAT Prod. Posting Group" <> '')
                                            THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text005,
                                                  FIELDCAPTION("Gen. Bus. Posting Group"),FIELDCAPTION("Gen. Prod. Posting Group"),
                                                  FIELDCAPTION("VAT Bus. Posting Group"),FIELDCAPTION("VAT Prod. Posting Group"),
                                                  FIELDCAPTION("Account Type"),"Account Type"));

                                            IF "Document Type" <> 0 THEN BEGIN
                                              IF "Account Type" = "Account Type"::Customer THEN
                                                CASE "Document Type" OF
                                                  "Document Type"::"Credit Memo":
                                                    WarningIfPositiveAmt("Gen. Journal Line");
                                                  "Document Type"::Payment:
                                                    IF ("Applies-to Doc. Type" = "Applies-to Doc. Type"::"Credit Memo") AND
                                                       ("Applies-to Doc. No." <> '')
                                                    THEN
                                                      WarningIfNegativeAmt("Gen. Journal Line")
                                                    ELSE
                                                      WarningIfPositiveAmt("Gen. Journal Line");
                                                  "Document Type"::Refund:
                                                    WarningIfNegativeAmt("Gen. Journal Line");
                                                  ELSE
                                                    WarningIfNegativeAmt("Gen. Journal Line");
                                                END
                                              ELSE
                                                CASE "Document Type" OF
                                                  "Document Type"::"Credit Memo":
                                                    WarningIfNegativeAmt("Gen. Journal Line");
                                                  "Document Type"::Payment:
                                                    IF ("Applies-to Doc. Type" = "Applies-to Doc. Type"::"Credit Memo") AND
                                                       ("Applies-to Doc. No." <> '')
                                                    THEN
                                                      WarningIfPositiveAmt("Gen. Journal Line")
                                                    ELSE
                                                      WarningIfNegativeAmt("Gen. Journal Line");
                                                  "Document Type"::Refund:
                                                    WarningIfPositiveAmt("Gen. Journal Line");
                                                  ELSE
                                                    WarningIfPositiveAmt("Gen. Journal Line");
                                                END
                                            END;

                                            IF Amount * "Sales/Purch. (LCY)" < 0 THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text008,
                                                  FIELDCAPTION("Sales/Purch. (LCY)"),FIELDCAPTION(Amount)));
                                            IF "Job No." <> '' THEN
                                              AddError(STRSUBSTNO(Text009,FIELDCAPTION("Job No.")));
                                          END;
                                        "Account Type"::"Bank Account":
                                          BEGIN
                                            IF "Gen. Posting Type" <> 0 THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text004,
                                                  FIELDCAPTION("Gen. Posting Type"),FIELDCAPTION("Account Type"),"Account Type"));
                                            IF ("Gen. Bus. Posting Group" <> '') OR ("Gen. Prod. Posting Group" <> '') OR
                                               ("VAT Bus. Posting Group" <> '') OR ("VAT Prod. Posting Group" <> '')
                                            THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text005,
                                                  FIELDCAPTION("Gen. Bus. Posting Group"),FIELDCAPTION("Gen. Prod. Posting Group"),
                                                  FIELDCAPTION("VAT Bus. Posting Group"),FIELDCAPTION("VAT Prod. Posting Group"),
                                                  FIELDCAPTION("Account Type"),"Account Type"));

                                            IF "Job No." <> '' THEN
                                              AddError(STRSUBSTNO(Text009,FIELDCAPTION("Job No.")));
                                            IF (Amount < 0) AND ("Bank Payment Type" = "Bank Payment Type"::"Computer Check") THEN
                                              IF NOT "Check Printed" THEN
                                                AddError(STRSUBSTNO(Text010,FIELDCAPTION("Check Printed")));
                                          END;
                                        "Account Type"::"Fixed Asset":
                                          TestFixedAsset("Gen. Journal Line");
                                      END;

                                    IF "Bal. Account No." <> '' THEN
                                      CASE "Bal. Account Type" OF
                                        "Bal. Account Type"::"G/L Account":
                                          BEGIN
                                            IF ("Bal. Gen. Bus. Posting Group" <> '') OR ("Bal. Gen. Prod. Posting Group" <> '') OR
                                               ("Bal. VAT Bus. Posting Group" <> '') OR ("Bal. VAT Prod. Posting Group" <> '')
                                            THEN BEGIN
                                              IF "Bal. Gen. Posting Type" = 0 THEN
                                                AddError(STRSUBSTNO(Text002,FIELDCAPTION("Bal. Gen. Posting Type")));
                                            END;
                                            IF ("Bal. Gen. Posting Type" <> "Bal. Gen. Posting Type"::" ") AND
                                               ("VAT Posting" = "VAT Posting"::"Automatic VAT Entry")
                                            THEN BEGIN
                                              IF "Bal. VAT Amount" + "Bal. VAT Base Amount" <> -Amount THEN
                                                AddError(
                                                  STRSUBSTNO(
                                                    Text011,FIELDCAPTION("Bal. VAT Amount"),FIELDCAPTION("Bal. VAT Base Amount"),
                                                    FIELDCAPTION(Amount)));
                                              IF "Currency Code" <> '' THEN
                                                IF "Bal. VAT Amount (LCY)" + "Bal. VAT Base Amount (LCY)" <> -"Amount (LCY)" THEN
                                                  AddError(
                                                    STRSUBSTNO(
                                                      Text011,FIELDCAPTION("Bal. VAT Amount (LCY)"),
                                                      FIELDCAPTION("Bal. VAT Base Amount (LCY)"),FIELDCAPTION("Amount (LCY)")));
                                            END;
                                          END;
                                        "Bal. Account Type"::Customer,"Bal. Account Type"::Vendor:
                                          BEGIN
                                            IF "Bal. Gen. Posting Type" <> 0 THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text004,
                                                  FIELDCAPTION("Bal. Gen. Posting Type"),FIELDCAPTION("Bal. Account Type"),"Bal. Account Type"));
                                            IF ("Bal. Gen. Bus. Posting Group" <> '') OR ("Bal. Gen. Prod. Posting Group" <> '') OR
                                               ("Bal. VAT Bus. Posting Group" <> '') OR ("Bal. VAT Prod. Posting Group" <> '')
                                            THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text005,
                                                  FIELDCAPTION("Bal. Gen. Bus. Posting Group"),FIELDCAPTION("Bal. Gen. Prod. Posting Group"),
                                                  FIELDCAPTION("Bal. VAT Bus. Posting Group"),FIELDCAPTION("Bal. VAT Prod. Posting Group"),
                                                  FIELDCAPTION("Bal. Account Type"),"Bal. Account Type"));

                                            IF "Document Type" <> 0 THEN BEGIN
                                              IF ("Bal. Account Type" = "Bal. Account Type"::Customer) =
                                                 ("Document Type" IN ["Document Type"::Payment,"Document Type"::"Credit Memo"])
                                              THEN
                                                WarningIfNegativeAmt("Gen. Journal Line")
                                              ELSE
                                                WarningIfPositiveAmt("Gen. Journal Line")
                                            END;
                                            IF Amount * "Sales/Purch. (LCY)" > 0 THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text012,
                                                  FIELDCAPTION("Sales/Purch. (LCY)"),FIELDCAPTION(Amount)));
                                            IF "Job No." <> '' THEN
                                              AddError(STRSUBSTNO(Text009,FIELDCAPTION("Job No.")));
                                          END;
                                        "Bal. Account Type"::"Bank Account":
                                          BEGIN
                                            IF "Bal. Gen. Posting Type" <> 0 THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text004,
                                                  FIELDCAPTION("Bal. Gen. Posting Type"),FIELDCAPTION("Bal. Account Type"),"Bal. Account Type"));
                                            IF ("Bal. Gen. Bus. Posting Group" <> '') OR ("Bal. Gen. Prod. Posting Group" <> '') OR
                                               ("Bal. VAT Bus. Posting Group" <> '') OR ("Bal. VAT Prod. Posting Group" <> '')
                                            THEN
                                              AddError(
                                                STRSUBSTNO(
                                                  Text005,
                                                  FIELDCAPTION("Bal. Gen. Bus. Posting Group"),FIELDCAPTION("Bal. Gen. Prod. Posting Group"),
                                                  FIELDCAPTION("Bal. VAT Bus. Posting Group"),FIELDCAPTION("Bal. VAT Prod. Posting Group"),
                                                  FIELDCAPTION("Bal. Account Type"),"Bal. Account Type"));

                                            IF "Job No." <> '' THEN
                                              AddError(STRSUBSTNO(Text009,FIELDCAPTION("Job No.")));
                                            IF (Amount > 0) AND ("Bank Payment Type" = "Bank Payment Type"::"Computer Check") THEN
                                              IF NOT "Check Printed" THEN
                                                AddError(STRSUBSTNO(Text010,FIELDCAPTION("Check Printed")));
                                          END;
                                        "Bal. Account Type"::"Fixed Asset":
                                          TestFixedAsset("Gen. Journal Line");
                                      END;

                                    IF ("Account No." <> '') AND
                                       NOT "System-Created Entry" AND
                                       (Amount = 0) AND
                                       NOT GenJnlTemplate.Recurring AND
                                       NOT "Allow Zero-Amount Posting" AND
                                       ("Account Type" <> "Account Type"::"Fixed Asset")
                                    THEN
                                      WarningIfZeroAmt("Gen. Journal Line");

                                    CheckRecurringLine("Gen. Journal Line");
                                    CheckAllocations("Gen. Journal Line");

                                    IF "Posting Date" = 0D THEN
                                      AddError(STRSUBSTNO(Text002,FIELDCAPTION("Posting Date")))
                                    ELSE BEGIN
                                      IF "Posting Date" <> NORMALDATE("Posting Date") THEN
                                        IF ("Account Type" <> "Account Type"::"G/L Account") OR
                                           ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account")
                                        THEN
                                          AddError(
                                            STRSUBSTNO(
                                              Text013,FIELDCAPTION("Posting Date")));

                                      IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
                                        IF USERID <> '' THEN
                                          IF UserSetup.GET(USERID) THEN BEGIN
                                            AllowPostingFrom := UserSetup."Allow Posting From";
                                            AllowPostingTo := UserSetup."Allow Posting To";
                                          END;
                                        IF (AllowPostingFrom = 0D) AND (AllowPostingTo = 0D) THEN BEGIN
                                          AllowPostingFrom := GLSetup."Allow Posting From";
                                          AllowPostingTo := GLSetup."Allow Posting To";
                                        END;
                                        IF AllowPostingTo = 0D THEN
                                          AllowPostingTo := 12319999D;
                                      END;
                                      IF ("Posting Date" < AllowPostingFrom) OR ("Posting Date" > AllowPostingTo) THEN
                                        AddError(
                                          STRSUBSTNO(
                                            Text014,FORMAT("Posting Date")));

                                      IF "Gen. Journal Batch"."No. Series" <> '' THEN BEGIN
                                        IF NoSeries."Date Order" AND ("Posting Date" < LastEntrdDate) THEN
                                          AddError(Text015);
                                        LastEntrdDate := "Posting Date";
                                      END;
                                    END;

                                    IF "Document Date" <> 0D THEN
                                      IF ("Document Date" <> NORMALDATE("Document Date")) AND
                                         (("Account Type" <> "Account Type"::"G/L Account") OR
                                          ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account"))
                                      THEN
                                        AddError(
                                          STRSUBSTNO(
                                            Text013,FIELDCAPTION("Document Date")));

                                    IF "Document No." = '' THEN
                                      AddError(STRSUBSTNO(Text002,FIELDCAPTION("Document No.")))
                                    ELSE
                                      IF "Gen. Journal Batch"."No. Series" <> '' THEN BEGIN
                                        IF (LastEntrdDocNo <> '') AND
                                           ("Document No." <> LastEntrdDocNo) AND
                                           ("Document No." <> INCSTR(LastEntrdDocNo))
                                        THEN
                                          AddError(Text016);
                                        LastEntrdDocNo := "Document No.";
                                      END;

                                    IF ("Account Type" IN ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Fixed Asset"]) AND
                                       ("Bal. Account Type" IN ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Fixed Asset"])
                                    THEN
                                      AddError(
                                        STRSUBSTNO(
                                          Text017,
                                          FIELDCAPTION("Account Type"),FIELDCAPTION("Bal. Account Type")));

                                    IF Amount * "Amount (LCY)" < 0 THEN
                                      AddError(
                                        STRSUBSTNO(
                                          Text008,FIELDCAPTION("Amount (LCY)"),FIELDCAPTION(Amount)));

                                    IF ("Account Type" = "Account Type"::"G/L Account") AND
                                       ("Bal. Account Type" = "Bal. Account Type"::"G/L Account")
                                    THEN
                                      IF "Applies-to Doc. No." <> '' THEN
                                        AddError(STRSUBSTNO(Text009,FIELDCAPTION("Applies-to Doc. No.")));

                                    IF (("Account Type" = "Account Type"::"G/L Account") AND
                                        ("Bal. Account Type" = "Bal. Account Type"::"G/L Account")) OR
                                       ("Document Type" <> "Document Type"::Invoice)
                                    THEN
                                      IF PaymentTerms.GET("Payment Terms Code") THEN BEGIN
                                        IF ("Document Type" = "Document Type"::"Credit Memo") AND
                                           (NOT PaymentTerms."Calc. Pmt. Disc. on Cr. Memos")
                                        THEN BEGIN
                                          IF "Pmt. Discount Date" <> 0D THEN
                                            AddError(STRSUBSTNO(Text009,FIELDCAPTION("Pmt. Discount Date")));
                                          IF "Payment Discount %" <> 0 THEN
                                            AddError(STRSUBSTNO(Text018,FIELDCAPTION("Payment Discount %")));
                                        END;
                                      END ELSE BEGIN
                                        IF "Pmt. Discount Date" <> 0D THEN
                                          AddError(STRSUBSTNO(Text009,FIELDCAPTION("Pmt. Discount Date")));
                                        IF "Payment Discount %" <> 0 THEN
                                          AddError(STRSUBSTNO(Text018,FIELDCAPTION("Payment Discount %")));
                                      END;

                                    IF (("Account Type" = "Account Type"::"G/L Account") AND
                                        ("Bal. Account Type" = "Bal. Account Type"::"G/L Account")) OR
                                       ("Applies-to Doc. No." <> '')
                                    THEN
                                      IF "Applies-to ID" <> '' THEN
                                        AddError(STRSUBSTNO(Text009,FIELDCAPTION("Applies-to ID")));

                                    IF ("Account Type" <> "Account Type"::"Bank Account") AND
                                       ("Bal. Account Type" <> "Bal. Account Type"::"Bank Account")
                                    THEN
                                      IF GenJnlLine2."Bank Payment Type" > 0 THEN
                                        AddError(STRSUBSTNO(Text009,FIELDCAPTION("Bank Payment Type")));

                                    IF ("Account No." <> '') AND ("Bal. Account No." <> '') THEN BEGIN
                                      PurchPostingType := FALSE;
                                      SalesPostingType := FALSE;
                                    END;
                                    IF "Account No." <> '' THEN
                                      CASE "Account Type" OF
                                        "Account Type"::"G/L Account":
                                          CheckGLAcc("Gen. Journal Line",AccName);
                                        "Account Type"::Customer:
                                          CheckCust("Gen. Journal Line",AccName);
                                        "Account Type"::Vendor:
                                          CheckVend("Gen. Journal Line",AccName);
                                        "Account Type"::"Bank Account":
                                          CheckBankAcc("Gen. Journal Line",AccName);
                                        "Account Type"::"Fixed Asset":
                                          CheckFixedAsset("Gen. Journal Line",AccName);
                                        "Account Type"::"IC Partner":
                                          CheckICPartner("Gen. Journal Line",AccName);
                                      END;
                                    IF "Bal. Account No." <> '' THEN BEGIN
                                      ExchAccGLJnlLine.RUN("Gen. Journal Line");
                                      CASE "Account Type" OF
                                        "Account Type"::"G/L Account":
                                          CheckGLAcc("Gen. Journal Line",BalAccName);
                                        "Account Type"::Customer:
                                          CheckCust("Gen. Journal Line",BalAccName);
                                        "Account Type"::Vendor:
                                          CheckVend("Gen. Journal Line",BalAccName);
                                        "Account Type"::"Bank Account":
                                          CheckBankAcc("Gen. Journal Line",BalAccName);
                                        "Account Type"::"Fixed Asset":
                                          CheckFixedAsset("Gen. Journal Line",BalAccName);
                                        "Account Type"::"IC Partner":
                                          CheckICPartner("Gen. Journal Line",AccName);
                                      END;
                                      ExchAccGLJnlLine.RUN("Gen. Journal Line");
                                    END;

                                    IF NOT DimMgt.CheckDimIDComb("Dimension Set ID") THEN
                                      AddError(DimMgt.GetDimCombErr);

                                    TableID[1] := DimMgt.TypeToTableID1("Account Type");
                                    No[1] := "Account No.";
                                    TableID[2] := DimMgt.TypeToTableID1("Bal. Account Type");
                                    No[2] := "Bal. Account No.";
                                    TableID[3] := DATABASE::Job;
                                    No[3] := "Job No.";
                                    TableID[4] := DATABASE::"Salesperson/Purchaser";
                                    No[4] := "Salespers./Purch. Code";
                                    TableID[5] := DATABASE::Campaign;
                                    No[5] := "Campaign No.";
                                    IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN
                                      AddError(DimMgt.GetDimValuePostingErr);
                                  END;

                                  CheckBalance;
                                  // PHP Start Calculation of WHT
                                  WHTManagement.CheckApplicationPaymentWHT("Gen. Journal Line"); // WHT Validation
                                  //TODO: Not tried for Foreign Currency
                                  WHTAmt := 0;
                                  IF "Gen. Journal Line"."Account Type" = "Gen. Journal Line"."Account Type"::Vendor THEN BEGIN
                                    AmountLCY += "Amount (LCY)" - CalcWHT("Gen. Journal Line");
                                    WHTAmt := CalcWHT("Gen. Journal Line");
                                  END ELSE // PHP End Calculation of WHT
                                    AmountLCY += "Amount (LCY)"; // Original Code
                                  BalanceLCY += "Balance (LCY)";

                                  // PHP Start
                                  CustomerPONo := '';
                                  IF "Gen. Journal Line"."Account Type" = "Gen. Journal Line"."Account Type"::Customer THEN BEGIN
                                    CASE "Gen. Journal Line"."Applies-to Doc. Type" OF
                                      "Gen. Journal Line"."Applies-to Doc. Type"::Invoice:
                                        BEGIN
                                          SalesInvoiceHeader.GET("Gen. Journal Line"."Applies-to Doc. No.");
                                          CustomerPONo := SalesInvoiceHeader."PO No.";
                                        END;
                                      "Gen. Journal Line"."Applies-to Doc. Type"::"Credit Memo":
                                        BEGIN
                                          SalesCrMemoHeader.GET("Gen. Journal Line"."Applies-to Doc. No.");
                                          CustomerPONo := SalesCrMemoHeader."PO No.";
                                        END;
                                    END;
                                  END;

                                  // Calculation of WHT
                                  // Applicable for vendor only
                                  "Gen. Journal Line".Amount := "Gen. Journal Line".Amount - CalcWHT("Gen. Journal Line");
                                  // PHP End
                                END;

               ReqFilterFields=Posting Date;
               DataItemLinkReference=Gen. Journal Batch;
               DataItemLink=Journal Template Name=FIELD(Journal Template Name),
                            Journal Batch Name=FIELD(Name) }

    { 24  ;3   ;Column  ;PostingDate_GenJnlLine;
               SourceExpr=FORMAT("Posting Date") }

    { 25  ;3   ;Column  ;DocType_GenJnlLine  ;
               SourceExpr="Document Type" }

    { 26  ;3   ;Column  ;DocNo_GenJnlLine    ;
               SourceExpr="Document No." }

    { 41  ;3   ;Column  ;ExtrnlDocNo_GenJnlLine;
               SourceExpr="External Document No." }

    { 27  ;3   ;Column  ;AccountType_GenJnlLine;
               SourceExpr="Account Type" }

    { 28  ;3   ;Column  ;AccountNo_GenJnlLine;
               SourceExpr="Account No." }

    { 29  ;3   ;Column  ;AccName             ;
               SourceExpr=AccName }

    { 30  ;3   ;Column  ;Description_GenJnlLine;
               SourceExpr=Description }

    { 31  ;3   ;Column  ;GenPostType_GenJnlLine;
               SourceExpr="Gen. Posting Type" }

    { 32  ;3   ;Column  ;GenBusPosGroup_GenJnlLine;
               SourceExpr="Gen. Bus. Posting Group" }

    { 33  ;3   ;Column  ;GenProdPostGroup_GenJnlLine;
               SourceExpr="Gen. Prod. Posting Group" }

    { 34  ;3   ;Column  ;Amount_GenJnlLine   ;
               SourceExpr=Amount }

    { 35  ;3   ;Column  ;CurrencyCode_GenJnlLine;
               SourceExpr="Currency Code" }

    { 36  ;3   ;Column  ;BalAccNo_GenJnlLine ;
               SourceExpr="Bal. Account No." }

    { 55  ;3   ;Column  ;BalAccName_GenJnlLine;
               SourceExpr=BalAccName }

    { 37  ;3   ;Column  ;BalanceLCY_GenJnlLine;
               SourceExpr="Balance (LCY)" }

    { 58  ;3   ;Column  ;AmountLCY           ;
               SourceExpr=AmountLCY }

    { 61  ;3   ;Column  ;BalanceLCY          ;
               SourceExpr=BalanceLCY }

    { 39  ;3   ;Column  ;AmountLCY_GenJnlLine;
               SourceExpr="Amount (LCY)" }

    { 2766;3   ;Column  ;JnlTmplName_GenJnlLine;
               SourceExpr="Journal Template Name" }

    { 4759;3   ;Column  ;JnlBatchName_GenJnlLine;
               SourceExpr="Journal Batch Name" }

    { 8309;3   ;Column  ;LineNo_GenJnlLine   ;
               SourceExpr="Line No." }

    { 38  ;3   ;Column  ;TotalLCYCaption     ;
               SourceExpr=AmountLCYCap }

    { 5   ;3   ;Column  ;MessageToRecipient_GenJnlLine;
               SourceExpr="Message to Recipient" }

    { 6   ;3   ;Column  ;DocumentDate_GenJnlLine;
               SourceExpr=FORMAT("Document Date") }

    { 62  ;3   ;Column  ;PreparedBy          ;
               SourceExpr=GetEmployeeName(PreparedBy) }

    { 63  ;3   ;Column  ;ConfirmedBy         ;
               SourceExpr=GetEmployeeName(ConfirmedBy) }

    { 64  ;3   ;Column  ;CustomerPONo        ;
               SourceExpr=CustomerPONo }

    { 71  ;3   ;Column  ;WHTAmt_GenJnlLine   ;
               SourceExpr=WHTAmt }

    { 9775;3   ;DataItem;DimensionLoop       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(1..));
               OnPreDataItem=BEGIN
                               IF NOT ShowDim THEN
                                 CurrReport.BREAK;
                               DimSetEntry.RESET;
                               DimSetEntry.SETRANGE("Dimension Set ID","Gen. Journal Line"."Dimension Set ID")
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    IF NOT DimSetEntry.FINDSET THEN
                                      CurrReport.BREAK;
                                  END ELSE
                                    IF NOT Continue THEN
                                      CurrReport.BREAK;

                                  DimText := GetDimensionText(DimSetEntry);
                                END;
                                 }

    { 59  ;4   ;Column  ;DimText             ;
               SourceExpr=DimText }

    { 56  ;4   ;Column  ;Number_DimensionLoop;
               SourceExpr=Number }

    { 57  ;4   ;Column  ;DimensionsCaption   ;
               SourceExpr=DimensionsCap }

    { 100 ;3   ;DataItem;                    ;
               DataItemTable=Table221;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Journal Line No.,Line No.);
               DataItemLink=Journal Template Name=FIELD(Journal Template Name),
                            Journal Batch Name=FIELD(Journal Batch Name),
                            Journal Line No.=FIELD(Line No.) }

    { 101 ;4   ;Column  ;AccountNo_GenJnlAllocation;
               SourceExpr="Account No." }

    { 102 ;4   ;Column  ;AccountName_GenJnlAllocation;
               SourceExpr="Account Name" }

    { 103 ;4   ;Column  ;AllocationQuantity_GenJnlAllocation;
               SourceExpr="Allocation Quantity" }

    { 104 ;4   ;Column  ;AllocationPct_GenJnlAllocation;
               SourceExpr="Allocation %" }

    { 105 ;4   ;Column  ;Amount_GenJnlAllocation;
               SourceExpr=Amount }

    { 106 ;4   ;Column  ;JournalLineNo_GenJnlAllocation;
               SourceExpr="Journal Line No." }

    { 107 ;4   ;Column  ;LineNo_GenJnlAllocation;
               SourceExpr="Line No." }

    { 108 ;4   ;Column  ;JournalBatchName_GenJnlAllocation;
               SourceExpr="Journal Batch Name" }

    { 109 ;4   ;Column  ;AccountNoCaption_GenJnlAllocation;
               SourceExpr=FIELDCAPTION("Account No.") }

    { 110 ;4   ;Column  ;AccountNameCaption_GenJnlAllocation;
               SourceExpr=FIELDCAPTION("Account Name") }

    { 111 ;4   ;Column  ;AllocationQuantityCaption_GenJnlAllocation;
               SourceExpr=FIELDCAPTION("Allocation Quantity") }

    { 112 ;4   ;Column  ;AllocationPctCaption_GenJnlAllocation;
               SourceExpr=FIELDCAPTION("Allocation %") }

    { 113 ;4   ;Column  ;AmountCaption_GenJnlAllocation;
               SourceExpr=FIELDCAPTION(Amount) }

    { 2   ;4   ;Column  ;Recurring_GenJnlTemplate;
               SourceExpr=GenJnlTemplate.Recurring }

    { 114 ;4   ;DataItem;DimensionLoopAllocations;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(1..));
               OnPreDataItem=BEGIN
                               IF NOT ShowDim THEN
                                 CurrReport.BREAK;
                               DimSetEntry.RESET;
                               DimSetEntry.SETRANGE("Dimension Set ID","Gen. Jnl. Allocation"."Dimension Set ID")
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    IF NOT DimSetEntry.FINDFIRST THEN
                                      CurrReport.BREAK;
                                  END ELSE
                                    IF NOT Continue THEN
                                      CurrReport.BREAK;

                                  AllocationDimText := GetDimensionText(DimSetEntry);
                                END;
                                 }

    { 115 ;5   ;Column  ;AllocationDimText   ;
               SourceExpr=AllocationDimText }

    { 116 ;5   ;Column  ;Number_DimensionLoopAllocations;
               SourceExpr=Number }

    { 117 ;5   ;Column  ;DimensionAllocationsCaption;
               SourceExpr=DimensionAllocationsCap }

    { 1162;3   ;DataItem;ErrorLoop           ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               SETRANGE(Number,1,ErrorCounter);
                             END;

               OnPostDataItem=BEGIN
                                ErrorCounter := 0;
                              END;
                               }

    { 43  ;4   ;Column  ;ErrorTextNumber     ;
               SourceExpr=ErrorText[Number] }

    { 42  ;4   ;Column  ;WarningCaption      ;
               SourceExpr=WarningCap }

    { 5127;2   ;DataItem;ReconcileLoop       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               SETRANGE(Number,1,GLAccNetChange.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    GLAccNetChange.FIND('-')
                                  ELSE
                                    GLAccNetChange.NEXT;
                                END;

               OnPostDataItem=BEGIN
                                GLAccNetChange.DELETEALL;
                              END;
                               }

    { 49  ;3   ;Column  ;GLAccNetChangeNo    ;
               SourceExpr=GLAccNetChange."No." }

    { 50  ;3   ;Column  ;GLAccNetChangeName  ;
               SourceExpr=GLAccNetChange.Name }

    { 51  ;3   ;Column  ;GLAccNetChangeNetChangeJnl;
               SourceExpr=GLAccNetChange."Net Change in Jnl." }

    { 66  ;3   ;Column  ;GLAccNetChangeNetAmountJnl;
               SourceExpr=GLAccNetChange."Net Amount in Jnl." }

    { 52  ;3   ;Column  ;GLAccNetChangeBalafterPost;
               SourceExpr=GLAccNetChange."Balance after Posting" }

    { 44  ;3   ;Column  ;ReconciliationCaption;
               SourceExpr=ReconciliationCap }

    { 45  ;3   ;Column  ;NoCaption           ;
               SourceExpr=NoCap }

    { 46  ;3   ;Column  ;NameCaption         ;
               SourceExpr=NameCap }

    { 67  ;3   ;Column  ;NetAmountinJnlCaption;
               SourceExpr=NetAmountinJnlCap }

    { 47  ;3   ;Column  ;NetChangeinJnlCaption;
               SourceExpr=NetChangeinJnlCap }

    { 48  ;3   ;Column  ;BalafterPostingCaption;
               SourceExpr=BalafterPostingCap }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=ShowDim;
                  CaptionML=ENU=Show Dimensions;
                  SourceExpr=ShowDim }

      { 2   ;1   ;Group     ;
                  CaptionML=ENU=Signatories;
                  GroupType=Group }

      { 3   ;2   ;Field     ;
                  CaptionML=ENU=Prepared By;
                  SourceExpr=PreparedBy;
                  TableRelation=Employee }

      { 4   ;2   ;Field     ;
                  CaptionML=ENU=Confirmed By;
                  SourceExpr=ConfirmedBy;
                  TableRelation=Employee }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 cannot be filtered when you post recurring journals.';
      Text001@1001 : TextConst 'ENU=%1 or %2 must be specified.';
      Text002@1002 : TextConst 'ENU=%1 must be specified.';
      Text003@1003 : TextConst 'ENU=%1 + %2 must be %3.';
      Text004@1004 : TextConst 'ENU=%1 must be " " when %2 is %3.';
      Text005@1005 : TextConst 'ENU=%1, %2, %3 or %4 must not be completed when %5 is %6.';
      Text006@1006 : TextConst 'ENU=%1 must be negative.';
      Text007@1007 : TextConst 'ENU=%1 must be positive.';
      Text008@1008 : TextConst 'ENU=%1 must have the same sign as %2.';
      Text009@1009 : TextConst 'ENU=%1 cannot be specified.';
      Text010@1010 : TextConst 'ENU=%1 must be Yes.';
      Text011@1011 : TextConst 'ENU=%1 + %2 must be -%3.';
      Text012@1012 : TextConst 'ENU=%1 must have a different sign than %2.';
      Text013@1013 : TextConst 'ENU=%1 must only be a closing date for G/L entries.';
      Text014@1014 : TextConst 'ENU=%1 is not within your allowed range of posting dates.';
      Text015@1015 : TextConst 'ENU=The lines are not listed according to Posting Date because they were not entered in that order.';
      Text016@1016 : TextConst 'ENU=There is a gap in the number series.';
      Text017@1017 : TextConst 'ENU=%1 or %2 must be G/L Account or Bank Account.';
      Text018@1018 : TextConst 'ENU=%1 must be 0.';
      Text019@1019 : TextConst 'ENU=%1 cannot be specified when using recurring journals.';
      Text020@1020 : TextConst 'ENU="%1 must not be %2 when %3 = %4."';
      Text021@1021 : TextConst 'ENU=Allocations can only be used with recurring journals.';
      Text022@1022 : TextConst 'ENU=Specify %1 in the %2 allocation lines.';
      Text023@1023 : TextConst 'ENU=<Month Text>';
      Text024@1024 : TextConst '@@@=%1 - document type, %2 - document number, %3 - posting date;ENU=%1 %2 posted on %3, must be separated by an empty line.';
      Text025@1025 : TextConst 'ENU=%1 %2 is out of balance by %3.';
      Text026@1026 : TextConst 'ENU=The reversing entries for %1 %2 are out of balance by %3.';
      Text027@1027 : TextConst 'ENU=As of %1, the lines are out of balance by %2.';
      Text028@1028 : TextConst 'ENU=As of %1, the reversing entries are out of balance by %2.';
      Text029@1029 : TextConst 'ENU=The total of the lines is out of balance by %1.';
      Text030@1030 : TextConst 'ENU=The total of the reversing entries is out of balance by %1.';
      Text031@1031 : TextConst 'ENU=%1 %2 does not exist.';
      Text032@1032 : TextConst 'ENU=%1 must be %2 for %3 %4.';
      Text036@1033 : TextConst 'ENU=%1 %2 %3 does not exist.';
      Text037@1034 : TextConst 'ENU=%1 must be %2.';
      Text038@1035 : TextConst 'ENU=The currency %1 cannot be found. Check the currency table.';
      Text039@1036 : TextConst 'ENU=Sales %1 %2 already exists.';
      Text040@1037 : TextConst 'ENU=Purchase %1 %2 already exists.';
      Text041@1038 : TextConst 'ENU=%1 must be entered.';
      Text042@1039 : TextConst 'ENU=%1 must not be filled when %2 is different in %3 and %4.';
      Text043@1040 : TextConst 'ENU="%1 %2 must not have %3 = %4."';
      Text044@1041 : TextConst 'ENU=%1 must not be specified in fixed asset journal lines.';
      Text045@1042 : TextConst 'ENU=%1 must be specified in fixed asset journal lines.';
      Text046@1043 : TextConst 'ENU=%1 must be different than %2.';
      Text047@1044 : TextConst 'ENU=%1 and %2 must not both be %3.';
      Text049@1046 : TextConst 'ENU="%1 must not be specified when %2 = %3."';
      Text050@1047 : TextConst 'ENU="must not be specified together with %1 = %2."';
      Text051@1048 : TextConst 'ENU=%1 must be identical to %2.';
      Text052@1049 : TextConst 'ENU=%1 cannot be a closing date.';
      Text053@1050 : TextConst 'ENU=%1 is not within your range of allowed posting dates.';
      Text054@1051 : TextConst 'ENU=Insurance integration is not activated for %1 %2.';
      Text055@1052 : TextConst 'ENU=must not be specified when %1 is specified.';
      Text056@1053 : TextConst 'ENU=When G/L integration is not activated, %1 must not be posted in the general journal.';
      Text057@1054 : TextConst 'ENU=When G/L integration is not activated, %1 must not be specified in the general journal.';
      Text058@1055 : TextConst 'ENU=%1 must not be specified.';
      Text059@1056 : TextConst 'ENU=The combination of Customer and Gen. Posting Type Purchase is not allowed.';
      Text060@1057 : TextConst 'ENU=The combination of Vendor and Gen. Posting Type Sales is not allowed.';
      Text061@1058 : TextConst 'ENU=The Balance and Reversing Balance recurring methods can be used only with Allocations.';
      Text062@1059 : TextConst 'ENU=%1 must not be 0.';
      GLSetup@1060 : Record 98;
      SalesSetup@1061 : Record 311;
      PurchSetup@1062 : Record 312;
      UserSetup@1063 : Record 91;
      AccountingPeriod@1064 : Record 50;
      GLAcc@1065 : Record 15;
      Currency@1066 : Record 4;
      Cust@1067 : Record 18;
      Vend@1068 : Record 23;
      BankAccPostingGr@1069 : Record 277;
      BankAcc@1070 : Record 270;
      GenJnlTemplate@1071 : Record 80;
      GenJnlLine2@1072 : Record 81;
      TempGenJnlLine@1125 : TEMPORARY Record 81;
      GenJnlAlloc@1073 : Record 221;
      OldCustLedgEntry@1074 : Record 21;
      OldVendLedgEntry@1075 : Record 25;
      VATPostingSetup@1076 : Record 325;
      NoSeries@1077 : Record 308;
      FA@1078 : Record 5600;
      ICPartner@1132 : Record 413;
      DeprBook@1079 : Record 5611;
      FADeprBook@1080 : Record 5612;
      FASetup@1081 : Record 5603;
      GLAccNetChange@1082 : TEMPORARY Record 269;
      DimSetEntry@1083 : Record 480;
      ExchAccGLJnlLine@1084 : Codeunit 366;
      WHTManagement@1143 : Codeunit 50500;
      GenJnlLineFilter@1085 : Text;
      AllowPostingFrom@1086 : Date;
      AllowPostingTo@1087 : Date;
      AllowFAPostingFrom@1088 : Date;
      AllowFAPostingTo@1089 : Date;
      LastDate@1090 : Date;
      LastDocType@1091 : 'Document,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder';
      LastDocNo@1092 : Code[20];
      LastEntrdDocNo@1093 : Code[20];
      LastEntrdDate@1094 : Date;
      BalanceLCY@1138 : Decimal;
      AmountLCY@1131 : Decimal;
      DocBalance@1095 : Decimal;
      DocBalanceReverse@1096 : Decimal;
      DateBalance@1097 : Decimal;
      DateBalanceReverse@1098 : Decimal;
      TotalBalance@1099 : Decimal;
      TotalBalanceReverse@1100 : Decimal;
      AccName@1101 : Text[50];
      LastLineNo@1102 : Integer;
      GLDocNo@1103 : Code[20];
      Day@1104 : Integer;
      Week@1105 : Integer;
      Month@1106 : Integer;
      MonthText@1107 : Text[30];
      AmountError@1108 : Boolean;
      ErrorCounter@1109 : Integer;
      ErrorText@1110 : ARRAY [50] OF Text[250];
      TempErrorText@1111 : Text[250];
      BalAccName@1112 : Text[50];
      CurrentCustomerVendors@1113 : Integer;
      VATEntryCreated@1114 : Boolean;
      CustPosting@1115 : Boolean;
      VendPosting@1116 : Boolean;
      SalesPostingType@1117 : Boolean;
      PurchPostingType@1118 : Boolean;
      DimText@1119 : Text[75];
      AllocationDimText@1140 : Text[75];
      ShowDim@1121 : Boolean;
      Continue@1122 : Boolean;
      Text063@1123 : TextConst 'ENU=Document,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund';
      Text064@1124 : TextConst 'ENU=%1 %2 is already used in line %3 (%4 %5).';
      Text065@1126 : TextConst 'ENU=%1 must not be blocked with type %2 when %3 is %4.';
      CurrentICPartner@1128 : Code[20];
      Text066@1129 : TextConst 'ENU=You cannot enter G/L Account or Bank Account in both %1 and %2.';
      Text067@1130 : TextConst 'ENU=%1 %2 is linked to %3 %4.';
      Text069@1134 : TextConst 'ENU=%1 must not be specified when %2 is %3.';
      Text070@1135 : TextConst 'ENU=%1 must not be specified when the document is not an intercompany transaction.';
      Text071@1137 : TextConst 'ENU=%1 %2 does not exist.';
      Text072@1136 : TextConst 'ENU=%1 must not be %2 for %3 %4.';
      Text073@1102601000 : TextConst 'ENU=%1 %2 already exists.';
      GeneralJnlTestCap@4487 : TextConst 'ENU=General Journal - Test';
      PageNoCap@8565 : TextConst 'ENU=Page';
      JnlBatchNameCap@3422 : TextConst 'ENU=Journal Batch';
      PostingDateCap@7627 : TextConst 'ENU=Posting Date';
      DocumentTypeCap@7853 : TextConst 'ENU=Document Type';
      AccountTypeCap@5964 : TextConst 'ENU=Account Type';
      AccNameCap@8342 : TextConst 'ENU=Name';
      GenPostingTypeCap@6614 : TextConst 'ENU=Gen. Posting Type';
      GenBusPostingGroupCap@9852 : TextConst 'ENU=Gen. Bus. Posting Group';
      GenProdPostingGroupCap@8547 : TextConst 'ENU=Gen. Prod. Posting Group';
      AmountLCYCap@7335 : TextConst 'ENU=Total (LCY)';
      DimensionsCap@2995 : TextConst 'ENU=Dimensions';
      WarningCap@5070 : TextConst 'ENU=Warning!';
      ReconciliationCap@4137 : TextConst 'ENU=Reconciliation';
      NoCap@4841 : TextConst 'ENU=No.';
      NameCap@3866 : TextConst 'ENU=Name';
      NetChangeinJnlCap@9374 : TextConst 'ENU=Net Change in Jnl.';
      NetAmountinJnlCap@1141 : TextConst 'ENU=Net Amount in Jnl.';
      BalafterPostingCap@5926 : TextConst 'ENU=Balance after Posting';
      DimensionAllocationsCap@4488 : TextConst 'ENU=Allocation Dimensions';
      HideReconcillation@1045 : Boolean;
      PreparedBy@1120 : Code[20];
      ConfirmedBy@1127 : Code[20];
      CustomerPONo@1133 : Text;
      JournalTemplateName@1139 : Text;
      WHTAmt@1142 : Decimal;

    LOCAL PROCEDURE CheckRecurringLine@5(GenJnlLine2@1000 : Record 81);
    BEGIN
      WITH GenJnlLine2 DO
        IF GenJnlTemplate.Recurring THEN BEGIN
          IF "Recurring Method" = 0 THEN
            AddError(STRSUBSTNO(Text002,FIELDCAPTION("Recurring Method")));
          IF FORMAT("Recurring Frequency") = '' THEN
            AddError(STRSUBSTNO(Text002,FIELDCAPTION("Recurring Frequency")));
          IF "Bal. Account No." <> '' THEN
            AddError(
              STRSUBSTNO(
                Text019,
                FIELDCAPTION("Bal. Account No.")));
          CASE "Recurring Method" OF
            "Recurring Method"::"V  Variable","Recurring Method"::"RV Reversing Variable",
            "Recurring Method"::"F  Fixed","Recurring Method"::"RF Reversing Fixed":
              WarningIfZeroAmt("Gen. Journal Line");
            "Recurring Method"::"B  Balance","Recurring Method"::"RB Reversing Balance":
              WarningIfNonZeroAmt("Gen. Journal Line");
          END;
          IF "Recurring Method" > "Recurring Method"::"V  Variable" THEN BEGIN
            IF "Account Type" = "Account Type"::"Fixed Asset" THEN
              AddError(
                STRSUBSTNO(
                  Text020,
                  FIELDCAPTION("Recurring Method"),"Recurring Method",
                  FIELDCAPTION("Account Type"),"Account Type"));
            IF "Bal. Account Type" = "Bal. Account Type"::"Fixed Asset" THEN
              AddError(
                STRSUBSTNO(
                  Text020,
                  FIELDCAPTION("Recurring Method"),"Recurring Method",
                  FIELDCAPTION("Bal. Account Type"),"Bal. Account Type"));
          END;
        END ELSE BEGIN
          IF "Recurring Method" <> 0 THEN
            AddError(STRSUBSTNO(Text009,FIELDCAPTION("Recurring Method")));
          IF FORMAT("Recurring Frequency") <> '' THEN
            AddError(STRSUBSTNO(Text009,FIELDCAPTION("Recurring Frequency")));
        END;
    END;

    LOCAL PROCEDURE CheckAllocations@6(GenJnlLine2@1000 : Record 81);
    BEGIN
      WITH GenJnlLine2 DO BEGIN
        IF "Recurring Method" IN
           ["Recurring Method"::"B  Balance",
            "Recurring Method"::"RB Reversing Balance"]
        THEN BEGIN
          GenJnlAlloc.RESET;
          GenJnlAlloc.SETRANGE("Journal Template Name","Journal Template Name");
          GenJnlAlloc.SETRANGE("Journal Batch Name","Journal Batch Name");
          GenJnlAlloc.SETRANGE("Journal Line No.","Line No.");
          IF NOT GenJnlAlloc.FINDFIRST THEN
            AddError(Text061);
        END;

        GenJnlAlloc.RESET;
        GenJnlAlloc.SETRANGE("Journal Template Name","Journal Template Name");
        GenJnlAlloc.SETRANGE("Journal Batch Name","Journal Batch Name");
        GenJnlAlloc.SETRANGE("Journal Line No.","Line No.");
        GenJnlAlloc.SETFILTER(Amount,'<>0');
        IF GenJnlAlloc.FINDFIRST THEN
          IF NOT GenJnlTemplate.Recurring THEN
            AddError(Text021)
          ELSE BEGIN
            GenJnlAlloc.SETRANGE("Account No.",'');
            IF GenJnlAlloc.FINDFIRST THEN
              AddError(
                STRSUBSTNO(
                  Text022,
                  GenJnlAlloc.FIELDCAPTION("Account No."),GenJnlAlloc.COUNT));
          END;
      END;
    END;

    LOCAL PROCEDURE MakeRecurringTexts@1(VAR GenJnlLine2@1000 : Record 81);
    BEGIN
      WITH GenJnlLine2 DO BEGIN
        GLDocNo := "Document No.";
        IF ("Posting Date" <> 0D) AND ("Account No." <> '') AND ("Recurring Method" <> 0) THEN BEGIN
          Day := DATE2DMY("Posting Date",1);
          Week := DATE2DWY("Posting Date",2);
          Month := DATE2DMY("Posting Date",2);
          MonthText := FORMAT("Posting Date",0,Text023);
          AccountingPeriod.SETRANGE("Starting Date",0D,"Posting Date");
          IF NOT AccountingPeriod.FINDLAST THEN
            AccountingPeriod.Name := '';
          "Document No." :=
            DELCHR(
              PADSTR(
                STRSUBSTNO("Document No.",Day,Week,Month,MonthText,AccountingPeriod.Name),
                MAXSTRLEN("Document No.")),
              '>');
          Description :=
            DELCHR(
              PADSTR(
                STRSUBSTNO(Description,Day,Week,Month,MonthText,AccountingPeriod.Name),
                MAXSTRLEN(Description)),
              '>');
        END;
      END;
    END;

    LOCAL PROCEDURE CheckBalance@7();
    VAR
      GenJnlLine@1000 : Record 81;
      NextGenJnlLine@1001 : Record 81;
    BEGIN
      GenJnlLine := "Gen. Journal Line";
      LastLineNo := "Gen. Journal Line"."Line No.";
      NextGenJnlLine := "Gen. Journal Line";
      IF NextGenJnlLine.NEXT = 0 THEN;
      MakeRecurringTexts(NextGenJnlLine);
      WITH GenJnlLine DO
        IF NOT EmptyLine THEN BEGIN
          DocBalance := DocBalance + "Balance (LCY)";
          DateBalance := DateBalance + "Balance (LCY)";
          TotalBalance := TotalBalance + "Balance (LCY)";
          IF "Recurring Method" >= "Recurring Method"::"RF Reversing Fixed" THEN BEGIN
            DocBalanceReverse := DocBalanceReverse + "Balance (LCY)";
            DateBalanceReverse := DateBalanceReverse + "Balance (LCY)";
            TotalBalanceReverse := TotalBalanceReverse + "Balance (LCY)";
          END;
          LastDocType := "Document Type";
          LastDocNo := "Document No.";
          LastDate := "Posting Date";
          IF TotalBalance = 0 THEN BEGIN
            CurrentCustomerVendors := 0;
            VATEntryCreated := FALSE;
          END;
          IF GenJnlTemplate."Force Doc. Balance" THEN BEGIN
            VATEntryCreated :=
              VATEntryCreated OR
              (("Account Type" = "Account Type"::"G/L Account") AND ("Account No." <> '') AND
               ("Gen. Posting Type" IN ["Gen. Posting Type"::Purchase,"Gen. Posting Type"::Sale])) OR
              (("Bal. Account Type" = "Bal. Account Type"::"G/L Account") AND ("Bal. Account No." <> '') AND
               ("Bal. Gen. Posting Type" IN ["Bal. Gen. Posting Type"::Purchase,"Bal. Gen. Posting Type"::Sale]));
            IF (("Account Type" IN ["Account Type"::Customer,"Account Type"::Vendor]) AND
                ("Account No." <> '')) OR
               (("Bal. Account Type" IN ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor]) AND
                ("Bal. Account No." <> ''))
            THEN
              CurrentCustomerVendors := CurrentCustomerVendors + 1;
            IF (CurrentCustomerVendors > 1) AND VATEntryCreated THEN
              AddError(
                STRSUBSTNO(
                  Text024,
                  "Document Type","Document No.","Posting Date"));
          END;
        END;

      WITH NextGenJnlLine DO BEGIN
        IF (LastDate <> 0D) AND (LastDocNo <> '') AND
           (("Posting Date" <> LastDate) OR
            ("Document Type" <> LastDocType) OR
            ("Document No." <> LastDocNo) OR
            ("Line No." = LastLineNo))
        THEN BEGIN
          IF GenJnlTemplate."Force Doc. Balance" THEN BEGIN
            CASE TRUE OF
              DocBalance <> 0:
                AddError(
                  STRSUBSTNO(
                    Text025,
                    SELECTSTR(LastDocType + 1,Text063),LastDocNo,DocBalance));
              DocBalanceReverse <> 0:
                AddError(
                  STRSUBSTNO(
                    Text026,
                    SELECTSTR(LastDocType + 1,Text063),LastDocNo,DocBalanceReverse));
            END;
            DocBalance := 0;
            DocBalanceReverse := 0;
          END;
          IF ("Posting Date" <> LastDate) OR
             ("Document Type" <> LastDocType) OR ("Document No." <> LastDocNo)
          THEN BEGIN
            CurrentCustomerVendors := 0;
            VATEntryCreated := FALSE;
            CustPosting := FALSE;
            VendPosting := FALSE;
            SalesPostingType := FALSE;
            PurchPostingType := FALSE;
          END;
        END;

        IF (LastDate <> 0D) AND (("Posting Date" <> LastDate) OR ("Line No." = LastLineNo)) THEN BEGIN
          CASE TRUE OF
            DateBalance <> 0:
              AddError(
                STRSUBSTNO(
                  Text027,
                  LastDate,DateBalance));
            DateBalanceReverse <> 0:
              AddError(
                STRSUBSTNO(
                  Text028,
                  LastDate,DateBalanceReverse));
          END;
          DocBalance := 0;
          DocBalanceReverse := 0;
          DateBalance := 0;
          DateBalanceReverse := 0;
        END;

        IF "Line No." = LastLineNo THEN BEGIN
          CASE TRUE OF
            TotalBalance <> 0:
              AddError(
                STRSUBSTNO(
                  Text029,
                  TotalBalance));
            TotalBalanceReverse <> 0:
              AddError(
                STRSUBSTNO(
                  Text030,
                  TotalBalanceReverse));
          END;
          DocBalance := 0;
          DocBalanceReverse := 0;
          DateBalance := 0;
          DateBalanceReverse := 0;
          TotalBalance := 0;
          TotalBalanceReverse := 0;
          LastDate := 0D;
          LastDocType := 0;
          LastDocNo := '';
        END;
      END;
    END;

    LOCAL PROCEDURE AddError@2(Text@1000 : Text[250]);
    BEGIN
      ErrorCounter := ErrorCounter + 1;
      ErrorText[ErrorCounter] := Text;
    END;

    LOCAL PROCEDURE ReconcileGLAccNo@8(GLAccNo@1000 : Code[20];ReconcileAmount@1001 : Decimal);
    BEGIN
      IF NOT GLAccNetChange.GET(GLAccNo) THEN BEGIN
        GLAcc.GET(GLAccNo);
        GLAcc.CALCFIELDS("Balance at Date");
        GLAccNetChange.INIT;
        GLAccNetChange."No." := GLAcc."No.";
        GLAccNetChange.Name := GLAcc.Name;
        GLAccNetChange."Balance after Posting" := GLAcc."Balance at Date";
        GLAccNetChange.INSERT;
      END;
      GLAccNetChange."Net Change in Jnl." := GLAccNetChange."Net Change in Jnl." + ReconcileAmount;
      GLAccNetChange."Balance after Posting" := GLAccNetChange."Balance after Posting" + ReconcileAmount;
      GLAccNetChange.MODIFY;
    END;

    LOCAL PROCEDURE ReconcileGLAccNo2@28(GLAccNo@1000 : Code[20];ReconcileAmount@1001 : Decimal;AmtInJournal@1002 : Decimal);
    BEGIN
      // PHP Start - Display Net Amt in Jnl
      IF NOT GLAccNetChange.GET(GLAccNo) THEN BEGIN
        GLAcc.GET(GLAccNo);
        GLAcc.CALCFIELDS("Balance at Date");
        GLAccNetChange.INIT;
        GLAccNetChange."No." := GLAcc."No.";
        GLAccNetChange.Name := GLAcc.Name;
        GLAccNetChange."Balance after Posting" := GLAcc."Balance at Date";
        GLAccNetChange.INSERT;
      END;
      GLAccNetChange."Net Change in Jnl." := GLAccNetChange."Net Change in Jnl." + ReconcileAmount;
      GLAccNetChange."Balance after Posting" := GLAccNetChange."Balance after Posting" + ReconcileAmount;
      GLAccNetChange."Net Amount in Jnl." := GLAccNetChange."Net Amount in Jnl." + AmtInJournal;
      GLAccNetChange.MODIFY;
      // PHP End
    END;

    LOCAL PROCEDURE CheckGLAcc@4(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50]);
    BEGIN
      WITH GenJnlLine DO
        IF NOT GLAcc.GET("Account No.") THEN
          AddError(
            STRSUBSTNO(
              Text031,
              GLAcc.TABLECAPTION,"Account No."))
        ELSE BEGIN
          AccName := GLAcc.Name;

          IF GLAcc.Blocked THEN
            AddError(
              STRSUBSTNO(
                Text032,
                GLAcc.FIELDCAPTION(Blocked),FALSE,GLAcc.TABLECAPTION,"Account No."));
          IF GLAcc."Account Type" <> GLAcc."Account Type"::Posting THEN BEGIN
            GLAcc."Account Type" := GLAcc."Account Type"::Posting;
            AddError(
              STRSUBSTNO(
                Text032,
                GLAcc.FIELDCAPTION("Account Type"),GLAcc."Account Type",GLAcc.TABLECAPTION,"Account No."));
          END;
          IF NOT "System-Created Entry" THEN
            IF "Posting Date" = NORMALDATE("Posting Date") THEN
              IF NOT GLAcc."Direct Posting" THEN
                AddError(
                  STRSUBSTNO(
                    Text032,
                    GLAcc.FIELDCAPTION("Direct Posting"),TRUE,GLAcc.TABLECAPTION,"Account No."));

          IF "Gen. Posting Type" > 0 THEN BEGIN
            CASE "Gen. Posting Type" OF
              "Gen. Posting Type"::Sale:
                SalesPostingType := TRUE;
              "Gen. Posting Type"::Purchase:
                PurchPostingType := TRUE;
            END;
            TestPostingType;

            IF NOT VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") THEN
              AddError(
                STRSUBSTNO(
                  Text036,
                  VATPostingSetup.TABLECAPTION,"VAT Bus. Posting Group","VAT Prod. Posting Group"))
            ELSE
              IF "VAT Calculation Type" <> VATPostingSetup."VAT Calculation Type" THEN
                AddError(
                  STRSUBSTNO(
                    Text037,
                    FIELDCAPTION("VAT Calculation Type"),VATPostingSetup."VAT Calculation Type"))
          END;

          IF GLAcc."Reconciliation Account" THEN
            ReconcileGLAccNo2("Account No.",ROUND("Amount (LCY)" / (1 + "VAT %" / 100))-CalcWHT(GenJnlLine), Amount); // PHP Start - Display Amt in Journal, less the WHT
      //      ReconcileGLAccNo("Account No.",ROUND("Amount (LCY)" / (1 + "VAT %" / 100))); // Original Code
        END;
    END;

    LOCAL PROCEDURE CheckCust@9(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50]);
    BEGIN
      WITH GenJnlLine DO
        IF NOT Cust.GET("Account No.") THEN
          AddError(
            STRSUBSTNO(
              Text031,
              Cust.TABLECAPTION,"Account No."))
        ELSE BEGIN
          AccName := Cust.Name;
          IF ((Cust.Blocked = Cust.Blocked::All) OR
              ((Cust.Blocked = Cust.Blocked::Invoice) AND
               ("Document Type" IN ["Document Type"::Invoice,"Document Type"::" "]))
              )
          THEN
            AddError(
              STRSUBSTNO(
                Text065,
                "Account Type",Cust.Blocked,FIELDCAPTION("Document Type"),"Document Type"));
          IF "Currency Code" <> '' THEN
            IF NOT Currency.GET("Currency Code") THEN
              AddError(
                STRSUBSTNO(
                  Text038,
                  "Currency Code"));
          IF (Cust."IC Partner Code" <> '') AND (GenJnlTemplate.Type = GenJnlTemplate.Type::Intercompany) THEN
            IF ICPartner.GET(Cust."IC Partner Code") THEN BEGIN
              IF ICPartner.Blocked THEN
                AddError(
                  STRSUBSTNO(
                    '%1 %2',
                    STRSUBSTNO(
                      Text067,
                      Cust.TABLECAPTION,"Account No.",ICPartner.TABLECAPTION,"IC Partner Code"),
                    STRSUBSTNO(
                      Text032,
                      ICPartner.FIELDCAPTION(Blocked),FALSE,ICPartner.TABLECAPTION,Cust."IC Partner Code")));
            END ELSE
              AddError(
                STRSUBSTNO(
                  '%1 %2',
                  STRSUBSTNO(
                    Text067,
                    Cust.TABLECAPTION,"Account No.",ICPartner.TABLECAPTION,Cust."IC Partner Code"),
                  STRSUBSTNO(
                    Text031,
                    ICPartner.TABLECAPTION,Cust."IC Partner Code")));
          CustPosting := TRUE;
          TestPostingType;

          IF "Recurring Method" = 0 THEN
            IF "Document Type" IN
               ["Document Type"::Invoice,"Document Type"::"Credit Memo",
                "Document Type"::"Finance Charge Memo","Document Type"::Reminder]
            THEN BEGIN
              OldCustLedgEntry.RESET;
              OldCustLedgEntry.SETCURRENTKEY("Document No.");
              OldCustLedgEntry.SETRANGE("Document Type","Document Type");
              OldCustLedgEntry.SETRANGE("Document No.","Document No.");
              IF OldCustLedgEntry.FINDFIRST THEN
                AddError(
                  STRSUBSTNO(
                    Text039,"Document Type","Document No."));

              IF SalesSetup."Ext. Doc. No. Mandatory" OR
                 ("External Document No." <> '')
              THEN BEGIN
                IF "External Document No." = '' THEN
                  AddError(
                    STRSUBSTNO(
                      Text041,FIELDCAPTION("External Document No.")));

                OldCustLedgEntry.RESET;
                OldCustLedgEntry.SETCURRENTKEY("External Document No.");
                OldCustLedgEntry.SETRANGE("Document Type","Document Type");
                OldCustLedgEntry.SETRANGE("Customer No.","Account No.");
                OldCustLedgEntry.SETRANGE("External Document No.","External Document No.");
                IF OldCustLedgEntry.FINDFIRST THEN
                  AddError(
                    STRSUBSTNO(
                      Text039,
                      "Document Type","External Document No."));
                CheckAgainstPrevLines("Gen. Journal Line");
              END;
            END;
        END;
    END;

    LOCAL PROCEDURE CheckVend@10(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50]);
    BEGIN
      WITH GenJnlLine DO
        IF NOT Vend.GET("Account No.") THEN
          AddError(
            STRSUBSTNO(
              Text031,
              Vend.TABLECAPTION,"Account No."))
        ELSE BEGIN
          AccName := Vend.Name;

          IF ((Vend.Blocked = Vend.Blocked::All) OR
              ((Vend.Blocked = Vend.Blocked::Payment) AND ("Document Type" = "Document Type"::Payment))
              )
          THEN
            AddError(
              STRSUBSTNO(
                Text065,
                "Account Type",Vend.Blocked,FIELDCAPTION("Document Type"),"Document Type"));
          IF "Currency Code" <> '' THEN
            IF NOT Currency.GET("Currency Code") THEN
              AddError(
                STRSUBSTNO(
                  Text038,
                  "Currency Code"));

          IF (Vend."IC Partner Code" <> '') AND (GenJnlTemplate.Type = GenJnlTemplate.Type::Intercompany) THEN
            IF ICPartner.GET(Vend."IC Partner Code") THEN BEGIN
              IF ICPartner.Blocked THEN
                AddError(
                  STRSUBSTNO(
                    '%1 %2',
                    STRSUBSTNO(
                      Text067,
                      Vend.TABLECAPTION,"Account No.",ICPartner.TABLECAPTION,Vend."IC Partner Code"),
                    STRSUBSTNO(
                      Text032,
                      ICPartner.FIELDCAPTION(Blocked),FALSE,ICPartner.TABLECAPTION,Vend."IC Partner Code")));
            END ELSE
              AddError(
                STRSUBSTNO(
                  '%1 %2',
                  STRSUBSTNO(
                    Text067,
                    Vend.TABLECAPTION,"Account No.",ICPartner.TABLECAPTION,"IC Partner Code"),
                  STRSUBSTNO(
                    Text031,
                    ICPartner.TABLECAPTION,Vend."IC Partner Code")));
          VendPosting := TRUE;
          TestPostingType;

          IF "Recurring Method" = 0 THEN
            IF "Document Type" IN
               ["Document Type"::Invoice,"Document Type"::"Credit Memo",
                "Document Type"::"Finance Charge Memo","Document Type"::Reminder]
            THEN BEGIN
              OldVendLedgEntry.RESET;
              OldVendLedgEntry.SETCURRENTKEY("Document No.");
              OldVendLedgEntry.SETRANGE("Document Type","Document Type");
              OldVendLedgEntry.SETRANGE("Document No.","Document No.");
              IF OldVendLedgEntry.FINDFIRST THEN
                AddError(
                  STRSUBSTNO(
                    Text040,
                    "Document Type","Document No."));

              IF PurchSetup."Ext. Doc. No. Mandatory" OR
                 ("External Document No." <> '')
              THEN BEGIN
                IF "External Document No." = '' THEN
                  AddError(
                    STRSUBSTNO(
                      Text041,FIELDCAPTION("External Document No.")));

                OldVendLedgEntry.RESET;
                OldVendLedgEntry.SETCURRENTKEY("External Document No.");
                OldVendLedgEntry.SETRANGE("Document Type","Document Type");
                OldVendLedgEntry.SETRANGE("Vendor No.","Account No.");
                OldVendLedgEntry.SETRANGE("External Document No.","External Document No.");
                IF OldVendLedgEntry.FINDFIRST THEN
                  AddError(
                    STRSUBSTNO(
                      Text040,
                      "Document Type","External Document No."));
                CheckAgainstPrevLines("Gen. Journal Line");
              END;
            END;
        END;
    END;

    LOCAL PROCEDURE CheckBankAcc@11(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50]);
    BEGIN
      WITH GenJnlLine DO
        IF NOT BankAcc.GET("Account No.") THEN
          AddError(
            STRSUBSTNO(
              Text031,
              BankAcc.TABLECAPTION,"Account No."))
        ELSE BEGIN
          AccName := BankAcc.Name;

          IF BankAcc.Blocked THEN
            AddError(
              STRSUBSTNO(
                Text032,
                BankAcc.FIELDCAPTION(Blocked),FALSE,BankAcc.TABLECAPTION,"Account No."));
          IF ("Currency Code" <> BankAcc."Currency Code") AND (BankAcc."Currency Code" <> '') THEN
            AddError(
              STRSUBSTNO(
                Text037,
                FIELDCAPTION("Currency Code"),BankAcc."Currency Code"));

          IF "Currency Code" <> '' THEN
            IF NOT Currency.GET("Currency Code") THEN
              AddError(
                STRSUBSTNO(
                  Text038,
                  "Currency Code"));

          IF "Bank Payment Type" <> 0 THEN
            IF ("Bank Payment Type" = "Bank Payment Type"::"Computer Check") AND (Amount < 0) THEN
              IF BankAcc."Currency Code" <> "Currency Code" THEN
                AddError(
                  STRSUBSTNO(
                    Text042,
                    FIELDCAPTION("Bank Payment Type"),FIELDCAPTION("Currency Code"),
                    TABLECAPTION,BankAcc.TABLECAPTION));

          IF BankAccPostingGr.GET(BankAcc."Bank Acc. Posting Group") THEN
            IF BankAccPostingGr."G/L Bank Account No." <> '' THEN
              // PHP Start Display Net Amt in Jnl
              ReconcileGLAccNo2(
                BankAccPostingGr."G/L Bank Account No.",
                ROUND(("Amount (LCY)" / (1 + "VAT %" / 100))-CalcWHT(GenJnlLine)),Amount);
              // PHP End
              { Original Code
              ReconcileGLAccNo(
                BankAccPostingGr."G/L Bank Account No.",
                ROUND("Amount (LCY)" / (1 + "VAT %" / 100))); }
        END;
    END;

    LOCAL PROCEDURE CheckFixedAsset@23(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50]);
    BEGIN
      WITH GenJnlLine DO
        IF NOT FA.GET("Account No.") THEN
          AddError(
            STRSUBSTNO(
              Text031,
              FA.TABLECAPTION,"Account No."))
        ELSE BEGIN
          AccName := FA.Description;
          IF FA.Blocked THEN
            AddError(
              STRSUBSTNO(
                Text032,
                FA.FIELDCAPTION(Blocked),FALSE,FA.TABLECAPTION,"Account No."));
          IF FA.Inactive THEN
            AddError(
              STRSUBSTNO(
                Text032,
                FA.FIELDCAPTION(Inactive),FALSE,FA.TABLECAPTION,"Account No."));
          IF FA."Budgeted Asset" THEN
            AddError(
              STRSUBSTNO(
                Text043,
                FA.TABLECAPTION,"Account No.",FA.FIELDCAPTION("Budgeted Asset"),TRUE));
          IF DeprBook.GET("Depreciation Book Code") THEN
            CheckFAIntegration(GenJnlLine)
          ELSE
            AddError(
              STRSUBSTNO(
                Text031,
                DeprBook.TABLECAPTION,"Depreciation Book Code"));
          IF NOT FADeprBook.GET(FA."No.","Depreciation Book Code") THEN
            AddError(
              STRSUBSTNO(
                Text036,
                FADeprBook.TABLECAPTION,FA."No.","Depreciation Book Code"));
        END;
    END;

    LOCAL PROCEDURE CheckICPartner@26(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50]);
    BEGIN
      WITH GenJnlLine DO
        IF NOT ICPartner.GET("Account No.") THEN
          AddError(
            STRSUBSTNO(
              Text031,
              ICPartner.TABLECAPTION,"Account No."))
        ELSE BEGIN
          AccName := ICPartner.Name;
          IF ICPartner.Blocked THEN
            AddError(
              STRSUBSTNO(
                Text032,
                ICPartner.FIELDCAPTION(Blocked),FALSE,ICPartner.TABLECAPTION,"Account No."));
        END;
    END;

    LOCAL PROCEDURE TestFixedAsset@13(VAR GenJnlLine@1000 : Record 81);
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF "Job No." <> '' THEN
          AddError(
            STRSUBSTNO(
              Text044,FIELDCAPTION("Job No.")));
        IF "FA Posting Type" = "FA Posting Type"::" " THEN
          AddError(
            STRSUBSTNO(
              Text045,FIELDCAPTION("FA Posting Type")));
        IF "Depreciation Book Code" = '' THEN
          AddError(
            STRSUBSTNO(
              Text045,FIELDCAPTION("Depreciation Book Code")));
        IF "Depreciation Book Code" = "Duplicate in Depreciation Book" THEN
          AddError(
            STRSUBSTNO(
              Text046,
              FIELDCAPTION("Depreciation Book Code"),FIELDCAPTION("Duplicate in Depreciation Book")));
        CheckFADocNo(GenJnlLine);
        IF "Account Type" = "Bal. Account Type" THEN
          AddError(
            STRSUBSTNO(
              Text047,
              FIELDCAPTION("Account Type"),FIELDCAPTION("Bal. Account Type"),"Account Type"));
        IF "Account Type" = "Account Type"::"Fixed Asset" THEN
          IF "FA Posting Type" IN
             ["FA Posting Type"::"Acquisition Cost","FA Posting Type"::Disposal,"FA Posting Type"::Maintenance]
          THEN BEGIN
            IF ("Gen. Bus. Posting Group" <> '') OR ("Gen. Prod. Posting Group" <> '') THEN
              IF "Gen. Posting Type" = "Gen. Posting Type"::" " THEN
                AddError(STRSUBSTNO(Text002,FIELDCAPTION("Gen. Posting Type")));
          END ELSE BEGIN
            IF "Gen. Posting Type" <> "Gen. Posting Type"::" " THEN
              AddError(
                STRSUBSTNO(
                  Text049,
                  FIELDCAPTION("Gen. Posting Type"),FIELDCAPTION("FA Posting Type"),"FA Posting Type"));
            IF "Gen. Bus. Posting Group" <> '' THEN
              AddError(
                STRSUBSTNO(
                  Text049,
                  FIELDCAPTION("Gen. Bus. Posting Group"),FIELDCAPTION("FA Posting Type"),"FA Posting Type"));
            IF "Gen. Prod. Posting Group" <> '' THEN
              AddError(
                STRSUBSTNO(
                  Text049,
                  FIELDCAPTION("Gen. Prod. Posting Group"),FIELDCAPTION("FA Posting Type"),"FA Posting Type"));
          END;
        IF "Bal. Account Type" = "Bal. Account Type"::"Fixed Asset" THEN
          IF "FA Posting Type" IN
             ["FA Posting Type"::"Acquisition Cost","FA Posting Type"::Disposal,"FA Posting Type"::Maintenance]
          THEN BEGIN
            IF ("Bal. Gen. Bus. Posting Group" <> '') OR ("Bal. Gen. Prod. Posting Group" <> '') THEN
              IF "Bal. Gen. Posting Type" = "Bal. Gen. Posting Type"::" " THEN
                AddError(STRSUBSTNO(Text002,FIELDCAPTION("Bal. Gen. Posting Type")));
          END ELSE BEGIN
            IF "Bal. Gen. Posting Type" <> "Bal. Gen. Posting Type"::" " THEN
              AddError(
                STRSUBSTNO(
                  Text049,
                  FIELDCAPTION("Bal. Gen. Posting Type"),FIELDCAPTION("FA Posting Type"),"FA Posting Type"));
            IF "Bal. Gen. Bus. Posting Group" <> '' THEN
              AddError(
                STRSUBSTNO(
                  Text049,
                  FIELDCAPTION("Bal. Gen. Bus. Posting Group"),FIELDCAPTION("FA Posting Type"),"FA Posting Type"));
            IF "Bal. Gen. Prod. Posting Group" <> '' THEN
              AddError(
                STRSUBSTNO(
                  Text049,
                  FIELDCAPTION("Bal. Gen. Prod. Posting Group"),FIELDCAPTION("FA Posting Type"),"FA Posting Type"));
          END;
        TempErrorText :=
          '%1 ' +
          STRSUBSTNO(
            Text050,
            FIELDCAPTION("FA Posting Type"),"FA Posting Type");
        IF "FA Posting Type" <> "FA Posting Type"::"Acquisition Cost" THEN BEGIN
          IF "Depr. Acquisition Cost" THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Depr. Acquisition Cost")));
          IF "Salvage Value" <> 0 THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Salvage Value")));
          IF "FA Posting Type" <> "FA Posting Type"::Maintenance THEN
            IF Quantity <> 0 THEN
              AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION(Quantity)));
          IF "Insurance No." <> '' THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Insurance No.")));
        END;
        IF ("FA Posting Type" = "FA Posting Type"::Maintenance) AND "Depr. until FA Posting Date" THEN
          AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Depr. until FA Posting Date")));
        IF ("FA Posting Type" <> "FA Posting Type"::Maintenance) AND ("Maintenance Code" <> '') THEN
          AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Maintenance Code")));

        IF ("FA Posting Type" <> "FA Posting Type"::Depreciation) AND
           ("FA Posting Type" <> "FA Posting Type"::"Custom 1") AND
           ("No. of Depreciation Days" <> 0)
        THEN
          AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("No. of Depreciation Days")));

        IF ("FA Posting Type" = "FA Posting Type"::Disposal) AND "FA Reclassification Entry" THEN
          AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("FA Reclassification Entry")));

        IF ("FA Posting Type" = "FA Posting Type"::Disposal) AND ("Budgeted FA No." <> '') THEN
          AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Budgeted FA No.")));

        IF "FA Posting Date" = 0D THEN
          "FA Posting Date" := "Posting Date";
        IF DeprBook.GET("Depreciation Book Code") THEN
          IF DeprBook."Use Same FA+G/L Posting Dates" AND ("Posting Date" <> "FA Posting Date") THEN
            AddError(
              STRSUBSTNO(
                Text051,
                FIELDCAPTION("Posting Date"),FIELDCAPTION("FA Posting Date")));
        IF "FA Posting Date" <> 0D THEN BEGIN
          IF "FA Posting Date" <> NORMALDATE("FA Posting Date") THEN
            AddError(
              STRSUBSTNO(
                Text052,
                FIELDCAPTION("FA Posting Date")));
          IF NOT ("FA Posting Date" IN [01010002D..12319998D]) THEN
            AddError(
              STRSUBSTNO(
                Text053,
                FIELDCAPTION("FA Posting Date")));
          IF (AllowFAPostingFrom = 0D) AND (AllowFAPostingTo = 0D) THEN BEGIN
            IF USERID <> '' THEN
              IF UserSetup.GET(USERID) THEN BEGIN
                AllowFAPostingFrom := UserSetup."Allow FA Posting From";
                AllowFAPostingTo := UserSetup."Allow FA Posting To";
              END;
            IF (AllowFAPostingFrom = 0D) AND (AllowFAPostingTo = 0D) THEN BEGIN
              FASetup.GET;
              AllowFAPostingFrom := FASetup."Allow FA Posting From";
              AllowFAPostingTo := FASetup."Allow FA Posting To";
            END;
            IF AllowFAPostingTo = 0D THEN
              AllowFAPostingTo := 12319998D;
          END;
          IF ("FA Posting Date" < AllowFAPostingFrom) OR
             ("FA Posting Date" > AllowFAPostingTo)
          THEN
            AddError(
              STRSUBSTNO(
                Text053,
                FIELDCAPTION("FA Posting Date")));
        END;
        FASetup.GET;
        IF ("FA Posting Type" = "FA Posting Type"::"Acquisition Cost") AND
           ("Insurance No." <> '') AND ("Depreciation Book Code" <> FASetup."Insurance Depr. Book")
        THEN
          AddError(
            STRSUBSTNO(
              Text054,
              FIELDCAPTION("Depreciation Book Code"),"Depreciation Book Code"));

        IF "FA Error Entry No." > 0 THEN BEGIN
          TempErrorText :=
            '%1 ' +
            STRSUBSTNO(
              Text055,
              FIELDCAPTION("FA Error Entry No."));
          IF "Depr. until FA Posting Date" THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Depr. until FA Posting Date")));
          IF "Depr. Acquisition Cost" THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Depr. Acquisition Cost")));
          IF "Duplicate in Depreciation Book" <> '' THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Duplicate in Depreciation Book")));
          IF "Use Duplication List" THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Use Duplication List")));
          IF "Salvage Value" <> 0 THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Salvage Value")));
          IF "Insurance No." <> '' THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Insurance No.")));
          IF "Budgeted FA No." <> '' THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Budgeted FA No.")));
          IF "Recurring Method" > 0 THEN
            AddError(STRSUBSTNO(TempErrorText,FIELDCAPTION("Recurring Method")));
          IF "FA Posting Type" = "FA Posting Type"::Maintenance THEN
            AddError(STRSUBSTNO(TempErrorText,"FA Posting Type"));
        END;
      END;
    END;

    LOCAL PROCEDURE CheckFAIntegration@12(VAR GenJnlLine@1000 : Record 81);
    VAR
      GLIntegration@1001 : Boolean;
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF "FA Posting Type" = "FA Posting Type"::" " THEN
          EXIT;
        CASE "FA Posting Type" OF
          "FA Posting Type"::"Acquisition Cost":
            GLIntegration := DeprBook."G/L Integration - Acq. Cost";
          "FA Posting Type"::Depreciation:
            GLIntegration := DeprBook."G/L Integration - Depreciation";
          "FA Posting Type"::"Write-Down":
            GLIntegration := DeprBook."G/L Integration - Write-Down";
          "FA Posting Type"::Appreciation:
            GLIntegration := DeprBook."G/L Integration - Appreciation";
          "FA Posting Type"::"Custom 1":
            GLIntegration := DeprBook."G/L Integration - Custom 1";
          "FA Posting Type"::"Custom 2":
            GLIntegration := DeprBook."G/L Integration - Custom 2";
          "FA Posting Type"::Disposal:
            GLIntegration := DeprBook."G/L Integration - Disposal";
          "FA Posting Type"::Maintenance:
            GLIntegration := DeprBook."G/L Integration - Maintenance";
        END;
        IF NOT GLIntegration THEN
          AddError(
            STRSUBSTNO(
              Text056,
              "FA Posting Type"));

        IF NOT DeprBook."G/L Integration - Depreciation" THEN BEGIN
          IF "Depr. until FA Posting Date" THEN
            AddError(
              STRSUBSTNO(
                Text057,
                FIELDCAPTION("Depr. until FA Posting Date")));
          IF "Depr. Acquisition Cost" THEN
            AddError(
              STRSUBSTNO(
                Text057,
                FIELDCAPTION("Depr. Acquisition Cost")));
        END;
      END;
    END;

    LOCAL PROCEDURE TestFixedAssetFields@14(VAR GenJnlLine@1000 : Record 81);
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF "FA Posting Type" <> "FA Posting Type"::" " THEN
          AddError(STRSUBSTNO(Text058,FIELDCAPTION("FA Posting Type")));
        IF "Depreciation Book Code" <> '' THEN
          AddError(STRSUBSTNO(Text058,FIELDCAPTION("Depreciation Book Code")));
      END;
    END;

    PROCEDURE TestPostingType@15();
    BEGIN
      CASE TRUE OF
        CustPosting AND PurchPostingType:
          AddError(Text059);
        VendPosting AND SalesPostingType:
          AddError(Text060);
      END;
    END;

    LOCAL PROCEDURE WarningIfNegativeAmt@3(GenJnlLine@1000 : Record 81);
    BEGIN
      IF (GenJnlLine.Amount < 0) AND NOT AmountError THEN BEGIN
        AmountError := TRUE;
        AddError(STRSUBSTNO(Text007,GenJnlLine.FIELDCAPTION(Amount)));
      END;
    END;

    LOCAL PROCEDURE WarningIfPositiveAmt@16(GenJnlLine@1000 : Record 81);
    BEGIN
      IF (GenJnlLine.Amount > 0) AND NOT AmountError THEN BEGIN
        AmountError := TRUE;
        AddError(STRSUBSTNO(Text006,GenJnlLine.FIELDCAPTION(Amount)));
      END;
    END;

    LOCAL PROCEDURE WarningIfZeroAmt@22(GenJnlLine@1000 : Record 81);
    BEGIN
      IF (GenJnlLine.Amount = 0) AND NOT AmountError THEN BEGIN
        AmountError := TRUE;
        AddError(STRSUBSTNO(Text002,GenJnlLine.FIELDCAPTION(Amount)));
      END;
    END;

    LOCAL PROCEDURE WarningIfNonZeroAmt@24(GenJnlLine@1000 : Record 81);
    BEGIN
      IF (GenJnlLine.Amount <> 0) AND NOT AmountError THEN BEGIN
        AmountError := TRUE;
        AddError(STRSUBSTNO(Text062,GenJnlLine.FIELDCAPTION(Amount)));
      END;
    END;

    LOCAL PROCEDURE CheckAgainstPrevLines@20(GenJnlLine@1000 : Record 81);
    VAR
      i@1001 : Integer;
      AccType@1002 : Integer;
      AccNo@1003 : Code[20];
      ErrorFound@1004 : Boolean;
    BEGIN
      IF (GenJnlLine."External Document No." = '') OR
         NOT (GenJnlLine."Account Type" IN
              [GenJnlLine."Account Type"::Customer,GenJnlLine."Account Type"::Vendor]) AND
         NOT (GenJnlLine."Bal. Account Type" IN
              [GenJnlLine."Bal. Account Type"::Customer,GenJnlLine."Bal. Account Type"::Vendor])
      THEN
        EXIT;

      IF GenJnlLine."Account Type" IN [GenJnlLine."Account Type"::Customer,GenJnlLine."Account Type"::Vendor] THEN BEGIN
        AccType := GenJnlLine."Account Type";
        AccNo := GenJnlLine."Account No.";
      END ELSE BEGIN
        AccType := GenJnlLine."Bal. Account Type";
        AccNo := GenJnlLine."Bal. Account No.";
      END;

      TempGenJnlLine.RESET;
      TempGenJnlLine.SETRANGE("External Document No.",GenJnlLine."External Document No.");

      WHILE (i < 2) AND NOT ErrorFound DO BEGIN
        i := i + 1;
        IF i = 1 THEN BEGIN
          TempGenJnlLine.SETRANGE("Account Type",AccType);
          TempGenJnlLine.SETRANGE("Account No.",AccNo);
          TempGenJnlLine.SETRANGE("Bal. Account Type");
          TempGenJnlLine.SETRANGE("Bal. Account No.");
        END ELSE BEGIN
          TempGenJnlLine.SETRANGE("Account Type");
          TempGenJnlLine.SETRANGE("Account No.");
          TempGenJnlLine.SETRANGE("Bal. Account Type",AccType);
          TempGenJnlLine.SETRANGE("Bal. Account No.",AccNo);
        END;
        IF TempGenJnlLine.FINDFIRST THEN BEGIN
          ErrorFound := TRUE;
          AddError(
            STRSUBSTNO(
              Text064,GenJnlLine.FIELDCAPTION("External Document No."),GenJnlLine."External Document No.",
              TempGenJnlLine."Line No.",GenJnlLine.FIELDCAPTION("Document No."),TempGenJnlLine."Document No."));
        END;
      END;

      TempGenJnlLine.RESET;
      TempGenJnlLine := GenJnlLine;
      TempGenJnlLine.INSERT;
    END;

    LOCAL PROCEDURE CheckICDocument@17();
    VAR
      GenJnlLine4@1000 : Record 81;
      "IC G/L Account"@1001 : Record 410;
    BEGIN
      WITH "Gen. Journal Line" DO
        IF GenJnlTemplate.Type = GenJnlTemplate.Type::Intercompany THEN BEGIN
          IF ("Posting Date" <> LastDate) OR ("Document Type" <> LastDocType) OR ("Document No." <> LastDocNo) THEN BEGIN
            GenJnlLine4.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
            GenJnlLine4.SETRANGE("Journal Template Name","Journal Template Name");
            GenJnlLine4.SETRANGE("Journal Batch Name","Journal Batch Name");
            GenJnlLine4.SETRANGE("Posting Date","Posting Date");
            GenJnlLine4.SETRANGE("Document No.","Document No.");
            GenJnlLine4.SETFILTER("IC Partner Code",'<>%1','');
            IF GenJnlLine4.FINDFIRST THEN
              CurrentICPartner := GenJnlLine4."IC Partner Code"
            ELSE
              CurrentICPartner := '';
          END;
          IF (CurrentICPartner <> '') AND ("IC Direction" = "IC Direction"::Outgoing) THEN BEGIN
            IF ("Account Type" IN ["Account Type"::"G/L Account","Account Type"::"Bank Account"]) AND
               ("Bal. Account Type" IN ["Bal. Account Type"::"G/L Account","Account Type"::"Bank Account"]) AND
               ("Account No." <> '') AND
               ("Bal. Account No." <> '')
            THEN BEGIN
              AddError(
                STRSUBSTNO(
                  Text066,FIELDCAPTION("Account No."),FIELDCAPTION("Bal. Account No.")));
            END ELSE BEGIN
              IF (("Account Type" IN ["Account Type"::"G/L Account","Account Type"::"Bank Account"]) AND ("Account No." <> '')) XOR
                 (("Bal. Account Type" IN ["Bal. Account Type"::"G/L Account","Account Type"::"Bank Account"]) AND
                  ("Bal. Account No." <> ''))
              THEN BEGIN
                IF "IC Partner G/L Acc. No." = '' THEN
                  AddError(
                    STRSUBSTNO(
                      Text002,FIELDCAPTION("IC Partner G/L Acc. No.")))
                ELSE BEGIN
                  IF "IC G/L Account".GET("IC Partner G/L Acc. No.") THEN
                    IF "IC G/L Account".Blocked THEN
                      AddError(
                        STRSUBSTNO(
                          Text032,
                          "IC G/L Account".FIELDCAPTION(Blocked),FALSE,FIELDCAPTION("IC Partner G/L Acc. No."),
                          "IC Partner G/L Acc. No."
                          ));
                END;
              END ELSE
                IF "IC Partner G/L Acc. No." <> '' THEN
                  AddError(
                    STRSUBSTNO(
                      Text009,FIELDCAPTION("IC Partner G/L Acc. No.")));
            END;
          END ELSE
            IF "IC Partner G/L Acc. No." <> '' THEN BEGIN
              IF "IC Direction" = "IC Direction"::Incoming THEN
                AddError(
                  STRSUBSTNO(
                    Text069,FIELDCAPTION("IC Partner G/L Acc. No."),FIELDCAPTION("IC Direction"),FORMAT("IC Direction")));
              IF CurrentICPartner = '' THEN
                AddError(
                  STRSUBSTNO(
                    Text070,FIELDCAPTION("IC Partner G/L Acc. No.")));
            END;
        END;
    END;

    LOCAL PROCEDURE TestJobFields@18(VAR GenJnlLine@1000 : Record 81);
    VAR
      Job@1001 : Record 167;
      JT@1002 : Record 1001;
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF ("Job No." = '') OR ("Account Type" <> "Account Type"::"G/L Account") THEN
          EXIT;
        IF NOT Job.GET("Job No.") THEN
          AddError(STRSUBSTNO(Text071,Job.TABLECAPTION,"Job No."))
        ELSE
          IF Job.Blocked > Job.Blocked::" " THEN
            AddError(
              STRSUBSTNO(
                Text072,Job.FIELDCAPTION(Blocked),Job.Blocked,Job.TABLECAPTION,"Job No."));

        IF "Job Task No." = '' THEN
          AddError(STRSUBSTNO(Text002,FIELDCAPTION("Job Task No.")))
        ELSE
          IF NOT JT.GET("Job No.","Job Task No.") THEN
            AddError(STRSUBSTNO(Text071,JT.TABLECAPTION,"Job Task No."))
      END;
    END;

    LOCAL PROCEDURE CheckFADocNo@19(GenJnlLine@1002 : Record 81);
    VAR
      DeprBook@1005 : Record 5611;
      FAJnlLine@1003 : Record 5621;
      OldFALedgEntry@1001 : Record 5601;
      OldMaintenanceLedgEntry@1000 : Record 5625;
      FANo@1004 : Code[20];
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF "Account Type" = "Account Type"::"Fixed Asset" THEN
          FANo := "Account No.";
        IF "Bal. Account Type" = "Bal. Account Type"::"Fixed Asset" THEN
          FANo := "Bal. Account No.";
        IF (FANo = '') OR
           ("FA Posting Type" = "FA Posting Type"::" ") OR
           ("Depreciation Book Code" = '') OR
           ("Document No." = '')
        THEN
          EXIT;
        IF NOT DeprBook.GET("Depreciation Book Code") THEN
          EXIT;
        IF DeprBook."Allow Identical Document No." THEN
          EXIT;

        FAJnlLine."FA Posting Type" := "FA Posting Type" - 1;
        IF "FA Posting Type" <> "FA Posting Type"::Maintenance THEN BEGIN
          OldFALedgEntry.SETCURRENTKEY(
            "FA No.","Depreciation Book Code","FA Posting Category","FA Posting Type","Document No.");
          OldFALedgEntry.SETRANGE("FA No.",FANo);
          OldFALedgEntry.SETRANGE("Depreciation Book Code","Depreciation Book Code");
          OldFALedgEntry.SETRANGE("FA Posting Category",OldFALedgEntry."FA Posting Category"::" ");
          OldFALedgEntry.SETRANGE("FA Posting Type",FAJnlLine.ConvertToLedgEntry(FAJnlLine));
          OldFALedgEntry.SETRANGE("Document No.","Document No.");
          IF OldFALedgEntry.FINDFIRST THEN
            AddError(
              STRSUBSTNO(
                Text073,
                FIELDCAPTION("Document No."),"Document No."));
        END ELSE BEGIN
          OldMaintenanceLedgEntry.SETCURRENTKEY(
            "FA No.","Depreciation Book Code","Document No.");
          OldMaintenanceLedgEntry.SETRANGE("FA No.",FANo);
          OldMaintenanceLedgEntry.SETRANGE("Depreciation Book Code","Depreciation Book Code");
          OldMaintenanceLedgEntry.SETRANGE("Document No.","Document No.");
          IF OldMaintenanceLedgEntry.FINDFIRST THEN
            AddError(
              STRSUBSTNO(
                Text073,
                FIELDCAPTION("Document No."),"Document No."));
        END;
      END;
    END;

    PROCEDURE InitializeRequest@21(NewShowDim@1000 : Boolean);
    BEGIN
      ShowDim := NewShowDim;
    END;

    LOCAL PROCEDURE GetDimensionText@25(VAR DimensionSetEntry@1005 : Record 480) : Text[75];
    VAR
      DimensionText@1001 : Text[75];
      Separator@1003 : Code[10];
      DimValue@1002 : Text[45];
    BEGIN
      Separator := '';
      DimValue := '';
      Continue := FALSE;

      REPEAT
        DimValue := STRSUBSTNO('%1 - %2',DimensionSetEntry."Dimension Code",DimensionSetEntry."Dimension Value Code");
        IF MAXSTRLEN(DimensionText) < STRLEN(DimensionText + Separator + DimValue) THEN BEGIN
          Continue := TRUE;
          EXIT(DimensionText);
        END;
        DimensionText := DimensionText + Separator + DimValue;
        Separator := '; ';
      UNTIL DimSetEntry.NEXT = 0;
      EXIT(DimensionText);
    END;

    PROCEDURE GetEmployeeName@104(EmpNo@1000 : Code[20]) : Text;
    VAR
      Emp@1001 : Record 5200;
    BEGIN
      IF Emp.GET(EmpNo) THEN
        EXIT(Emp."First Name"+ ' '+Emp."Last Name");
    END;

    LOCAL PROCEDURE CalcWHT@29(VAR GenJnlLine@1000 : Record 81) : Decimal;
    VAR
      WHTSetup@1001 : Record 50503;
      GenJnlLine1@1002 : Record 81;
      WHTManagement@1003 : Codeunit 50500;
      WHTAmount@1004 : Decimal;
    BEGIN
      // Havent tried for Foreign Currency
      GenJnlLine1.COPY(GenJnlLine);
      WHTAmount := 0;
      IF GenJnlLine1."Interest Amount" <> 0 THEN
        GenJnlLine1.VALIDATE(Amount,GenJnlLine1.Amount - GenJnlLine1."Interest Amount");
      IF ((GenJnlLine."Account Type" = GenJnlLine."Account Type"::Vendor) AND (GenJnlLine."Bal. Account Type" = GenJnlLine."Bal. Account Type"::"Bank Account")) THEN
        IF WHTSetup.GET(GenJnlLine."WHT Business Posting Group",GenJnlLine."WHT Product Posting Group") THEN
          IF WHTSetup."Realized WHT Type" <> WHTSetup."Realized WHT Type"::Earliest THEN
            WHTAmount := WHTAmount + WHTManagement.WHTAmountJournal(GenJnlLine1,FALSE)
          ELSE
            WHTAmount := WHTAmount + ABS(WHTManagement.CalcVendExtraWHTForEarliest(GenJnlLine1));
      // For Changing the Jrnl Line. Journal line is inverting upon generating this report
      IF ((GenJnlLine."Account Type" = GenJnlLine."Account Type"::"Bank Account") AND (GenJnlLine."Bal. Account Type" = GenJnlLine."Bal. Account Type"::Vendor)) THEN
        IF WHTSetup.GET(GenJnlLine."WHT Business Posting Group",GenJnlLine."WHT Product Posting Group") THEN
          IF WHTSetup."Realized WHT Type" <> WHTSetup."Realized WHT Type"::Earliest THEN
            WHTAmount := WHTAmount - WHTManagement.WHTAmountJournal(GenJnlLine1,FALSE)
          ELSE
            WHTAmount := WHTAmount - ABS(WHTManagement.CalcVendExtraWHTForEarliest(GenJnlLine1));

      EXIT(WHTAmount);
    END;

    BEGIN
    {
      Additional Changes: 1/6/2022
      ** Display the External Document No.
      ** Change the orientation of the report from portrait to landscape
      ** Additional column Bal. Account Name, Customer PO No.
      ** Hide and show other column if the report is generated from Cash Receipts (Bal. Account No., Balance Upon Posting of Journal)
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>7ee18a32-d991-40f8-a570-b43fad5d7248</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <Fields>
        <Field Name="JnlTmplName_GenJnlBatch">
          <DataField>JnlTmplName_GenJnlBatch</DataField>
        </Field>
        <Field Name="Name_GenJnlBatch">
          <DataField>Name_GenJnlBatch</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="GeneralJnlTestCaption">
          <DataField>GeneralJnlTestCaption</DataField>
        </Field>
        <Field Name="HideReconcillation">
          <DataField>HideReconcillation</DataField>
        </Field>
        <Field Name="JnlTemplateName_GenJnlBatch">
          <DataField>JnlTemplateName_GenJnlBatch</DataField>
        </Field>
        <Field Name="JnlName_GenJnlBatch">
          <DataField>JnlName_GenJnlBatch</DataField>
        </Field>
        <Field Name="GenJnlLineFilter">
          <DataField>GenJnlLineFilter</DataField>
        </Field>
        <Field Name="GenJnlLineFilterTableCaption">
          <DataField>GenJnlLineFilterTableCaption</DataField>
        </Field>
        <Field Name="Number_Integer">
          <DataField>Number_Integer</DataField>
        </Field>
        <Field Name="PageNoCaption">
          <DataField>PageNoCaption</DataField>
        </Field>
        <Field Name="JnlTmplNameCaption_GenJnlBatch">
          <DataField>JnlTmplNameCaption_GenJnlBatch</DataField>
        </Field>
        <Field Name="JournalBatchCaption">
          <DataField>JournalBatchCaption</DataField>
        </Field>
        <Field Name="PostingDateCaption">
          <DataField>PostingDateCaption</DataField>
        </Field>
        <Field Name="DocumentTypeCaption">
          <DataField>DocumentTypeCaption</DataField>
        </Field>
        <Field Name="DocNoCaption_GenJnlLine">
          <DataField>DocNoCaption_GenJnlLine</DataField>
        </Field>
        <Field Name="ExtrnlDocNoCaption_GenJnlLine">
          <DataField>ExtrnlDocNoCaption_GenJnlLine</DataField>
        </Field>
        <Field Name="AccountTypeCaption">
          <DataField>AccountTypeCaption</DataField>
        </Field>
        <Field Name="AccNoCaption_GenJnlLine">
          <DataField>AccNoCaption_GenJnlLine</DataField>
        </Field>
        <Field Name="AccNameCaption">
          <DataField>AccNameCaption</DataField>
        </Field>
        <Field Name="DescCaption_GenJnlLine">
          <DataField>DescCaption_GenJnlLine</DataField>
        </Field>
        <Field Name="PostingTypeCaption">
          <DataField>PostingTypeCaption</DataField>
        </Field>
        <Field Name="GenBusPostGroupCaption">
          <DataField>GenBusPostGroupCaption</DataField>
        </Field>
        <Field Name="GenProdPostGroupCaption">
          <DataField>GenProdPostGroupCaption</DataField>
        </Field>
        <Field Name="AmountCaption_GenJnlLine">
          <DataField>AmountCaption_GenJnlLine</DataField>
        </Field>
        <Field Name="BalAccNoCaption_GenJnlLine">
          <DataField>BalAccNoCaption_GenJnlLine</DataField>
        </Field>
        <Field Name="BalLCYCaption_GenJnlLine">
          <DataField>BalLCYCaption_GenJnlLine</DataField>
        </Field>
        <Field Name="JournalTemplateName">
          <DataField>JournalTemplateName</DataField>
        </Field>
        <Field Name="PostingDate_GenJnlLine">
          <DataField>PostingDate_GenJnlLine</DataField>
        </Field>
        <Field Name="DocType_GenJnlLine">
          <DataField>DocType_GenJnlLine</DataField>
        </Field>
        <Field Name="DocNo_GenJnlLine">
          <DataField>DocNo_GenJnlLine</DataField>
        </Field>
        <Field Name="ExtrnlDocNo_GenJnlLine">
          <DataField>ExtrnlDocNo_GenJnlLine</DataField>
        </Field>
        <Field Name="AccountType_GenJnlLine">
          <DataField>AccountType_GenJnlLine</DataField>
        </Field>
        <Field Name="AccountNo_GenJnlLine">
          <DataField>AccountNo_GenJnlLine</DataField>
        </Field>
        <Field Name="AccName">
          <DataField>AccName</DataField>
        </Field>
        <Field Name="Description_GenJnlLine">
          <DataField>Description_GenJnlLine</DataField>
        </Field>
        <Field Name="GenPostType_GenJnlLine">
          <DataField>GenPostType_GenJnlLine</DataField>
        </Field>
        <Field Name="GenBusPosGroup_GenJnlLine">
          <DataField>GenBusPosGroup_GenJnlLine</DataField>
        </Field>
        <Field Name="GenProdPostGroup_GenJnlLine">
          <DataField>GenProdPostGroup_GenJnlLine</DataField>
        </Field>
        <Field Name="Amount_GenJnlLine">
          <DataField>Amount_GenJnlLine</DataField>
        </Field>
        <Field Name="Amount_GenJnlLineFormat">
          <DataField>Amount_GenJnlLineFormat</DataField>
        </Field>
        <Field Name="CurrencyCode_GenJnlLine">
          <DataField>CurrencyCode_GenJnlLine</DataField>
        </Field>
        <Field Name="BalAccNo_GenJnlLine">
          <DataField>BalAccNo_GenJnlLine</DataField>
        </Field>
        <Field Name="BalAccName_GenJnlLine">
          <DataField>BalAccName_GenJnlLine</DataField>
        </Field>
        <Field Name="BalanceLCY_GenJnlLine">
          <DataField>BalanceLCY_GenJnlLine</DataField>
        </Field>
        <Field Name="BalanceLCY_GenJnlLineFormat">
          <DataField>BalanceLCY_GenJnlLineFormat</DataField>
        </Field>
        <Field Name="AmountLCY">
          <DataField>AmountLCY</DataField>
        </Field>
        <Field Name="AmountLCYFormat">
          <DataField>AmountLCYFormat</DataField>
        </Field>
        <Field Name="BalanceLCY">
          <DataField>BalanceLCY</DataField>
        </Field>
        <Field Name="BalanceLCYFormat">
          <DataField>BalanceLCYFormat</DataField>
        </Field>
        <Field Name="AmountLCY_GenJnlLine">
          <DataField>AmountLCY_GenJnlLine</DataField>
        </Field>
        <Field Name="AmountLCY_GenJnlLineFormat">
          <DataField>AmountLCY_GenJnlLineFormat</DataField>
        </Field>
        <Field Name="JnlTmplName_GenJnlLine">
          <DataField>JnlTmplName_GenJnlLine</DataField>
        </Field>
        <Field Name="JnlBatchName_GenJnlLine">
          <DataField>JnlBatchName_GenJnlLine</DataField>
        </Field>
        <Field Name="LineNo_GenJnlLine">
          <DataField>LineNo_GenJnlLine</DataField>
        </Field>
        <Field Name="TotalLCYCaption">
          <DataField>TotalLCYCaption</DataField>
        </Field>
        <Field Name="MessageToRecipient_GenJnlLine">
          <DataField>MessageToRecipient_GenJnlLine</DataField>
        </Field>
        <Field Name="DocumentDate_GenJnlLine">
          <DataField>DocumentDate_GenJnlLine</DataField>
        </Field>
        <Field Name="PreparedBy">
          <DataField>PreparedBy</DataField>
        </Field>
        <Field Name="ConfirmedBy">
          <DataField>ConfirmedBy</DataField>
        </Field>
        <Field Name="CustomerPONo">
          <DataField>CustomerPONo</DataField>
        </Field>
        <Field Name="WHTAmt_GenJnlLine">
          <DataField>WHTAmt_GenJnlLine</DataField>
        </Field>
        <Field Name="WHTAmt_GenJnlLineFormat">
          <DataField>WHTAmt_GenJnlLineFormat</DataField>
        </Field>
        <Field Name="DimText">
          <DataField>DimText</DataField>
        </Field>
        <Field Name="Number_DimensionLoop">
          <DataField>Number_DimensionLoop</DataField>
        </Field>
        <Field Name="DimensionsCaption">
          <DataField>DimensionsCaption</DataField>
        </Field>
        <Field Name="AccountNo_GenJnlAllocation">
          <DataField>AccountNo_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AccountName_GenJnlAllocation">
          <DataField>AccountName_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AllocationQuantity_GenJnlAllocation">
          <DataField>AllocationQuantity_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AllocationQuantity_GenJnlAllocationFormat">
          <DataField>AllocationQuantity_GenJnlAllocationFormat</DataField>
        </Field>
        <Field Name="AllocationPct_GenJnlAllocation">
          <DataField>AllocationPct_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AllocationPct_GenJnlAllocationFormat">
          <DataField>AllocationPct_GenJnlAllocationFormat</DataField>
        </Field>
        <Field Name="Amount_GenJnlAllocation">
          <DataField>Amount_GenJnlAllocation</DataField>
        </Field>
        <Field Name="Amount_GenJnlAllocationFormat">
          <DataField>Amount_GenJnlAllocationFormat</DataField>
        </Field>
        <Field Name="JournalLineNo_GenJnlAllocation">
          <DataField>JournalLineNo_GenJnlAllocation</DataField>
        </Field>
        <Field Name="LineNo_GenJnlAllocation">
          <DataField>LineNo_GenJnlAllocation</DataField>
        </Field>
        <Field Name="JournalBatchName_GenJnlAllocation">
          <DataField>JournalBatchName_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AccountNoCaption_GenJnlAllocation">
          <DataField>AccountNoCaption_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AccountNameCaption_GenJnlAllocation">
          <DataField>AccountNameCaption_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AllocationQuantityCaption_GenJnlAllocation">
          <DataField>AllocationQuantityCaption_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AllocationPctCaption_GenJnlAllocation">
          <DataField>AllocationPctCaption_GenJnlAllocation</DataField>
        </Field>
        <Field Name="AmountCaption_GenJnlAllocation">
          <DataField>AmountCaption_GenJnlAllocation</DataField>
        </Field>
        <Field Name="Recurring_GenJnlTemplate">
          <DataField>Recurring_GenJnlTemplate</DataField>
        </Field>
        <Field Name="AllocationDimText">
          <DataField>AllocationDimText</DataField>
        </Field>
        <Field Name="Number_DimensionLoopAllocations">
          <DataField>Number_DimensionLoopAllocations</DataField>
        </Field>
        <Field Name="DimensionAllocationsCaption">
          <DataField>DimensionAllocationsCaption</DataField>
        </Field>
        <Field Name="ErrorTextNumber">
          <DataField>ErrorTextNumber</DataField>
        </Field>
        <Field Name="WarningCaption">
          <DataField>WarningCaption</DataField>
        </Field>
        <Field Name="GLAccNetChangeNo">
          <DataField>GLAccNetChangeNo</DataField>
        </Field>
        <Field Name="GLAccNetChangeName">
          <DataField>GLAccNetChangeName</DataField>
        </Field>
        <Field Name="GLAccNetChangeNetChangeJnl">
          <DataField>GLAccNetChangeNetChangeJnl</DataField>
        </Field>
        <Field Name="GLAccNetChangeNetChangeJnlFormat">
          <DataField>GLAccNetChangeNetChangeJnlFormat</DataField>
        </Field>
        <Field Name="GLAccNetChangeNetAmountJnl">
          <DataField>GLAccNetChangeNetAmountJnl</DataField>
        </Field>
        <Field Name="GLAccNetChangeNetAmountJnlFormat">
          <DataField>GLAccNetChangeNetAmountJnlFormat</DataField>
        </Field>
        <Field Name="GLAccNetChangeBalafterPost">
          <DataField>GLAccNetChangeBalafterPost</DataField>
        </Field>
        <Field Name="GLAccNetChangeBalafterPostFormat">
          <DataField>GLAccNetChangeBalafterPostFormat</DataField>
        </Field>
        <Field Name="ReconciliationCaption">
          <DataField>ReconciliationCaption</DataField>
        </Field>
        <Field Name="NoCaption">
          <DataField>NoCaption</DataField>
        </Field>
        <Field Name="NameCaption">
          <DataField>NameCaption</DataField>
        </Field>
        <Field Name="NetAmountinJnlCaption">
          <DataField>NetAmountinJnlCaption</DataField>
        </Field>
        <Field Name="NetChangeinJnlCaption">
          <DataField>NetChangeinJnlCaption</DataField>
        </Field>
        <Field Name="BalafterPostingCaption">
          <DataField>BalafterPostingCaption</DataField>
        </Field>
      </Fields>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
  <ReportSections>
    <ReportSection>
      <Body>
        <ReportItems>
          <Tablix Name="list1">
            <TablixBody>
              <TablixColumns>
                <TablixColumn>
                  <Width>31.89688cm</Width>
                </TablixColumn>
              </TablixColumns>
              <TablixRows>
                <TablixRow>
                  <Height>14.74844cm</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Rectangle Name="list1_Contents">
                          <ReportItems>
                            <Tablix Name="table2">
                              <TablixBody>
                                <TablixColumns>
                                  <TablixColumn>
                                    <Width>1.90477cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>4.76189cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.9476cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.9476cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.90477cm</Width>
                                  </TablixColumn>
                                </TablixColumns>
                                <TablixRows>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox77">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!ReconciliationCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>22</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>2</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox98">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox98</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox53">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox53</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox79">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>20</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox80">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>19</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox811">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>18</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox101">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox101</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox82">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>17</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox83">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>16</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox84">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>15</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox85">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>14</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox113">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox113</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox86">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>13</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox87">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>12</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox88">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!NoCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>11</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox89">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!NameCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>10</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox114">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!NetAmountinJnlCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox114</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox90">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!NetChangeinJnlCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>9</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox912">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!BalafterPostingCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>8</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox92">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>7</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox93">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>6</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox115">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox115</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox94">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>5</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox95">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>4</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox73">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GLAccNetChangeNo.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>3</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox74">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GLAccNetChangeName.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>2</ZIndex>
                                            <Style>
                                              <Border>
                                                <Style>None</Style>
                                              </Border>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox116">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GLAccNetChangeNetAmountJnl.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>=Fields!GLAccNetChangeNetAmountJnlFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox116</rd:DefaultName>
                                            <Style>
                                              <Border>
                                                <Style>None</Style>
                                              </Border>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox75">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GLAccNetChangeNetChangeJnl.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>=Fields!GLAccNetChangeNetChangeJnlFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>1</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox76">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GLAccNetChangeBalafterPost.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>=Fields!GLAccNetChangeBalafterPostFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                </TablixRows>
                              </TablixBody>
                              <TablixColumnHierarchy>
                                <TablixMembers>
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!HideReconcillation.Value=True,False,True)</Hidden>
                                    </Visibility>
                                  </TablixMember>
                                  <TablixMember />
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!HideReconcillation.Value=True,True,False)</Hidden>
                                    </Visibility>
                                  </TablixMember>
                                </TablixMembers>
                              </TablixColumnHierarchy>
                              <TablixRowHierarchy>
                                <TablixMembers>
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!ReconciliationCaption.Value&lt;&gt;"",False,True)</Hidden>
                                    </Visibility>
                                    <KeepWithGroup>After</KeepWithGroup>
                                    <KeepTogether>true</KeepTogether>
                                  </TablixMember>
                                  <TablixMember>
                                    <KeepWithGroup>After</KeepWithGroup>
                                    <KeepTogether>true</KeepTogether>
                                  </TablixMember>
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!ReconciliationCaption.Value&lt;&gt;"",False,True)</Hidden>
                                    </Visibility>
                                    <KeepWithGroup>After</KeepWithGroup>
                                    <KeepTogether>true</KeepTogether>
                                  </TablixMember>
                                  <TablixMember>
                                    <KeepWithGroup>After</KeepWithGroup>
                                    <KeepTogether>true</KeepTogether>
                                  </TablixMember>
                                  <TablixMember>
                                    <KeepWithGroup>After</KeepWithGroup>
                                    <KeepTogether>true</KeepTogether>
                                  </TablixMember>
                                  <TablixMember>
                                    <Group Name="table2_Group1">
                                      <GroupExpressions>
                                        <GroupExpression>=Fields!JnlTmplName_GenJnlBatch.Value</GroupExpression>
                                        <GroupExpression>=Fields!Name_GenJnlBatch.Value</GroupExpression>
                                      </GroupExpressions>
                                    </Group>
                                    <TablixMembers>
                                      <TablixMember>
                                        <Group Name="table2_Details_Group">
                                          <DataElementName>Detail</DataElementName>
                                        </Group>
                                        <TablixMembers>
                                          <TablixMember />
                                        </TablixMembers>
                                        <DataElementName>Detail_Collection</DataElementName>
                                        <DataElementOutput>Output</DataElementOutput>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                    </TablixMembers>
                                  </TablixMember>
                                </TablixMembers>
                              </TablixRowHierarchy>
                              <DataSetName>DataSet_Result</DataSetName>
                              <Filters>
                                <Filter>
                                  <FilterExpression>=Fields!GLAccNetChangeNo.Value</FilterExpression>
                                  <Operator>GreaterThan</Operator>
                                  <FilterValues>
                                    <FilterValue>=""</FilterValue>
                                  </FilterValues>
                                </Filter>
                              </Filters>
                              <Top>9.5241cm</Top>
                              <Height>2.53806cm</Height>
                              <Width>12.46663cm</Width>
                              <Visibility>
                                <Hidden>=IIF(Fields!GLAccNetChangeNo.Value&lt;&gt;"",False,True)</Hidden>
                              </Visibility>
                              <DataElementOutput>NoOutput</DataElementOutput>
                              <Style />
                            </Tablix>
                            <Tablix Name="Table1">
                              <TablixBody>
                                <TablixColumns>
                                  <TablixColumn>
                                    <Width>0.07938cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.38663cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.6cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>2cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>2.10949cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.65001cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>2.87378cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>3.45453cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>0.07938cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>0.07938cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>0.07938cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>3.07792cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.5873cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.5873cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>0.8cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.26985cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>2.5cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>2.5cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>1.26985cm</Width>
                                  </TablixColumn>
                                </TablixColumns>
                                <TablixRows>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox55">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!JnlTmplNameCaption_GenJnlBatch.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>124</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>4</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox102">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox102</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox69">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=UCase(Fields!JournalTemplateName.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>123</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox112">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox112</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox305">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>120</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox306">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>119</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox307">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>118</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox45">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox45</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox308">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>117</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox117">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox117</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox309">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>116</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox310">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>115</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox119">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox119</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox72">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox72</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox311">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>114</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox70">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!JournalBatchCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>113</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>4</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox103">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox103</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox71">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!Name_GenJnlBatch.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>112</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>2</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox282">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>111</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox283">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>110</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox284">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>109</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox285">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>108</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox286">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>107</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox47">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox47</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox287">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>106</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox118">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox118</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox288">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>105</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox289">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>104</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox120">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox120</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox78">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox78</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox290">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>103</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox256">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>102</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox12">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox12</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox257">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>101</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox258">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>100</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox104">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox104</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox259">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>99</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox260">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>98</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox261">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>97</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox262">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>96</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox263">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>95</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox264">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>94</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox265">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>93</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox48">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox48</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox266">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>92</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox128">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox128</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox267">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>91</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox268">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>90</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox121">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox121</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox81">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox81</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox269">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>89</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox111">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GenJnlLineFilterTableCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>88</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>20</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox1">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox1</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox33">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox33</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox30">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox30</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox29">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox29</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox105">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox105</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox19">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox19</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox15">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox15</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox14">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox14</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox13">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <Color>#ff0000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox13</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox221">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>80</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox222">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>79</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox223">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>78</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox49">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox49</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox224">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>77</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox130">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox130</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox225">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>76</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox226">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>75</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox122">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox122</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox91">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox91</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox227">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>74</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.97607cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox319">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!PostingDateCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>73</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox34">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">Document Date </Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox34</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox36">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!DocumentTypeCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>72</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox37">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!DocNoCaption_GenJnlLine.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>71</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox106">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!ExtrnlDocNoCaption_GenJnlLine.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox106</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox129">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AccountTypeCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>70</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox320">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AccNoCaption_GenJnlLine.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>69</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox321">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AccNameCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>68</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox322">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!DescCaption_GenJnlLine.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>67</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox323">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!PostingTypeCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>66</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox324">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!GenBusPostGroupCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>65</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox325">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!GenProdPostGroupCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>64</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox51">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">Msg to Rcpt</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox51</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox326">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AmountCaption_GenJnlLine.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>63</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox139">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">WHT Amt.</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox139</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox327">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>62</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox328">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!BalAccNoCaption_GenJnlLine.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>61</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox123">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">Bal. Account Name</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox123</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox96">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">Customer PO No.</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox96</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox329">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!BalLCYCaption_GenJnlLine.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>60</ZIndex>
                                            <Style>
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox9">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox9</rd:DefaultName>
                                            <ZIndex>59</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox35">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox35</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox10">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox10</rd:DefaultName>
                                            <ZIndex>58</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox16">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox16</rd:DefaultName>
                                            <ZIndex>57</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox107">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox107</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox17">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox17</rd:DefaultName>
                                            <ZIndex>56</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox18">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox18</rd:DefaultName>
                                            <ZIndex>55</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox20">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox20</rd:DefaultName>
                                            <ZIndex>54</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox21">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox21</rd:DefaultName>
                                            <ZIndex>53</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox22">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox22</rd:DefaultName>
                                            <ZIndex>52</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox23">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox23</rd:DefaultName>
                                            <ZIndex>51</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox24">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox24</rd:DefaultName>
                                            <ZIndex>50</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox52">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox52</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox25">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox25</rd:DefaultName>
                                            <ZIndex>49</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox132">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox132</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox26">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox26</rd:DefaultName>
                                            <ZIndex>48</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox27">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox27</rd:DefaultName>
                                            <ZIndex>47</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox124">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox124</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox97">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox97</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox28">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox28</rd:DefaultName>
                                            <ZIndex>46</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLinePostingDate">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!PostingDate_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>d</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>45</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox41">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!DocumentDate_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox41</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineDocumentType">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!DocType_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>44</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineDocumentNo">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!DocNo_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>43</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox108">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!ExtrnlDocNo_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox108</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineAccountType">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AccountType_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>42</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineAccountNo">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AccountNo_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>41</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AccName">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AccName.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>40</ZIndex>
                                            <Style>
                                              <Border>
                                                <Style>None</Style>
                                              </Border>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineDescription">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!Description_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>39</ZIndex>
                                            <Style>
                                              <Border>
                                                <Style>None</Style>
                                              </Border>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineGenPostingType">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GenPostType_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>38</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineGenBusPostingGroup">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GenBusPosGroup_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>37</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineGenProdPostingGroup">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!GenProdPostGroup_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>36</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineGenProdPostingGroup2">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!MessageToRecipient_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>36</ZIndex>
                                            <Style>
                                              <Border>
                                                <Style>None</Style>
                                              </Border>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineAmount">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!Amount_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>=Fields!Amount_GenJnlLineFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>35</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox133">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!WHTAmt_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>#,0.00;(#,0.00)</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox133</rd:DefaultName>
                                            <Style>
                                              <Border>
                                                <Style>None</Style>
                                              </Border>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <rd:Selected>true</rd:Selected>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineCurrencyCode">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!CurrencyCode_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>34</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineBalAccountNo">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!BalAccNo_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>33</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox125">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!BalAccName_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox125</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="CustomerPONo">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!CustomerPONo.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>CustomerPONo</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="GenJournalLineBalanceLCY">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!BalanceLCY_GenJnlLine.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>=Fields!BalanceLCY_GenJnlLineFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>32</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox56">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!DimensionsCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>d</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox56</rd:DefaultName>
                                            <ZIndex>31</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="DimText">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!DimText.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>d</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>DimText</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>17</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox172">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>d</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>29</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="DimText1">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!DimText.Value</Value>
                                                    <Style>
                                                      <FontStyle>Normal</FontStyle>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Normal</FontWeight>
                                                      <TextDecoration>None</TextDecoration>
                                                      <Color>#000000</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>DimText1</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>17</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.84907cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox11">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox11</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AccountNoCaption_GenJnlAllocation">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AccountNoCaption_GenJnlAllocation.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AccountNoCaption_GenJnlAllocation</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AccountName_GenJnlAllocation">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AccountNameCaption_GenJnlAllocation.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AccountName_GenJnlAllocation</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>2</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AllocationQuantity_GenJnlAllocation">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AllocationQuantityCaption_GenJnlAllocation.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AllocationQuantity_GenJnlAllocation</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>2</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox43">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AllocationPctCaption_GenJnlAllocation.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox43</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>4</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox134">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox134</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox46">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!AmountCaption_GenJnlAllocation.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox46</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Bottom</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>5</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox50">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Format>d</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox50</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AccountNo_GenJnlAllocation">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AccountNo_GenJnlAllocation.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AccountNo_GenJnlAllocation</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AccountName_GenJnlAllocation1">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AccountName_GenJnlAllocation.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AccountName_GenJnlAllocation1</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>2</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AllocationQuantity_GenJnlAllocation1">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AllocationQuantity_GenJnlAllocation.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AllocationQuantity_GenJnlAllocation1</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>2</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AllocationPct_GenJnlAllocation">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AllocationPct_GenJnlAllocation.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AllocationPct_GenJnlAllocation</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>4</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox135">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox135</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Amount_GenJnlAllocation">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!Amount_GenJnlAllocation.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Amount_GenJnlAllocation</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>5</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox31">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox31</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="DimensionAllocationsCaption">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!DimensionAllocationsCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>DimensionAllocationsCaption</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AllocationDimText">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AllocationDimText.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AllocationDimText</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>14</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox32">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox32</rd:DefaultName>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>6</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="AllocationDimText1">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!AllocationDimText.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>AllocationDimText1</rd:DefaultName>
                                            <Style>
                                              <Border />
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>14</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox151">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!WarningCaption.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                      <Format>d</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>1</ZIndex>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox153">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Fields!ErrorTextNumber.Value</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Left</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <Style>
                                              <VerticalAlign>Middle</VerticalAlign>
                                              <PaddingLeft>0.075cm</PaddingLeft>
                                              <PaddingRight>0.075cm</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>17</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell />
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox38">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox38</rd:DefaultName>
                                            <ZIndex>15</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox42">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox42</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox39">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox39</rd:DefaultName>
                                            <ZIndex>14</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox40">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox40</rd:DefaultName>
                                            <ZIndex>13</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox109">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox109</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox57">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox57</rd:DefaultName>
                                            <ZIndex>12</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox59">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox59</rd:DefaultName>
                                            <ZIndex>11</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox60">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox60</rd:DefaultName>
                                            <ZIndex>10</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox61">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox61</rd:DefaultName>
                                            <ZIndex>9</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox62">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox62</rd:DefaultName>
                                            <ZIndex>8</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox63">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox63</rd:DefaultName>
                                            <ZIndex>7</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox64">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox64</rd:DefaultName>
                                            <ZIndex>6</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox54">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox54</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox65">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox65</rd:DefaultName>
                                            <ZIndex>5</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox136">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox136</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox66">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox66</rd:DefaultName>
                                            <ZIndex>4</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox67">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox67</rd:DefaultName>
                                            <ZIndex>3</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox126">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox126</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox99">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox99</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox68">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox68</rd:DefaultName>
                                            <ZIndex>2</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                  <TablixRow>
                                    <Height>0.42301cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox3">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox3</rd:DefaultName>
                                            <ZIndex>27</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox44">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox44</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox4">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox4</rd:DefaultName>
                                            <ZIndex>26</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox5">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox5</rd:DefaultName>
                                            <ZIndex>25</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox110">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox110</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox6">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox6</rd:DefaultName>
                                            <ZIndex>24</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox7">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox7</rd:DefaultName>
                                            <ZIndex>23</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox8">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style />
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox8</rd:DefaultName>
                                            <ZIndex>22</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox152">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=First(Fields!TotalLCYCaption.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                      <Format>=Fields!AmountLCY_GenJnlLineFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style>
                                                  <TextAlign>Right</TextAlign>
                                                </Style>
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox152</rd:DefaultName>
                                            <ZIndex>21</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                          <ColSpan>3</ColSpan>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell />
                                      <TablixCell />
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox156">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox156</rd:DefaultName>
                                            <ZIndex>20</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox58">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox58</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox157">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=last(Fields!AmountLCY.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                      <Format>=Fields!AmountLCY_GenJnlLineFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox157</rd:DefaultName>
                                            <ZIndex>19</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox137">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox137</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox158">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox158</rd:DefaultName>
                                            <ZIndex>18</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox159">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox159</rd:DefaultName>
                                            <ZIndex>17</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox127">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox127</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="Textbox100">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>Textbox100</rd:DefaultName>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="textbox160">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto">=Last(Fields!BalanceLCY.Value)</Value>
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <FontWeight>Bold</FontWeight>
                                                      <Format>=Fields!BalanceLCY_GenJnlLineFormat.Value</Format>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <rd:DefaultName>textbox160</rd:DefaultName>
                                            <ZIndex>16</ZIndex>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                </TablixRows>
                              </TablixBody>
                              <TablixColumnHierarchy>
                                <TablixMembers>
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!HideReconcillation.Value=True,True,False)</Hidden>
                                    </Visibility>
                                  </TablixMember>
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!HideReconcillation.Value=True,False,True)</Hidden>
                                    </Visibility>
                                  </TablixMember>
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!HideReconcillation.Value=True,False,True)</Hidden>
                                    </Visibility>
                                  </TablixMember>
                                  <TablixMember>
                                    <Visibility>
                                      <Hidden>=IIF(Fields!HideReconcillation.Value=True,True,False)</Hidden>
                                    </Visibility>
                                  </TablixMember>
                                </TablixMembers>
                              </TablixColumnHierarchy>
                              <TablixRowHierarchy>
                                <TablixMembers>
                                  <TablixMember>
                                    <Group Name="Table1_Group1">
                                      <GroupExpressions>
                                        <GroupExpression>=Fields!JnlTmplName_GenJnlLine.Value</GroupExpression>
                                        <GroupExpression>=Fields!JnlBatchName_GenJnlLine.Value</GroupExpression>
                                        <GroupExpression>=Fields!Name_GenJnlBatch.Value</GroupExpression>
                                      </GroupExpressions>
                                    </Group>
                                    <TablixMembers>
                                      <TablixMember>
                                        <Visibility>
                                          <Hidden>=IIF(Fields!JnlTmplName_GenJnlLine.Value&lt;&gt;"",False,True)</Hidden>
                                        </Visibility>
                                        <KeepWithGroup>After</KeepWithGroup>
                                        <RepeatOnNewPage>true</RepeatOnNewPage>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <Visibility>
                                          <Hidden>=IIF(Fields!Name_GenJnlBatch.Value&lt;&gt;"",False,True)</Hidden>
                                        </Visibility>
                                        <KeepWithGroup>After</KeepWithGroup>
                                        <RepeatOnNewPage>true</RepeatOnNewPage>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <KeepWithGroup>After</KeepWithGroup>
                                        <RepeatOnNewPage>true</RepeatOnNewPage>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <Visibility>
                                          <Hidden>=IIF(Fields!GenJnlLineFilter.Value&lt;&gt;"",False,True)</Hidden>
                                        </Visibility>
                                        <KeepWithGroup>After</KeepWithGroup>
                                        <RepeatOnNewPage>true</RepeatOnNewPage>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <KeepWithGroup>After</KeepWithGroup>
                                        <RepeatOnNewPage>true</RepeatOnNewPage>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <KeepWithGroup>After</KeepWithGroup>
                                        <RepeatOnNewPage>true</RepeatOnNewPage>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <KeepWithGroup>After</KeepWithGroup>
                                        <RepeatOnNewPage>true</RepeatOnNewPage>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <Group Name="Table1_Details_Group">
                                          <DataElementName>Detail</DataElementName>
                                        </Group>
                                        <TablixMembers>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF((Previous(Last(Fields!LineNo_GenJnlLine.Value))=Fields!LineNo_GenJnlLine.Value)and(previous(Last(Fields!JnlBatchName_GenJnlLine.Value))=Fields!JnlBatchName_GenJnlLine.Value)and(previous(Last(Fields!JnlTmplName_GenJnlLine.Value))=Fields!JnlTmplName_GenJnlLine.Value),TRUE,FALSE)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF(Fields!DimText.Value&lt;&gt;"" AND Fields!Number_DimensionLoop.Value = "1",False,True)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF(Fields!DimText.Value&lt;&gt;"" AND Fields!Number_DimensionLoop.Value &gt; 1,False,True)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF(Previous(Fields!AccountNoCaption_GenJnlAllocation.Value) = Fields!AccountNoCaption_GenJnlAllocation.Value OR NOT Fields!Recurring_GenJnlTemplate.Value,TRUE,FALSE)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF(((Previous(Fields!JournalLineNo_GenJnlAllocation.Value) = Fields!JournalLineNo_GenJnlAllocation.Value) AND (Previous(Fields!LineNo_GenJnlAllocation.Value) = Fields!LineNo_GenJnlAllocation.Value) AND ((Previous(Fields!JournalBatchName_GenJnlAllocation.Value) = Fields!JournalBatchName_GenJnlAllocation.Value)) OR (NOT Fields!Recurring_GenJnlTemplate.Value)),True,False)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF(Fields!AllocationDimText.Value&lt;&gt;"" AND Fields!Number_DimensionLoopAllocations.Value = "1",False,True)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF(Fields!AllocationDimText.Value&lt;&gt;"" AND Fields!Number_DimensionLoopAllocations.Value &gt; 1,False,True)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                          <TablixMember>
                                            <Visibility>
                                              <Hidden>=IIF(Fields!ErrorTextNumber.Value&lt;&gt;"",False,True)</Hidden>
                                            </Visibility>
                                          </TablixMember>
                                        </TablixMembers>
                                        <DataElementName>Detail_Collection</DataElementName>
                                        <DataElementOutput>Output</DataElementOutput>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <KeepWithGroup>Before</KeepWithGroup>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                      <TablixMember>
                                        <KeepWithGroup>Before</KeepWithGroup>
                                        <KeepTogether>true</KeepTogether>
                                      </TablixMember>
                                    </TablixMembers>
                                  </TablixMember>
                                </TablixMembers>
                              </TablixRowHierarchy>
                              <DataSetName>DataSet_Result</DataSetName>
                              <Filters>
                                <Filter>
                                  <FilterExpression>=Fields!JnlTmplName_GenJnlLine.Value</FilterExpression>
                                  <Operator>GreaterThan</Operator>
                                  <FilterValues>
                                    <FilterValue>=""</FilterValue>
                                  </FilterValues>
                                </Filter>
                                <Filter>
                                  <FilterExpression>=Fields!Name_GenJnlBatch.Value</FilterExpression>
                                  <Operator>GreaterThan</Operator>
                                  <FilterValues>
                                    <FilterValue>=""</FilterValue>
                                  </FilterValues>
                                </Filter>
                              </Filters>
                              <Top>0.31746cm</Top>
                              <Height>8.17029cm</Height>
                              <Width>30.98418cm</Width>
                              <ZIndex>1</ZIndex>
                              <Visibility>
                                <Hidden>=IIF(Fields!LineNo_GenJnlLine.Value&lt;&gt;0,False,True)</Hidden>
                              </Visibility>
                              <DataElementOutput>NoOutput</DataElementOutput>
                              <Style />
                            </Tablix>
                            <Textbox Name="NewPage">
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=IIF(Code.IsNewPage(Fields!JnlTmplName_GenJnlBatch.Value,Fields!Name_GenJnlBatch.Value),TRUE,FALSE)</Value>
                                      <Style />
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <Height>0.07937cm</Height>
                              <Width>25.62007cm</Width>
                              <ZIndex>2</ZIndex>
                              <Visibility>
                                <Hidden>true</Hidden>
                              </Visibility>
                              <Style>
                                <PaddingLeft>2pt</PaddingLeft>
                                <PaddingRight>2pt</PaddingRight>
                                <PaddingTop>2pt</PaddingTop>
                                <PaddingBottom>2pt</PaddingBottom>
                              </Style>
                            </Textbox>
                            <Textbox Name="PreparedBy1">
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">Prepared By:</Value>
                                      <Style>
                                        <FontSize>7pt</FontSize>
                                        <FontWeight>Bold</FontWeight>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <Top>13.40855cm</Top>
                              <Left>0.07938cm</Left>
                              <Height>0.423cm</Height>
                              <Width>2.57722cm</Width>
                              <ZIndex>3</ZIndex>
                              <Visibility>
                                <Hidden>=IIF(Fields!HideReconcillation.Value=True,False,True)</Hidden>
                              </Visibility>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <VerticalAlign>Middle</VerticalAlign>
                              </Style>
                            </Textbox>
                            <Textbox Name="COMPANYNAME15">
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=First(Fields!PreparedBy.Value)</Value>
                                      <Style>
                                        <FontSize>7pt</FontSize>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <Top>14.32544cm</Top>
                              <Left>0.07938cm</Left>
                              <Height>0.423cm</Height>
                              <Width>5.77487cm</Width>
                              <ZIndex>4</ZIndex>
                              <Visibility>
                                <Hidden>=IIF(Fields!HideReconcillation.Value=True,False,True)</Hidden>
                              </Visibility>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <TopBorder>
                                  <Color>Black</Color>
                                  <Style>Solid</Style>
                                  <Width>1pt</Width>
                                </TopBorder>
                                <VerticalAlign>Middle</VerticalAlign>
                              </Style>
                            </Textbox>
                            <Textbox Name="ConfirmedBy1">
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">Confirmed By:</Value>
                                      <Style>
                                        <FontSize>7pt</FontSize>
                                        <FontWeight>Bold</FontWeight>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <Top>13.40855cm</Top>
                              <Left>8.61426cm</Left>
                              <Height>0.423cm</Height>
                              <Width>2.57722cm</Width>
                              <ZIndex>5</ZIndex>
                              <Visibility>
                                <Hidden>=IIF(Fields!HideReconcillation.Value=True,False,True)</Hidden>
                              </Visibility>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <VerticalAlign>Middle</VerticalAlign>
                              </Style>
                            </Textbox>
                            <Textbox Name="COMPANYNAME17">
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=First(Fields!ConfirmedBy.Value)</Value>
                                      <Style>
                                        <FontSize>7pt</FontSize>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <Top>14.29016cm</Top>
                              <Left>8.61426cm</Left>
                              <Height>0.423cm</Height>
                              <Width>5.77487cm</Width>
                              <ZIndex>6</ZIndex>
                              <Visibility>
                                <Hidden>=IIF(Fields!HideReconcillation.Value=True,False,True)</Hidden>
                              </Visibility>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <TopBorder>
                                  <Color>Black</Color>
                                  <Style>Solid</Style>
                                  <Width>1pt</Width>
                                </TopBorder>
                                <VerticalAlign>Middle</VerticalAlign>
                              </Style>
                            </Textbox>
                          </ReportItems>
                          <KeepTogether>true</KeepTogether>
                          <Style>
                            <Border>
                              <Style>None</Style>
                            </Border>
                          </Style>
                        </Rectangle>
                      </CellContents>
                    </TablixCell>
                  </TablixCells>
                </TablixRow>
              </TablixRows>
            </TablixBody>
            <TablixColumnHierarchy>
              <TablixMembers>
                <TablixMember />
              </TablixMembers>
            </TablixColumnHierarchy>
            <TablixRowHierarchy>
              <TablixMembers>
                <TablixMember>
                  <Group Name="list1_Details_Group">
                    <GroupExpressions>
                      <GroupExpression>=Fields!JnlTemplateName_GenJnlBatch.Value</GroupExpression>
                      <GroupExpression>=Fields!JnlName_GenJnlBatch.Value</GroupExpression>
                    </GroupExpressions>
                    <PageBreak>
                      <BreakLocation>Between</BreakLocation>
                    </PageBreak>
                  </Group>
                  <DataElementOutput>Output</DataElementOutput>
                  <KeepTogether>true</KeepTogether>
                </TablixMember>
              </TablixMembers>
            </TablixRowHierarchy>
            <DataSetName>DataSet_Result</DataSetName>
            <PageBreak>
              <BreakLocation>End</BreakLocation>
            </PageBreak>
            <Filters>
              <Filter>
                <FilterExpression>=Fields!JnlTemplateName_GenJnlBatch.Value</FilterExpression>
                <Operator>GreaterThan</Operator>
                <FilterValues>
                  <FilterValue>=""</FilterValue>
                </FilterValues>
              </Filter>
              <Filter>
                <FilterExpression>=Fields!JnlName_GenJnlBatch.Value</FilterExpression>
                <Operator>GreaterThan</Operator>
                <FilterValues>
                  <FilterValue>=""</FilterValue>
                </FilterValues>
              </Filter>
            </Filters>
            <Height>14.74844cm</Height>
            <Width>31.89688cm</Width>
            <Style />
          </Tablix>
        </ReportItems>
        <Height>14.74844cm</Height>
        <Style />
      </Body>
      <Width>31.89688cm</Width>
      <Page>
        <PageHeader>
          <Height>1.26984cm</Height>
          <PrintOnFirstPage>true</PrintOnFirstPage>
          <PrintOnLastPage>true</PrintOnLastPage>
          <ReportItems>
            <Textbox Name="GeneralJournalTestCaption1">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value EvaluationMode="Auto">=Fields!GeneralJnlTestCaption.Value</Value>
                      <Style>
                        <FontSize>8pt</FontSize>
                        <FontWeight>Bold</FontWeight>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style />
                </Paragraph>
              </Paragraphs>
              <Height>0.423cm</Height>
              <Width>7.5cm</Width>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="COMPANYNAME13">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value EvaluationMode="Auto">=Fields!CompanyName.Value</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style />
                </Paragraph>
              </Paragraphs>
              <Top>0.423cm</Top>
              <Height>0.423cm</Height>
              <Width>7.5cm</Width>
              <ZIndex>1</ZIndex>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="ExecutionTimeTextBox">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value EvaluationMode="Auto">=Globals!ExecutionTime</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                        <Format>g</Format>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style>
                    <TextAlign>Right</TextAlign>
                  </Style>
                </Paragraph>
              </Paragraphs>
              <Left>21.49272cm</Left>
              <Height>0.423cm</Height>
              <Width>4.1373cm</Width>
              <ZIndex>2</ZIndex>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="UserIdTextBox">
              <CanGrow>true</CanGrow>
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value EvaluationMode="Auto">=User!UserID</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style>
                    <TextAlign>Right</TextAlign>
                  </Style>
                </Paragraph>
              </Paragraphs>
              <Top>0.846cm</Top>
              <Left>20.38002cm</Left>
              <Height>0.42384cm</Height>
              <Width>5.25cm</Width>
              <ZIndex>3</ZIndex>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="textbox2">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value EvaluationMode="Auto">="Page "&amp;Code.GetGroupPageNumber(ReportItems!NewPage.Value,Globals!PageNumber)</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style>
                    <TextAlign>Right</TextAlign>
                  </Style>
                </Paragraph>
              </Paragraphs>
              <Top>0.423cm</Top>
              <Left>23.08003cm</Left>
              <Height>0.423cm</Height>
              <Width>2.54999cm</Width>
              <ZIndex>4</ZIndex>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
          </ReportItems>
          <Style />
        </PageHeader>
        <PageHeight>21cm</PageHeight>
        <PageWidth>29.7cm</PageWidth>
        <InteractiveHeight>11in</InteractiveHeight>
        <InteractiveWidth>8.5in</InteractiveWidth>
        <LeftMargin>2cm</LeftMargin>
        <RightMargin>2cm</RightMargin>
        <TopMargin>1.5cm</TopMargin>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function

Shared offset as Integer
Shared newPage as Object 
Shared currentgroup1 as Object
Shared currentgroup2 as Object
Public Function GetGroupPageNumber(NewPage as Boolean, pagenumber as Integer) as Object
If NewPage
      offset = pagenumber  - 1
End If
  Return  pagenumber - offset
End Function

Public Function IsNewPage(group1 as Object, group2 as Object) As Boolean
newPage = FALSE
If Not (group1 = currentgroup1)
   NewPage = TRUE
   currentgroup2 = group2
   currentgroup1 = group1
ELSE
   If Not (group2 = currentgroup2)
      NewPage = TRUE
      currentgroup2 = group2
   End If
End If
Return NewPage
End Function</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Cm</rd:ReportUnitType>
  <rd:ReportID>b1bc7310-cbfb-4276-96c7-f8e77bae4fba</rd:ReportID>
</Report>
    END_OF_RDLDATA
  }
}

OBJECT Report 1401 Check
{
  OBJECT-PROPERTIES
  {
    Date=08/16/18;
    Time=11:04:05 AM;
    Modified=Yes;
    Version List=NAVW19.00.00.43897,XCELER8.005,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    Permissions=TableData 270=m;
    CaptionML=ENU=Check;
    OnPreReport=BEGIN
                  InitTextVariable;
                END;

  }
  DATASET
  {
    { 9788;    ;DataItem;VoidGenJnlLine      ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Posting Date,Document No.);
               OnPreDataItem=BEGIN
                               IF CurrReport.PREVIEW THEN
                                 ERROR(Text000);

                               IF UseCheckNo = '' THEN
                                 ERROR(Text001);

                               IF TestPrint THEN
                                 CurrReport.BREAK;

                               IF NOT ReprintChecks THEN
                                 CurrReport.BREAK;

                               IF (GETFILTER("Line No.") <> '') OR (GETFILTER("Document No.") <> '') THEN
                                 ERROR(
                                   Text002,FIELDCAPTION("Line No."),FIELDCAPTION("Document No."));
                               SETRANGE("Bank Payment Type","Bank Payment Type"::"Computer Check");
                               SETRANGE("Check Printed",TRUE);
                             END;

               OnAfterGetRecord=BEGIN
                                  CheckManagement.VoidCheck(VoidGenJnlLine);
                                END;

               ReqFilterFields=Journal Template Name,Journal Batch Name,Posting Date }

    { 3808;    ;DataItem;GenJnlLine          ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Posting Date,Document No.);
               OnPreDataItem=BEGIN
                               COPY(VoidGenJnlLine);
                               CompanyInfo.GET;
                               IF NOT TestPrint THEN BEGIN
                                 FormatAddr.Company(CompanyAddr,CompanyInfo);
                                 BankAcc2.GET(BankAcc2."No.");
                                 BankAcc2.TESTFIELD(Blocked,FALSE);
                                 COPY(VoidGenJnlLine);
                                 SETRANGE("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                 SETRANGE("Check Printed",FALSE);
                               END ELSE BEGIN
                                 CLEAR(CompanyAddr);
                                 FOR i := 1 TO 5 DO
                                   CompanyAddr[i] := Text003;
                               END;
                               ChecksPrinted := 0;

                               SETRANGE("Account Type","Account Type"::"Fixed Asset");
                               IF FIND('-') THEN
                                 FIELDERROR("Account Type");
                               SETRANGE("Account Type");
                             END;

               OnAfterGetRecord=VAR
                                  TableID@1001 : ARRAY [10] OF Integer;
                                  No@1000 : ARRAY [10] OF Code[20];
                                BEGIN
                                  IF OneCheckPrVendor AND ("Currency Code" <> '') AND
                                     ("Currency Code" <> Currency.Code)
                                  THEN BEGIN
                                    Currency.GET("Currency Code");
                                    Currency.TESTFIELD("Conv. LCY Rndg. Debit Acc.");
                                    Currency.TESTFIELD("Conv. LCY Rndg. Credit Acc.");
                                  END;

                                  IF "Bank Payment Type" = "Bank Payment Type"::"Computer Check" THEN
                                    TESTFIELD("Exported to Payment File",FALSE);

                                  IF NOT TestPrint THEN BEGIN
                                    IF Amount = 0 THEN
                                      CurrReport.SKIP;

                                    CheckAmount := GenJnlLine.Amount; // PHP Start WHT Computation
                                    TESTFIELD("Bal. Account Type","Bal. Account Type"::"Bank Account");
                                    IF "Bal. Account No." <> BankAcc2."No." THEN
                                      CurrReport.SKIP;

                                    IF ("Account No." <> '') AND ("Bal. Account No." <> '') THEN BEGIN
                                      BalancingType := "Account Type";
                                      BalancingNo := "Account No.";
                                      RemainingAmount := Amount;
                                      IF OneCheckPrVendor THEN BEGIN
                                        ApplyMethod := ApplyMethod::MoreLinesOneEntry;
                                        GenJnlLine2.RESET;
                                        GenJnlLine2.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
                                        GenJnlLine2.SETRANGE("Journal Template Name","Journal Template Name");
                                        GenJnlLine2.SETRANGE("Journal Batch Name","Journal Batch Name");
                                        GenJnlLine2.SETRANGE("Posting Date","Posting Date");
                                        GenJnlLine2.SETRANGE("Document No.","Document No.");
                                        GenJnlLine2.SETRANGE("Account Type","Account Type");
                                        GenJnlLine2.SETRANGE("Account No.","Account No.");
                                        GenJnlLine2.SETRANGE("Bal. Account Type","Bal. Account Type");
                                        GenJnlLine2.SETRANGE("Bal. Account No.","Bal. Account No.");
                                        GenJnlLine2.SETRANGE("Bank Payment Type","Bank Payment Type");
                                        GenJnlLine2.FIND('-');
                                        RemainingAmount := 0;
                                      END ELSE
                                        IF "Applies-to Doc. No." <> '' THEN
                                          ApplyMethod := ApplyMethod::OneLineOneEntry
                                        ELSE
                                          IF "Applies-to ID" <> '' THEN
                                            ApplyMethod := ApplyMethod::OneLineID
                                          ELSE
                                            ApplyMethod := ApplyMethod::Payment;
                                    END ELSE
                                      IF "Account No." = '' THEN
                                        FIELDERROR("Account No.",Text004)
                                      ELSE
                                        FIELDERROR("Bal. Account No.",Text004);

                                    CLEAR(CheckToAddr);
                                    ContactText := '';
                                    CLEAR(SalesPurchPerson);
                                    CASE BalancingType OF
                                      BalancingType::"G/L Account":
                                        CheckToAddr[1] := Description;
                                      BalancingType::Customer:
                                        BEGIN
                                          Cust.GET(BalancingNo);
                                          IF Cust.Blocked = Cust.Blocked::All THEN
                                            ERROR(Text064,Cust.FIELDCAPTION(Blocked),Cust.Blocked,Cust.TABLECAPTION,Cust."No.");
                                          Cust.Contact := '';
                                          FormatAddr.Customer(CheckToAddr,Cust);
                                          IF BankAcc2."Currency Code" <> "Currency Code" THEN
                                            ERROR(Text005);
                                          IF Cust."Salesperson Code" <> '' THEN BEGIN
                                            ContactText := Text006;
                                            SalesPurchPerson.GET(Cust."Salesperson Code");
                                          END;
                                          // PHP  Start - Change the CheckToAddr
                                          IF CustBankAccounts.GET("Account No.","Recipient Bank Account") THEN BEGIN
                                            CLEAR(CheckToAddr);
                                            FormatAddr.CustBankAcc(CheckToAddr, CustBankAccounts);
                                          END;
                                          // PHP End
                                        END;
                                      BalancingType::Vendor:
                                        BEGIN
                                          Vend.GET(BalancingNo);
                                          IF Vend.Blocked IN [Vend.Blocked::All,Vend.Blocked::Payment] THEN
                                            ERROR(Text064,Vend.FIELDCAPTION(Blocked),Vend.Blocked,Vend.TABLECAPTION,Vend."No.");
                                          Vend.Contact := '';
                                          FormatAddr.Vendor(CheckToAddr,Vend);
                                          IF BankAcc2."Currency Code" <> "Currency Code" THEN
                                            ERROR(Text005);
                                          IF Vend."Purchaser Code" <> '' THEN BEGIN
                                            ContactText := Text007;
                                            SalesPurchPerson.GET(Vend."Purchaser Code");
                                          END;
                                          //php start
                                          CalcCheck(GenJnlLine); // PHP Start WHT Calculation
                                          //nPHP Start - Change the CheckToAddr
                                          IF VendorBankAccount.GET("Account No.","Recipient Bank Account") THEN BEGIN
                                            CLEAR(CheckToAddr);
                                            RecipientBankNo := VendorBankAccount.Code;
                                            FormatAddr.VendBankAcc(CheckToAddr, VendorBankAccount);
                                          END;
                                          //PHP End
                                        END;
                                      BalancingType::"Bank Account":
                                        BEGIN
                                          BankAcc.GET(BalancingNo);
                                          BankAcc.TESTFIELD(Blocked,FALSE);
                                          BankAcc.Contact := '';
                                          FormatAddr.BankAcc(CheckToAddr,BankAcc);
                                          IF BankAcc2."Currency Code" <> BankAcc."Currency Code" THEN
                                            ERROR(Text008);
                                          IF BankAcc."Our Contact Code" <> '' THEN BEGIN
                                            ContactText := Text009;
                                            SalesPurchPerson.GET(BankAcc."Our Contact Code");
                                          END;
                                        END;
                                    END;

                                    CheckDateText := FORMAT("Posting Date",0,'<month,2>-<day,2>-<year4>');
                                  END ELSE BEGIN
                                    IF ChecksPrinted > 0 THEN
                                      CurrReport.BREAK;
                                    BalancingType := BalancingType::Vendor;
                                    BalancingNo := Text010;
                                    CLEAR(CheckToAddr);
                                    FOR i := 1 TO 5 DO
                                      CheckToAddr[i] := Text003;
                                    ContactText := '';
                                    CLEAR(SalesPurchPerson);
                                    CheckNoText := Text011;
                                    CheckDateText := Text012;
                                  END;

                                  // PHP Start Check Dim Value Posting
                                  TableID[1] := DimMgt.TypeToTableID1(GenJnlLine."Account Type");
                                  No[1] := GenJnlLine."Account No.";
                                  TableID[2] := DimMgt.TypeToTableID1(GenJnlLine."Bal. Account Type");
                                  No[2] := GenJnlLine."Bal. Account No.";
                                  TableID[3] := DATABASE::Job;
                                  No[3] := GenJnlLine."Job No.";
                                  TableID[4] := DATABASE::"Salesperson/Purchaser";
                                  No[4] := GenJnlLine."Salespers./Purch. Code";
                                  TableID[5] := DATABASE::Campaign;
                                  No[5] := GenJnlLine."Campaign No.";
                                   IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN
                                    ThrowGenJnlLineError(GenJnlLine,Text066,DimMgt.GetDimValuePostingErr);

                                  WHTManagement.CheckApplicationPaymentWHT(GenJnlLine); // WHT Validation
                                  // PHP End
                                END;

               OnPostDataItem=BEGIN
                                // Validation
                                // PHP Start
                                 GenJnlLine.TESTFIELD("Voucher No.");
                                 GenJnlLine.TESTFIELD("Bal. Account Type", GenJnlLine."Bal. Account Type"::"Bank Account");
                                 GenJnlLine.TESTFIELD("Bal. Account No.");
                                 GenJnlLine.TESTFIELD("Bank Payment Type", GenJnlLine."Bank Payment Type"::"Computer Check");
                                // PHP End
                              END;
                               }

    { 43  ;1   ;Column  ;JournalTempName_GenJnlLine;
               SourceExpr="Journal Template Name" }

    { 44  ;1   ;Column  ;JournalBatchName_GenJnlLine;
               SourceExpr="Journal Batch Name" }

    { 45  ;1   ;Column  ;LineNo_GenJnlLine   ;
               SourceExpr="Line No." }

    { 35  ;1   ;Column  ;Amount_GenJnlLine   ;
               SourceExpr=GenJnlLine.Amount }

    { 47  ;1   ;Column  ;Amount_GenJnlLine2  ;
               SourceExpr=CheckAmount }

    { 38  ;1   ;Column  ;DocNo_GenJnlLine    ;
               SourceExpr=GenJnlLine."Document No." }

    { 39  ;1   ;Column  ;ExtDocNo_GenJnlLine ;
               SourceExpr=GenJnlLine."External Document No." }

    { 41  ;1   ;Column  ;VoucherNo_GenJnlLine;
               SourceExpr=GenJnlLine."Voucher No." }

    { 40  ;1   ;Column  ;DocDate_GenJnlLine  ;
               SourceExpr=GenJnlLine."Document No." }

    { 1159;1   ;DataItem;CheckPages          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               FirstPage := TRUE;
                               FoundLast := FALSE;
                               TotalLineAmount := 0;
                               TotalLineDiscount := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF FoundLast THEN
                                    CurrReport.BREAK;

                                  UseCheckNo := INCSTR(UseCheckNo);
                                  IF NOT TestPrint THEN
                                    CheckNoText := UseCheckNo
                                  ELSE
                                    CheckNoText := Text011;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT TestPrint THEN BEGIN
                                  // Begin Original Code
                                  IF UseCheckNo <> GenJnlLine."Document No." THEN BEGIN
                                    GenJnlLine3.RESET;
                                    GenJnlLine3.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
                                    GenJnlLine3.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                                    GenJnlLine3.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                                    GenJnlLine3.SETRANGE("Posting Date",GenJnlLine."Posting Date");
                                    GenJnlLine3.SETRANGE("Document No.",UseCheckNo);
                                    IF GenJnlLine3.FIND('-') THEN
                                      GenJnlLine3.FIELDERROR("Document No.",STRSUBSTNO(Text013,UseCheckNo));
                                  END;
                                  // End Original Code

                                  IF ApplyMethod <> ApplyMethod::MoreLinesOneEntry THEN BEGIN
                                    GenJnlLine3 := GenJnlLine;
                                    GenJnlLine3.TESTFIELD("Posting No. Series",'');
                                    GenJnlLine3."Document No." := UseCheckNo;
                                    GenJnlLine3."Check Printed" := TRUE;
                                    GenJnlLine3.MODIFY;
                                  END ELSE BEGIN
                                    IF GenJnlLine2.FIND('-') THEN BEGIN
                                      HighestLineNo := GenJnlLine2."Line No.";
                                      REPEAT
                                        IF GenJnlLine2."Line No." > HighestLineNo THEN
                                          HighestLineNo := GenJnlLine2."Line No.";
                                        GenJnlLine3 := GenJnlLine2;
                                        GenJnlLine3.TESTFIELD("Posting No. Series",'');
                                        GenJnlLine3."Bal. Account No." := '';
                                        GenJnlLine3."Bank Payment Type" := GenJnlLine3."Bank Payment Type"::" ";
                                        GenJnlLine3."Document No." := UseCheckNo;
                                        GenJnlLine3."Check Printed" := TRUE;
                                        GenJnlLine3.VALIDATE(Amount);
                                        GenJnlLine3.MODIFY;
                                      UNTIL GenJnlLine2.NEXT = 0;
                                    END;

                                    GenJnlLine3.RESET;
                                    GenJnlLine3 := GenJnlLine;
                                    GenJnlLine3.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                                    GenJnlLine3.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                                    GenJnlLine3."Line No." := HighestLineNo;
                                    IF GenJnlLine3.NEXT = 0 THEN
                                      GenJnlLine3."Line No." := HighestLineNo + 10000
                                    ELSE BEGIN
                                      WHILE GenJnlLine3."Line No." = HighestLineNo + 1 DO BEGIN
                                        HighestLineNo := GenJnlLine3."Line No.";
                                        IF GenJnlLine3.NEXT = 0 THEN
                                          GenJnlLine3."Line No." := HighestLineNo + 20000;
                                      END;
                                      GenJnlLine3."Line No." := (GenJnlLine3."Line No." + HighestLineNo) DIV 2;
                                    END;
                                    GenJnlLine3.INIT;
                                    GenJnlLine3.VALIDATE("Posting Date",GenJnlLine."Posting Date");
                                    GenJnlLine3."Document Type" := GenJnlLine."Document Type";
                                    GenJnlLine3."Document No." := UseCheckNo;
                                    GenJnlLine3."Account Type" := GenJnlLine3."Account Type"::"Bank Account";
                                    GenJnlLine3.VALIDATE("Account No.",BankAcc2."No.");
                                    IF BalancingType <> BalancingType::"G/L Account" THEN
                                      GenJnlLine3.Description := STRSUBSTNO(Text014,SELECTSTR(BalancingType + 1,Text062),BalancingNo);
                                    GenJnlLine3.VALIDATE(Amount,-TotalLineAmount);
                                    GenJnlLine3."Bank Payment Type" := GenJnlLine3."Bank Payment Type"::"Computer Check";
                                    GenJnlLine3."Check Printed" := TRUE;
                                    GenJnlLine3."Source Code" := GenJnlLine."Source Code";
                                    GenJnlLine3."Reason Code" := GenJnlLine."Reason Code";
                                    GenJnlLine3."Allow Zero-Amount Posting" := TRUE;
                                    GenJnlLine3.INSERT;
                                  END;
                                END;

                                BankAcc2."Last Check No." := UseCheckNo;
                                BankAcc2.MODIFY;

                                CLEAR(CheckManagement);
                              END;
                               }

    { 24  ;2   ;Column  ;CheckToAddr1        ;
               SourceExpr=CheckToAddr[1] }

    { 42  ;2   ;Column  ;CheckName2          ;
               SourceExpr=CheckName2 }

    { 52  ;2   ;Column  ;CheckDateText       ;
               SourceExpr=CheckDateText }

    { 96  ;2   ;Column  ;CheckNoText         ;
               SourceExpr=CheckNoText }

    { 37  ;2   ;Column  ;FirstPage           ;
               SourceExpr=FirstPage }

    { 36  ;2   ;Column  ;PreprintedStub      ;
               SourceExpr=PreprintedStub }

    { 89  ;2   ;Column  ;CheckNoTextCaption  ;
               SourceExpr=CheckNoTextCaptionLbl }

    { 4098;2   ;DataItem;PrintSettledLoop    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               MaxIteration=30;
               OnPreDataItem=BEGIN
                               IF NOT TestPrint THEN
                                 IF FirstPage THEN BEGIN
                                   FoundLast := TRUE;
                                   CASE ApplyMethod OF
                                     ApplyMethod::OneLineOneEntry:
                                       FoundLast := FALSE;
                                     ApplyMethod::OneLineID:
                                       CASE BalancingType OF
                                         BalancingType::Customer:
                                           BEGIN
                                             CustLedgEntry.RESET;
                                             CustLedgEntry.SETCURRENTKEY("Customer No.",Open,Positive);
                                             CustLedgEntry.SETRANGE("Customer No.",BalancingNo);
                                             CustLedgEntry.SETRANGE(Open,TRUE);
                                             CustLedgEntry.SETRANGE(Positive,TRUE);
                                             CustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
                                             FoundLast := NOT CustLedgEntry.FIND('-');
                                             IF FoundLast THEN BEGIN
                                               CustLedgEntry.SETRANGE(Positive,FALSE);
                                               FoundLast := NOT CustLedgEntry.FIND('-');
                                               FoundNegative := TRUE;
                                             END ELSE
                                               FoundNegative := FALSE;
                                           END;
                                         BalancingType::Vendor:
                                           BEGIN
                                             VendLedgEntry.RESET;
                                             VendLedgEntry.SETCURRENTKEY("Vendor No.",Open,Positive);
                                             VendLedgEntry.SETRANGE("Vendor No.",BalancingNo);
                                             VendLedgEntry.SETRANGE(Open,TRUE);
                                             VendLedgEntry.SETRANGE(Positive,TRUE);
                                             VendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
                                             FoundLast := NOT VendLedgEntry.FIND('-');
                                             IF FoundLast THEN BEGIN
                                               VendLedgEntry.SETRANGE(Positive,FALSE);
                                               FoundLast := NOT VendLedgEntry.FIND('-');
                                               FoundNegative := TRUE;
                                             END ELSE
                                               FoundNegative := FALSE;
                                           END;
                                       END;
                                     ApplyMethod::MoreLinesOneEntry:
                                       FoundLast := FALSE;
                                   END;
                                 END
                                 ELSE
                                   FoundLast := FALSE;

                               IF DocNo = '' THEN
                                 CurrencyCode2 := GenJnlLine."Currency Code";

                               IF PreprintedStub THEN
                                 TotalText := ''
                               ELSE
                                 TotalText := Text019;

                               IF GenJnlLine."Currency Code" <> '' THEN
                                 NetAmount := STRSUBSTNO(Text063,GenJnlLine."Currency Code")
                               ELSE BEGIN
                                 GLSetup.GET;
                                 NetAmount := STRSUBSTNO(Text063,GLSetup."LCY Code");
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT TestPrint THEN BEGIN
                                    IF FoundLast THEN BEGIN
                                      IF RemainingAmount <> 0 THEN BEGIN
                                        DocType := Text015;
                                        DocNo := '';
                                        ExtDocNo := '';
                                        DocDate := 0D;
                                        LineAmount := RemainingAmount;
                                        LineAmount2 := RemainingAmount;
                                        CurrentLineAmount := LineAmount2;
                                        LineDiscount := 0;
                                        RemainingAmount := 0;
                                      END ELSE
                                        CurrReport.BREAK;
                                    END ELSE
                                      CASE ApplyMethod OF
                                        ApplyMethod::OneLineOneEntry:
                                          BEGIN
                                            CASE BalancingType OF
                                              BalancingType::Customer:
                                                BEGIN
                                                  CustLedgEntry.RESET;
                                                  CustLedgEntry.SETCURRENTKEY("Document No.");
                                                  CustLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                                                  CustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                                                  CustLedgEntry.SETRANGE("Customer No.",BalancingNo);
                                                  CustLedgEntry.FIND('-');
                                                  CustUpdateAmounts(CustLedgEntry,RemainingAmount);
                                                END;
                                              BalancingType::Vendor:
                                                BEGIN
                                                  VendLedgEntry.RESET;
                                                  VendLedgEntry.SETCURRENTKEY("Document No.");
                                                  VendLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                                                  VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                                                  VendLedgEntry.SETRANGE("Vendor No.",BalancingNo);
                                                  VendLedgEntry.FIND('-');
                                                  VendUpdateAmounts(VendLedgEntry,RemainingAmount);
                                                END;
                                            END;
                                            RemainingAmount := RemainingAmount - LineAmount2;
                                            CurrentLineAmount := LineAmount2;
                                            FoundLast := TRUE;
                                          END;
                                        ApplyMethod::OneLineID:
                                          BEGIN
                                            CASE BalancingType OF
                                              BalancingType::Customer:
                                                BEGIN
                                                  CustUpdateAmounts(CustLedgEntry,RemainingAmount);
                                                  FoundLast := (CustLedgEntry.NEXT = 0) OR (RemainingAmount <= 0);
                                                  IF FoundLast AND NOT FoundNegative THEN BEGIN
                                                    CustLedgEntry.SETRANGE(Positive,FALSE);
                                                    FoundLast := NOT CustLedgEntry.FIND('-');
                                                    FoundNegative := TRUE;
                                                  END;
                                                END;
                                              BalancingType::Vendor:
                                                BEGIN
                                                  VendUpdateAmounts(VendLedgEntry,RemainingAmount);
                                                  FoundLast := (VendLedgEntry.NEXT = 0) OR (RemainingAmount <= 0);
                                                  IF FoundLast AND NOT FoundNegative THEN BEGIN
                                                    VendLedgEntry.SETRANGE(Positive,FALSE);
                                                    FoundLast := NOT VendLedgEntry.FIND('-');
                                                    FoundNegative := TRUE;
                                                  END;
                                                END;
                                            END;
                                            RemainingAmount := RemainingAmount - LineAmount2;
                                            CurrentLineAmount := LineAmount2;
                                          END;
                                        ApplyMethod::MoreLinesOneEntry:
                                          BEGIN
                                            CurrentLineAmount := GenJnlLine2.Amount;
                                            LineAmount2 := CurrentLineAmount;

                                            IF GenJnlLine2."Applies-to ID" <> '' THEN
                                              ERROR(Text016);
                                            GenJnlLine2.TESTFIELD("Check Printed",FALSE);
                                            GenJnlLine2.TESTFIELD("Bank Payment Type",GenJnlLine2."Bank Payment Type"::"Computer Check");
                                            IF BankAcc2."Currency Code" <> GenJnlLine2."Currency Code" THEN
                                              ERROR(Text005);
                                            IF GenJnlLine2."Applies-to Doc. No." = '' THEN BEGIN
                                              DocType := Text015;
                                              DocNo := '';
                                              ExtDocNo := '';
                                              DocDate := 0D;
                                              LineAmount := CurrentLineAmount;
                                              LineDiscount := 0;
                                            END ELSE
                                              CASE BalancingType OF
                                                BalancingType::"G/L Account":
                                                  BEGIN
                                                    DocType := FORMAT(GenJnlLine2."Document Type");
                                                    DocNo := GenJnlLine2."Document No.";
                                                    ExtDocNo := GenJnlLine2."External Document No.";
                                                    LineAmount := CurrentLineAmount;
                                                    LineDiscount := 0;
                                                  END;
                                                BalancingType::Customer:
                                                  BEGIN
                                                    CustLedgEntry.RESET;
                                                    CustLedgEntry.SETCURRENTKEY("Document No.");
                                                    CustLedgEntry.SETRANGE("Document Type",GenJnlLine2."Applies-to Doc. Type");
                                                    CustLedgEntry.SETRANGE("Document No.",GenJnlLine2."Applies-to Doc. No.");
                                                    CustLedgEntry.SETRANGE("Customer No.",BalancingNo);
                                                    CustLedgEntry.FIND('-');
                                                    CustUpdateAmounts(CustLedgEntry,CurrentLineAmount);
                                                    LineAmount := CurrentLineAmount;
                                                  END;
                                                BalancingType::Vendor:
                                                  BEGIN
                                                    VendLedgEntry.RESET;
                                                    IF GenJnlLine2."Source Line No." <> 0 THEN
                                                      VendLedgEntry.SETRANGE("Entry No.",GenJnlLine2."Source Line No.")
                                                    ELSE BEGIN
                                                      VendLedgEntry.SETCURRENTKEY("Document No.");
                                                      VendLedgEntry.SETRANGE("Document Type",GenJnlLine2."Applies-to Doc. Type");
                                                      VendLedgEntry.SETRANGE("Document No.",GenJnlLine2."Applies-to Doc. No.");
                                                      VendLedgEntry.SETRANGE("Vendor No.",BalancingNo);
                                                    END;
                                                    VendLedgEntry.FIND('-');
                                                    VendUpdateAmounts(VendLedgEntry,CurrentLineAmount);
                                                    LineAmount := CurrentLineAmount;
                                                  END;
                                                BalancingType::"Bank Account":
                                                  BEGIN
                                                    DocType := FORMAT(GenJnlLine2."Document Type");
                                                    DocNo := GenJnlLine2."Document No.";
                                                    ExtDocNo := GenJnlLine2."External Document No.";
                                                    LineAmount := CurrentLineAmount;
                                                    LineDiscount := 0;
                                                  END;
                                              END;
                                            FoundLast := GenJnlLine2.NEXT = 0;
                                          END;
                                      END;

                                  //  TotalLineAmount := TotalLineAmount + LineAmount2; // PHP Original Code
                                    TotalLineAmount := TotalLineAmount + LineAmount2 - WHTAmount; // PHP Start WHT Computation
                                    TotalLineDiscount := TotalLineDiscount + LineDiscount;
                                  END ELSE BEGIN
                                    IF FoundLast THEN
                                      CurrReport.BREAK;
                                    FoundLast := TRUE;
                                    DocType := Text018;
                                    DocNo := Text010;
                                    ExtDocNo := Text010;
                                    LineAmount := 0;
                                    LineDiscount := 0;
                                  END;
                                END;
                                 }

    { 31  ;3   ;Column  ;NetAmount           ;
               SourceExpr=NetAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 4   ;3   ;Column  ;TotalLineDiscountLineDiscount;
               SourceExpr=TotalLineDiscount - LineDiscount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 26  ;3   ;Column  ;TotalLineAmountLineAmount;
               SourceExpr=TotalLineAmount - LineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 32  ;3   ;Column  ;TotalLineAmountLineAmount2;
               SourceExpr=TotalLineAmount - LineAmount2;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 113 ;3   ;Column  ;LineAmount          ;
               SourceExpr=LineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 114 ;3   ;Column  ;LineDiscount        ;
               SourceExpr=LineDiscount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 115 ;3   ;Column  ;LineAmountLineDiscount;
               SourceExpr=LineAmount + LineDiscount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 116 ;3   ;Column  ;DocNo               ;
               SourceExpr=DocNo }

    { 13  ;3   ;Column  ;DocDate             ;
               SourceExpr=DocDate }

    { 28  ;3   ;Column  ;CurrencyCode2       ;
               SourceExpr=CurrencyCode2;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 29  ;3   ;Column  ;CurrentLineAmount   ;
               SourceExpr=CurrentLineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 34  ;3   ;Column  ;ExtDocNo            ;
               SourceExpr=ExtDocNo }

    { 108 ;3   ;Column  ;LineAmountCaption   ;
               SourceExpr=LineAmountCaptionLbl }

    { 109 ;3   ;Column  ;LineDiscountCaption ;
               SourceExpr=LineDiscountCaptionLbl }

    { 110 ;3   ;Column  ;AmountCaption       ;
               SourceExpr=AmountCaptionLbl }

    { 111 ;3   ;Column  ;DocNoCaption        ;
               SourceExpr=DocNoCaptionLbl }

    { 14  ;3   ;Column  ;DocDateCaption      ;
               SourceExpr=DocDateCaptionLbl }

    { 25  ;3   ;Column  ;CurrencyCodeCaption ;
               SourceExpr=CurrencyCodeCaptionLbl }

    { 33  ;3   ;Column  ;YourDocNoCaption    ;
               SourceExpr=YourDocNoCaptionLbl }

    { 27  ;3   ;Column  ;TransportCaption    ;
               SourceExpr=TransportCaptionLbl }

    { 3931;2   ;DataItem;PrintCheck          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               MaxIteration=1;
               OnAfterGetRecord=VAR
                                  Decimals@1000 : Decimal;
                                  CheckLedgEntryAmount@1001 : Decimal;
                                BEGIN
                                  IF NOT TestPrint THEN BEGIN
                                    WITH GenJnlLine DO BEGIN
                                      CheckLedgEntry.INIT;
                                      CheckLedgEntry."Bank Account No." := BankAcc2."No.";
                                      CheckLedgEntry."Posting Date" := "Posting Date";
                                      CheckLedgEntry."Document Type" := "Document Type";
                                      CheckLedgEntry."Document No." := UseCheckNo;
                                      CheckLedgEntry.Description := Description;
                                      CheckLedgEntry."Bank Payment Type" := "Bank Payment Type";
                                      CheckLedgEntry."Bal. Account Type" := BalancingType;
                                      CheckLedgEntry."Bal. Account No." := BalancingNo;
                                      // PHP Start
                                      CheckLedgEntry."Bal. Bank Code." := "Customer/Vendor Bank";
                                      CheckLedgEntry."Bal. Bank Account No." := "Bank Account No.";
                                      CheckLedgEntry."Voucher No." := "Voucher No.";
                                      CheckLedgEntry."Recipient Bank Account" := RecipientBankNo;
                                      CheckLedgEntry."Recipient Bank Name" := COPYSTR(CheckToAddr[1], 1, 50);
                                      // PHP End
                                      IF FoundLast THEN BEGIN
                                        IF TotalLineAmount <= 0 THEN
                                          ERROR(
                                            Text020,
                                            UseCheckNo,TotalLineAmount);
                                        CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::Printed;
                                        CheckLedgEntry.Amount := TotalLineAmount;
                                        CheckLedgEntry."WHT Amount" := WHTAmount; // PHP Start WHT Computation
                                      END ELSE BEGIN
                                        CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::Voided;
                                        CheckLedgEntry.Amount := 0;
                                      END;
                                      CheckLedgEntry."Check Date" := "Posting Date";
                                      CheckLedgEntry."Check No." := UseCheckNo;
                                      CheckManagement.InsertCheck(CheckLedgEntry,RECORDID);

                                      IF FoundLast THEN BEGIN
                                        IF BankAcc2."Currency Code" <> '' THEN
                                          Currency.GET(BankAcc2."Currency Code")
                                        ELSE
                                          Currency.InitRoundingPrecision;
                                        CheckLedgEntryAmount := CheckLedgEntry.Amount;
                                        Decimals := CheckLedgEntry.Amount - ROUND(CheckLedgEntry.Amount,1,'<');
                                        IF STRLEN(FORMAT(Decimals)) < STRLEN(FORMAT(Currency."Amount Rounding Precision")) THEN
                                          IF Decimals = 0 THEN
                                            CheckAmountText := FORMAT(CheckLedgEntryAmount,0,0) +
                                              COPYSTR(FORMAT(0.01),2,1) +
                                              PADSTR('',STRLEN(FORMAT(Currency."Amount Rounding Precision")) - 2,'0')
                                          ELSE
                                            CheckAmountText := FORMAT(CheckLedgEntryAmount,0,0) +
                                              PADSTR('',STRLEN(FORMAT(Currency."Amount Rounding Precision")) - STRLEN(FORMAT(Decimals)),'0')
                                        ELSE
                                          CheckAmountText := FORMAT(CheckLedgEntryAmount,0,0);
                                          FormatNoText(DescriptionLine,CheckLedgEntry.Amount,BankAcc2."Currency Code");
                                        VoidText := '';
                                      END ELSE BEGIN
                                        CLEAR(CheckAmountText);
                                        CLEAR(DescriptionLine);
                                        TotalText := Text065;
                                        DescriptionLine[1] := Text021;
                                        DescriptionLine[2] := DescriptionLine[1];
                                        VoidText := Text022;
                                      END;
                                    END;
                                  END ELSE
                                    WITH GenJnlLine DO BEGIN
                                      CheckLedgEntry.INIT;
                                      CheckLedgEntry."Bank Account No." := BankAcc2."No.";
                                      CheckLedgEntry."Posting Date" := "Posting Date";
                                      CheckLedgEntry."Document No." := UseCheckNo;
                                      CheckLedgEntry.Description := Text023;
                                      CheckLedgEntry."Bank Payment Type" := "Bank Payment Type"::"Computer Check";
                                      CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::"Test Print";
                                      CheckLedgEntry."Check Date" := "Posting Date";
                                      CheckLedgEntry."Check No." := UseCheckNo;
                                      // PHP Start
                                      CheckLedgEntry."Bal. Bank Code." := "Customer/Vendor Bank";
                                      CheckLedgEntry."Bal. Bank Account No." := "Bank Account No.";
                                      CheckLedgEntry."Voucher No." := "Voucher No.";
                                      CheckLedgEntry."Recipient Bank Account" := RecipientBankNo;
                                      CheckLedgEntry."Recipient Bank Name" := CheckToAddr[1];
                                      // PHP End
                                      CheckManagement.InsertCheck(CheckLedgEntry,RECORDID);

                                      CheckAmountText := Text024;
                                      DescriptionLine[1] := Text025;
                                      DescriptionLine[2] := DescriptionLine[1];
                                      VoidText := Text022;
                                    END;

                                  ChecksPrinted := ChecksPrinted + 1;
                                  FirstPage := FALSE;
                                END;
                                 }

    { 1   ;3   ;Column  ;CheckAmountText     ;
               SourceExpr=CheckAmountText }

    { 2   ;3   ;Column  ;CheckDateTextControl2;
               SourceExpr=CheckDateText }

    { 5   ;3   ;Column  ;DescriptionLine2    ;
               SourceExpr=DescriptionLine[2] }

    { 6   ;3   ;Column  ;DescriptionLine1    ;
               SourceExpr=DescriptionLine[1] }

    { 7   ;3   ;Column  ;CheckToAddr1Control7;
               SourceExpr=CheckToAddr[1] }

    { 8   ;3   ;Column  ;CheckToAddr2        ;
               SourceExpr=CheckToAddr[2] }

    { 9   ;3   ;Column  ;CheckToAddr4        ;
               SourceExpr=CheckToAddr[4] }

    { 10  ;3   ;Column  ;CheckToAddr3        ;
               SourceExpr=CheckToAddr[3] }

    { 12  ;3   ;Column  ;CheckToAddr5        ;
               SourceExpr=CheckToAddr[5] }

    { 15  ;3   ;Column  ;CompanyAddr4        ;
               SourceExpr=CompanyAddr[4] }

    { 16  ;3   ;Column  ;CompanyAddr8        ;
               SourceExpr=CompanyAddr[8] }

    { 17  ;3   ;Column  ;CompanyAddr7        ;
               SourceExpr=CompanyAddr[7] }

    { 18  ;3   ;Column  ;CompanyAddr6        ;
               SourceExpr=CompanyAddr[6] }

    { 19  ;3   ;Column  ;CompanyAddr5        ;
               SourceExpr=CompanyAddr[5] }

    { 20  ;3   ;Column  ;CompanyAddr3        ;
               SourceExpr=CompanyAddr[3] }

    { 21  ;3   ;Column  ;CheckNoTextControl21;
               SourceExpr=CheckNoText }

    { 22  ;3   ;Column  ;CompanyAddr2        ;
               SourceExpr=CompanyAddr[2] }

    { 23  ;3   ;Column  ;CompanyAddr1        ;
               SourceExpr=CompanyAddr[1] }

    { 30  ;3   ;Column  ;TotalLineAmount     ;
               SourceExpr=TotalLineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 11  ;3   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 3   ;3   ;Column  ;VoidText            ;
               SourceExpr=VoidText }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF BankAcc2."No." <> '' THEN
                     IF BankAcc2.GET(BankAcc2."No.") THEN
                       UseCheckNo := BankAcc2."Last Check No."
                     ELSE BEGIN
                       BankAcc2."No." := '';
                       UseCheckNo := '';
                     END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=BankAccount;
                  CaptionML=ENU=Bank Account;
                  SourceExpr=BankAcc2."No.";
                  TableRelation="Bank Account";
                  OnValidate=BEGIN
                               InputBankAccount;
                             END;
                              }

      { 3   ;2   ;Field     ;
                  Name=LastCheckNo;
                  CaptionML=ENU=Last Check No.;
                  SourceExpr=UseCheckNo }

      { 11  ;2   ;Field     ;
                  Name=OneCheckPerVendorPerDocumentNo;
                  CaptionML=ENU=One Check per Vendor per Document No.;
                  SourceExpr=OneCheckPrVendor;
                  MultiLine=Yes }

      { 5   ;2   ;Field     ;
                  Name=ReprintChecks;
                  CaptionML=ENU=Reprint Checks;
                  SourceExpr=ReprintChecks }

      { 9   ;2   ;Field     ;
                  Name=TestPrinting;
                  CaptionML=ENU=Test Print;
                  SourceExpr=TestPrint }

      { 13  ;2   ;Field     ;
                  CaptionML=ENU=Preprinted Stub;
                  SourceExpr=PreprintedStub }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Preview is not allowed.';
      Text001@1001 : TextConst 'ENU=Last Check No. must be filled in.';
      Text002@1002 : TextConst 'ENU=Filters on %1 and %2 are not allowed.';
      Text003@1003 : TextConst 'ENU=XXXXXXXXXXXXXXXX';
      Text004@1004 : TextConst 'ENU=must be entered.';
      Text005@1005 : TextConst 'ENU=The Bank Account and the General Journal Line must have the same currency.';
      Text006@1006 : TextConst 'ENU=Salesperson';
      Text007@1007 : TextConst 'ENU=Purchaser';
      Text008@1008 : TextConst 'ENU=Both Bank Accounts must have the same currency.';
      Text009@1009 : TextConst 'ENU=Our Contact';
      Text010@1010 : TextConst 'ENU=XXXXXXXXXX';
      Text011@1011 : TextConst 'ENU=XXXX';
      Text012@1012 : TextConst 'ENU=XX.XXXXXXXXXX.XXXX';
      Text013@1013 : TextConst 'ENU=%1 already exists.';
      Text014@1014 : TextConst 'ENU=Check for %1 %2';
      Text015@1015 : TextConst 'ENU=Payment';
      Text016@1016 : TextConst 'ENU=In the Check report, One Check per Vendor and Document No.\must not be activated when Applies-to ID is specified in the journal lines.';
      Text018@1018 : TextConst 'ENU=XXX';
      Text019@1019 : TextConst 'ENU=Total';
      Text020@1020 : TextConst 'ENU=The total amount of check %1 is %2. The amount must be positive.';
      Text021@1021 : TextConst 'ENU=VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID';
      Text022@1022 : TextConst 'ENU=NON-NEGOTIABLE';
      Text023@1023 : TextConst 'ENU=Test print';
      Text024@1024 : TextConst 'ENU=XXXX.XX';
      Text025@1025 : TextConst 'ENU=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      Text026@1026 : TextConst 'ENU=ZERO';
      Text027@1027 : TextConst 'ENU=HUNDRED';
      Text028@1028 : TextConst 'ENU=AND';
      Text029@1029 : TextConst 'ENU=%1 results in a written number that is too long.';
      Text030@1030 : TextConst 'ENU=" is already applied to %1 %2 for customer %3."';
      Text031@1031 : TextConst 'ENU=" is already applied to %1 %2 for vendor %3."';
      Text032@1032 : TextConst 'ENU=ONE';
      Text033@1033 : TextConst 'ENU=TWO';
      Text034@1034 : TextConst 'ENU=THREE';
      Text035@1035 : TextConst 'ENU=FOUR';
      Text036@1036 : TextConst 'ENU=FIVE';
      Text037@1037 : TextConst 'ENU=SIX';
      Text038@1038 : TextConst 'ENU=SEVEN';
      Text039@1039 : TextConst 'ENU=EIGHT';
      Text040@1040 : TextConst 'ENU=NINE';
      Text041@1041 : TextConst 'ENU=TEN';
      Text042@1042 : TextConst 'ENU=ELEVEN';
      Text043@1043 : TextConst 'ENU=TWELVE';
      Text044@1044 : TextConst 'ENU=THIRTEEN';
      Text045@1045 : TextConst 'ENU=FOURTEEN';
      Text046@1046 : TextConst 'ENU=FIFTEEN';
      Text047@1047 : TextConst 'ENU=SIXTEEN';
      Text048@1048 : TextConst 'ENU=SEVENTEEN';
      Text049@1049 : TextConst 'ENU=EIGHTEEN';
      Text050@1050 : TextConst 'ENU=NINETEEN';
      Text051@1051 : TextConst 'ENU=TWENTY';
      Text052@1052 : TextConst 'ENU=THIRTY';
      Text053@1053 : TextConst 'ENU=FORTY';
      Text054@1054 : TextConst 'ENU=FIFTY';
      Text055@1055 : TextConst 'ENU=SIXTY';
      Text056@1056 : TextConst 'ENU=SEVENTY';
      Text057@1057 : TextConst 'ENU=EIGHTY';
      Text058@1058 : TextConst 'ENU=NINETY';
      Text059@1059 : TextConst 'ENU=THOUSAND';
      Text060@1060 : TextConst 'ENU=MILLION';
      Text061@1061 : TextConst 'ENU=BILLION';
      CompanyInfo@1062 : Record 79;
      SalesPurchPerson@1063 : Record 13;
      GenJnlLine2@1064 : Record 81;
      GenJnlLine3@1065 : Record 81;
      Cust@1066 : Record 18;
      CustLedgEntry@1067 : Record 21;
      Vend@1068 : Record 23;
      VendLedgEntry@1069 : Record 25;
      BankAcc@1070 : Record 270;
      BankAcc2@1071 : Record 270;
      CheckLedgEntry@1072 : Record 272;
      Currency@1073 : Record 4;
      CustBankAccounts@1125 : Record 287;
      FormatAddr@1074 : Codeunit 365;
      CheckManagement@1075 : Codeunit 367;
      DimMgt@1123 : Codeunit 408;
      CompanyAddr@1076 : ARRAY [8] OF Text[50];
      CheckToAddr@1077 : ARRAY [8] OF Text;
      RecipientBankNo@1122 : Code[10];
      OnesText@1078 : ARRAY [20] OF Text[30];
      TensText@1079 : ARRAY [10] OF Text[30];
      ExponentText@1080 : ARRAY [5] OF Text[30];
      BalancingType@1081 : 'G/L Account,Customer,Vendor,Bank Account';
      BalancingNo@1082 : Code[20];
      ContactText@1083 : Text[30];
      CheckNoText@1084 : Text[30];
      CheckDateText@1085 : Text[30];
      CheckAmountText@1086 : Text[30];
      DescriptionLine@1087 : ARRAY [2] OF Text[80];
      DocType@1088 : Text[30];
      DocNo@1089 : Text[30];
      ExtDocNo@1119 : Text[35];
      VoidText@1090 : Text[30];
      LineAmount@1091 : Decimal;
      LineDiscount@1092 : Decimal;
      TotalLineAmount@1093 : Decimal;
      TotalLineDiscount@1094 : Decimal;
      RemainingAmount@1095 : Decimal;
      CurrentLineAmount@1096 : Decimal;
      UseCheckNo@1097 : Code[20];
      FoundLast@1098 : Boolean;
      ReprintChecks@1099 : Boolean;
      TestPrint@1100 : Boolean;
      FirstPage@1101 : Boolean;
      OneCheckPrVendor@1102 : Boolean;
      FoundNegative@1103 : Boolean;
      ApplyMethod@1104 : 'Payment,OneLineOneEntry,OneLineID,MoreLinesOneEntry';
      ChecksPrinted@1105 : Integer;
      HighestLineNo@1106 : Integer;
      PreprintedStub@1107 : Boolean;
      TotalText@1108 : Text[10];
      DocDate@1109 : Date;
      i@1110 : Integer;
      Text062@1111 : TextConst 'ENU=G/L Account,Customer,Vendor,Bank Account';
      CurrencyCode2@1112 : Code[10];
      NetAmount@1114 : Text[30];
      CurrencyExchangeRate@1115 : Record 330;
      LineAmount2@1116 : Decimal;
      Text063@1117 : TextConst 'ENU=Net Amount %1';
      GLSetup@1118 : Record 98;
      Text064@1113 : TextConst 'ENU=%1 must not be %2 for %3 %4.';
      Text065@1120 : TextConst 'ENU=Subtotal';
      Text066@1124 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      CheckNoTextCaptionLbl@6359 : TextConst 'ENU=Check No.';
      LineAmountCaptionLbl@5261 : TextConst 'ENU=Net Amount';
      LineDiscountCaptionLbl@3244 : TextConst 'ENU=Discount';
      AmountCaptionLbl@7794 : TextConst 'ENU=Amount';
      DocNoCaptionLbl@2117 : TextConst 'ENU=Document No.';
      DocDateCaptionLbl@6175 : TextConst 'ENU=Document Date';
      CurrencyCodeCaptionLbl@2455 : TextConst 'ENU=Currency Code';
      YourDocNoCaptionLbl@4226 : TextConst 'ENU=Your Doc. No.';
      TransportCaptionLbl@2440 : TextConst 'ENU=Transport';
      CheckName2@1017 : Text;
      VendorBankAccount@1121 : Record 288;
      WHTManagement@1127 : Codeunit 50500;
      CheckAmount@1126 : Decimal;
      WHTAmount@1128 : Decimal;

    PROCEDURE FormatNoText@1(VAR NoText@1000 : ARRAY [2] OF Text[80];No@1001 : Decimal;CurrencyCode@1002 : Code[10]);
    VAR
      PrintExponent@1003 : Boolean;
      Ones@1004 : Integer;
      Tens@1005 : Integer;
      Hundreds@1006 : Integer;
      Exponent@1007 : Integer;
      NoTextIndex@1008 : Integer;
      DecimalPosition@1010 : Decimal;
    BEGIN
      CLEAR(NoText);
      NoTextIndex := 1;
      NoText[1] := '****';
      GLSetup.GET;

      IF No < 1 THEN
        AddToNoText(NoText,NoTextIndex,PrintExponent,Text026)
      ELSE
        FOR Exponent := 4 DOWNTO 1 DO BEGIN
          PrintExponent := FALSE;
          Ones := No DIV POWER(1000,Exponent - 1);
          Hundreds := Ones DIV 100;
          Tens := (Ones MOD 100) DIV 10;
          Ones := Ones MOD 10;
          IF Hundreds > 0 THEN BEGIN
            AddToNoText(NoText,NoTextIndex,PrintExponent,OnesText[Hundreds]);
            AddToNoText(NoText,NoTextIndex,PrintExponent,Text027);
          END;
          IF Tens >= 2 THEN BEGIN
            AddToNoText(NoText,NoTextIndex,PrintExponent,TensText[Tens]);
            IF Ones > 0 THEN
              AddToNoText(NoText,NoTextIndex,PrintExponent,OnesText[Ones]);
          END ELSE
            IF (Tens * 10 + Ones) > 0 THEN
              AddToNoText(NoText,NoTextIndex,PrintExponent,OnesText[Tens * 10 + Ones]);
          IF PrintExponent AND (Exponent > 1) THEN
            AddToNoText(NoText,NoTextIndex,PrintExponent,ExponentText[Exponent]);
          No := No - (Hundreds * 100 + Tens * 10 + Ones) * POWER(1000,Exponent - 1);
        END;

      AddToNoText(NoText,NoTextIndex,PrintExponent,Text028);
      DecimalPosition := GetAmtDecimalPosition;
      AddToNoText(NoText,NoTextIndex,PrintExponent,(FORMAT(No * DecimalPosition) + '/' + FORMAT(DecimalPosition) + ' ONLY ****'));

      IF CurrencyCode <> '' THEN
        AddToNoText(NoText,NoTextIndex,PrintExponent,CurrencyCode);
    END;

    LOCAL PROCEDURE AddToNoText@2(VAR NoText@1000 : ARRAY [2] OF Text[80];VAR NoTextIndex@1001 : Integer;VAR PrintExponent@1002 : Boolean;AddText@1003 : Text[30]);
    BEGIN
      PrintExponent := TRUE;

      WHILE STRLEN(NoText[NoTextIndex] + ' ' + AddText) > MAXSTRLEN(NoText[1]) DO BEGIN
        NoTextIndex := NoTextIndex + 1;
        IF NoTextIndex > ARRAYLEN(NoText) THEN
          ERROR(Text029,AddText);
      END;

      NoText[NoTextIndex] := DELCHR(NoText[NoTextIndex] + ' ' + AddText,'<');
    END;

    LOCAL PROCEDURE CustUpdateAmounts@3(VAR CustLedgEntry2@1000 : Record 21;RemainingAmount2@1001 : Decimal);
    BEGIN
      IF (ApplyMethod = ApplyMethod::OneLineOneEntry) OR
         (ApplyMethod = ApplyMethod::MoreLinesOneEntry)
      THEN BEGIN
        GenJnlLine3.RESET;
        GenJnlLine3.SETCURRENTKEY(
          "Account Type","Account No.","Applies-to Doc. Type","Applies-to Doc. No.");
        GenJnlLine3.SETRANGE("Account Type",GenJnlLine3."Account Type"::Customer);
        GenJnlLine3.SETRANGE("Account No.",CustLedgEntry2."Customer No.");
        GenJnlLine3.SETRANGE("Applies-to Doc. Type",CustLedgEntry2."Document Type");
        GenJnlLine3.SETRANGE("Applies-to Doc. No.",CustLedgEntry2."Document No.");
        IF ApplyMethod = ApplyMethod::OneLineOneEntry THEN
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine."Line No.")
        ELSE
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine2."Line No.");
        IF CustLedgEntry2."Document Type" <> CustLedgEntry2."Document Type"::" " THEN
          IF GenJnlLine3.FIND('-') THEN
            GenJnlLine3.FIELDERROR(
              "Applies-to Doc. No.",
              STRSUBSTNO(
                Text030,
                CustLedgEntry2."Document Type",CustLedgEntry2."Document No.",
                CustLedgEntry2."Customer No."));
      END;

      DocType := FORMAT(CustLedgEntry2."Document Type");
      DocNo := CustLedgEntry2."Document No.";
      ExtDocNo := CustLedgEntry2."External Document No.";
      DocDate := CustLedgEntry2."Posting Date";
      CurrencyCode2 := CustLedgEntry2."Currency Code";

      CustLedgEntry2.CALCFIELDS("Remaining Amount");

      LineAmount :=
        -ABSMin(
          CustLedgEntry2."Remaining Amount" -
          CustLedgEntry2."Remaining Pmt. Disc. Possible" -
          CustLedgEntry2."Accepted Payment Tolerance",
          CustLedgEntry2."Amount to Apply");
      LineAmount2 :=
        ROUND(
          ExchangeAmt(CustLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,LineAmount),
          Currency."Amount Rounding Precision");

      IF ((CustLedgEntry2."Document Type" IN [CustLedgEntry2."Document Type"::Invoice,
                                              CustLedgEntry2."Document Type"::"Credit Memo"]) AND
          (CustLedgEntry2."Remaining Pmt. Disc. Possible" <> 0) AND
          (CustLedgEntry2."Posting Date" <= CustLedgEntry2."Pmt. Discount Date")) OR
         CustLedgEntry2."Accepted Pmt. Disc. Tolerance"
      THEN BEGIN
        LineDiscount := -CustLedgEntry2."Remaining Pmt. Disc. Possible";
        IF CustLedgEntry2."Accepted Payment Tolerance" <> 0 THEN
          LineDiscount := LineDiscount - CustLedgEntry2."Accepted Payment Tolerance";
      END ELSE BEGIN
        IF RemainingAmount2 >=
           ROUND(
             -ExchangeAmt(CustLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
               CustLedgEntry2."Amount to Apply"),Currency."Amount Rounding Precision")
        THEN
          LineAmount2 :=
            ROUND(
              -ExchangeAmt(CustLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
                CustLedgEntry2."Amount to Apply"),Currency."Amount Rounding Precision")
        ELSE BEGIN
          LineAmount2 := RemainingAmount2;
          LineAmount :=
            ROUND(
              ExchangeAmt(CustLedgEntry2."Posting Date",CurrencyCode2,GenJnlLine."Currency Code",
                LineAmount2),Currency."Amount Rounding Precision");
        END;
        LineDiscount := 0;
      END;
    END;

    LOCAL PROCEDURE VendUpdateAmounts@4(VAR VendLedgEntry2@1000 : Record 25;RemainingAmount2@1001 : Decimal);
    BEGIN
      IF (ApplyMethod = ApplyMethod::OneLineOneEntry) OR
         (ApplyMethod = ApplyMethod::MoreLinesOneEntry)
      THEN BEGIN
        GenJnlLine3.RESET;
        GenJnlLine3.SETCURRENTKEY(
          "Account Type","Account No.","Applies-to Doc. Type","Applies-to Doc. No.");
        GenJnlLine3.SETRANGE("Account Type",GenJnlLine3."Account Type"::Vendor);
        GenJnlLine3.SETRANGE("Account No.",VendLedgEntry2."Vendor No.");
        GenJnlLine3.SETRANGE("Applies-to Doc. Type",VendLedgEntry2."Document Type");
        GenJnlLine3.SETRANGE("Applies-to Doc. No.",VendLedgEntry2."Document No.");
        IF ApplyMethod = ApplyMethod::OneLineOneEntry THEN
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine."Line No.")
        ELSE BEGIN
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine2."Line No.");
         IF VendLedgEntry2."Document Type" <> VendLedgEntry2."Document Type"::" " THEN
           IF GenJnlLine3.FIND('-') THEN
             GenJnlLine3.FIELDERROR(
               "Applies-to Doc. No.",
               STRSUBSTNO(
                 Text031,
                 VendLedgEntry2."Document Type",VendLedgEntry2."Document No.",
                 VendLedgEntry2."Vendor No."));
        END;
      END;

      DocType := FORMAT(VendLedgEntry2."Document Type");
      DocNo := VendLedgEntry2."Document No.";
      ExtDocNo := VendLedgEntry2."External Document No.";
      DocDate := VendLedgEntry2."Posting Date";
      CurrencyCode2 := VendLedgEntry2."Currency Code";
      VendLedgEntry2.CALCFIELDS("Remaining Amount");

      LineAmount :=
        -ABSMin(
          VendLedgEntry2."Remaining Amount" -
          VendLedgEntry2."Remaining Pmt. Disc. Possible" -
          VendLedgEntry2."Accepted Payment Tolerance",
          VendLedgEntry2."Amount to Apply");

      LineAmount2 :=
        ROUND(
          ExchangeAmt(VendLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,LineAmount),
          Currency."Amount Rounding Precision");

      IF ((VendLedgEntry2."Document Type" IN [VendLedgEntry2."Document Type"::Invoice,
                                              VendLedgEntry2."Document Type"::"Credit Memo"]) AND
          (VendLedgEntry2."Remaining Pmt. Disc. Possible" <> 0) AND
          (GenJnlLine."Posting Date" <= VendLedgEntry2."Pmt. Discount Date")) OR
         VendLedgEntry2."Accepted Pmt. Disc. Tolerance"
      THEN BEGIN
        LineDiscount := -VendLedgEntry2."Remaining Pmt. Disc. Possible";
        IF VendLedgEntry2."Accepted Payment Tolerance" <> 0 THEN
          LineDiscount := LineDiscount - VendLedgEntry2."Accepted Payment Tolerance";
      END ELSE BEGIN
        IF ABS(RemainingAmount2) >=
           ABS(ROUND(
               ExchangeAmt(VendLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
                 VendLedgEntry2."Amount to Apply"),Currency."Amount Rounding Precision"))
        THEN BEGIN
          LineAmount2 :=
            ROUND(
              -(ExchangeAmt(VendLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
                  VendLedgEntry2."Amount to Apply")),Currency."Amount Rounding Precision");
          LineAmount :=
            ROUND(
              ExchangeAmt(VendLedgEntry2."Posting Date",CurrencyCode2,GenJnlLine."Currency Code",
                LineAmount2),Currency."Amount Rounding Precision");
        END ELSE BEGIN
          LineAmount2 := RemainingAmount2;
          LineAmount :=
            ROUND(
              ExchangeAmt(VendLedgEntry2."Posting Date",CurrencyCode2,GenJnlLine."Currency Code",
                LineAmount2),Currency."Amount Rounding Precision");
        END;
        LineDiscount := 0;
      END;
    END;

    PROCEDURE InitTextVariable@5();
    BEGIN
      OnesText[1] := Text032;
      OnesText[2] := Text033;
      OnesText[3] := Text034;
      OnesText[4] := Text035;
      OnesText[5] := Text036;
      OnesText[6] := Text037;
      OnesText[7] := Text038;
      OnesText[8] := Text039;
      OnesText[9] := Text040;
      OnesText[10] := Text041;
      OnesText[11] := Text042;
      OnesText[12] := Text043;
      OnesText[13] := Text044;
      OnesText[14] := Text045;
      OnesText[15] := Text046;
      OnesText[16] := Text047;
      OnesText[17] := Text048;
      OnesText[18] := Text049;
      OnesText[19] := Text050;

      TensText[1] := '';
      TensText[2] := Text051;
      TensText[3] := Text052;
      TensText[4] := Text053;
      TensText[5] := Text054;
      TensText[6] := Text055;
      TensText[7] := Text056;
      TensText[8] := Text057;
      TensText[9] := Text058;

      ExponentText[1] := '';
      ExponentText[2] := Text059;
      ExponentText[3] := Text060;
      ExponentText[4] := Text061;
    END;

    PROCEDURE InitializeRequest@6(BankAcc@1000 : Code[20];LastCheckNo@1001 : Code[20];NewOneCheckPrVend@1002 : Boolean;NewReprintChecks@1003 : Boolean;NewTestPrint@1004 : Boolean;NewPreprintedStub@1005 : Boolean);
    BEGIN
      IF BankAcc <> '' THEN
        IF BankAcc2.GET(BankAcc) THEN BEGIN
          UseCheckNo := LastCheckNo;
          OneCheckPrVendor := NewOneCheckPrVend;
          ReprintChecks := NewReprintChecks;
          TestPrint := NewTestPrint;
          PreprintedStub := NewPreprintedStub;
        END;
    END;

    LOCAL PROCEDURE ExchangeAmt@7(PostingDate@1000 : Date;CurrencyCode@1001 : Code[10];CurrencyCode2@1003 : Code[10];Amount@1002 : Decimal) Amount2 : Decimal;
    BEGIN
      IF (CurrencyCode <> '') AND (CurrencyCode2 = '') THEN
        Amount2 :=
          CurrencyExchangeRate.ExchangeAmtLCYToFCY(
            PostingDate,CurrencyCode,Amount,CurrencyExchangeRate.ExchangeRate(PostingDate,CurrencyCode))
      ELSE
        IF (CurrencyCode = '') AND (CurrencyCode2 <> '') THEN
          Amount2 :=
            CurrencyExchangeRate.ExchangeAmtFCYToLCY(
              PostingDate,CurrencyCode2,Amount,CurrencyExchangeRate.ExchangeRate(PostingDate,CurrencyCode2))
        ELSE
          IF (CurrencyCode <> '') AND (CurrencyCode2 <> '') AND (CurrencyCode <> CurrencyCode2) THEN
            Amount2 := CurrencyExchangeRate.ExchangeAmtFCYToFCY(PostingDate,CurrencyCode2,CurrencyCode,Amount)
          ELSE
            Amount2 := Amount;
    END;

    LOCAL PROCEDURE ABSMin@21(Decimal1@1000 : Decimal;Decimal2@1001 : Decimal) : Decimal;
    BEGIN
      IF ABS(Decimal1) < ABS(Decimal2) THEN
        EXIT(Decimal1);
      EXIT(Decimal2);
    END;

    PROCEDURE InputBankAccount@8();
    BEGIN
      IF BankAcc2."No." <> '' THEN BEGIN
        BankAcc2.GET(BankAcc2."No.");
        BankAcc2.TESTFIELD("Last Check No.");
        UseCheckNo := BankAcc2."Last Check No.";
      END;
    END;

    LOCAL PROCEDURE GetAmtDecimalPosition@22() : Decimal;
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF GenJnlLine."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        Currency.GET(GenJnlLine."Currency Code");
        Currency.TESTFIELD("Amount Rounding Precision");
      END;
      EXIT(1 / Currency."Amount Rounding Precision");
    END;

    LOCAL PROCEDURE ThrowGenJnlLineError@11(GenJournalLine@1000 : Record 81;ErrorTemplate@1001 : Text;ErrorText@1002 : Text);
    BEGIN
      WITH GenJournalLine DO
        IF "Line No." <> 0 THEN
          ERROR(
            ErrorTemplate,
            TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
            ErrorText);
      ERROR(ErrorText);
    END;

    LOCAL PROCEDURE CalcCheck@18(VAR GenJnlLine@1000 : Record 81) : Decimal;
    VAR
      WHTSetup@1001 : Record 50503;
      GenJnlLine1@1002 : Record 81;
    BEGIN
      // PHP Start
      WHTAmount := 0;
      CheckAmount := 0;
      CheckAmount := CheckAmount + GenJnlLine.Amount;
      GenJnlLine1.COPY(GenJnlLine);

      IF GenJnlLine1."Interest Amount" <> 0 THEN
        GenJnlLine1.VALIDATE(Amount,GenJnlLine1.Amount - GenJnlLine1."Interest Amount");
      IF GenJnlLine."Account Type" = GenJnlLine."Account Type"::Vendor THEN
        IF WHTSetup.GET(GenJnlLine."WHT Business Posting Group",GenJnlLine."WHT Product Posting Group") THEN
          IF WHTSetup."Realized WHT Type" <> WHTSetup."Realized WHT Type"::Earliest THEN
            WHTAmount := WHTAmount + WHTManagement.WHTAmountJournal(GenJnlLine1,FALSE)
          ELSE
            WHTAmount := WHTAmount + ABS(WHTManagement.CalcVendExtraWHTForEarliest(GenJnlLine1));
      CheckAmount := CheckAmount - WHTAmount;

      IF CheckAmount < 0 THEN
        CheckAmount := 0;
      // PHP End
    END;

    BEGIN
    {
      Change Log:
      ** Additional Variable WithName2. Check if Name 2 field has value then display the name 2 in check
      ** Add new dataset CheckAmount = Amount_GenJnlLine2 to compute the wht
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>ac1bb36c-7b28-449e-aa5f-8da3f87729d0</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <Fields>
        <Field Name="JournalTempName_GenJnlLine">
          <DataField>JournalTempName_GenJnlLine</DataField>
        </Field>
        <Field Name="JournalBatchName_GenJnlLine">
          <DataField>JournalBatchName_GenJnlLine</DataField>
        </Field>
        <Field Name="LineNo_GenJnlLine">
          <DataField>LineNo_GenJnlLine</DataField>
        </Field>
        <Field Name="Amount_GenJnlLine">
          <DataField>Amount_GenJnlLine</DataField>
        </Field>
        <Field Name="Amount_GenJnlLineFormat">
          <DataField>Amount_GenJnlLineFormat</DataField>
        </Field>
        <Field Name="Amount_GenJnlLine2">
          <DataField>Amount_GenJnlLine2</DataField>
        </Field>
        <Field Name="Amount_GenJnlLine2Format">
          <DataField>Amount_GenJnlLine2Format</DataField>
        </Field>
        <Field Name="DocNo_GenJnlLine">
          <DataField>DocNo_GenJnlLine</DataField>
        </Field>
        <Field Name="ExtDocNo_GenJnlLine">
          <DataField>ExtDocNo_GenJnlLine</DataField>
        </Field>
        <Field Name="VoucherNo_GenJnlLine">
          <DataField>VoucherNo_GenJnlLine</DataField>
        </Field>
        <Field Name="DocDate_GenJnlLine">
          <DataField>DocDate_GenJnlLine</DataField>
        </Field>
        <Field Name="CheckToAddr1">
          <DataField>CheckToAddr1</DataField>
        </Field>
        <Field Name="CheckName2">
          <DataField>CheckName2</DataField>
        </Field>
        <Field Name="CheckDateText">
          <DataField>CheckDateText</DataField>
        </Field>
        <Field Name="CheckNoText">
          <DataField>CheckNoText</DataField>
        </Field>
        <Field Name="FirstPage">
          <DataField>FirstPage</DataField>
        </Field>
        <Field Name="PreprintedStub">
          <DataField>PreprintedStub</DataField>
        </Field>
        <Field Name="CheckNoTextCaption">
          <DataField>CheckNoTextCaption</DataField>
        </Field>
        <Field Name="NetAmount">
          <DataField>NetAmount</DataField>
        </Field>
        <Field Name="TotalLineDiscountLineDiscount">
          <DataField>TotalLineDiscountLineDiscount</DataField>
        </Field>
        <Field Name="TotalLineDiscountLineDiscountFormat">
          <DataField>TotalLineDiscountLineDiscountFormat</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmount">
          <DataField>TotalLineAmountLineAmount</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmountFormat">
          <DataField>TotalLineAmountLineAmountFormat</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmount2">
          <DataField>TotalLineAmountLineAmount2</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmount2Format">
          <DataField>TotalLineAmountLineAmount2Format</DataField>
        </Field>
        <Field Name="LineAmount">
          <DataField>LineAmount</DataField>
        </Field>
        <Field Name="LineAmountFormat">
          <DataField>LineAmountFormat</DataField>
        </Field>
        <Field Name="LineDiscount">
          <DataField>LineDiscount</DataField>
        </Field>
        <Field Name="LineDiscountFormat">
          <DataField>LineDiscountFormat</DataField>
        </Field>
        <Field Name="LineAmountLineDiscount">
          <DataField>LineAmountLineDiscount</DataField>
        </Field>
        <Field Name="LineAmountLineDiscountFormat">
          <DataField>LineAmountLineDiscountFormat</DataField>
        </Field>
        <Field Name="DocNo">
          <DataField>DocNo</DataField>
        </Field>
        <Field Name="DocDate">
          <DataField>DocDate</DataField>
        </Field>
        <Field Name="CurrencyCode2">
          <DataField>CurrencyCode2</DataField>
        </Field>
        <Field Name="CurrentLineAmount">
          <DataField>CurrentLineAmount</DataField>
        </Field>
        <Field Name="CurrentLineAmountFormat">
          <DataField>CurrentLineAmountFormat</DataField>
        </Field>
        <Field Name="ExtDocNo">
          <DataField>ExtDocNo</DataField>
        </Field>
        <Field Name="LineAmountCaption">
          <DataField>LineAmountCaption</DataField>
        </Field>
        <Field Name="LineDiscountCaption">
          <DataField>LineDiscountCaption</DataField>
        </Field>
        <Field Name="AmountCaption">
          <DataField>AmountCaption</DataField>
        </Field>
        <Field Name="DocNoCaption">
          <DataField>DocNoCaption</DataField>
        </Field>
        <Field Name="DocDateCaption">
          <DataField>DocDateCaption</DataField>
        </Field>
        <Field Name="CurrencyCodeCaption">
          <DataField>CurrencyCodeCaption</DataField>
        </Field>
        <Field Name="YourDocNoCaption">
          <DataField>YourDocNoCaption</DataField>
        </Field>
        <Field Name="TransportCaption">
          <DataField>TransportCaption</DataField>
        </Field>
        <Field Name="CheckAmountText">
          <DataField>CheckAmountText</DataField>
        </Field>
        <Field Name="CheckDateTextControl2">
          <DataField>CheckDateTextControl2</DataField>
        </Field>
        <Field Name="DescriptionLine2">
          <DataField>DescriptionLine2</DataField>
        </Field>
        <Field Name="DescriptionLine1">
          <DataField>DescriptionLine1</DataField>
        </Field>
        <Field Name="CheckToAddr1Control7">
          <DataField>CheckToAddr1Control7</DataField>
        </Field>
        <Field Name="CheckToAddr2">
          <DataField>CheckToAddr2</DataField>
        </Field>
        <Field Name="CheckToAddr4">
          <DataField>CheckToAddr4</DataField>
        </Field>
        <Field Name="CheckToAddr3">
          <DataField>CheckToAddr3</DataField>
        </Field>
        <Field Name="CheckToAddr5">
          <DataField>CheckToAddr5</DataField>
        </Field>
        <Field Name="CompanyAddr4">
          <DataField>CompanyAddr4</DataField>
        </Field>
        <Field Name="CompanyAddr8">
          <DataField>CompanyAddr8</DataField>
        </Field>
        <Field Name="CompanyAddr7">
          <DataField>CompanyAddr7</DataField>
        </Field>
        <Field Name="CompanyAddr6">
          <DataField>CompanyAddr6</DataField>
        </Field>
        <Field Name="CompanyAddr5">
          <DataField>CompanyAddr5</DataField>
        </Field>
        <Field Name="CompanyAddr3">
          <DataField>CompanyAddr3</DataField>
        </Field>
        <Field Name="CheckNoTextControl21">
          <DataField>CheckNoTextControl21</DataField>
        </Field>
        <Field Name="CompanyAddr2">
          <DataField>CompanyAddr2</DataField>
        </Field>
        <Field Name="CompanyAddr1">
          <DataField>CompanyAddr1</DataField>
        </Field>
        <Field Name="TotalLineAmount">
          <DataField>TotalLineAmount</DataField>
        </Field>
        <Field Name="TotalLineAmountFormat">
          <DataField>TotalLineAmountFormat</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="VoidText">
          <DataField>VoidText</DataField>
        </Field>
      </Fields>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
  <ReportSections>
    <ReportSection>
      <Body>
        <ReportItems>
          <Tablix Name="list1">
            <TablixBody>
              <TablixColumns>
                <TablixColumn>
                  <Width>8.06938in</Width>
                </TablixColumn>
              </TablixColumns>
              <TablixRows>
                <TablixRow>
                  <Height>2.39651in</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Rectangle Name="list1_Contents">
                          <ReportItems>
                            <Tablix Name="table2">
                              <TablixBody>
                                <TablixColumns>
                                  <TablixColumn>
                                    <Width>0.5205cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>0.5205cm</Width>
                                  </TablixColumn>
                                  <TablixColumn>
                                    <Width>0.5205cm</Width>
                                  </TablixColumn>
                                </TablixColumns>
                                <TablixRows>
                                  <TablixRow>
                                    <Height>0.81211cm</Height>
                                    <TablixCells>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="CompAddr">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Color>Red</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>2</ZIndex>
                                            <Visibility>
                                              <Hidden>=Code.SetData(Last(Fields!CompanyAddr1.Value) + Chr(177) +
Last(Fields!CompanyAddr2.Value) + Chr(177) +
Last(Fields!CompanyAddr3.Value) + Chr(177) +
Last(Fields!CompanyAddr4.Value) + Chr(177) +
Last(Fields!CompanyAddr5.Value) + Chr(177) +
Last(Fields!CompanyAddr6.Value) + Chr(177) +
Last(Fields!CompanyAddr7.Value) + Chr(177) +
Last(Fields!CompanyAddr8.Value), 1)</Hidden>
                                            </Visibility>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="CheckToAddr6">
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Color>Red</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <ZIndex>1</ZIndex>
                                            <Visibility>
                                              <Hidden>=Code.SetData(Last(Fields!DescriptionLine1.Value) + Chr(177) +
Last(Fields!DescriptionLine2.Value) + Chr(177) +
Last(Fields!CheckToAddr1.Value) + Chr(177) +
Last(Fields!CheckToAddr2.Value) + Chr(177) +
Last(Fields!CheckToAddr3.Value) + Chr(177) +
Last(Fields!CheckToAddr4.Value) + Chr(177) +
Last(Fields!CheckToAddr5.Value), 2)</Hidden>
                                            </Visibility>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                      <TablixCell>
                                        <CellContents>
                                          <Textbox Name="TotalInfo">
                                            <CanGrow>true</CanGrow>
                                            <KeepTogether>true</KeepTogether>
                                            <Paragraphs>
                                              <Paragraph>
                                                <TextRuns>
                                                  <TextRun>
                                                    <Value EvaluationMode="Auto" />
                                                    <Style>
                                                      <FontSize>7pt</FontSize>
                                                      <Color>Red</Color>
                                                    </Style>
                                                  </TextRun>
                                                </TextRuns>
                                                <Style />
                                              </Paragraph>
                                            </Paragraphs>
                                            <Visibility>
                                              <Hidden>=Code.SetData(CStr(last(Fields!TotalText.Value)) + Chr(177) +
CStr(Last(Fields!TotalLineAmount.Value)) + Chr(177) +
CStr(Last(Fields!CheckNoText.Value)) + Chr(177) +
CStr(Last(Fields!CheckDateText.Value)) + Chr(177) +
CStr(Last(Fields!CheckAmountText.Value)) + Chr(177) +
CStr(Last(Fields!VoidText.Value)), 3)</Hidden>
                                            </Visibility>
                                            <Style>
                                              <PaddingLeft>2pt</PaddingLeft>
                                              <PaddingRight>2pt</PaddingRight>
                                              <PaddingTop>2pt</PaddingTop>
                                              <PaddingBottom>2pt</PaddingBottom>
                                            </Style>
                                          </Textbox>
                                        </CellContents>
                                      </TablixCell>
                                    </TablixCells>
                                  </TablixRow>
                                </TablixRows>
                              </TablixBody>
                              <TablixColumnHierarchy>
                                <TablixMembers>
                                  <TablixMember />
                                  <TablixMember />
                                  <TablixMember />
                                </TablixMembers>
                              </TablixColumnHierarchy>
                              <TablixRowHierarchy>
                                <TablixMembers>
                                  <TablixMember>
                                    <KeepWithGroup>After</KeepWithGroup>
                                    <KeepTogether>true</KeepTogether>
                                  </TablixMember>
                                </TablixMembers>
                              </TablixRowHierarchy>
                              <Height>0.81211cm</Height>
                              <Width>1.5615cm</Width>
                              <Style />
                            </Tablix>
                            <Textbox Name="Textbox82">
                              <CanGrow>true</CanGrow>
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=Last(Fields!CheckToAddr1.Value, "DataSet_Result")</Value>
                                      <Style>
                                        <FontFamily>Times New Roman</FontFamily>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <rd:DefaultName>Textbox82</rd:DefaultName>
                              <Top>0.45493in</Top>
                              <Left>1.2125in</Left>
                              <Height>0.46771cm</Height>
                              <Width>11.39001cm</Width>
                              <ZIndex>1</ZIndex>
                              <Visibility>
                                <Hidden>=iif(Last(Fields!CheckToAddr2.Value, "DataSet_Result")="",True,False)</Hidden>
                              </Visibility>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <PaddingLeft>2pt</PaddingLeft>
                                <PaddingRight>2pt</PaddingRight>
                                <PaddingTop>2pt</PaddingTop>
                                <PaddingBottom>2pt</PaddingBottom>
                              </Style>
                            </Textbox>
                            <Textbox Name="Textbox83">
                              <CanGrow>true</CanGrow>
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=Last(Fields!DescriptionLine1.Value, "DataSet_Result") + " " + Last(Fields!DescriptionLine2.Value, "DataSet_Result")</Value>
                                      <Style>
                                        <FontFamily>Times New Roman</FontFamily>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <rd:DefaultName>Textbox82</rd:DefaultName>
                              <Top>0.933in</Top>
                              <Left>1.0875in</Left>
                              <Height>0.46771cm</Height>
                              <Width>15.24301cm</Width>
                              <ZIndex>2</ZIndex>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <PaddingLeft>2pt</PaddingLeft>
                                <PaddingRight>2pt</PaddingRight>
                                <PaddingTop>2pt</PaddingTop>
                                <PaddingBottom>2pt</PaddingBottom>
                              </Style>
                            </Textbox>
                            <Textbox Name="Textbox84">
                              <CanGrow>true</CanGrow>
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=First(Fields!CheckDateText.Value, "DataSet_Result")</Value>
                                      <Style>
                                        <FontFamily>Times New Roman</FontFamily>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <rd:DefaultName>Textbox84</rd:DefaultName>
                              <Top>0.38973in</Top>
                              <Left>6.075in</Left>
                              <Height>0.46771cm</Height>
                              <Width>3.87233cm</Width>
                              <ZIndex>3</ZIndex>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <PaddingLeft>2pt</PaddingLeft>
                                <PaddingRight>2pt</PaddingRight>
                                <PaddingTop>2pt</PaddingTop>
                                <PaddingBottom>2pt</PaddingBottom>
                              </Style>
                            </Textbox>
                            <Textbox Name="Textbox85">
                              <CanGrow>true</CanGrow>
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=Formatnumber(First(Fields!Amount_GenJnlLine2.Value, "DataSet_Result"),2)</Value>
                                      <Style>
                                        <FontFamily>Times New Roman</FontFamily>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <rd:DefaultName>Textbox84</rd:DefaultName>
                              <Top>0.65442in</Top>
                              <Left>6.075in</Left>
                              <Height>0.46771cm</Height>
                              <Width>3.23733cm</Width>
                              <ZIndex>4</ZIndex>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <PaddingLeft>2pt</PaddingLeft>
                                <PaddingRight>2pt</PaddingRight>
                                <PaddingTop>2pt</PaddingTop>
                                <PaddingBottom>2pt</PaddingBottom>
                              </Style>
                            </Textbox>
                            <Textbox Name="Textbox86">
                              <CanGrow>true</CanGrow>
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">="CV#:"&amp;First(Fields!VoucherNo_GenJnlLine.Value, "DataSet_Result")</Value>
                                      <Style>
                                        <FontFamily>Times New Roman</FontFamily>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <rd:DefaultName>Textbox82</rd:DefaultName>
                              <Top>2.04987in</Top>
                              <Left>1.0875in</Left>
                              <Height>0.46771cm</Height>
                              <Width>15.24301cm</Width>
                              <ZIndex>5</ZIndex>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <PaddingLeft>2pt</PaddingLeft>
                                <PaddingRight>2pt</PaddingRight>
                                <PaddingTop>2pt</PaddingTop>
                                <PaddingBottom>2pt</PaddingBottom>
                              </Style>
                            </Textbox>
                            <Textbox Name="Textbox87">
                              <CanGrow>true</CanGrow>
                              <KeepTogether>true</KeepTogether>
                              <Paragraphs>
                                <Paragraph>
                                  <TextRuns>
                                    <TextRun>
                                      <Value EvaluationMode="Auto">=iif(Last(Fields!CheckToAddr2.Value, "DataSet_Result")="", 
Last(Fields!CheckToAddr1.Value, "DataSet_Result"),
Last(Fields!CheckToAddr2.Value, "DataSet_Result"))</Value>
                                      <Style>
                                        <FontFamily>Times New Roman</FontFamily>
                                      </Style>
                                    </TextRun>
                                  </TextRuns>
                                  <Style />
                                </Paragraph>
                              </Paragraphs>
                              <rd:DefaultName>Textbox82</rd:DefaultName>
                              <Top>0.65296in</Top>
                              <Left>1.2125in</Left>
                              <Height>0.46771cm</Height>
                              <Width>11.39001cm</Width>
                              <ZIndex>6</ZIndex>
                              <Style>
                                <Border>
                                  <Style>None</Style>
                                </Border>
                                <PaddingLeft>2pt</PaddingLeft>
                                <PaddingRight>2pt</PaddingRight>
                                <PaddingTop>2pt</PaddingTop>
                                <PaddingBottom>2pt</PaddingBottom>
                              </Style>
                            </Textbox>
                          </ReportItems>
                          <KeepTogether>true</KeepTogether>
                          <Style />
                        </Rectangle>
                      </CellContents>
                    </TablixCell>
                  </TablixCells>
                </TablixRow>
              </TablixRows>
            </TablixBody>
            <TablixColumnHierarchy>
              <TablixMembers>
                <TablixMember />
              </TablixMembers>
            </TablixColumnHierarchy>
            <TablixRowHierarchy>
              <TablixMembers>
                <TablixMember>
                  <Group Name="list1_Details_Group">
                    <GroupExpressions>
                      <GroupExpression>=Fields!CheckNoText.Value</GroupExpression>
                    </GroupExpressions>
                    <PageBreak>
                      <BreakLocation>Between</BreakLocation>
                    </PageBreak>
                  </Group>
                  <SortExpressions>
                    <SortExpression>
                      <Value>=Fields!CheckNoText.Value</Value>
                    </SortExpression>
                  </SortExpressions>
                  <DataElementOutput>Output</DataElementOutput>
                  <KeepTogether>true</KeepTogether>
                </TablixMember>
              </TablixMembers>
            </TablixRowHierarchy>
            <KeepTogether>true</KeepTogether>
            <PageBreak>
              <BreakLocation>End</BreakLocation>
            </PageBreak>
            <Filters>
              <Filter>
                <FilterExpression>=Fields!CheckNoText.Value</FilterExpression>
                <Operator>GreaterThan</Operator>
                <FilterValues>
                  <FilterValue>=""</FilterValue>
                </FilterValues>
              </Filter>
            </Filters>
            <Height>2.39651in</Height>
            <Width>8.06938in</Width>
            <Style />
          </Tablix>
        </ReportItems>
        <Height>2.39651in</Height>
        <Style />
      </Body>
      <Width>8.06938in</Width>
      <Page>
        <PageHeight>11.69in</PageHeight>
        <PageWidth>8.27in</PageWidth>
        <InteractiveHeight>11in</InteractiveHeight>
        <InteractiveWidth>8.5in</InteractiveWidth>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function

Shared Data1 as Object
Shared Data2 as Object
Shared Data3 as Object

Public Function GetData(Num as Integer, Group as integer) as Object
if Group = 1 then
   Return Cstr(Choose(Num, Split(Cstr(Data1),Chr(177))))
End If

if Group = 2 then
   Return Cstr(Choose(Num, Split(Cstr(Data2),Chr(177))))
End If

if Group = 3 then
   Return Cstr(Choose(Num, Split(Cstr(Data3),Chr(177))))
End If
End Function

Public Function SetData(NewData as Object,Group as integer)
  If Group = 1 and NewData &gt; "" Then
      Data1 = NewData
  End If

  If Group = 2 and NewData &gt; "" Then
      Data2 = NewData
  End If

  If Group = 3 and NewData &gt; "" Then
      Data3 = NewData
  End If
  Return True
End Function</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
  <rd:ReportID>65fac6f4-eda5-4b03-9009-3a3cdbf9e25b</rd:ReportID>
</Report>
    END_OF_RDLDATA
  }
}

OBJECT Report 50524 FT Metrobank
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=12:49:36 AM;
    Modified=Yes;
    Version List=NAVW19.00.00.43897,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    Permissions=TableData 270=m;
    CaptionML=ENU=FT Metrobank;
    OnPreReport=BEGIN
                  InitTextVariable;
                END;

  }
  DATASET
  {
    { 9788;    ;DataItem;VoidGenJnlLine      ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Posting Date,Document No.);
               OnPreDataItem=BEGIN
                               IF CurrReport.PREVIEW THEN
                                 ERROR(Text000);

                               IF UseCheckNo = '' THEN
                                 ERROR(Text001);

                               IF TestPrint THEN
                                 CurrReport.BREAK;

                               IF NOT ReprintChecks THEN
                                 CurrReport.BREAK;

                               IF (GETFILTER("Line No.") <> '') OR (GETFILTER("Document No.") <> '') THEN
                                 ERROR(
                                   Text002,FIELDCAPTION("Line No."),FIELDCAPTION("Document No."));
                               SETRANGE("Bank Payment Type","Bank Payment Type"::"Computer Check");
                               SETRANGE("Check Printed",TRUE);
                             END;

               OnAfterGetRecord=BEGIN
                                  CheckManagement.VoidCheck(VoidGenJnlLine);
                                END;

               ReqFilterFields=Journal Template Name,Journal Batch Name,Posting Date }

    { 3808;    ;DataItem;GenJnlLine          ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Posting Date,Document No.);
               OnPreDataItem=BEGIN
                               COPY(VoidGenJnlLine);

                               CompanyInfo.GET;
                               IF NOT TestPrint THEN BEGIN
                                 FormatAddr.Company(CompanyAddr,CompanyInfo);
                                 BankAcc2.GET(BankAcc2."No.");
                                 BankAcc2.TESTFIELD(Blocked,FALSE);
                                 COPY(VoidGenJnlLine);
                                 SETRANGE("Bank Payment Type","Bank Payment Type"::"Computer Check");
                                 SETRANGE("Check Printed",FALSE);
                               END ELSE BEGIN
                                 CLEAR(CompanyAddr);
                                 FOR i := 1 TO 5 DO
                                   CompanyAddr[i] := Text003;
                               END;
                               ChecksPrinted := 0;

                               SETRANGE("Account Type","Account Type"::"Fixed Asset");
                               IF FIND('-') THEN
                                 FIELDERROR("Account Type");
                               SETRANGE("Account Type");
                             END;

               OnAfterGetRecord=VAR
                                  TableID@1001 : ARRAY [10] OF Integer;
                                  No@1000 : ARRAY [10] OF Code[20];
                                BEGIN

                                  // PHP Start
                                  GenJnlLine.TESTFIELD("Document Type", GenJnlLine."Document Type"::Payment);
                                  IF NOT (GenJnlLine."Account Type" IN [GenJnlLine."Account Type"::"Bank Account", GenJnlLine."Account Type"::Vendor]) THEN
                                    GenJnlLine.FIELDERROR("Account Type");
                                  GenJnlLine.TESTFIELD("Account No.");
                                  GenJnlLine.TESTFIELD("Voucher No.");
                                  GenJnlLine.TESTFIELD("Bal. Account Type", GenJnlLine."Bal. Account Type"::"Bank Account");
                                  GenJnlLine.TESTFIELD("Bal. Account No.");
                                  // Get Depositor Details/Bank Details
                                  IF BankAcc3.GET(GenJnlLine."Bal. Account No.") THEN BEGIN
                                    BankAcc3.TESTFIELD(Name);
                                    BankAcc3.TESTFIELD(Contact);
                                    BankAcc3.TESTFIELD("Bank Account No.");
                                    DepositorAddr[1] := BankAcc3.Name;
                                    DepositorAddr[2] := BankAcc3.Contact;
                                    DepositorAddr[3] := BankAcc3."Bank Account No.";
                                  END;
                                  GenJnlLine.TESTFIELD("Bank Payment Type", GenJnlLine."Bank Payment Type"::"Computer Check");
                                  // PHP End

                                  IF OneCheckPrVendor AND ("Currency Code" <> '') AND
                                     ("Currency Code" <> Currency.Code)
                                  THEN BEGIN
                                    Currency.GET("Currency Code");
                                    Currency.TESTFIELD("Conv. LCY Rndg. Debit Acc.");
                                    Currency.TESTFIELD("Conv. LCY Rndg. Credit Acc.");
                                  END;

                                  IF "Bank Payment Type" = "Bank Payment Type"::"Computer Check" THEN
                                    TESTFIELD("Exported to Payment File",FALSE);

                                  IF NOT TestPrint THEN BEGIN
                                    IF Amount = 0 THEN
                                      CurrReport.SKIP;

                                    CheckAmount := GenJnlLine.Amount; // PHP Start WHT Computation
                                    TESTFIELD("Bal. Account Type","Bal. Account Type"::"Bank Account");
                                    IF "Bal. Account No." <> BankAcc2."No." THEN
                                      CurrReport.SKIP;

                                    IF ("Account No." <> '') AND ("Bal. Account No." <> '') THEN BEGIN
                                      BalancingType := "Account Type";
                                      BalancingNo := "Account No.";
                                      RemainingAmount := Amount;
                                      IF OneCheckPrVendor THEN BEGIN
                                        ApplyMethod := ApplyMethod::MoreLinesOneEntry;
                                        GenJnlLine2.RESET;
                                        GenJnlLine2.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
                                        GenJnlLine2.SETRANGE("Journal Template Name","Journal Template Name");
                                        GenJnlLine2.SETRANGE("Journal Batch Name","Journal Batch Name");
                                        GenJnlLine2.SETRANGE("Posting Date","Posting Date");
                                        GenJnlLine2.SETRANGE("Document No.","Document No.");
                                        GenJnlLine2.SETRANGE("Account Type","Account Type");
                                        GenJnlLine2.SETRANGE("Account No.","Account No.");
                                        GenJnlLine2.SETRANGE("Bal. Account Type","Bal. Account Type");
                                        GenJnlLine2.SETRANGE("Bal. Account No.","Bal. Account No.");
                                        GenJnlLine2.SETRANGE("Bank Payment Type","Bank Payment Type");
                                        GenJnlLine2.FIND('-');
                                        RemainingAmount := 0;
                                      END ELSE
                                        IF "Applies-to Doc. No." <> '' THEN
                                          ApplyMethod := ApplyMethod::OneLineOneEntry
                                        ELSE
                                          IF "Applies-to ID" <> '' THEN
                                            ApplyMethod := ApplyMethod::OneLineID
                                          ELSE
                                            ApplyMethod := ApplyMethod::Payment;
                                    END ELSE
                                      IF "Account No." = '' THEN
                                        FIELDERROR("Account No.",Text004)
                                      ELSE
                                        FIELDERROR("Bal. Account No.",Text004);

                                    CLEAR(RecipientBankAddr); // Bank to recipient details
                                    CLEAR(CheckToAddr);
                                    ContactText := '';
                                    CLEAR(SalesPurchPerson);
                                    CASE BalancingType OF
                                      BalancingType::"G/L Account":
                                        CheckToAddr[1] := Description;
                                      BalancingType::Customer:
                                        BEGIN
                                          Cust.GET(BalancingNo);
                                          IF Cust.Blocked = Cust.Blocked::All THEN
                                            ERROR(Text064,Cust.FIELDCAPTION(Blocked),Cust.Blocked,Cust.TABLECAPTION,Cust."No.");
                                          Cust.Contact := '';
                                          FormatAddr.Customer(CheckToAddr,Cust);
                                          IF BankAcc2."Currency Code" <> "Currency Code" THEN
                                            ERROR(Text005);
                                          IF Cust."Salesperson Code" <> '' THEN BEGIN
                                            ContactText := Text006;
                                            SalesPurchPerson.GET(Cust."Salesperson Code");
                                          END;
                                        END;
                                      BalancingType::Vendor:
                                        BEGIN
                                          Vend.GET(BalancingNo);
                                          IF Vend.Blocked IN [Vend.Blocked::All,Vend.Blocked::Payment] THEN
                                            ERROR(Text064,Vend.FIELDCAPTION(Blocked),Vend.Blocked,Vend.TABLECAPTION,Vend."No.");
                                          Vend.Contact := '';
                                          FormatAddr.Vendor(CheckToAddr,Vend);
                                          IF BankAcc2."Currency Code" <> "Currency Code" THEN
                                            ERROR(Text005);
                                          IF Vend."Purchaser Code" <> '' THEN BEGIN
                                            ContactText := Text007;
                                            SalesPurchPerson.GET(Vend."Purchaser Code");
                                          END;
                                          // PHP Start
                                          CalcCheck(GenJnlLine); // PHP Start WHT Calculation
                                          IF VendorBankAcc.GET(GenJnlLine."Account No.", GenJnlLine."Recipient Bank Account") THEN
                                            SetTransferToVendor(RecipientBankAddr, VendorBankAcc);
                                          // PHP End
                                        END;
                                      BalancingType::"Bank Account":
                                        BEGIN
                                          BankAcc.GET(BalancingNo);
                                          BankAcc.TESTFIELD(Blocked,FALSE);
                                          BankAcc.Contact := '';
                                          FormatAddr.BankAcc(CheckToAddr,BankAcc);
                                          SetTransferToBank(RecipientBankAddr, BankAcc); // PHP Start Set Recipient bank account details if account type is bank.
                                          IF BankAcc2."Currency Code" <> BankAcc."Currency Code" THEN
                                            ERROR(Text008);
                                          IF BankAcc."Our Contact Code" <> '' THEN BEGIN
                                            ContactText := Text009;
                                            SalesPurchPerson.GET(BankAcc."Our Contact Code");
                                          END;
                                        END;
                                    END;

                                    CheckDateText := FORMAT("Posting Date",0,4);
                                  END ELSE BEGIN
                                    IF ChecksPrinted > 0 THEN
                                      CurrReport.BREAK;
                                    BalancingType := BalancingType::Vendor;
                                    BalancingNo := Text010;
                                    CLEAR(CheckToAddr);
                                    FOR i := 1 TO 5 DO
                                      CheckToAddr[i] := Text003;
                                    ContactText := '';
                                    CLEAR(SalesPurchPerson);
                                    CheckNoText := Text011;
                                    CheckDateText := Text012;
                                  END;

                                  Currency_UOM := GenJnlLine."Currency Code";
                                  IF GenJnlLine."Currency Code" = '' THEN BEGIN
                                    GLSetup.GET;
                                    Currency_UOM := GLSetup."LCY Code";
                                  END;

                                  // Check Dim Value Posting
                                  TableID[1] := DimMgt.TypeToTableID1(GenJnlLine."Account Type");
                                  No[1] := GenJnlLine."Account No.";
                                  TableID[2] := DimMgt.TypeToTableID1(GenJnlLine."Bal. Account Type");
                                  No[2] := GenJnlLine."Bal. Account No.";
                                  TableID[3] := DATABASE::Job;
                                  No[3] := GenJnlLine."Job No.";
                                  TableID[4] := DATABASE::"Salesperson/Purchaser";
                                  No[4] := GenJnlLine."Salespers./Purch. Code";
                                  TableID[5] := DATABASE::Campaign;
                                  No[5] := GenJnlLine."Campaign No.";
                                   IF NOT DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") THEN
                                    ThrowGenJnlLineError(GenJnlLine,Text066,DimMgt.GetDimValuePostingErr);

                                  WHTManagement.CheckApplicationPaymentWHT(GenJnlLine); // WHT Validation
                                  // PHP End
                                END;
                                 }

    { 43  ;1   ;Column  ;JournalTempName_GenJnlLine;
               SourceExpr="Journal Template Name" }

    { 44  ;1   ;Column  ;JournalBatchName_GenJnlLine;
               SourceExpr="Journal Batch Name" }

    { 45  ;1   ;Column  ;LineNo_GenJnlLine   ;
               SourceExpr="Line No." }

    { 48  ;1   ;Column  ;Amount_GenJnlLine2  ;
               Description=Previous Amount_GenJnlLine. Disabled for WHT Calculation;
               SourceExpr=GenJnlLine.Amount }

    { 35  ;1   ;Column  ;Amount_GenJnlLine   ;
               SourceExpr=CheckAmount }

    { 47  ;1   ;Column  ;DocDate_GenJnlLine  ;
               SourceExpr=GenJnlLine."Document No." }

    { 38  ;1   ;Column  ;DocNo_GenJnlLine    ;
               SourceExpr=GenJnlLine."External Document No." }

    { 49  ;1   ;Column  ;VoucherNo_GenJnlLine;
               SourceExpr=GenJnlLine."Voucher No." }

    { 42  ;1   ;Column  ;Currency_UOM        ;
               SourceExpr=Currency_UOM }

    { 39  ;1   ;Column  ;Beneficiary_Last_Name;
               SourceExpr=RecipientBankAddr[1] }

    { 40  ;1   ;Column  ;Beneficiary_First_Name;
               SourceExpr=RecipientBankAddr[2] }

    { 41  ;1   ;Column  ;Beneficiary_Middle_Name;
               SourceExpr=RecipientBankAddr[3] }

    { 79  ;1   ;Column  ;BankAccountNo_GenJnlLine;
               SourceExpr=RecipientBankAddr[4] }

    { 59  ;1   ;Column  ;Depositor_Name      ;
               SourceExpr=DepositorAddr[1] }

    { 77  ;1   ;Column  ;Depositor_Contact   ;
               SourceExpr=DepositorAddr[2] }

    { 46  ;1   ;Column  ;BalBankAccount      ;
               SourceExpr=DepositorAddr[3] }

    { 61  ;1   ;Column  ;FTNo                ;
               SourceExpr=UseCheckNo }

    { 62  ;1   ;Column  ;CVNo                ;
               SourceExpr="Voucher No." }

    { 78  ;1   ;Column  ;PostingDate         ;
               SourceExpr=FORMAT("Posting Date",0,'<Closing><Month,2>/<Day,2>/<Year4>') }

    { 1159;1   ;DataItem;CheckPages          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               FirstPage := TRUE;
                               FoundLast := FALSE;
                               TotalLineAmount := 0;
                               TotalLineDiscount := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF FoundLast THEN
                                    CurrReport.BREAK;

                                  UseCheckNo := INCSTR(UseCheckNo);
                                  IF NOT TestPrint THEN
                                    CheckNoText := UseCheckNo
                                  ELSE
                                    CheckNoText := Text011;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT TestPrint THEN BEGIN
                                  IF UseCheckNo <> GenJnlLine."Document No." THEN BEGIN
                                    GenJnlLine3.RESET;
                                    GenJnlLine3.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
                                    GenJnlLine3.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                                    GenJnlLine3.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                                    GenJnlLine3.SETRANGE("Posting Date",GenJnlLine."Posting Date");
                                    GenJnlLine3.SETRANGE("Document No.",UseCheckNo);
                                    IF GenJnlLine3.FIND('-') THEN
                                      GenJnlLine3.FIELDERROR("Document No.",STRSUBSTNO(Text013,UseCheckNo));
                                  END;

                                  IF ApplyMethod <> ApplyMethod::MoreLinesOneEntry THEN BEGIN
                                    GenJnlLine3 := GenJnlLine;
                                    GenJnlLine3.TESTFIELD("Posting No. Series",'');
                                    GenJnlLine3."Document No." := UseCheckNo;
                                    GenJnlLine3."Check Printed" := TRUE;
                                    GenJnlLine3.MODIFY;
                                  END ELSE BEGIN
                                    IF GenJnlLine2.FIND('-') THEN BEGIN
                                      HighestLineNo := GenJnlLine2."Line No.";
                                      REPEAT
                                        IF GenJnlLine2."Line No." > HighestLineNo THEN
                                          HighestLineNo := GenJnlLine2."Line No.";
                                        GenJnlLine3 := GenJnlLine2;
                                        GenJnlLine3.TESTFIELD("Posting No. Series",'');
                                        GenJnlLine3."Bal. Account No." := '';
                                        GenJnlLine3."Bank Payment Type" := GenJnlLine3."Bank Payment Type"::" ";
                                        GenJnlLine3."Document No." := UseCheckNo;
                                        GenJnlLine3."Check Printed" := TRUE;
                                        GenJnlLine3.VALIDATE(Amount);
                                        GenJnlLine3.MODIFY;
                                      UNTIL GenJnlLine2.NEXT = 0;
                                    END;

                                    GenJnlLine3.RESET;
                                    GenJnlLine3 := GenJnlLine;
                                    GenJnlLine3.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
                                    GenJnlLine3.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
                                    GenJnlLine3."Line No." := HighestLineNo;
                                    IF GenJnlLine3.NEXT = 0 THEN
                                      GenJnlLine3."Line No." := HighestLineNo + 10000
                                    ELSE BEGIN
                                      WHILE GenJnlLine3."Line No." = HighestLineNo + 1 DO BEGIN
                                        HighestLineNo := GenJnlLine3."Line No.";
                                        IF GenJnlLine3.NEXT = 0 THEN
                                          GenJnlLine3."Line No." := HighestLineNo + 20000;
                                      END;
                                      GenJnlLine3."Line No." := (GenJnlLine3."Line No." + HighestLineNo) DIV 2;
                                    END;
                                    GenJnlLine3.INIT;
                                    GenJnlLine3.VALIDATE("Posting Date",GenJnlLine."Posting Date");
                                    GenJnlLine3."Document Type" := GenJnlLine."Document Type";
                                    GenJnlLine3."Document No." := UseCheckNo;
                                    GenJnlLine3."Account Type" := GenJnlLine3."Account Type"::"Bank Account";
                                    GenJnlLine3.VALIDATE("Account No.",BankAcc2."No.");
                                    IF BalancingType <> BalancingType::"G/L Account" THEN
                                      GenJnlLine3.Description := STRSUBSTNO(Text014,SELECTSTR(BalancingType + 1,Text062),BalancingNo);
                                    GenJnlLine3.VALIDATE(Amount,-TotalLineAmount);
                                    GenJnlLine3."Bank Payment Type" := GenJnlLine3."Bank Payment Type"::"Computer Check";
                                    GenJnlLine3."Check Printed" := TRUE;
                                    GenJnlLine3."Source Code" := GenJnlLine."Source Code";
                                    GenJnlLine3."Reason Code" := GenJnlLine."Reason Code";
                                    GenJnlLine3."Allow Zero-Amount Posting" := TRUE;
                                    GenJnlLine3.INSERT;
                                  END;
                                END;

                                BankAcc2."Last FT No." := UseCheckNo;
                                BankAcc2.MODIFY;

                                CLEAR(CheckManagement);
                              END;
                               }

    { 24  ;2   ;Column  ;CheckToAddr1        ;
               SourceExpr=CheckToAddr[1] }

    { 52  ;2   ;Column  ;CheckDateText       ;
               SourceExpr=CheckDateText }

    { 96  ;2   ;Column  ;CheckNoText         ;
               SourceExpr=CheckNoText }

    { 37  ;2   ;Column  ;FirstPage           ;
               SourceExpr=FirstPage }

    { 36  ;2   ;Column  ;PreprintedStub      ;
               SourceExpr=PreprintedStub }

    { 89  ;2   ;Column  ;CheckNoTextCaption  ;
               SourceExpr=CheckNoTextCaptionLbl }

    { 4098;2   ;DataItem;PrintSettledLoop    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               MaxIteration=30;
               OnPreDataItem=BEGIN
                               IF NOT TestPrint THEN
                                 IF FirstPage THEN BEGIN
                                   FoundLast := TRUE;
                                   CASE ApplyMethod OF
                                     ApplyMethod::OneLineOneEntry:
                                       FoundLast := FALSE;
                                     ApplyMethod::OneLineID:
                                       CASE BalancingType OF
                                         BalancingType::Customer:
                                           BEGIN
                                             CustLedgEntry.RESET;
                                             CustLedgEntry.SETCURRENTKEY("Customer No.",Open,Positive);
                                             CustLedgEntry.SETRANGE("Customer No.",BalancingNo);
                                             CustLedgEntry.SETRANGE(Open,TRUE);
                                             CustLedgEntry.SETRANGE(Positive,TRUE);
                                             CustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
                                             FoundLast := NOT CustLedgEntry.FIND('-');
                                             IF FoundLast THEN BEGIN
                                               CustLedgEntry.SETRANGE(Positive,FALSE);
                                               FoundLast := NOT CustLedgEntry.FIND('-');
                                               FoundNegative := TRUE;
                                             END ELSE
                                               FoundNegative := FALSE;
                                           END;
                                         BalancingType::Vendor:
                                           BEGIN
                                             VendLedgEntry.RESET;
                                             VendLedgEntry.SETCURRENTKEY("Vendor No.",Open,Positive);
                                             VendLedgEntry.SETRANGE("Vendor No.",BalancingNo);
                                             VendLedgEntry.SETRANGE(Open,TRUE);
                                             VendLedgEntry.SETRANGE(Positive,TRUE);
                                             VendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
                                             FoundLast := NOT VendLedgEntry.FIND('-');
                                             IF FoundLast THEN BEGIN
                                               VendLedgEntry.SETRANGE(Positive,FALSE);
                                               FoundLast := NOT VendLedgEntry.FIND('-');
                                               FoundNegative := TRUE;
                                             END ELSE
                                               FoundNegative := FALSE;
                                           END;
                                       END;
                                     ApplyMethod::MoreLinesOneEntry:
                                       FoundLast := FALSE;
                                   END;
                                 END
                                 ELSE
                                   FoundLast := FALSE;

                               IF DocNo = '' THEN
                                 CurrencyCode2 := GenJnlLine."Currency Code";

                               IF PreprintedStub THEN
                                 TotalText := ''
                               ELSE
                                 TotalText := Text019;

                               IF GenJnlLine."Currency Code" <> '' THEN
                                 NetAmount := STRSUBSTNO(Text063,GenJnlLine."Currency Code")
                               ELSE BEGIN
                                 GLSetup.GET;
                                 NetAmount := STRSUBSTNO(Text063,GLSetup."LCY Code");
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT TestPrint THEN BEGIN
                                    IF FoundLast THEN BEGIN
                                      IF RemainingAmount <> 0 THEN BEGIN
                                        DocType := Text015;
                                        DocNo := '';
                                        ExtDocNo := '';
                                        DocDate := 0D;
                                        LineAmount := RemainingAmount;
                                        LineAmount2 := RemainingAmount;
                                        CurrentLineAmount := LineAmount2;
                                        LineDiscount := 0;
                                        RemainingAmount := 0;
                                      END ELSE
                                        CurrReport.BREAK;
                                    END ELSE
                                      CASE ApplyMethod OF
                                        ApplyMethod::OneLineOneEntry:
                                          BEGIN
                                            CASE BalancingType OF
                                              BalancingType::Customer:
                                                BEGIN
                                                  CustLedgEntry.RESET;
                                                  CustLedgEntry.SETCURRENTKEY("Document No.");
                                                  CustLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                                                  CustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                                                  CustLedgEntry.SETRANGE("Customer No.",BalancingNo);
                                                  CustLedgEntry.FIND('-');
                                                  CustUpdateAmounts(CustLedgEntry,RemainingAmount);
                                                END;
                                              BalancingType::Vendor:
                                                BEGIN
                                                  VendLedgEntry.RESET;
                                                  VendLedgEntry.SETCURRENTKEY("Document No.");
                                                  VendLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                                                  VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                                                  VendLedgEntry.SETRANGE("Vendor No.",BalancingNo);
                                                  VendLedgEntry.FIND('-');
                                                  VendUpdateAmounts(VendLedgEntry,RemainingAmount);
                                                END;
                                            END;
                                            RemainingAmount := RemainingAmount - LineAmount2;
                                            CurrentLineAmount := LineAmount2;
                                            FoundLast := TRUE;
                                          END;
                                        ApplyMethod::OneLineID:
                                          BEGIN
                                            CASE BalancingType OF
                                              BalancingType::Customer:
                                                BEGIN
                                                  CustUpdateAmounts(CustLedgEntry,RemainingAmount);
                                                  FoundLast := (CustLedgEntry.NEXT = 0) OR (RemainingAmount <= 0);
                                                  IF FoundLast AND NOT FoundNegative THEN BEGIN
                                                    CustLedgEntry.SETRANGE(Positive,FALSE);
                                                    FoundLast := NOT CustLedgEntry.FIND('-');
                                                    FoundNegative := TRUE;
                                                  END;
                                                END;
                                              BalancingType::Vendor:
                                                BEGIN
                                                  VendUpdateAmounts(VendLedgEntry,RemainingAmount);
                                                  FoundLast := (VendLedgEntry.NEXT = 0) OR (RemainingAmount <= 0);
                                                  IF FoundLast AND NOT FoundNegative THEN BEGIN
                                                    VendLedgEntry.SETRANGE(Positive,FALSE);
                                                    FoundLast := NOT VendLedgEntry.FIND('-');
                                                    FoundNegative := TRUE;
                                                  END;
                                                END;
                                            END;
                                            RemainingAmount := RemainingAmount - LineAmount2;
                                            CurrentLineAmount := LineAmount2;
                                          END;
                                        ApplyMethod::MoreLinesOneEntry:
                                          BEGIN
                                            CurrentLineAmount := GenJnlLine2.Amount;
                                            LineAmount2 := CurrentLineAmount;

                                            IF GenJnlLine2."Applies-to ID" <> '' THEN
                                              ERROR(Text016);
                                            GenJnlLine2.TESTFIELD("Check Printed",FALSE);
                                            GenJnlLine2.TESTFIELD("Bank Payment Type",GenJnlLine2."Bank Payment Type"::"Computer Check");
                                            IF BankAcc2."Currency Code" <> GenJnlLine2."Currency Code" THEN
                                              ERROR(Text005);
                                            IF GenJnlLine2."Applies-to Doc. No." = '' THEN BEGIN
                                              DocType := Text015;
                                              DocNo := '';
                                              ExtDocNo := '';
                                              DocDate := 0D;
                                              LineAmount := CurrentLineAmount;
                                              LineDiscount := 0;
                                            END ELSE
                                              CASE BalancingType OF
                                                BalancingType::"G/L Account":
                                                  BEGIN
                                                    DocType := FORMAT(GenJnlLine2."Document Type");
                                                    DocNo := GenJnlLine2."Document No.";
                                                    ExtDocNo := GenJnlLine2."External Document No.";
                                                    LineAmount := CurrentLineAmount;
                                                    LineDiscount := 0;
                                                  END;
                                                BalancingType::Customer:
                                                  BEGIN
                                                    CustLedgEntry.RESET;
                                                    CustLedgEntry.SETCURRENTKEY("Document No.");
                                                    CustLedgEntry.SETRANGE("Document Type",GenJnlLine2."Applies-to Doc. Type");
                                                    CustLedgEntry.SETRANGE("Document No.",GenJnlLine2."Applies-to Doc. No.");
                                                    CustLedgEntry.SETRANGE("Customer No.",BalancingNo);
                                                    CustLedgEntry.FIND('-');
                                                    CustUpdateAmounts(CustLedgEntry,CurrentLineAmount);
                                                    LineAmount := CurrentLineAmount;
                                                  END;
                                                BalancingType::Vendor:
                                                  BEGIN
                                                    VendLedgEntry.RESET;
                                                    IF GenJnlLine2."Source Line No." <> 0 THEN
                                                      VendLedgEntry.SETRANGE("Entry No.",GenJnlLine2."Source Line No.")
                                                    ELSE BEGIN
                                                      VendLedgEntry.SETCURRENTKEY("Document No.");
                                                      VendLedgEntry.SETRANGE("Document Type",GenJnlLine2."Applies-to Doc. Type");
                                                      VendLedgEntry.SETRANGE("Document No.",GenJnlLine2."Applies-to Doc. No.");
                                                      VendLedgEntry.SETRANGE("Vendor No.",BalancingNo);
                                                    END;
                                                    VendLedgEntry.FIND('-');
                                                    VendUpdateAmounts(VendLedgEntry,CurrentLineAmount);
                                                    LineAmount := CurrentLineAmount;
                                                  END;
                                                BalancingType::"Bank Account":
                                                  BEGIN
                                                    DocType := FORMAT(GenJnlLine2."Document Type");
                                                    DocNo := GenJnlLine2."Document No.";
                                                    ExtDocNo := GenJnlLine2."External Document No.";
                                                    LineAmount := CurrentLineAmount;
                                                    LineDiscount := 0;
                                                  END;
                                              END;
                                            FoundLast := GenJnlLine2.NEXT = 0;
                                          END;
                                      END;

                                  //  TotalLineAmount := TotalLineAmount + LineAmount2; // PHP Original Code
                                    TotalLineAmount := TotalLineAmount + LineAmount2 - WHTAmount; // PHP Start WHT Computation
                                    TotalLineDiscount := TotalLineDiscount + LineDiscount;
                                  END ELSE BEGIN
                                    IF FoundLast THEN
                                      CurrReport.BREAK;
                                    FoundLast := TRUE;
                                    DocType := Text018;
                                    DocNo := Text010;
                                    ExtDocNo := Text010;
                                    LineAmount := 0;
                                    LineDiscount := 0;
                                  END;
                                END;
                                 }

    { 31  ;3   ;Column  ;NetAmount           ;
               SourceExpr=NetAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 4   ;3   ;Column  ;TotalLineDiscountLineDiscount;
               SourceExpr=TotalLineDiscount - LineDiscount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 26  ;3   ;Column  ;TotalLineAmountLineAmount;
               SourceExpr=TotalLineAmount - LineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 32  ;3   ;Column  ;TotalLineAmountLineAmount2;
               SourceExpr=TotalLineAmount - LineAmount2;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 113 ;3   ;Column  ;LineAmount          ;
               SourceExpr=LineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 114 ;3   ;Column  ;LineDiscount        ;
               SourceExpr=LineDiscount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 115 ;3   ;Column  ;LineAmountLineDiscount;
               SourceExpr=LineAmount + LineDiscount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 116 ;3   ;Column  ;DocNo               ;
               SourceExpr=DocNo }

    { 13  ;3   ;Column  ;DocDate             ;
               SourceExpr=DocDate }

    { 28  ;3   ;Column  ;CurrencyCode2       ;
               SourceExpr=CurrencyCode2;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 29  ;3   ;Column  ;CurrentLineAmount   ;
               SourceExpr=CurrentLineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 34  ;3   ;Column  ;ExtDocNo            ;
               SourceExpr=ExtDocNo }

    { 108 ;3   ;Column  ;LineAmountCaption   ;
               SourceExpr=LineAmountCaptionLbl }

    { 109 ;3   ;Column  ;LineDiscountCaption ;
               SourceExpr=LineDiscountCaptionLbl }

    { 110 ;3   ;Column  ;AmountCaption       ;
               SourceExpr=AmountCaptionLbl }

    { 111 ;3   ;Column  ;DocNoCaption        ;
               SourceExpr=DocNoCaptionLbl }

    { 14  ;3   ;Column  ;DocDateCaption      ;
               SourceExpr=DocDateCaptionLbl }

    { 25  ;3   ;Column  ;CurrencyCodeCaption ;
               SourceExpr=CurrencyCodeCaptionLbl }

    { 33  ;3   ;Column  ;YourDocNoCaption    ;
               SourceExpr=YourDocNoCaptionLbl }

    { 27  ;3   ;Column  ;TransportCaption    ;
               SourceExpr=TransportCaptionLbl }

    { 3931;2   ;DataItem;PrintCheck          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               MaxIteration=1;
               OnAfterGetRecord=VAR
                                  Decimals@1000 : Decimal;
                                  CheckLedgEntryAmount@1001 : Decimal;
                                BEGIN
                                  IF NOT TestPrint THEN BEGIN
                                    WITH GenJnlLine DO BEGIN
                                      CheckLedgEntry.INIT;
                                      CheckLedgEntry."Bank Account No." := BankAcc2."No.";
                                      CheckLedgEntry."Posting Date" := "Posting Date";
                                      CheckLedgEntry."Document Type" := "Document Type";
                                      CheckLedgEntry."Document No." := UseCheckNo;
                                      CheckLedgEntry."External Document No." := "External Document No.";
                                      CheckLedgEntry.Description := Description;
                                      CheckLedgEntry."Bank Payment Type" := "Bank Payment Type";
                                      CheckLedgEntry."Bal. Account Type" := BalancingType;
                                      CheckLedgEntry."Bal. Account No." := BalancingNo;
                                      CheckLedgEntry."Bal. Bank Code." := "Customer/Vendor Bank";
                                      CheckLedgEntry."Bal. Bank Account No." := "Bank Account No.";
                                      // PHP Start
                                      CheckLedgEntry."Voucher No." := "Voucher No.";
                                      IF CheckLedgEntry."Bal. Account Type" <> CheckLedgEntry."Bal. Account Type"::"Bank Account" THEN BEGIN
                                        CheckLedgEntry."Recipient Bank Account" := RecipientBankAddr[4];
                                        CheckLedgEntry."Recipient Bank Name" := RecipientBankAddr[5];
                                      END;
                                      // PHP End
                                      IF FoundLast THEN BEGIN
                                        IF TotalLineAmount <= 0 THEN
                                          ERROR(
                                            Text020,
                                            UseCheckNo,TotalLineAmount);
                                        CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::Printed;
                                        CheckLedgEntry.Amount := TotalLineAmount;
                                        CheckLedgEntry."WHT Amount" := WHTAmount; // PHP Start WHT Computation
                                      END ELSE BEGIN
                                        CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::Voided;
                                        CheckLedgEntry.Amount := 0;
                                      END;
                                      CheckLedgEntry."Check Date" := "Posting Date";
                                      CheckLedgEntry."Check No." := UseCheckNo;
                                      CheckManagement.InsertCheck(CheckLedgEntry,RECORDID);

                                      IF FoundLast THEN BEGIN
                                        IF BankAcc2."Currency Code" <> '' THEN
                                          Currency.GET(BankAcc2."Currency Code")
                                        ELSE
                                          Currency.InitRoundingPrecision;
                                        CheckLedgEntryAmount := CheckLedgEntry.Amount;
                                        Decimals := CheckLedgEntry.Amount - ROUND(CheckLedgEntry.Amount,1,'<');
                                        IF STRLEN(FORMAT(Decimals)) < STRLEN(FORMAT(Currency."Amount Rounding Precision")) THEN
                                          IF Decimals = 0 THEN
                                            CheckAmountText := FORMAT(CheckLedgEntryAmount,0,0) +
                                              COPYSTR(FORMAT(0.01),2,1) +
                                              PADSTR('',STRLEN(FORMAT(Currency."Amount Rounding Precision")) - 2,'0')
                                          ELSE
                                            CheckAmountText := FORMAT(CheckLedgEntryAmount,0,0) +
                                              PADSTR('',STRLEN(FORMAT(Currency."Amount Rounding Precision")) - STRLEN(FORMAT(Decimals)),'0')
                                        ELSE
                                          CheckAmountText := FORMAT(CheckLedgEntryAmount,0,0);
                                        FormatNoText(DescriptionLine,CheckLedgEntry.Amount,BankAcc2."Currency Code");
                                        VoidText := '';
                                      END ELSE BEGIN
                                        CLEAR(CheckAmountText);
                                        CLEAR(DescriptionLine);
                                        TotalText := Text065;
                                        DescriptionLine[1] := Text021;
                                        DescriptionLine[2] := DescriptionLine[1];
                                        VoidText := Text022;
                                      END;
                                    END;
                                  END ELSE
                                    WITH GenJnlLine DO BEGIN
                                      CheckLedgEntry.INIT;
                                      CheckLedgEntry."Bank Account No." := BankAcc2."No.";
                                      CheckLedgEntry."Posting Date" := "Posting Date";
                                      CheckLedgEntry."Document No." := UseCheckNo;
                                      CheckLedgEntry.Description := Text023;
                                      CheckLedgEntry."Bank Payment Type" := "Bank Payment Type"::"Computer Check";
                                      CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::"Test Print";
                                      CheckLedgEntry."Check Date" := "Posting Date";
                                      CheckLedgEntry."Check No." := UseCheckNo;
                                      // PHP Start
                                      CheckLedgEntry."Voucher No." := "Voucher No.";
                                      IF CheckLedgEntry."Bal. Account Type" <> CheckLedgEntry."Bal. Account Type"::"Bank Account" THEN BEGIN
                                        CheckLedgEntry."Recipient Bank Account" := RecipientBankAddr[4];
                                        CheckLedgEntry."Recipient Bank Name" := RecipientBankAddr[5];
                                      END;
                                      // PHP End
                                      CheckManagement.InsertCheck(CheckLedgEntry,RECORDID);

                                      CheckAmountText := Text024;
                                      DescriptionLine[1] := Text025;
                                      DescriptionLine[2] := DescriptionLine[1];
                                      VoidText := Text022;
                                    END;

                                  ChecksPrinted := ChecksPrinted + 1;
                                  FirstPage := FALSE;
                                END;
                                 }

    { 1   ;3   ;Column  ;CheckAmountText     ;
               SourceExpr=CheckAmountText }

    { 2   ;3   ;Column  ;CheckDateTextControl2;
               SourceExpr=CheckDateText }

    { 5   ;3   ;Column  ;DescriptionLine2    ;
               SourceExpr=DescriptionLine[2] }

    { 6   ;3   ;Column  ;DescriptionLine1    ;
               SourceExpr=DescriptionLine[1] }

    { 7   ;3   ;Column  ;CheckToAddr1Control7;
               SourceExpr=CheckToAddr[1] }

    { 8   ;3   ;Column  ;CheckToAddr2        ;
               SourceExpr=CheckToAddr[2] }

    { 9   ;3   ;Column  ;CheckToAddr4        ;
               SourceExpr=CheckToAddr[4] }

    { 10  ;3   ;Column  ;CheckToAddr3        ;
               SourceExpr=CheckToAddr[3] }

    { 12  ;3   ;Column  ;CheckToAddr5        ;
               SourceExpr=CheckToAddr[5] }

    { 15  ;3   ;Column  ;CompanyAddr4        ;
               SourceExpr=CompanyAddr[4] }

    { 16  ;3   ;Column  ;CompanyAddr8        ;
               SourceExpr=CompanyAddr[8] }

    { 17  ;3   ;Column  ;CompanyAddr7        ;
               SourceExpr=CompanyAddr[7] }

    { 18  ;3   ;Column  ;CompanyAddr6        ;
               SourceExpr=CompanyAddr[6] }

    { 19  ;3   ;Column  ;CompanyAddr5        ;
               SourceExpr=CompanyAddr[5] }

    { 20  ;3   ;Column  ;CompanyAddr3        ;
               SourceExpr=CompanyAddr[3] }

    { 21  ;3   ;Column  ;CheckNoTextControl21;
               SourceExpr=CheckNoText }

    { 22  ;3   ;Column  ;CompanyAddr2        ;
               SourceExpr=CompanyAddr[2] }

    { 23  ;3   ;Column  ;CompanyAddr1        ;
               SourceExpr=CompanyAddr[1] }

    { 30  ;3   ;Column  ;TotalLineAmount     ;
               SourceExpr=TotalLineAmount;
               AutoFormatType=1;
               AutoFormatExpr=GenJnlLine."Currency Code" }

    { 11  ;3   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 3   ;3   ;Column  ;VoidText            ;
               SourceExpr=VoidText }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN

                   IF BankAcc2."No." <> '' THEN
                     IF BankAcc2.GET(BankAcc2."No.") THEN
                       UseCheckNo := BankAcc2."Last FT No."
                     ELSE BEGIN
                       BankAcc2."No." := '';
                       UseCheckNo := '';
                     END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=BankAccount;
                  CaptionML=ENU=Bank Account;
                  SourceExpr=BankAcc2."No.";
                  TableRelation="Bank Account";
                  OnValidate=BEGIN
                               InputBankAccount;
                             END;
                              }

      { 3   ;2   ;Field     ;
                  Name=LastCheckNo;
                  CaptionML=ENU=Last Check No.;
                  SourceExpr=UseCheckNo }

      { 11  ;2   ;Field     ;
                  Name=OneCheckPerVendorPerDocumentNo;
                  CaptionML=ENU=One Check per Vendor per Document No.;
                  SourceExpr=OneCheckPrVendor;
                  MultiLine=Yes }

      { 5   ;2   ;Field     ;
                  Name=ReprintChecks;
                  CaptionML=ENU=Reprint Checks;
                  SourceExpr=ReprintChecks }

      { 9   ;2   ;Field     ;
                  Name=TestPrinting;
                  CaptionML=ENU=Test Print;
                  SourceExpr=TestPrint }

      { 13  ;2   ;Field     ;
                  CaptionML=ENU=Preprinted Stub;
                  SourceExpr=PreprintedStub }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Preview is not allowed.';
      Text001@1001 : TextConst 'ENU=Last Check No. must be filled in.';
      Text002@1002 : TextConst 'ENU=Filters on %1 and %2 are not allowed.';
      Text003@1003 : TextConst 'ENU=XXXXXXXXXXXXXXXX';
      Text004@1004 : TextConst 'ENU=must be entered.';
      Text005@1005 : TextConst 'ENU=The Bank Account and the General Journal Line must have the same currency.';
      Text006@1006 : TextConst 'ENU=Salesperson';
      Text007@1007 : TextConst 'ENU=Purchaser';
      Text008@1008 : TextConst 'ENU=Both Bank Accounts must have the same currency.';
      Text009@1009 : TextConst 'ENU=Our Contact';
      Text010@1010 : TextConst 'ENU=XXXXXXXXXX';
      Text011@1011 : TextConst 'ENU=XXXX';
      Text012@1012 : TextConst 'ENU=XX.XXXXXXXXXX.XXXX';
      Text013@1013 : TextConst 'ENU=%1 already exists.';
      Text014@1014 : TextConst 'ENU=Check for %1 %2';
      Text015@1015 : TextConst 'ENU=Payment';
      Text016@1016 : TextConst 'ENU=In the Check report, One Check per Vendor and Document No.\must not be activated when Applies-to ID is specified in the journal lines.';
      Text018@1018 : TextConst 'ENU=XXX';
      Text019@1019 : TextConst 'ENU=Total';
      Text020@1020 : TextConst 'ENU=The total amount of check %1 is %2. The amount must be positive.';
      Text021@1021 : TextConst 'ENU=VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID VOID';
      Text022@1022 : TextConst 'ENU=NON-NEGOTIABLE';
      Text023@1023 : TextConst 'ENU=Test print';
      Text024@1024 : TextConst 'ENU=XXXX.XX';
      Text025@1025 : TextConst 'ENU=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      Text026@1026 : TextConst 'ENU=ZERO';
      Text027@1027 : TextConst 'ENU=HUNDRED';
      Text028@1028 : TextConst 'ENU=AND';
      Text029@1029 : TextConst 'ENU=%1 results in a written number that is too long.';
      Text030@1030 : TextConst 'ENU=" is already applied to %1 %2 for customer %3."';
      Text031@1031 : TextConst 'ENU=" is already applied to %1 %2 for vendor %3."';
      Text032@1032 : TextConst 'ENU=ONE';
      Text033@1033 : TextConst 'ENU=TWO';
      Text034@1034 : TextConst 'ENU=THREE';
      Text035@1035 : TextConst 'ENU=FOUR';
      Text036@1036 : TextConst 'ENU=FIVE';
      Text037@1037 : TextConst 'ENU=SIX';
      Text038@1038 : TextConst 'ENU=SEVEN';
      Text039@1039 : TextConst 'ENU=EIGHT';
      Text040@1040 : TextConst 'ENU=NINE';
      Text041@1041 : TextConst 'ENU=TEN';
      Text042@1042 : TextConst 'ENU=ELEVEN';
      Text043@1043 : TextConst 'ENU=TWELVE';
      Text044@1044 : TextConst 'ENU=THIRTEEN';
      Text045@1045 : TextConst 'ENU=FOURTEEN';
      Text046@1046 : TextConst 'ENU=FIFTEEN';
      Text047@1047 : TextConst 'ENU=SIXTEEN';
      Text048@1048 : TextConst 'ENU=SEVENTEEN';
      Text049@1049 : TextConst 'ENU=EIGHTEEN';
      Text050@1050 : TextConst 'ENU=NINETEEN';
      Text051@1051 : TextConst 'ENU=TWENTY';
      Text052@1052 : TextConst 'ENU=THIRTY';
      Text053@1053 : TextConst 'ENU=FORTY';
      Text054@1054 : TextConst 'ENU=FIFTY';
      Text055@1055 : TextConst 'ENU=SIXTY';
      Text056@1056 : TextConst 'ENU=SEVENTY';
      Text057@1057 : TextConst 'ENU=EIGHTY';
      Text058@1058 : TextConst 'ENU=NINETY';
      Text059@1059 : TextConst 'ENU=THOUSAND';
      Text060@1060 : TextConst 'ENU=MILLION';
      Text061@1061 : TextConst 'ENU=BILLION';
      CompanyInfo@1062 : Record 79;
      SalesPurchPerson@1063 : Record 13;
      GenJnlLine2@1064 : Record 81;
      GenJnlLine3@1065 : Record 81;
      Cust@1066 : Record 18;
      CustLedgEntry@1067 : Record 21;
      Vend@1068 : Record 23;
      VendLedgEntry@1069 : Record 25;
      BankAcc@1070 : Record 270;
      BankAcc2@1071 : Record 270;
      CheckLedgEntry@1072 : Record 272;
      Currency@1073 : Record 4;
      FormatAddr@1074 : Codeunit 365;
      CheckManagement@1075 : Codeunit 367;
      DimMgt@1131 : Codeunit 408;
      CompanyAddr@1076 : ARRAY [8] OF Text[50];
      CheckToAddr@1077 : ARRAY [8] OF Text[50];
      OnesText@1078 : ARRAY [20] OF Text[30];
      TensText@1079 : ARRAY [10] OF Text[30];
      ExponentText@1080 : ARRAY [5] OF Text[30];
      BalancingType@1081 : 'G/L Account,Customer,Vendor,Bank Account';
      BalancingNo@1082 : Code[20];
      ContactText@1083 : Text[30];
      CheckNoText@1084 : Text[30];
      CheckDateText@1085 : Text[30];
      CheckAmountText@1086 : Text[30];
      DescriptionLine@1087 : ARRAY [2] OF Text[80];
      DocType@1088 : Text[30];
      DocNo@1089 : Text[30];
      ExtDocNo@1119 : Text[35];
      VoidText@1090 : Text[30];
      LineAmount@1091 : Decimal;
      LineDiscount@1092 : Decimal;
      TotalLineAmount@1093 : Decimal;
      TotalLineDiscount@1094 : Decimal;
      RemainingAmount@1095 : Decimal;
      CurrentLineAmount@1096 : Decimal;
      UseCheckNo@1097 : Code[20];
      FoundLast@1098 : Boolean;
      ReprintChecks@1099 : Boolean;
      TestPrint@1100 : Boolean;
      FirstPage@1101 : Boolean;
      OneCheckPrVendor@1102 : Boolean;
      FoundNegative@1103 : Boolean;
      ApplyMethod@1104 : 'Payment,OneLineOneEntry,OneLineID,MoreLinesOneEntry';
      ChecksPrinted@1105 : Integer;
      HighestLineNo@1106 : Integer;
      PreprintedStub@1107 : Boolean;
      TotalText@1108 : Text[10];
      DocDate@1109 : Date;
      i@1110 : Integer;
      Text062@1111 : TextConst 'ENU=G/L Account,Customer,Vendor,Bank Account';
      CurrencyCode2@1112 : Code[10];
      NetAmount@1114 : Text[30];
      CurrencyExchangeRate@1115 : Record 330;
      LineAmount2@1116 : Decimal;
      Text063@1117 : TextConst 'ENU=Net Amount %1';
      GLSetup@1118 : Record 98;
      Text064@1113 : TextConst 'ENU=%1 must not be %2 for %3 %4.';
      Text065@1120 : TextConst 'ENU=Subtotal';
      Text066@1132 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      CheckNoTextCaptionLbl@6359 : TextConst 'ENU=Check No.';
      LineAmountCaptionLbl@5261 : TextConst 'ENU=Net Amount';
      LineDiscountCaptionLbl@3244 : TextConst 'ENU=Discount';
      AmountCaptionLbl@7794 : TextConst 'ENU=Amount';
      DocNoCaptionLbl@2117 : TextConst 'ENU=Document No.';
      DocDateCaptionLbl@6175 : TextConst 'ENU=Document Date';
      CurrencyCodeCaptionLbl@2455 : TextConst 'ENU=Currency Code';
      YourDocNoCaptionLbl@4226 : TextConst 'ENU=Your Doc. No.';
      TransportCaptionLbl@2440 : TextConst 'ENU=Transport';
      AccNo_D@1140 : Text;
      Currency_UOM@1123 : Text;
      WHTManagement@1134 : Codeunit 50500;
      CheckAmount@1133 : Decimal;
      WHTAmount@1127 : Decimal;
      RecipientBankAddr@1121 : ARRAY [10] OF Text;
      DepositorAddr@1017 : ARRAY [3] OF Text;
      BankAcc3@1142 : Record 270;
      VendorBankAcc@1128 : Record 288;
      RecipientBankNo@1129 : Code[10];
      RecipientBankName@1130 : Text[50];

    PROCEDURE FormatNoText@1(VAR NoText@1000 : ARRAY [2] OF Text[80];No@1001 : Decimal;CurrencyCode@1002 : Code[10]);
    VAR
      PrintExponent@1003 : Boolean;
      Ones@1004 : Integer;
      Tens@1005 : Integer;
      Hundreds@1006 : Integer;
      Exponent@1007 : Integer;
      NoTextIndex@1008 : Integer;
      DecimalPosition@1010 : Decimal;
    BEGIN
      CLEAR(NoText);
      NoTextIndex := 1;
      NoText[1] := '****';
      GLSetup.GET;

      IF No < 1 THEN
        AddToNoText(NoText,NoTextIndex,PrintExponent,Text026)
      ELSE
        FOR Exponent := 4 DOWNTO 1 DO BEGIN
          PrintExponent := FALSE;
          Ones := No DIV POWER(1000,Exponent - 1);
          Hundreds := Ones DIV 100;
          Tens := (Ones MOD 100) DIV 10;
          Ones := Ones MOD 10;
          IF Hundreds > 0 THEN BEGIN
            AddToNoText(NoText,NoTextIndex,PrintExponent,OnesText[Hundreds]);
            AddToNoText(NoText,NoTextIndex,PrintExponent,Text027);
          END;
          IF Tens >= 2 THEN BEGIN
            AddToNoText(NoText,NoTextIndex,PrintExponent,TensText[Tens]);
            IF Ones > 0 THEN
              AddToNoText(NoText,NoTextIndex,PrintExponent,OnesText[Ones]);
          END ELSE
            IF (Tens * 10 + Ones) > 0 THEN
              AddToNoText(NoText,NoTextIndex,PrintExponent,OnesText[Tens * 10 + Ones]);
          IF PrintExponent AND (Exponent > 1) THEN
            AddToNoText(NoText,NoTextIndex,PrintExponent,ExponentText[Exponent]);
          No := No - (Hundreds * 100 + Tens * 10 + Ones) * POWER(1000,Exponent - 1);
        END;

      AddToNoText(NoText,NoTextIndex,PrintExponent,Text028);
      DecimalPosition := GetAmtDecimalPosition;
      AddToNoText(NoText,NoTextIndex,PrintExponent,(FORMAT(No * DecimalPosition) + '/' + FORMAT(DecimalPosition) + ' ONLY ****'));

      IF CurrencyCode <> '' THEN
        AddToNoText(NoText,NoTextIndex,PrintExponent,CurrencyCode);
    END;

    LOCAL PROCEDURE AddToNoText@2(VAR NoText@1000 : ARRAY [2] OF Text[80];VAR NoTextIndex@1001 : Integer;VAR PrintExponent@1002 : Boolean;AddText@1003 : Text[30]);
    BEGIN
      PrintExponent := TRUE;

      WHILE STRLEN(NoText[NoTextIndex] + ' ' + AddText) > MAXSTRLEN(NoText[1]) DO BEGIN
        NoTextIndex := NoTextIndex + 1;
        IF NoTextIndex > ARRAYLEN(NoText) THEN
          ERROR(Text029,AddText);
      END;

      NoText[NoTextIndex] := DELCHR(NoText[NoTextIndex] + ' ' + AddText,'<');
    END;

    LOCAL PROCEDURE CustUpdateAmounts@3(VAR CustLedgEntry2@1000 : Record 21;RemainingAmount2@1001 : Decimal);
    BEGIN
      IF (ApplyMethod = ApplyMethod::OneLineOneEntry) OR
         (ApplyMethod = ApplyMethod::MoreLinesOneEntry)
      THEN BEGIN
        GenJnlLine3.RESET;
        GenJnlLine3.SETCURRENTKEY(
          "Account Type","Account No.","Applies-to Doc. Type","Applies-to Doc. No.");
        GenJnlLine3.SETRANGE("Account Type",GenJnlLine3."Account Type"::Customer);
        GenJnlLine3.SETRANGE("Account No.",CustLedgEntry2."Customer No.");
        GenJnlLine3.SETRANGE("Applies-to Doc. Type",CustLedgEntry2."Document Type");
        GenJnlLine3.SETRANGE("Applies-to Doc. No.",CustLedgEntry2."Document No.");
        IF ApplyMethod = ApplyMethod::OneLineOneEntry THEN
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine."Line No.")
        ELSE
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine2."Line No.");
        IF CustLedgEntry2."Document Type" <> CustLedgEntry2."Document Type"::" " THEN
          IF GenJnlLine3.FIND('-') THEN
            GenJnlLine3.FIELDERROR(
              "Applies-to Doc. No.",
              STRSUBSTNO(
                Text030,
                CustLedgEntry2."Document Type",CustLedgEntry2."Document No.",
                CustLedgEntry2."Customer No."));
      END;

      DocType := FORMAT(CustLedgEntry2."Document Type");
      DocNo := CustLedgEntry2."Document No.";
      ExtDocNo := CustLedgEntry2."External Document No.";
      DocDate := CustLedgEntry2."Posting Date";
      CurrencyCode2 := CustLedgEntry2."Currency Code";

      CustLedgEntry2.CALCFIELDS("Remaining Amount");

      LineAmount :=
        -ABSMin(
          CustLedgEntry2."Remaining Amount" -
          CustLedgEntry2."Remaining Pmt. Disc. Possible" -
          CustLedgEntry2."Accepted Payment Tolerance",
          CustLedgEntry2."Amount to Apply");
      LineAmount2 :=
        ROUND(
          ExchangeAmt(CustLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,LineAmount),
          Currency."Amount Rounding Precision");

      IF ((CustLedgEntry2."Document Type" IN [CustLedgEntry2."Document Type"::Invoice,
                                              CustLedgEntry2."Document Type"::"Credit Memo"]) AND
          (CustLedgEntry2."Remaining Pmt. Disc. Possible" <> 0) AND
          (CustLedgEntry2."Posting Date" <= CustLedgEntry2."Pmt. Discount Date")) OR
         CustLedgEntry2."Accepted Pmt. Disc. Tolerance"
      THEN BEGIN
        LineDiscount := -CustLedgEntry2."Remaining Pmt. Disc. Possible";
        IF CustLedgEntry2."Accepted Payment Tolerance" <> 0 THEN
          LineDiscount := LineDiscount - CustLedgEntry2."Accepted Payment Tolerance";
      END ELSE BEGIN
        IF RemainingAmount2 >=
           ROUND(
             -ExchangeAmt(CustLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
               CustLedgEntry2."Amount to Apply"),Currency."Amount Rounding Precision")
        THEN
          LineAmount2 :=
            ROUND(
              -ExchangeAmt(CustLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
                CustLedgEntry2."Amount to Apply"),Currency."Amount Rounding Precision")
        ELSE BEGIN
          LineAmount2 := RemainingAmount2;
          LineAmount :=
            ROUND(
              ExchangeAmt(CustLedgEntry2."Posting Date",CurrencyCode2,GenJnlLine."Currency Code",
                LineAmount2),Currency."Amount Rounding Precision");
        END;
        LineDiscount := 0;
      END;
    END;

    LOCAL PROCEDURE VendUpdateAmounts@4(VAR VendLedgEntry2@1000 : Record 25;RemainingAmount2@1001 : Decimal);
    BEGIN
      IF (ApplyMethod = ApplyMethod::OneLineOneEntry) OR
         (ApplyMethod = ApplyMethod::MoreLinesOneEntry)
      THEN BEGIN
        GenJnlLine3.RESET;
        GenJnlLine3.SETCURRENTKEY(
          "Account Type","Account No.","Applies-to Doc. Type","Applies-to Doc. No.");
        GenJnlLine3.SETRANGE("Account Type",GenJnlLine3."Account Type"::Vendor);
        GenJnlLine3.SETRANGE("Account No.",VendLedgEntry2."Vendor No.");
        GenJnlLine3.SETRANGE("Applies-to Doc. Type",VendLedgEntry2."Document Type");
        GenJnlLine3.SETRANGE("Applies-to Doc. No.",VendLedgEntry2."Document No.");
        IF ApplyMethod = ApplyMethod::OneLineOneEntry THEN
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine."Line No.")
        ELSE BEGIN
          GenJnlLine3.SETFILTER("Line No.",'<>%1',GenJnlLine2."Line No.");
          IF VendLedgEntry2."Document Type" <> VendLedgEntry2."Document Type"::" " THEN
            IF GenJnlLine3.FIND('-') THEN
              GenJnlLine3.FIELDERROR(
                "Applies-to Doc. No.",
                STRSUBSTNO(
                  Text031,
                  VendLedgEntry2."Document Type",VendLedgEntry2."Document No.",
                  VendLedgEntry2."Vendor No."));
        END;
      END;

      DocType := FORMAT(VendLedgEntry2."Document Type");
      DocNo := VendLedgEntry2."Document No.";
      ExtDocNo := VendLedgEntry2."External Document No.";
      DocDate := VendLedgEntry2."Posting Date";
      CurrencyCode2 := VendLedgEntry2."Currency Code";
      VendLedgEntry2.CALCFIELDS("Remaining Amount");

      LineAmount :=
        -ABSMin(
          VendLedgEntry2."Remaining Amount" -
          VendLedgEntry2."Remaining Pmt. Disc. Possible" -
          VendLedgEntry2."Accepted Payment Tolerance",
          VendLedgEntry2."Amount to Apply");

      LineAmount2 :=
        ROUND(
          ExchangeAmt(VendLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,LineAmount),
          Currency."Amount Rounding Precision");

      IF ((VendLedgEntry2."Document Type" IN [VendLedgEntry2."Document Type"::Invoice,
                                              VendLedgEntry2."Document Type"::"Credit Memo"]) AND
          (VendLedgEntry2."Remaining Pmt. Disc. Possible" <> 0) AND
          (GenJnlLine."Posting Date" <= VendLedgEntry2."Pmt. Discount Date")) OR
         VendLedgEntry2."Accepted Pmt. Disc. Tolerance"
      THEN BEGIN
        LineDiscount := -VendLedgEntry2."Remaining Pmt. Disc. Possible";
        IF VendLedgEntry2."Accepted Payment Tolerance" <> 0 THEN
          LineDiscount := LineDiscount - VendLedgEntry2."Accepted Payment Tolerance";
      END ELSE BEGIN
        IF ABS(RemainingAmount2) >=
           ABS(ROUND(
               ExchangeAmt(VendLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
                 VendLedgEntry2."Amount to Apply"),Currency."Amount Rounding Precision"))
        THEN BEGIN
          LineAmount2 :=
            ROUND(
              -(ExchangeAmt(VendLedgEntry2."Posting Date",GenJnlLine."Currency Code",CurrencyCode2,
                  VendLedgEntry2."Amount to Apply")),Currency."Amount Rounding Precision");
          LineAmount :=
            ROUND(
              ExchangeAmt(VendLedgEntry2."Posting Date",CurrencyCode2,GenJnlLine."Currency Code",
                LineAmount2),Currency."Amount Rounding Precision");
        END ELSE BEGIN
          LineAmount2 := RemainingAmount2;
          LineAmount :=
            ROUND(
              ExchangeAmt(VendLedgEntry2."Posting Date",CurrencyCode2,GenJnlLine."Currency Code",
                LineAmount2),Currency."Amount Rounding Precision");
        END;
        LineDiscount := 0;
      END;
    END;

    PROCEDURE InitTextVariable@5();
    BEGIN
      OnesText[1] := Text032;
      OnesText[2] := Text033;
      OnesText[3] := Text034;
      OnesText[4] := Text035;
      OnesText[5] := Text036;
      OnesText[6] := Text037;
      OnesText[7] := Text038;
      OnesText[8] := Text039;
      OnesText[9] := Text040;
      OnesText[10] := Text041;
      OnesText[11] := Text042;
      OnesText[12] := Text043;
      OnesText[13] := Text044;
      OnesText[14] := Text045;
      OnesText[15] := Text046;
      OnesText[16] := Text047;
      OnesText[17] := Text048;
      OnesText[18] := Text049;
      OnesText[19] := Text050;

      TensText[1] := '';
      TensText[2] := Text051;
      TensText[3] := Text052;
      TensText[4] := Text053;
      TensText[5] := Text054;
      TensText[6] := Text055;
      TensText[7] := Text056;
      TensText[8] := Text057;
      TensText[9] := Text058;

      ExponentText[1] := '';
      ExponentText[2] := Text059;
      ExponentText[3] := Text060;
      ExponentText[4] := Text061;
    END;

    PROCEDURE InitializeRequest@6(BankAcc@1000 : Code[20];LastCheckNo@1001 : Code[20];NewOneCheckPrVend@1002 : Boolean;NewReprintChecks@1003 : Boolean;NewTestPrint@1004 : Boolean;NewPreprintedStub@1005 : Boolean);
    BEGIN
      IF BankAcc <> '' THEN
        IF BankAcc2.GET(BankAcc) THEN BEGIN
          UseCheckNo := LastCheckNo;
          OneCheckPrVendor := NewOneCheckPrVend;
          ReprintChecks := NewReprintChecks;
          TestPrint := NewTestPrint;
          PreprintedStub := NewPreprintedStub;
        END;
    END;

    LOCAL PROCEDURE ExchangeAmt@7(PostingDate@1000 : Date;CurrencyCode@1001 : Code[10];CurrencyCode2@1003 : Code[10];Amount@1002 : Decimal) Amount2 : Decimal;
    BEGIN
      IF (CurrencyCode <> '') AND (CurrencyCode2 = '') THEN
        Amount2 :=
          CurrencyExchangeRate.ExchangeAmtLCYToFCY(
            PostingDate,CurrencyCode,Amount,CurrencyExchangeRate.ExchangeRate(PostingDate,CurrencyCode))
      ELSE
        IF (CurrencyCode = '') AND (CurrencyCode2 <> '') THEN
          Amount2 :=
            CurrencyExchangeRate.ExchangeAmtFCYToLCY(
              PostingDate,CurrencyCode2,Amount,CurrencyExchangeRate.ExchangeRate(PostingDate,CurrencyCode2))
        ELSE
          IF (CurrencyCode <> '') AND (CurrencyCode2 <> '') AND (CurrencyCode <> CurrencyCode2) THEN
            Amount2 := CurrencyExchangeRate.ExchangeAmtFCYToFCY(PostingDate,CurrencyCode2,CurrencyCode,Amount)
          ELSE
            Amount2 := Amount;
    END;

    LOCAL PROCEDURE ABSMin@21(Decimal1@1000 : Decimal;Decimal2@1001 : Decimal) : Decimal;
    BEGIN
      IF ABS(Decimal1) < ABS(Decimal2) THEN
        EXIT(Decimal1);
      EXIT(Decimal2);
    END;

    PROCEDURE InputBankAccount@8();
    BEGIN
      IF BankAcc2."No." <> '' THEN BEGIN
        BankAcc2.GET(BankAcc2."No.");
        BankAcc2.TESTFIELD("Last FT No.");
        UseCheckNo := BankAcc2."Last FT No.";
      END;
    END;

    LOCAL PROCEDURE GetAmtDecimalPosition@22() : Decimal;
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF GenJnlLine."Currency Code" = '' THEN
        Currency.InitRoundingPrecision
      ELSE BEGIN
        Currency.GET(GenJnlLine."Currency Code");
        Currency.TESTFIELD("Amount Rounding Precision");
      END;
      EXIT(1 / Currency."Amount Rounding Precision");
    END;

    LOCAL PROCEDURE ThrowGenJnlLineError@11(GenJournalLine@1000 : Record 81;ErrorTemplate@1001 : Text;ErrorText@1002 : Text);
    BEGIN
      WITH GenJournalLine DO
        IF "Line No." <> 0 THEN
          ERROR(
            ErrorTemplate,
            TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
            ErrorText);
      ERROR(ErrorText);
    END;

    LOCAL PROCEDURE CalcCheck@18(VAR GenJnlLine@1000 : Record 81) : Decimal;
    VAR
      WHTSetup@1001 : Record 50503;
      GenJnlLine1@1002 : Record 81;
    BEGIN
      // PHP Start
      WHTAmount := 0;
      CheckAmount := 0;
      CheckAmount := CheckAmount + GenJnlLine.Amount;
      GenJnlLine1.COPY(GenJnlLine);

      IF GenJnlLine1."Interest Amount" <> 0 THEN
        GenJnlLine1.VALIDATE(Amount,GenJnlLine1.Amount - GenJnlLine1."Interest Amount");
      IF GenJnlLine."Account Type" = GenJnlLine."Account Type"::Vendor THEN
        IF WHTSetup.GET(GenJnlLine."WHT Business Posting Group",GenJnlLine."WHT Product Posting Group") THEN
          IF WHTSetup."Realized WHT Type" <> WHTSetup."Realized WHT Type"::Earliest THEN
            WHTAmount := WHTAmount + WHTManagement.WHTAmountJournal(GenJnlLine1,FALSE)
          ELSE
            WHTAmount := WHTAmount + ABS(WHTManagement.CalcVendExtraWHTForEarliest(GenJnlLine1));
      CheckAmount := CheckAmount - WHTAmount;

      IF CheckAmount < 0 THEN
        CheckAmount := 0;
      // PHP End
    END;

    LOCAL PROCEDURE SelectString@102(Number@1000 : Integer;String@1001 : Text;Delimiter@1002 : Char) : Text;
    VAR
      i@1003 : Integer;
      EndPos@1004 : Integer;
      SubString@1005 : Text;
    BEGIN
      // i : Integer
      // EndPos : Integer
      // SubString : Text[100]
      i := 1;
      WHILE i <= Number DO BEGIN
        i += 1;
        EndPos := STRPOS(String,FORMAT(Delimiter));
        IF EndPos > 0 THEN BEGIN
          SubString := COPYSTR(String,1,EndPos-1);
          String := DELSTR(String,1,EndPos);
        END
        ELSE
          SubString := String;
      END;
      EXIT(SubString);
    END;

    PROCEDURE GetRec@29(GetGenJrnlLine@1000 : Code[20]);
    BEGIN
    END;

    LOCAL PROCEDURE RSTRPOS@15(String@1000 : Text;SubString@1001 : Text) : Integer;
    VAR
      Char@1002 : Text;
      Found@1003 : Boolean;
    BEGIN
      WHILE STRLEN(String) > 0 DO BEGIN
        Char := COPYSTR(String, STRLEN(String), 1);

        IF Char = SubString THEN
          EXIT(STRLEN(String));

        String := COPYSTR(String, 1, STRLEN(String) - 1);

        IF STRLEN(String) = 1 THEN
          String := '';
      END;

      IF NOT Found THEN
        EXIT(0);
    END;

    LOCAL PROCEDURE SetTransferToVendor@39(VAR BankRecipientAddr@1000 : ARRAY [10] OF Text;VendBankAcc@1001 : Record 288);
    BEGIN
        CheckToAddr[1] := DELCHR(SelectString(1,VendBankAcc.Name,','),'<>');
        BankRecipientAddr[2] := DELCHR(SelectString(2,VendBankAcc.Name,','),'<>');
        BankRecipientAddr[3] := '';
        BankRecipientAddr[4] := VendBankAcc."Bank Account No.";
        BankRecipientAddr[5] := VendBankAcc.Name;
        IF ((RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), '.') - RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), ' ')) = 3) OR
            ((RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), '.') - RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), ' ')) = 2) THEN BEGIN
          BankRecipientAddr[2] :=
            DELCHR(COPYSTR(SelectString(2,VendBankAcc.Name,','), 1, RSTRPOS(SelectString(2,VendBankAcc.Name,','),'.')-
                    (RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), '.') - RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), ' '))
                    ),'<>');
          BankRecipientAddr[3] :=
            DELCHR(COPYSTR(SelectString(2,VendBankAcc.Name,','), RSTRPOS(SelectString(2,VendBankAcc.Name,','),'.')-
              ((RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), '.') - RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), ' '))-1),
                (RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), '.') - RSTRPOS(DELCHR(SelectString(2,VendBankAcc.Name,','),'<>'), ' '))),'<>');
        END;
    END;

    LOCAL PROCEDURE SetTransferToBank@9(VAR BankRecipientAddr@1000 : ARRAY [10] OF Text;BankAccount@1001 : Record 270);
    BEGIN
        CheckToAddr[1] := DELCHR(SelectString(1,BankAccount.Name,','),'<>');
        BankRecipientAddr[2] := '';
        BankRecipientAddr[3] := '';
        BankRecipientAddr[4] := BankAccount."Bank Account No.";
    END;

    BEGIN
    {
      !! Documentation Report 50524 FT Metrobank

      4:43 PM Thursday, August 29, 2024
        Change the origin of UseCheckNo from Last Check No. to Last FT No.
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>ac1bb36c-7b28-449e-aa5f-8da3f87729d0</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <Fields>
        <Field Name="JournalTempName_GenJnlLine">
          <DataField>JournalTempName_GenJnlLine</DataField>
        </Field>
        <Field Name="JournalBatchName_GenJnlLine">
          <DataField>JournalBatchName_GenJnlLine</DataField>
        </Field>
        <Field Name="LineNo_GenJnlLine">
          <DataField>LineNo_GenJnlLine</DataField>
        </Field>
        <Field Name="Amount_GenJnlLine2">
          <DataField>Amount_GenJnlLine2</DataField>
        </Field>
        <Field Name="Amount_GenJnlLine2Format">
          <DataField>Amount_GenJnlLine2Format</DataField>
        </Field>
        <Field Name="Amount_GenJnlLine">
          <DataField>Amount_GenJnlLine</DataField>
        </Field>
        <Field Name="Amount_GenJnlLineFormat">
          <DataField>Amount_GenJnlLineFormat</DataField>
        </Field>
        <Field Name="DocDate_GenJnlLine">
          <DataField>DocDate_GenJnlLine</DataField>
        </Field>
        <Field Name="DocNo_GenJnlLine">
          <DataField>DocNo_GenJnlLine</DataField>
        </Field>
        <Field Name="VoucherNo_GenJnlLine">
          <DataField>VoucherNo_GenJnlLine</DataField>
        </Field>
        <Field Name="Currency_UOM">
          <DataField>Currency_UOM</DataField>
        </Field>
        <Field Name="Beneficiary_Last_Name">
          <DataField>Beneficiary_Last_Name</DataField>
        </Field>
        <Field Name="Beneficiary_First_Name">
          <DataField>Beneficiary_First_Name</DataField>
        </Field>
        <Field Name="Beneficiary_Middle_Name">
          <DataField>Beneficiary_Middle_Name</DataField>
        </Field>
        <Field Name="BankAccountNo_GenJnlLine">
          <DataField>BankAccountNo_GenJnlLine</DataField>
        </Field>
        <Field Name="Depositor_Name">
          <DataField>Depositor_Name</DataField>
        </Field>
        <Field Name="Depositor_Contact">
          <DataField>Depositor_Contact</DataField>
        </Field>
        <Field Name="BalBankAccount">
          <DataField>BalBankAccount</DataField>
        </Field>
        <Field Name="FTNo">
          <DataField>FTNo</DataField>
        </Field>
        <Field Name="CVNo">
          <DataField>CVNo</DataField>
        </Field>
        <Field Name="PostingDate">
          <DataField>PostingDate</DataField>
        </Field>
        <Field Name="CheckToAddr1">
          <DataField>CheckToAddr1</DataField>
        </Field>
        <Field Name="CheckDateText">
          <DataField>CheckDateText</DataField>
        </Field>
        <Field Name="CheckNoText">
          <DataField>CheckNoText</DataField>
        </Field>
        <Field Name="FirstPage">
          <DataField>FirstPage</DataField>
        </Field>
        <Field Name="PreprintedStub">
          <DataField>PreprintedStub</DataField>
        </Field>
        <Field Name="CheckNoTextCaption">
          <DataField>CheckNoTextCaption</DataField>
        </Field>
        <Field Name="NetAmount">
          <DataField>NetAmount</DataField>
        </Field>
        <Field Name="TotalLineDiscountLineDiscount">
          <DataField>TotalLineDiscountLineDiscount</DataField>
        </Field>
        <Field Name="TotalLineDiscountLineDiscountFormat">
          <DataField>TotalLineDiscountLineDiscountFormat</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmount">
          <DataField>TotalLineAmountLineAmount</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmountFormat">
          <DataField>TotalLineAmountLineAmountFormat</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmount2">
          <DataField>TotalLineAmountLineAmount2</DataField>
        </Field>
        <Field Name="TotalLineAmountLineAmount2Format">
          <DataField>TotalLineAmountLineAmount2Format</DataField>
        </Field>
        <Field Name="LineAmount">
          <DataField>LineAmount</DataField>
        </Field>
        <Field Name="LineAmountFormat">
          <DataField>LineAmountFormat</DataField>
        </Field>
        <Field Name="LineDiscount">
          <DataField>LineDiscount</DataField>
        </Field>
        <Field Name="LineDiscountFormat">
          <DataField>LineDiscountFormat</DataField>
        </Field>
        <Field Name="LineAmountLineDiscount">
          <DataField>LineAmountLineDiscount</DataField>
        </Field>
        <Field Name="LineAmountLineDiscountFormat">
          <DataField>LineAmountLineDiscountFormat</DataField>
        </Field>
        <Field Name="DocNo">
          <DataField>DocNo</DataField>
        </Field>
        <Field Name="DocDate">
          <DataField>DocDate</DataField>
        </Field>
        <Field Name="CurrencyCode2">
          <DataField>CurrencyCode2</DataField>
        </Field>
        <Field Name="CurrentLineAmount">
          <DataField>CurrentLineAmount</DataField>
        </Field>
        <Field Name="CurrentLineAmountFormat">
          <DataField>CurrentLineAmountFormat</DataField>
        </Field>
        <Field Name="ExtDocNo">
          <DataField>ExtDocNo</DataField>
        </Field>
        <Field Name="LineAmountCaption">
          <DataField>LineAmountCaption</DataField>
        </Field>
        <Field Name="LineDiscountCaption">
          <DataField>LineDiscountCaption</DataField>
        </Field>
        <Field Name="AmountCaption">
          <DataField>AmountCaption</DataField>
        </Field>
        <Field Name="DocNoCaption">
          <DataField>DocNoCaption</DataField>
        </Field>
        <Field Name="DocDateCaption">
          <DataField>DocDateCaption</DataField>
        </Field>
        <Field Name="CurrencyCodeCaption">
          <DataField>CurrencyCodeCaption</DataField>
        </Field>
        <Field Name="YourDocNoCaption">
          <DataField>YourDocNoCaption</DataField>
        </Field>
        <Field Name="TransportCaption">
          <DataField>TransportCaption</DataField>
        </Field>
        <Field Name="CheckAmountText">
          <DataField>CheckAmountText</DataField>
        </Field>
        <Field Name="CheckDateTextControl2">
          <DataField>CheckDateTextControl2</DataField>
        </Field>
        <Field Name="DescriptionLine2">
          <DataField>DescriptionLine2</DataField>
        </Field>
        <Field Name="DescriptionLine1">
          <DataField>DescriptionLine1</DataField>
        </Field>
        <Field Name="CheckToAddr1Control7">
          <DataField>CheckToAddr1Control7</DataField>
        </Field>
        <Field Name="CheckToAddr2">
          <DataField>CheckToAddr2</DataField>
        </Field>
        <Field Name="CheckToAddr4">
          <DataField>CheckToAddr4</DataField>
        </Field>
        <Field Name="CheckToAddr3">
          <DataField>CheckToAddr3</DataField>
        </Field>
        <Field Name="CheckToAddr5">
          <DataField>CheckToAddr5</DataField>
        </Field>
        <Field Name="CompanyAddr4">
          <DataField>CompanyAddr4</DataField>
        </Field>
        <Field Name="CompanyAddr8">
          <DataField>CompanyAddr8</DataField>
        </Field>
        <Field Name="CompanyAddr7">
          <DataField>CompanyAddr7</DataField>
        </Field>
        <Field Name="CompanyAddr6">
          <DataField>CompanyAddr6</DataField>
        </Field>
        <Field Name="CompanyAddr5">
          <DataField>CompanyAddr5</DataField>
        </Field>
        <Field Name="CompanyAddr3">
          <DataField>CompanyAddr3</DataField>
        </Field>
        <Field Name="CheckNoTextControl21">
          <DataField>CheckNoTextControl21</DataField>
        </Field>
        <Field Name="CompanyAddr2">
          <DataField>CompanyAddr2</DataField>
        </Field>
        <Field Name="CompanyAddr1">
          <DataField>CompanyAddr1</DataField>
        </Field>
        <Field Name="TotalLineAmount">
          <DataField>TotalLineAmount</DataField>
        </Field>
        <Field Name="TotalLineAmountFormat">
          <DataField>TotalLineAmountFormat</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="VoidText">
          <DataField>VoidText</DataField>
        </Field>
      </Fields>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
  <ReportSections>
    <ReportSection>
      <Body>
        <ReportItems>
          <Textbox Name="Textbox94">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!Currency_UOM.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>8.8555cm</Top>
            <Left>5.5905cm</Left>
            <Height>0.5cm</Height>
            <Width>1.1cm</Width>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox95">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!Amount_GenJnlLine.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                      <Format>#,0.00;(#,0.00)</Format>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style>
                  <TextAlign>Left</TextAlign>
                </Style>
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>3.48642in</Top>
            <Left>2.63406in</Left>
            <Height>0.46771cm</Height>
            <Width>4.58724cm</Width>
            <ZIndex>1</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox96">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!CheckToAddr1.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>16.3305cm</Top>
            <Left>0.59525cm</Left>
            <Height>0.46771cm</Height>
            <Width>8.28447cm</Width>
            <ZIndex>2</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox97">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!Beneficiary_First_Name.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>16.9495cm</Top>
            <Left>0.59525cm</Left>
            <Height>0.46771cm</Height>
            <Width>8.28447cm</Width>
            <ZIndex>3</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox98">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!Beneficiary_Middle_Name.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>17.5685cm</Top>
            <Left>0.59525cm</Left>
            <Height>0.46771cm</Height>
            <Width>8.28447cm</Width>
            <ZIndex>4</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox99">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!Depositor_Name.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>6.47675cm</Top>
            <Left>3.3575cm</Left>
            <Height>0.46771cm</Height>
            <Width>8.28447cm</Width>
            <ZIndex>5</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox100">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 13)) &lt;&gt;13,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 13),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>15.19725cm</Top>
            <Left>4.01275cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>6</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox101">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 6)) &lt;&gt;6,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 6),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>8.689cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>7</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox102">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 12)) &lt;&gt;12,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 12),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>1.80167in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>8</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox103">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 9)) &lt;&gt;9,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 9),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>6.76675cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>9</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox104">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 11)) &lt;&gt;11,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 11),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>2.03602in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>10</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox105">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 10)) &lt;&gt;10,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 10),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>5.93975cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>11</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox106">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 8)) &lt;&gt;8,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 8),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>2.88593in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>12</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox107">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 7)) &lt;&gt;7,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 7),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>3.10778in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>13</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox108">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 5)) &lt;&gt;5,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 5),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>3.64272in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>14</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox109">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 4)) &lt;&gt;4,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 4),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>3.86457in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>15</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox110">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 3)) &lt;&gt;3,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 3),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>4.08642in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>16</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox111">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 2)) &lt;&gt;2,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 2),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>4.30827in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>17</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox112">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=iif(LEN(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 1)) &lt;&gt;1,
"",
Mid(Right(First(Fields!BankAccountNo_GenJnlLine.Value, "DataSet_Result"), 1),1,1))</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>5.98317in</Top>
            <Left>11.743cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>18</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox113">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">FT:</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!FTNo.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>1.32754cm</Top>
            <Left>3.2985cm</Left>
            <Height>0.38304cm</Height>
            <Width>2.9cm</Width>
            <ZIndex>19</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox114">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">CV: </Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!CVNo.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>1.32754cm</Top>
            <Left>6.1985cm</Left>
            <Height>0.38304cm</Height>
            <Width>3.36826cm</Width>
            <ZIndex>20</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox115">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Last(Fields!DescriptionLine1.Value, "DataSet_Result") + " " + Last(Fields!DescriptionLine2.Value, "DataSet_Result")</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style>
                  <TextAlign>Left</TextAlign>
                </Style>
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>9.61425cm</Top>
            <Left>0.23435in</Left>
            <Height>0.9cm</Height>
            <Width>11cm</Width>
            <ZIndex>21</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox116">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,1,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>1.94125cm</Top>
            <Left>4.1445cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>22</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox117">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,8,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>8.85251cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>23</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox118">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,2,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>1.86604in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>24</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox119">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,5,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>6.93026cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>25</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox120">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,3,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>2.10039in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>26</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox121">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,4,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>6.13501cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>27</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox122">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,6,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>2.9628in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>28</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox123">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,7,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>3.17215in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>29</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox124">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,9,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>3.70709in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>30</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox125">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,10,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>3.92894in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>31</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox126">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,11,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>4.15079in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>32</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox127">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,12,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>4.37264in</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>33</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox128">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Mid(Fields!BalBankAccount.Value,13,1)</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>0.76427in</Top>
            <Left>11.93826cm</Left>
            <Height>1cm</Height>
            <Width>0.5cm</Width>
            <ZIndex>34</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox129">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">X</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>1.73175cm</Top>
            <Left>0.84925cm</Left>
            <Height>0.3cm</Height>
            <Width>0.3cm</Width>
            <ZIndex>35</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Top</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox130">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!Depositor_Contact.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style>
                  <TextAlign>Center</TextAlign>
                </Style>
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>12.85979cm</Top>
            <Left>4.44924cm</Left>
            <Height>0.46771cm</Height>
            <Width>7.14601cm</Width>
            <ZIndex>36</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
              <VerticalAlign>Middle</VerticalAlign>
            </Style>
          </Textbox>
          <Textbox Name="Textbox131">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!PostingDate.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>1.32754cm</Top>
            <Left>1.1985cm</Left>
            <Height>0.46771cm</Height>
            <Width>2.1cm</Width>
            <ZIndex>37</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox132">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">CA: </Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!ExtDocNo.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style />
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>1.32754cm</Top>
            <Left>9.56676cm</Left>
            <Height>0.38304cm</Height>
            <Width>3.82713cm</Width>
            <ZIndex>38</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
          <Textbox Name="Textbox133">
            <KeepTogether>true</KeepTogether>
            <Paragraphs>
              <Paragraph>
                <TextRuns>
                  <TextRun>
                    <Value EvaluationMode="Auto">=Fields!Amount_GenJnlLine.Value</Value>
                    <Style>
                      <FontFamily>Segoe UI</FontFamily>
                      <FontSize>8pt</FontSize>
                      <FontWeight>Bold</FontWeight>
                      <Format>#,0.00;(#,0.00)</Format>
                    </Style>
                  </TextRun>
                </TextRuns>
                <Style>
                  <TextAlign>Left</TextAlign>
                </Style>
              </Paragraph>
            </Paragraphs>
            <rd:DefaultName>Textbox82</rd:DefaultName>
            <Top>8.71257in</Top>
            <Left>3.35003in</Left>
            <Height>0.46771cm</Height>
            <Width>4.58724cm</Width>
            <ZIndex>39</ZIndex>
            <Style>
              <Border>
                <Style>None</Style>
              </Border>
            </Style>
          </Textbox>
        </ReportItems>
        <Height>23.60305cm</Height>
        <Style />
      </Body>
      <Width>13.39389cm</Width>
      <Page>
        <PageHeight>24.8cm</PageHeight>
        <PageWidth>20.4cm</PageWidth>
        <InteractiveHeight>16.8cm</InteractiveHeight>
        <InteractiveWidth>20.3cm</InteractiveWidth>
        <ColumnSpacing>1.27cm</ColumnSpacing>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function

Shared Data1 as Object
Shared Data2 as Object
Shared Data3 as Object

Public Function GetData(Num as Integer, Group as integer) as Object
if Group = 1 then
   Return Cstr(Choose(Num, Split(Cstr(Data1),Chr(177))))
End If

if Group = 2 then
   Return Cstr(Choose(Num, Split(Cstr(Data2),Chr(177))))
End If

if Group = 3 then
   Return Cstr(Choose(Num, Split(Cstr(Data3),Chr(177))))
End If
End Function

Public Function SetData(NewData as Object,Group as integer)
  If Group = 1 and NewData &gt; "" Then
      Data1 = NewData
  End If

  If Group = 2 and NewData &gt; "" Then
      Data2 = NewData
  End If

  If Group = 3 and NewData &gt; "" Then
      Data3 = NewData
  End If
  Return True
End Function</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Cm</rd:ReportUnitType>
  <rd:ReportID>65fac6f4-eda5-4b03-9009-3a3cdbf9e25b</rd:ReportID>
</Report>
    END_OF_RDLDATA
  }
}

OBJECT Codeunit 367 CheckManagement
{
  OBJECT-PROPERTIES
  {
    Date=08/21/18;
    Time=[ 4:46:37 PM];
    Modified=Yes;
    Version List=NAVW19.00,PHL0.01,OC.03,UT.10,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    Permissions=TableData 21=rm,
                TableData 25=rm,
                TableData 271=rm,
                TableData 272=rim;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Check %1 already exists for this %2.';
      Text001@1001 : TextConst 'ENU=Voiding check %1.';
      GenJnlLine2@1002 : Record 81;
      BankAcc@1003 : Record 270;
      BankAccLedgEntry2@1004 : Record 271;
      CheckLedgEntry2@1005 : Record 272;
      SourceCodeSetup@1006 : Record 242;
      VendorLedgEntry@1009 : Record 25;
      GLEntry@1010 : Record 17;
      CustLedgEntry@1011 : Record 21;
      FALedgEntry@1012 : Record 5601;
      BankAccLedgEntry3@1013 : Record 271;
      GenJnlPostLine@1014 : Codeunit 12;
      UpdateAnalysisView@1018 : Codeunit 410;
      NextCheckEntryNo@1016 : Integer;
      Text002@1017 : TextConst 'ENU=You cannot Financially Void checks posted in a non-balancing transaction.';
      AppliesIDCounter@1019 : Integer;
      NoAppliedEntryErr@1007 : TextConst 'ENU=Cannot find an applied entry within the specified filter.';
      Vendor@1500000 : Record 23;
      VendorPostingGr@1500001 : Record 93;
      Text003@1008 : TextConst 'ENU=You have successfully voided the %1 %2.';

    PROCEDURE InsertCheck@3(VAR CheckLedgEntry@1000 : Record 272;RecordIdToPrint@1001 : RecordID);
    BEGIN
      IF NextCheckEntryNo = 0 THEN BEGIN
        CheckLedgEntry2.LOCKTABLE;
        CheckLedgEntry2.RESET;
        IF CheckLedgEntry2.FINDLAST THEN
          NextCheckEntryNo := CheckLedgEntry2."Entry No." + 1
        ELSE
          NextCheckEntryNo := 1;
      END;

      CheckLedgEntry2.RESET;
      CheckLedgEntry2.SETCURRENTKEY("Bank Account No.","Entry Status","Check No.");
      CheckLedgEntry2.SETRANGE("Bank Account No.",CheckLedgEntry."Bank Account No.");
      CheckLedgEntry2.SETFILTER(
        "Entry Status",'%1|%2|%3',
        CheckLedgEntry2."Entry Status"::Printed,
        CheckLedgEntry2."Entry Status"::Posted,
        CheckLedgEntry2."Entry Status"::"Financially Voided");
      CheckLedgEntry2.SETRANGE("Check No.",CheckLedgEntry."Document No.");
      IF CheckLedgEntry2.FINDFIRST THEN
        ERROR(Text000,CheckLedgEntry."Document No.",BankAcc.TABLECAPTION);

      CheckLedgEntry.Open := CheckLedgEntry.Amount <> 0;
      CheckLedgEntry."User ID" := USERID;
      CheckLedgEntry."Entry No." := NextCheckEntryNo;
      CheckLedgEntry."Record ID to Print" := RecordIdToPrint;
      // PHP Start - timestamp
      CheckLedgEntry."Time Stamp" := CURRENTDATETIME;
      // PHP End
      CheckLedgEntry.INSERT;
      NextCheckEntryNo := NextCheckEntryNo + 1;
    END;

    PROCEDURE VoidCheck@4(VAR GenJnlLine@1000 : Record 81);
    VAR
      Currency@1001 : Record 4;
      CheckAmountLCY@1002 : Decimal;
    BEGIN
      GenJnlLine.TESTFIELD("Bank Payment Type",GenJnlLine2."Bank Payment Type"::"Computer Check");
      GenJnlLine.TESTFIELD("Check Printed",TRUE);
      GenJnlLine.TESTFIELD("Document No.");

      IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
        GenJnlLine."Check Printed" := FALSE;
        GenJnlLine.DELETE(TRUE);
      END;

      CheckAmountLCY := GenJnlLine."Amount (LCY)";
      IF GenJnlLine."Currency Code" <> '' THEN
        Currency.GET(GenJnlLine."Currency Code");

      GenJnlLine2.RESET;
      GenJnlLine2.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
      GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlLine2.SETRANGE("Posting Date",GenJnlLine."Posting Date");
      GenJnlLine2.SETRANGE("Document No.",GenJnlLine."Document No.");
      IF GenJnlLine2.FIND('-') THEN
        REPEAT
          IF (GenJnlLine2."Line No." > GenJnlLine."Line No.") AND
             (CheckAmountLCY = -GenJnlLine2."Amount (LCY)") AND
             (GenJnlLine2."Currency Code" = '') AND (GenJnlLine."Currency Code" <> '') AND
             (GenJnlLine2."Account Type" = GenJnlLine2."Account Type"::"G/L Account") AND
             (GenJnlLine2."Account No." IN
              [Currency."Conv. LCY Rndg. Debit Acc.",Currency."Conv. LCY Rndg. Credit Acc."]) AND
             (GenJnlLine2."Bal. Account No." = '') AND NOT GenJnlLine2."Check Printed"
          THEN
            GenJnlLine2.DELETE // Rounding correction line
          ELSE BEGIN
            IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
              IF GenJnlLine2."Account No." = '' THEN BEGIN
                GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Account No." := GenJnlLine."Account No.";
              END ELSE BEGIN
                GenJnlLine2."Bal. Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Bal. Account No." := GenJnlLine."Account No.";
              END;
              GenJnlLine2.VALIDATE(Amount);
              GenJnlLine2."Bank Payment Type" := GenJnlLine."Bank Payment Type";
            END;
            GenJnlLine2."Document No." := '';
            GenJnlLine2."Check Printed" := FALSE;
            GenJnlLine2.UpdateSource;
            GenJnlLine2.MODIFY;
          END;
        UNTIL GenJnlLine2.NEXT = 0;

      CheckLedgEntry2.RESET;
      CheckLedgEntry2.SETCURRENTKEY("Bank Account No.","Entry Status","Check No.");
      IF GenJnlLine.Amount <= 0 THEN
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Account No.")
      ELSE
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Bal. Account No.");
      CheckLedgEntry2.SETRANGE("Entry Status",CheckLedgEntry2."Entry Status"::Printed);
      CheckLedgEntry2.SETRANGE("Check No.",GenJnlLine."Document No.");
      CheckLedgEntry2.FINDFIRST;
      CheckLedgEntry2."Original Entry Status" := CheckLedgEntry2."Entry Status";
      CheckLedgEntry2."Entry Status" := CheckLedgEntry2."Entry Status"::Voided;
      CheckLedgEntry2."Positive Pay Exported" := FALSE;
      CheckLedgEntry2.Open := FALSE;
      CheckLedgEntry2.MODIFY;
    END;

    PROCEDURE VoidSignedCheck@13(VAR GenJnlLine@1000 : Record 81);
    VAR
      Currency@1001 : Record 4;
      CheckAmountLCY@1002 : Decimal;
    BEGIN
      // PHP Start
      GenJnlLine.TESTFIELD("Bank Payment Type",GenJnlLine2."Bank Payment Type"::"Computer Check");
      GenJnlLine.TESTFIELD("Check Printed",TRUE);
      GenJnlLine.TESTFIELD("Check No.");

      IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
        GenJnlLine."Check Printed" := FALSE;
        GenJnlLine.DELETE(TRUE);
      END;

      CheckAmountLCY := GenJnlLine."Amount (LCY)";
      IF GenJnlLine."Currency Code" <> '' THEN
        Currency.GET(GenJnlLine."Currency Code");

      GenJnlLine2.RESET;
      GenJnlLine2.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Check No.");
      GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlLine2.SETRANGE("Posting Date",GenJnlLine."Posting Date");
      GenJnlLine2.SETRANGE("Check No.",GenJnlLine."Check No.");
      IF GenJnlLine2.FIND('-') THEN
        REPEAT
          IF (GenJnlLine2."Line No." > GenJnlLine."Line No.") AND
             (CheckAmountLCY = -GenJnlLine2."Amount (LCY)") AND
             (GenJnlLine2."Currency Code" = '') AND (GenJnlLine."Currency Code" <> '') AND
             (GenJnlLine2."Account Type" = GenJnlLine2."Account Type"::"G/L Account") AND
             (GenJnlLine2."Account No." IN
              [Currency."Conv. LCY Rndg. Debit Acc.",Currency."Conv. LCY Rndg. Credit Acc."]) AND
             (GenJnlLine2."Bal. Account No." = '') AND NOT GenJnlLine2."Check Printed"
          THEN
            GenJnlLine2.DELETE // Rounding correction line
          ELSE BEGIN
            IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
              IF GenJnlLine2."Account No." = '' THEN BEGIN
                GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Account No." := GenJnlLine."Account No.";
              END ELSE BEGIN
                GenJnlLine2."Bal. Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Bal. Account No." := GenJnlLine."Account No.";
              END;
              GenJnlLine2.VALIDATE(Amount);
              GenJnlLine2."Bank Payment Type" := GenJnlLine."Bank Payment Type";
            END;
            GenJnlLine2."Check No." := '';
            GenJnlLine2."Check Printed" := FALSE;
            GenJnlLine2.UpdateSource;
            GenJnlLine2.MODIFY;
          END;
        UNTIL GenJnlLine2.NEXT = 0;

      CheckLedgEntry2.RESET;
      CheckLedgEntry2.SETCURRENTKEY("Bank Account No.","Entry Status","Check No.");
      IF GenJnlLine.Amount <= 0 THEN
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Account No.")
      ELSE
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Bal. Account No.");
      CheckLedgEntry2.SETRANGE("Entry Status",CheckLedgEntry2."Entry Status"::Printed);
      CheckLedgEntry2.SETRANGE("Check No.",GenJnlLine."Check No.");
      // CheckLedgEntry2.FINDFIRST; // PHP Original code
      CheckLedgEntry2.FINDLAST; // PHP Modified
      CheckLedgEntry2."Original Entry Status" := CheckLedgEntry2."Entry Status";
      CheckLedgEntry2."Entry Status" := CheckLedgEntry2."Entry Status"::Voided;
      CheckLedgEntry2."Positive Pay Exported" := FALSE;
      CheckLedgEntry2.Open := FALSE;
      CheckLedgEntry2."Void Status" := CheckLedgEntry2."Void Status"::"Voided Signed Check";
      CheckLedgEntry2.MODIFY;
      // PHP End
    END;

    PROCEDURE VoidCheck2@2(VAR GenJnlLine@1000 : Record 81);
    VAR
      Currency@1001 : Record 4;
      CheckAmountLCY@1002 : Decimal;
    BEGIN
      GenJnlLine.TESTFIELD("Bank Payment Type",GenJnlLine2."Bank Payment Type"::"Computer Check");
      GenJnlLine.TESTFIELD("Check Printed",TRUE);
      GenJnlLine.TESTFIELD("Check No.");

      IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
        GenJnlLine."Check Printed" := FALSE;
        GenJnlLine.DELETE(TRUE);
      END;

      CheckAmountLCY := GenJnlLine."Amount (LCY)";
      IF GenJnlLine."Currency Code" <> '' THEN
        Currency.GET(GenJnlLine."Currency Code");

      GenJnlLine2.RESET;
      GenJnlLine2.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Check No.");
      GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlLine2.SETRANGE("Posting Date",GenJnlLine."Posting Date");
      GenJnlLine2.SETRANGE("Check No.",GenJnlLine."Check No.");
      IF GenJnlLine2.FIND('-') THEN
        REPEAT
          IF (GenJnlLine2."Line No." > GenJnlLine."Line No.") AND
             (CheckAmountLCY = -GenJnlLine2."Amount (LCY)") AND
             (GenJnlLine2."Currency Code" = '') AND (GenJnlLine."Currency Code" <> '') AND
             (GenJnlLine2."Account Type" = GenJnlLine2."Account Type"::"G/L Account") AND
             (GenJnlLine2."Account No." IN
              [Currency."Conv. LCY Rndg. Debit Acc.",Currency."Conv. LCY Rndg. Credit Acc."]) AND
             (GenJnlLine2."Bal. Account No." = '') AND NOT GenJnlLine2."Check Printed"
          THEN
            GenJnlLine2.DELETE // Rounding correction line
          ELSE BEGIN
            IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
              IF GenJnlLine2."Account No." = '' THEN BEGIN
                GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Account No." := GenJnlLine."Account No.";
              END ELSE BEGIN
                GenJnlLine2."Bal. Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Bal. Account No." := GenJnlLine."Account No.";
              END;
              GenJnlLine2.VALIDATE(Amount);
              GenJnlLine2."Bank Payment Type" := GenJnlLine."Bank Payment Type";
            END;
            GenJnlLine2."Check No." := '';
            GenJnlLine2."Check Printed" := FALSE;
            GenJnlLine2.UpdateSource;
            GenJnlLine2.MODIFY;
          END;
        UNTIL GenJnlLine2.NEXT = 0;

      CheckLedgEntry2.RESET;
      CheckLedgEntry2.SETCURRENTKEY("Bank Account No.","Entry Status","Check No.");
      IF GenJnlLine.Amount <= 0 THEN
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Account No.")
      ELSE
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Bal. Account No.");
      CheckLedgEntry2.SETRANGE("Entry Status",CheckLedgEntry2."Entry Status"::Printed);
      CheckLedgEntry2.SETRANGE("Check No.",GenJnlLine."Check No.");
      CheckLedgEntry2.FINDFIRST;
      CheckLedgEntry2."Original Entry Status" := CheckLedgEntry2."Entry Status";
      CheckLedgEntry2."Entry Status" := CheckLedgEntry2."Entry Status"::Voided;
      CheckLedgEntry2."Positive Pay Exported" := FALSE;
      CheckLedgEntry2.Open := FALSE;
      CheckLedgEntry2.MODIFY;
    END;

    PROCEDURE VoidCheckFT@1(VAR GenJnlLine@1000 : Record 81);
    VAR
      Currency@1001 : Record 4;
      CheckAmountLCY@1002 : Decimal;
    BEGIN
      GenJnlLine.TESTFIELD("Bank Payment Type",GenJnlLine2."Bank Payment Type"::"Computer Check");
      GenJnlLine.TESTFIELD("Check Printed",TRUE);
      GenJnlLine.TESTFIELD("Check No.");

      IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
        GenJnlLine."Check Printed" := FALSE;
        GenJnlLine.DELETE(TRUE);
      END;

      CheckAmountLCY := GenJnlLine."Amount (LCY)";
      IF GenJnlLine."Currency Code" <> '' THEN
        Currency.GET(GenJnlLine."Currency Code");

      GenJnlLine2.RESET;
      GenJnlLine2.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Check No.");
      GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlLine2.SETRANGE("Posting Date",GenJnlLine."Posting Date");
      GenJnlLine2.SETRANGE("Check No.",GenJnlLine."Check No.");
      IF GenJnlLine2.FIND('-') THEN
        REPEAT
          IF (GenJnlLine2."Line No." > GenJnlLine."Line No.") AND
             (CheckAmountLCY = -GenJnlLine2."Amount (LCY)") AND
             (GenJnlLine2."Currency Code" = '') AND (GenJnlLine."Currency Code" <> '') AND
             (GenJnlLine2."Account Type" = GenJnlLine2."Account Type"::"G/L Account") AND
             (GenJnlLine2."Account No." IN
              [Currency."Conv. LCY Rndg. Debit Acc.",Currency."Conv. LCY Rndg. Credit Acc."]) AND
             (GenJnlLine2."Bal. Account No." = '') AND NOT GenJnlLine2."Check Printed"
          THEN
            GenJnlLine2.DELETE // Rounding correction line
          ELSE BEGIN
            IF GenJnlLine."Bal. Account No." = '' THEN BEGIN
              IF GenJnlLine2."Account No." = '' THEN BEGIN
                GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Account No." := GenJnlLine."Account No.";
              END ELSE BEGIN
                GenJnlLine2."Bal. Account Type" := GenJnlLine2."Account Type"::"Bank Account";
                GenJnlLine2."Bal. Account No." := GenJnlLine."Account No.";
              END;
              GenJnlLine2.VALIDATE(Amount);
              GenJnlLine2."Bank Payment Type" := GenJnlLine."Bank Payment Type";
            END;
            GenJnlLine2."Check No." := '';
            GenJnlLine2."Check Printed" := FALSE;
            GenJnlLine2.UpdateSource;
            GenJnlLine2.MODIFY;
          END;
        UNTIL GenJnlLine2.NEXT = 0;

      CheckLedgEntry2.RESET;
      CheckLedgEntry2.SETCURRENTKEY("Bank Account No.","Entry Status","Check No.");
      IF GenJnlLine.Amount <= 0 THEN
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Account No.")
      ELSE
        CheckLedgEntry2.SETRANGE("Bank Account No.",GenJnlLine."Bal. Account No.");
      CheckLedgEntry2.SETRANGE("Entry Status",CheckLedgEntry2."Entry Status"::Printed);
      CheckLedgEntry2.SETRANGE("Check No.",GenJnlLine."Check No.");
      CheckLedgEntry2.FINDFIRST;
      CheckLedgEntry2."Original Entry Status" := CheckLedgEntry2."Entry Status";
      CheckLedgEntry2."Entry Status" := CheckLedgEntry2."Entry Status"::Voided;
      CheckLedgEntry2."Positive Pay Exported" := FALSE;
      CheckLedgEntry2.Open := FALSE;
      CheckLedgEntry2.MODIFY;
    END;

    PROCEDURE FinancialVoidCheck@5(VAR CheckLedgEntry@1000 : Record 272);
    VAR
      TransactionBalance@1001 : Decimal;
      VATPostingSetup@1002 : Record 325;
      Currency@1009 : Record 4;
      ConfirmFinVoid@1008 : Page 695;
      AmountToVoid@1003 : Decimal;
      CheckAmountLCY@1004 : Decimal;
      BalanceAmountLCY@1005 : Decimal;
      CurrencyRoundingDebitAccount@1006 : Code[20];
      CurrencyRoundingCreditAccount@1007 : Code[20];
      WHTEntry@1010 : Record 50504;
      WHTSetup@1011 : Record 50503;
      GenJnlPostReverse@1012 : Codeunit 17;
    BEGIN
      CheckLedgEntry.TESTFIELD("Entry Status",CheckLedgEntry."Entry Status"::Posted);
      CheckLedgEntry.TESTFIELD("Statement Status",CheckLedgEntry."Statement Status"::Open);
      CheckLedgEntry.TESTFIELD("Bal. Account No.");
      BankAcc.GET(CheckLedgEntry."Bank Account No.");
      BankAccLedgEntry2.GET(CheckLedgEntry."Bank Account Ledger Entry No.");
      SourceCodeSetup.GET;
      WITH GLEntry DO BEGIN
        SETCURRENTKEY("Transaction No.");
        SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
        SETRANGE("Document No.",BankAccLedgEntry2."Document No.");
        CALCSUMS(Amount);
        TransactionBalance := Amount;
      END;
      IF TransactionBalance <> 0 THEN
        ERROR(Text002);

      CLEAR(ConfirmFinVoid);
      ConfirmFinVoid.SetCheckLedgerEntry(CheckLedgEntry);
      IF ConfirmFinVoid.RUNMODAL <> ACTION::Yes THEN
        EXIT;

      AmountToVoid := 0;
      WITH CheckLedgEntry2 DO BEGIN
        RESET;
        SETCURRENTKEY("Bank Account No.","Entry Status","Check No.");
        SETRANGE("Bank Account No.",CheckLedgEntry."Bank Account No.");
        SETRANGE("Entry Status",CheckLedgEntry."Entry Status"::Posted);
        SETRANGE("Statement Status",CheckLedgEntry."Statement Status"::Open);
        SETRANGE("Check No.",CheckLedgEntry."Check No.");
        SETRANGE("Check Date",CheckLedgEntry."Check Date");
        FINDSET;  //PHL0.01
        CALCSUMS(Amount);
        AmountToVoid := Amount;

      END;

      GenJnlLine2.INIT;
      GenJnlLine2."System-Created Entry" := TRUE;
      GenJnlLine2."Financial Void" := TRUE;
      GenJnlLine2."Document No." := CheckLedgEntry."Document No.";
      GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"Bank Account";
      GenJnlLine2."Posting Date" := ConfirmFinVoid.GetVoidDate;
      GenJnlLine2.VALIDATE("Account No.",CheckLedgEntry."Bank Account No.");
      GenJnlLine2.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
      GenJnlLine2.VALIDATE(Amount,AmountToVoid);
       CheckAmountLCY := GenJnlLine2."Amount (LCY)";
      //PHL0.01(-)
      GenJnlLine2."Interest Amount" := 0;
      GenJnlLine2."Interest Amount (LCY)" := 0;
      //PHL0.01(+)
      BalanceAmountLCY := 0;
      CurrencyRoundingDebitAccount := '';
      CurrencyRoundingCreditAccount := '';
      GenJnlLine2."Source Code" := SourceCodeSetup."Financially Voided Check";
      GenJnlLine2."Shortcut Dimension 1 Code" := BankAccLedgEntry2."Global Dimension 1 Code";
      GenJnlLine2."Shortcut Dimension 2 Code" := BankAccLedgEntry2."Global Dimension 2 Code";
      GenJnlLine2."Dimension Set ID" := BankAccLedgEntry2."Dimension Set ID";
      GenJnlLine2."Allow Zero-Amount Posting" := TRUE;
      // PHP Start UT.10
      GenJnlLine2."Voucher No." := CheckLedgEntry."Voucher No."; // PHP Start Voucher No.
      GenJnlLine2."Fund Transfer Date" := CheckLedgEntry."Fund Transfer Date";
      // PHP End
      GenJnlPostLine.RunWithCheck(GenJnlLine2);

      //PHL0.01(-)
      IF CheckLedgEntry."Interest Amount" <> 0 THEN BEGIN
        GenJnlLine2.INIT;
        GenJnlLine2."Document No." := CheckLedgEntry."Document No.";
        GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"G/L Account";
        IF CheckLedgEntry."Bal. Account Type" = CheckLedgEntry."Bal. Account Type"::Vendor THEN
          IF Vendor.GET(CheckLedgEntry."Bal. Account No.") THEN
            IF VendorPostingGr.GET(Vendor."Vendor Posting Group") THEN
              GenJnlLine2.VALIDATE("Account No.",VendorPostingGr."Interest Account");
        GenJnlLine2."System-Created Entry" := TRUE;
        GenJnlLine2."Document Type" := GenJnlLine2."Document Type"::Payment;
        GenJnlLine2."Posting Date" := ConfirmFinVoid.GetVoidDate;
        GenJnlLine2.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
        GenJnlLine2.VALIDATE(Amount,-CheckLedgEntry."Interest Amount");
        BalanceAmountLCY := 0;
        CurrencyRoundingDebitAccount := '';
        CurrencyRoundingCreditAccount := '';
        GenJnlLine2."Source Code" := SourceCodeSetup."Financially Voided Check";
        GenJnlLine2."Shortcut Dimension 1 Code" := BankAccLedgEntry2."Global Dimension 1 Code";
        GenJnlLine2."Shortcut Dimension 2 Code" := BankAccLedgEntry2."Global Dimension 2 Code";
        GenJnlLine2."Dimension Set ID" := BankAccLedgEntry2."Dimension Set ID";
        GenJnlLine2."Allow Zero-Amount Posting" := TRUE;
        GenJnlLine2."Voucher No." := CheckLedgEntry."Voucher No."; // PHP Start Voucher No.
        GenJnlLine2."Fund Transfer Date" := CheckLedgEntry."Fund Transfer Date";
        GenJnlPostLine.RUN(GenJnlLine2);
        CheckAmountLCY -= CheckLedgEntry."Interest Amount";
      END;
      //PHL0.01(+)

      // PHP Start WTH Calculation V02
       IF (CheckLedgEntry."WHT Amount" <> 0) AND
          (CheckLedgEntry."Bal. Account Type" = CheckLedgEntry."Bal. Account Type"::Vendor) THEN BEGIN
         Vendor.GET(CheckLedgEntry."Bal. Account No.");
         WHTEntry.SETCURRENTKEY("Transaction Type","Bill-to/Pay-to No.","Transaction No.");
         WHTEntry.SETRANGE(Settled,FALSE);
         WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
         IF CheckLedgEntry."WHT Amount" <> 0 THEN
          WHTEntry.SETRANGE("Original Document No.",BankAccLedgEntry2."Document No.")
         ELSE
          WHTEntry.SETRANGE("Document No.",BankAccLedgEntry2."Document No.");
         WHTEntry.SETRANGE("Posting Date",BankAccLedgEntry2."Posting Date");
         WHTEntry.SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
         IF WHTEntry.FINDSET THEN
          REPEAT
            WHTSetup.GET(WHTEntry."WHT Bus. Posting Group", WHTEntry."WHT Prod. Posting Group");
            WHTSetup.TESTFIELD("Payable WHT Account Code");
            WHTSetup.TESTFIELD("Realized WHT Type", WHTSetup."Realized WHT Type"::Payment);
            GenJnlPostReverse.ReverseWHT(WHTEntry,GenJnlLine2."Source Code");
            GenJnlLine2."Document No." := CheckLedgEntry."Document No.";
            GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"G/L Account";
            GenJnlLine2."Account No." := WHTSetup."Payable WHT Account Code";
            GenJnlLine2."System-Created Entry" := TRUE;
            GenJnlLine2."Document Type" := GenJnlLine2."Document Type"::" ";
            GenJnlLine2."Posting Date" := ConfirmFinVoid.GetVoidDate;
            GenJnlLine2.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
            GenJnlLine2.VALIDATE(Amount,CheckLedgEntry."WHT Amount");
            BalanceAmountLCY := 0;
            CurrencyRoundingDebitAccount := '';
            CurrencyRoundingCreditAccount := '';
            GenJnlLine2."Source Code" := SourceCodeSetup."Financially Voided Check";
            GenJnlLine2."Shortcut Dimension 1 Code" := BankAccLedgEntry2."Global Dimension 1 Code";
            GenJnlLine2."Shortcut Dimension 2 Code" := BankAccLedgEntry2."Global Dimension 2 Code";
            GenJnlLine2."Dimension Set ID" := BankAccLedgEntry2."Dimension Set ID";
            GenJnlLine2."Allow Zero-Amount Posting" := TRUE;
            GenJnlLine2."Voucher No." := CheckLedgEntry."Voucher No."; // PHP Start Voucher No.
            GenJnlLine2."Fund Transfer Date" := CheckLedgEntry."Fund Transfer Date";
            GenJnlPostLine.RUN(GenJnlLine2);
            CheckAmountLCY += CheckLedgEntry."WHT Amount";
        UNTIL WHTEntry.NEXT = 0;
       END;
      // PHP End WHT Calculation V02

      // Mark newly posted entry as cleared for bank reconciliation purposes.
      IF ConfirmFinVoid.GetVoidDate = CheckLedgEntry."Check Date" THEN BEGIN
        BankAccLedgEntry3.RESET;
        BankAccLedgEntry3.FINDLAST;
        BankAccLedgEntry3.Open := FALSE;
        BankAccLedgEntry3."Remaining Amount" := 0;
        BankAccLedgEntry3."Statement Status" := BankAccLedgEntry2."Statement Status"::Closed;
        BankAccLedgEntry3.MODIFY;
      END;

      GenJnlLine2.INIT;
      GenJnlLine2."System-Created Entry" := TRUE;
      GenJnlLine2."Financial Void" := TRUE;
      GenJnlLine2."Document No." := CheckLedgEntry."Document No.";
      // PHP Start UT.10
      GenJnlLine2."Voucher No." := CheckLedgEntry."Voucher No."; // PHP Start Voucher No.
      GenJnlLine2."Fund Transfer Date" := CheckLedgEntry."Fund Transfer Date";
      // PHP End
      GenJnlLine2."Account Type" := CheckLedgEntry."Bal. Account Type";
      GenJnlLine2."Posting Date" := ConfirmFinVoid.GetVoidDate;
      GenJnlLine2.VALIDATE("Account No.",CheckLedgEntry."Bal. Account No.");
      GenJnlLine2.VALIDATE("Currency Code",BankAcc."Currency Code");
      GenJnlLine2.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
      GenJnlLine2."Source Code" := SourceCodeSetup."Financially Voided Check";
      GenJnlLine2."Allow Zero-Amount Posting" := TRUE;
      CASE CheckLedgEntry."Bal. Account Type" OF
        CheckLedgEntry."Bal. Account Type"::"G/L Account":
          WITH GLEntry DO BEGIN
            SETCURRENTKEY("Transaction No.");
            SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
            SETRANGE("Document No.",BankAccLedgEntry2."Document No.");
            SETRANGE("Posting Date",BankAccLedgEntry2."Posting Date");
            SETFILTER("Entry No.",'<>%1',BankAccLedgEntry2."Entry No.");
            SETRANGE("G/L Account No.",CheckLedgEntry."Bal. Account No.");
            IF FINDSET THEN
              REPEAT
                GenJnlLine2.VALIDATE("Account No.","G/L Account No.");
                GenJnlLine2.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
                GenJnlLine2.VALIDATE(Amount,-Amount - "VAT Amount");
                BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)";
                GenJnlLine2."Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                GenJnlLine2."Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                GenJnlLine2."Dimension Set ID" := "Dimension Set ID";
                GenJnlLine2."Gen. Posting Type" := "Gen. Posting Type";
                GenJnlLine2."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
                GenJnlLine2."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
                GenJnlLine2."VAT Bus. Posting Group" := "VAT Bus. Posting Group";
                GenJnlLine2."VAT Prod. Posting Group" := "VAT Prod. Posting Group";
                IF VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") THEN
                  GenJnlLine2."VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                GenJnlPostLine.RunWithCheck(GenJnlLine2);
              UNTIL NEXT = 0;
          END;
        CheckLedgEntry."Bal. Account Type"::Customer:
          BEGIN
            IF ConfirmFinVoid.GetVoidType = 0 THEN BEGIN    // Unapply entry
              IF UnApplyCustInvoices(CheckLedgEntry,ConfirmFinVoid.GetVoidDate) THEN
                GenJnlLine2."Applies-to ID" := CheckLedgEntry."Document No.";
            END;
            WITH CustLedgEntry DO BEGIN
              SETCURRENTKEY("Transaction No.");
              SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
              SETRANGE("Document No.",BankAccLedgEntry2."Document No.");
              SETRANGE("Posting Date",BankAccLedgEntry2."Posting Date");
              IF FINDSET THEN
                REPEAT
                  CALCFIELDS("Original Amount");
                  GenJnlLine2.VALIDATE(Amount,-"Original Amount");
                  GenJnlLine2.VALIDATE("Currency Code","Currency Code");
                  BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)";
                  MakeAppliesID(GenJnlLine2."Applies-to ID",CheckLedgEntry."Document No.");
                  GenJnlLine2."Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                  GenJnlLine2."Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                  GenJnlLine2."Dimension Set ID" := "Dimension Set ID";
                  GenJnlLine2."Source Currency Code" := "Currency Code";
                  GenJnlPostLine.RunWithCheck(GenJnlLine2);
                UNTIL NEXT = 0;
            END;
          END;
        CheckLedgEntry."Bal. Account Type"::Vendor:
          BEGIN
            IF ConfirmFinVoid.GetVoidType = 0 THEN BEGIN    // Unapply entry
              IF UnApplyVendInvoices(CheckLedgEntry,ConfirmFinVoid.GetVoidDate) THEN
                GenJnlLine2."Applies-to ID" := CheckLedgEntry."Document No.";
            END;
            WITH VendorLedgEntry DO BEGIN
              SETCURRENTKEY("Transaction No.");
              SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
              SETRANGE("Document No.",BankAccLedgEntry2."Document No.");
              SETRANGE("Posting Date",BankAccLedgEntry2."Posting Date");
              IF FINDSET THEN
                REPEAT
                  CALCFIELDS("Original Amount");
                  //PHL0.01 Start
                  // Original Code Start
                  //GenJnlLine2.VALIDATE(Amount,-"Original Amount");
                  //GenJnlLine2.VALIDATE("Currency Code","Currency Code");
                  //BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)";
                  // Original Code End
                  // Updated Code Start
                  GenJnlLine2.VALIDATE("Currency Code","Currency Code");
                  IF ConfirmFinVoid.GetVoidType = 0 THEN BEGIN
                    GenJnlLine2.VALIDATE(Amount,-"Original Amount");
      //              BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)" + CheckLedgEntry2."WHT Amount"; // Original Code
                    BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)"; // PHP WHT Computation
                  END ELSE BEGIN
                    GenJnlLine2.VALIDATE(Amount,-"Original Amount" + CheckLedgEntry2."WHT Amount");
                    BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)";
                  END;
                  GenJnlLine2."Interest Amount" := 0;
                  GenJnlLine2."Interest Amount (LCY)" := 0;
                  // Updated Code End
                  //PHL0.01 End
                  MakeAppliesID(GenJnlLine2."Applies-to ID",CheckLedgEntry."Document No.");
                  GenJnlLine2."Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                  GenJnlLine2."Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                  GenJnlLine2."Dimension Set ID" := "Dimension Set ID";
                  GenJnlLine2."Source Currency Code" := "Currency Code";
                  GenJnlPostLine.RunWithCheck(GenJnlLine2);
                UNTIL NEXT = 0;
            END;
          END;
        CheckLedgEntry."Bal. Account Type"::"Bank Account":
          WITH BankAccLedgEntry3 DO BEGIN
            SETCURRENTKEY("Transaction No.");
            SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
            SETRANGE("Document No.",BankAccLedgEntry2."Document No.");
            SETRANGE("Posting Date",BankAccLedgEntry2."Posting Date");
            SETFILTER("Entry No.",'<>%1',BankAccLedgEntry2."Entry No.");
            IF FINDSET THEN
              REPEAT
                GenJnlLine2.VALIDATE(Amount,-Amount);
                BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)";
                GenJnlLine2."Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                GenJnlLine2."Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                GenJnlLine2."Dimension Set ID" := "Dimension Set ID";
                GenJnlPostLine.RunWithCheck(GenJnlLine2);
              UNTIL NEXT = 0;
          END;
        CheckLedgEntry."Bal. Account Type"::"Fixed Asset":
          WITH FALedgEntry DO BEGIN
            SETCURRENTKEY("Transaction No.");
            SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
            SETRANGE("Document No.",BankAccLedgEntry2."Document No.");
            SETRANGE("Posting Date",BankAccLedgEntry2."Posting Date");
            IF FINDSET THEN
              REPEAT
                GenJnlLine2.VALIDATE(Amount,-Amount);
                BalanceAmountLCY := BalanceAmountLCY + GenJnlLine2."Amount (LCY)";
                GenJnlLine2."Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                GenJnlLine2."Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                GenJnlLine2."Dimension Set ID" := "Dimension Set ID";
                GenJnlPostLine.RunWithCheck(GenJnlLine2);
              UNTIL NEXT = 0;
          END;
        ELSE BEGIN
          GenJnlLine2."Bal. Account Type" := CheckLedgEntry."Bal. Account Type";
          GenJnlLine2.VALIDATE("Bal. Account No.",CheckLedgEntry."Bal. Account No.");
          GenJnlLine2."Shortcut Dimension 1 Code" := '';
          GenJnlLine2."Shortcut Dimension 2 Code" := '';
          GenJnlLine2."Dimension Set ID" := 0;
          GenJnlPostLine.RunWithoutCheck(GenJnlLine2);
        END;
      END;

      IF ConfirmFinVoid.GetVoidDate = CheckLedgEntry."Check Date" THEN BEGIN
        BankAccLedgEntry2.Open := FALSE;
        BankAccLedgEntry2."Remaining Amount" := 0;
        BankAccLedgEntry2."Statement Status" := BankAccLedgEntry2."Statement Status"::Closed;
        BankAccLedgEntry2.MODIFY;
      END;

      IF CheckAmountLCY + BalanceAmountLCY <> 0 THEN BEGIN  // rounding error from currency conversion
        Currency.GET(BankAcc."Currency Code");
        Currency.TESTFIELD("Conv. LCY Rndg. Debit Acc.");
        Currency.TESTFIELD("Conv. LCY Rndg. Credit Acc.");
        GenJnlLine2.INIT;
        GenJnlLine2."System-Created Entry" := TRUE;
        GenJnlLine2."Financial Void" := TRUE;
        GenJnlLine2."Document No." := CheckLedgEntry."Document No.";
        GenJnlLine2."Account Type" := GenJnlLine2."Account Type"::"G/L Account";
        GenJnlLine2."Posting Date" := ConfirmFinVoid.GetVoidDate;
        IF -(CheckAmountLCY + BalanceAmountLCY) > 0 THEN
          GenJnlLine2.VALIDATE("Account No.",Currency."Conv. LCY Rndg. Debit Acc.")
        ELSE
          GenJnlLine2.VALIDATE("Account No.",Currency."Conv. LCY Rndg. Credit Acc.");
        GenJnlLine2.VALIDATE("Currency Code",BankAcc."Currency Code");
        GenJnlLine2.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
        GenJnlLine2."Source Code" := SourceCodeSetup."Financially Voided Check";
        GenJnlLine2."Allow Zero-Amount Posting" := TRUE;
        GenJnlLine2.VALIDATE(Amount,0);
        GenJnlLine2."Amount (LCY)" := -(CheckAmountLCY + BalanceAmountLCY);
        GenJnlLine2."Shortcut Dimension 1 Code" := BankAccLedgEntry2."Global Dimension 1 Code";
        GenJnlLine2."Shortcut Dimension 2 Code" := BankAccLedgEntry2."Global Dimension 2 Code";
        GenJnlLine2."Dimension Set ID" := BankAccLedgEntry2."Dimension Set ID";
        GenJnlPostLine.RunWithCheck(GenJnlLine2);
      END;

      MarkCheckEntriesVoid(CheckLedgEntry,ConfirmFinVoid.GetVoidDate);
      COMMIT;
      UpdateAnalysisView.UpdateAll(0,TRUE);

      MESSAGE(Text003, CheckLedgEntry.FIELDCAPTION("Check No."), CheckLedgEntry."Check No."); // PHP Start Success Message
    END;

    LOCAL PROCEDURE UnApplyVendInvoices@6(VAR CheckLedgEntry@1000 : Record 272;VoidDate@1008 : Date) : Boolean;
    VAR
      BankAccLedgEntry@1020001 : Record 271;
      OrigPaymentVendLedgEntry@1020000 : Record 25;
      PaymentDetVendLedgEntry@1020004 : Record 380;
      GenJnlLine3@1020002 : Record 81;
      WHTSetup@1001 : Record 50503;
      AppliesID@1020003 : Code[50];
      WHTEntry@1500000 : Record 50504;
      GenJnlLine1@1500001 : Record 81;
      GenJnlPostReverse@1250000 : Codeunit 17;
    BEGIN
      // first, find first original payment line, if any
      BankAccLedgEntry.GET(CheckLedgEntry."Bank Account Ledger Entry No.");
      IF CheckLedgEntry."Bal. Account Type" = CheckLedgEntry."Bal. Account Type"::Vendor THEN BEGIN
        WITH OrigPaymentVendLedgEntry DO BEGIN
          SETCURRENTKEY("Transaction No.");
          SETRANGE("Transaction No.",BankAccLedgEntry."Transaction No.");
          SETRANGE("Document No.",BankAccLedgEntry."Document No.");
          SETRANGE("Posting Date",BankAccLedgEntry."Posting Date");
          IF NOT FINDFIRST THEN
            EXIT(FALSE);
        END;
      END ELSE
        EXIT(FALSE);

      AppliesID := CheckLedgEntry."Document No.";

      //PHL0.01 Start
      // Original Code Start
      //PaymentDetVendLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.","Entry Type","Posting Date");
      //PaymentDetVendLedgEntry.SETRANGE("Vendor Ledger Entry No.",OrigPaymentVendLedgEntry."Entry No.");
      //PaymentDetVendLedgEntry.SETRANGE(Unapplied,FALSE);
      //PaymentDetVendLedgEntry.SETFILTER("Applied Vend. Ledger Entry No.",'<>%1',0);
      //PaymentDetVendLedgEntry.SETRANGE("Entry Type",PaymentDetVendLedgEntry."Entry Type"::Application);
      //IF NOT PaymentDetVendLedgEntry.FINDFIRST THEN
      //  ERROR(NoAppliedEntryErr);
      //GenJnlLine3."Document No." := OrigPaymentVendLedgEntry."Document No.";
      //GenJnlLine3."Posting Date" := VoidDate;
      //GenJnlLine3."Account Type" := GenJnlLine3."Account Type"::Vendor;
      //GenJnlLine3."Account No." := OrigPaymentVendLedgEntry."Vendor No.";
      //GenJnlLine3.Correction := TRUE;
      //GenJnlLine3.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
      //GenJnlLine3."Shortcut Dimension 1 Code" := OrigPaymentVendLedgEntry."Global Dimension 1 Code";
      //GenJnlLine3."Shortcut Dimension 2 Code" := OrigPaymentVendLedgEntry."Global Dimension 2 Code";
      //GenJnlLine3."Posting Group" := OrigPaymentVendLedgEntry."Vendor Posting Group";
      //GenJnlLine3."Source Type" := GenJnlLine3."Source Type"::Vendor;
      //GenJnlLine3."Source No." := OrigPaymentVendLedgEntry."Vendor No.";
      //GenJnlLine3."Source Code" := SourceCodeSetup."Financially Voided Check";
      //GenJnlLine3."Source Currency Code" := OrigPaymentVendLedgEntry."Currency Code";
      //GenJnlLine3."System-Created Entry" := TRUE;
      //GenJnlLine3."Financial Void" := TRUE;
      //GenJnlPostLine.UnapplyVendLedgEntry(GenJnlLine3,PaymentDetVendLedgEntry);
      // Original Code End
      // Updated Code Start

      // *** Start of Reversal of WHT
      // IF CheckLedgEntry."WHT Amount" <> 0 THEN BEGIN
      // WHTEntry.SETCURRENTKEY("Transaction Type","Bill-to/Pay-to No.","Transaction No.");
      // WHTEntry.SETRANGE(Settled,FALSE);
      // WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
      // // PHP Start WHT Computation Revise
      // IF CheckLedgEntry."WHT Amount" <> 0 THEN
      //  WHTEntry.SETRANGE("Original Document No.",BankAccLedgEntry2."Document No.")
      // ELSE
      //  WHTEntry.SETRANGE("Document No.",BankAccLedgEntry2."Document No."); // Original Code
      // // PHP End WHT Computation Revise
      // WHTEntry.SETRANGE("Posting Date",BankAccLedgEntry2."Posting Date");
      // WHTEntry.SETRANGE("Transaction No.",BankAccLedgEntry2."Transaction No.");
      // IF WHTEntry.FINDSET THEN
      //  REPEAT
      //    WHTSetup.GET(WHTEntry."WHT Bus. Posting Group", WHTEntry."WHT Prod. Posting Group");
      //    WHTSetup.TESTFIELD("Payable WHT Account Code");
      //    GenJnlPostReverse.ReverseWHT(WHTEntry,GenJnlLine2."Source Code");
      //    GenJnlLine1.COPY(GenJnlLine2);
      //    GenJnlLine1."Bal. Account Type" := GenJnlLine1."Account Type"::"G/L Account";
      //    GenJnlLine1."Bal. Account No." := WHTSetup."Payable WHT Account Code";
      //    GenJnlLine1."Account Type" := GenJnlLine1."Bal. Account Type"::"Bank Account";
      //    GenJnlLine1."Account No." := CheckLedgEntry."Bank Account No.";
      //    GenJnlLine1.Amount := -WHTEntry.Amount;
      //    GenJnlLine1."Amount (LCY)" := -WHTEntry."Amount (LCY)";
      //    GenJnlLine1."Shortcut Dimension 1 Code" := BankAccLedgEntry."Global Dimension 1 Code";
      //    GenJnlLine1."Shortcut Dimension 2 Code" := BankAccLedgEntry."Global Dimension 2 Code";
      //    GenJnlLine1."Dimension Set ID" := BankAccLedgEntry."Dimension Set ID";
      //    GenJnlPostLine.RunWithCheck(GenJnlLine1);
      //  UNTIL WHTEntry.NEXT = 0;
      // END;
      // *** End of Reversal of WHT
      // *** Start of Unapplication of Vendor Ledger Entries
      // ELSE BEGIN
        PaymentDetVendLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.","Entry Type","Posting Date");
        PaymentDetVendLedgEntry.SETRANGE("Vendor Ledger Entry No.",OrigPaymentVendLedgEntry."Entry No.");
        PaymentDetVendLedgEntry.SETRANGE(Unapplied,FALSE);
        PaymentDetVendLedgEntry.SETFILTER("Applied Vend. Ledger Entry No.",'<>%1',0);
        PaymentDetVendLedgEntry.SETRANGE("Entry Type",PaymentDetVendLedgEntry."Entry Type"::Application);
        IF NOT PaymentDetVendLedgEntry.FINDFIRST THEN
          ERROR(NoAppliedEntryErr);
        GenJnlLine3."Document No." := OrigPaymentVendLedgEntry."Document No.";
        // PHP Start UT.10
        GenJnlLine3."Voucher No." := OrigPaymentVendLedgEntry."Voucher No."; // PHP Start Voucher No.
        GenJnlLine3."Fund Transfer Date" := OrigPaymentVendLedgEntry."Fund Transfer Date";
        // PHP End
        GenJnlLine3."Posting Date" := VoidDate;
        GenJnlLine3."Account Type" := GenJnlLine3."Account Type"::Vendor;
        GenJnlLine3."Account No." := OrigPaymentVendLedgEntry."Vendor No.";
        GenJnlLine3.Correction := TRUE;
        GenJnlLine3.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
        GenJnlLine3."Shortcut Dimension 1 Code" := OrigPaymentVendLedgEntry."Global Dimension 1 Code";
        GenJnlLine3."Shortcut Dimension 2 Code" := OrigPaymentVendLedgEntry."Global Dimension 2 Code";
        GenJnlLine3."Posting Group" := OrigPaymentVendLedgEntry."Vendor Posting Group";
        GenJnlLine3."Source Type" := GenJnlLine3."Source Type"::Vendor;
        GenJnlLine3."Source No." := OrigPaymentVendLedgEntry."Vendor No.";
        GenJnlLine3."Source Code" := SourceCodeSetup."Financially Voided Check";
        GenJnlLine3."Source Currency Code" := OrigPaymentVendLedgEntry."Currency Code";
        GenJnlLine3."System-Created Entry" := TRUE;
        GenJnlLine3."Financial Void" := TRUE;
        GenJnlPostLine.UnapplyVendLedgEntry(GenJnlLine3,PaymentDetVendLedgEntry,TRUE);
      // END;
      // ** Start of Unapplication of Vendor Ledger Entries
      // Updated Code End
      //PHL0.01 End

      WITH OrigPaymentVendLedgEntry DO BEGIN
        FINDSET(TRUE,FALSE);  // re-get the now-modified payment entry.
        REPEAT                // set up to be applied by upcoming voiding entry.
          MakeAppliesID(AppliesID,CheckLedgEntry."Document No.");
          "Applies-to ID" := AppliesID;
          CALCFIELDS("Remaining Amount");
          "Amount to Apply" := "Remaining Amount";
          "Accepted Pmt. Disc. Tolerance" := FALSE;
          "Accepted Payment Tolerance" := 0;
          MODIFY;
        UNTIL NEXT = 0;
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UnApplyCustInvoices@7(VAR CheckLedgEntry@1000 : Record 272;VoidDate@1006 : Date) : Boolean;
    VAR
      BankAccLedgEntry@1020001 : Record 271;
      OrigPaymentCustLedgEntry@1020000 : Record 21;
      PaymentDetCustLedgEntry@1020004 : Record 379;
      GenJnlLine3@1020002 : Record 81;
      AppliesID@1020003 : Code[50];
    BEGIN
      // first, find first original payment line, if any
      BankAccLedgEntry.GET(CheckLedgEntry."Bank Account Ledger Entry No.");
      IF CheckLedgEntry."Bal. Account Type" = CheckLedgEntry."Bal. Account Type"::Customer THEN BEGIN
        WITH OrigPaymentCustLedgEntry DO BEGIN
          SETCURRENTKEY("Transaction No.");
          SETRANGE("Transaction No.",BankAccLedgEntry."Transaction No.");
          SETRANGE("Document No.",BankAccLedgEntry."Document No.");
          SETRANGE("Posting Date",BankAccLedgEntry."Posting Date");
          IF NOT FINDFIRST THEN
            EXIT(FALSE);
        END;
      END ELSE
        EXIT(FALSE);

      AppliesID := CheckLedgEntry."Document No.";

      PaymentDetCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.","Entry Type","Posting Date");
      PaymentDetCustLedgEntry.SETRANGE("Cust. Ledger Entry No.",OrigPaymentCustLedgEntry."Entry No.");
      PaymentDetCustLedgEntry.SETRANGE(Unapplied,FALSE);
      PaymentDetCustLedgEntry.SETFILTER("Applied Cust. Ledger Entry No.",'<>%1',0);
      PaymentDetCustLedgEntry.SETRANGE("Entry Type",PaymentDetCustLedgEntry."Entry Type"::Application);
      IF NOT PaymentDetCustLedgEntry.FINDFIRST THEN
        ERROR(NoAppliedEntryErr);
      GenJnlLine3."Document No." := OrigPaymentCustLedgEntry."Document No.";
      GenJnlLine3."Posting Date" := VoidDate;
      GenJnlLine3."Account Type" := GenJnlLine3."Account Type"::Customer;
      GenJnlLine3."Account No." := OrigPaymentCustLedgEntry."Customer No.";
      GenJnlLine3.Correction := TRUE;
      GenJnlLine3.Description := STRSUBSTNO(Text001,CheckLedgEntry."Check No.");
      GenJnlLine3."Shortcut Dimension 1 Code" := OrigPaymentCustLedgEntry."Global Dimension 1 Code";
      GenJnlLine3."Shortcut Dimension 2 Code" := OrigPaymentCustLedgEntry."Global Dimension 2 Code";
      GenJnlLine3."Posting Group" := OrigPaymentCustLedgEntry."Customer Posting Group";
      GenJnlLine3."Source Type" := GenJnlLine3."Source Type"::Customer;
      GenJnlLine3."Source No." := OrigPaymentCustLedgEntry."Customer No.";
      GenJnlLine3."Source Code" := SourceCodeSetup."Financially Voided Check";
      GenJnlLine3."Source Currency Code" := OrigPaymentCustLedgEntry."Currency Code";
      GenJnlLine3."System-Created Entry" := TRUE;
      GenJnlLine3."Financial Void" := TRUE;
      GenJnlPostLine.UnapplyCustLedgEntry(GenJnlLine3,PaymentDetCustLedgEntry);

      WITH OrigPaymentCustLedgEntry DO BEGIN
        FINDSET(TRUE,FALSE);  // re-get the now-modified payment entry.
        REPEAT                // set up to be applied by upcoming voiding entry.
          MakeAppliesID(AppliesID,CheckLedgEntry."Document No.");
          "Applies-to ID" := AppliesID;
          CALCFIELDS("Remaining Amount");
          "Amount to Apply" := "Remaining Amount";
          "Accepted Pmt. Disc. Tolerance" := FALSE;
          "Accepted Payment Tolerance" := 0;
          MODIFY;
        UNTIL NEXT = 0;
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE MarkCheckEntriesVoid@8(VAR OriginalCheckEntry@1000 : Record 272;VoidDate@1001 : Date);
    VAR
      RelatedCheckEntry@1002 : Record 272;
      RelatedCheckEntry2@1003 : Record 272;
    BEGIN
      WITH RelatedCheckEntry DO BEGIN
        RESET;
        SETCURRENTKEY("Bank Account No.","Entry Status","Check No.");
        SETRANGE("Bank Account No.",OriginalCheckEntry."Bank Account No.");
        SETRANGE("Entry Status",OriginalCheckEntry."Entry Status"::Posted);
        SETRANGE("Statement Status",OriginalCheckEntry."Statement Status"::Open);
        SETRANGE("Check No.",OriginalCheckEntry."Check No.");
        SETRANGE("Check Date",OriginalCheckEntry."Check Date");
        SETFILTER("Entry No.",'<>%1',OriginalCheckEntry."Entry No.");
        IF FINDSET THEN
          REPEAT
            RelatedCheckEntry2 := RelatedCheckEntry;
            RelatedCheckEntry2."Original Entry Status" := "Entry Status";
            RelatedCheckEntry2."Entry Status" := "Entry Status"::"Financially Voided";
            RelatedCheckEntry2."Positive Pay Exported" := FALSE;
            IF VoidDate = OriginalCheckEntry."Check Date" THEN BEGIN
              RelatedCheckEntry2.Open := FALSE;
              RelatedCheckEntry2."Statement Status" := RelatedCheckEntry2."Statement Status"::Closed;
            END;
            RelatedCheckEntry2.MODIFY;
          UNTIL NEXT = 0;
      END;

      WITH OriginalCheckEntry DO BEGIN
        "Original Entry Status" := "Entry Status";
        "Entry Status" := "Entry Status"::"Financially Voided";
        "Positive Pay Exported" := FALSE;
        IF VoidDate = "Check Date" THEN BEGIN
          Open := FALSE;
          "Statement Status" := "Statement Status"::Closed;
        END;
        MODIFY;
      END;
    END;

    LOCAL PROCEDURE MakeAppliesID@9(VAR AppliesID@1020000 : Code[50];CheckDocNo@1020001 : Code[20]);
    BEGIN
      IF AppliesID = '' THEN
        EXIT;
      IF AppliesID = CheckDocNo THEN
        AppliesIDCounter := 0;
      AppliesIDCounter := AppliesIDCounter + 1;
      AppliesID :=
        COPYSTR(FORMAT(AppliesIDCounter) + CheckDocNo,1,MAXSTRLEN(AppliesID));
    END;

    PROCEDURE ForceFinancialVoidCheck@11(VAR CheckLedgEntry@1000 : Record 272);
    VAR
      TransactionBalance@1001 : Decimal;
      VATPostingSetup@1002 : Record 325;
      Currency@1009 : Record 4;
      ConfirmFinVoid@1008 : Page 695;
      AmountToVoid@1003 : Decimal;
      CheckAmountLCY@1004 : Decimal;
      BalanceAmountLCY@1005 : Decimal;
      CurrencyRoundingDebitAccount@1006 : Code[20];
      CurrencyRoundingCreditAccount@1007 : Code[20];
    BEGIN
      // PHP Start - For forcing the Check ledger entries
      CheckLedgEntry.TESTFIELD("Entry Status",CheckLedgEntry."Entry Status"::Printed);
      CheckLedgEntry.TESTFIELD("Statement Status",CheckLedgEntry."Statement Status"::Open);
      CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::"Financially Voided";
      CheckLedgEntry.MODIFY;
      // PHP End
    END;

    PROCEDURE ForcePrintedCheck@10(VAR CheckLedgEntry@1000 : Record 272);
    VAR
      TransactionBalance@1001 : Decimal;
      VATPostingSetup@1002 : Record 325;
      Currency@1009 : Record 4;
      ConfirmFinVoid@1008 : Page 695;
      AmountToVoid@1003 : Decimal;
      CheckAmountLCY@1004 : Decimal;
      BalanceAmountLCY@1005 : Decimal;
      CurrencyRoundingDebitAccount@1006 : Code[20];
      CurrencyRoundingCreditAccount@1007 : Code[20];
    BEGIN
      // PHP Start - For forcing the Check ledger entries
      CheckLedgEntry.TESTFIELD("Entry Status",CheckLedgEntry."Entry Status"::"Financially Voided");
      CheckLedgEntry.TESTFIELD("Statement Status",CheckLedgEntry."Statement Status"::Open);
      CheckLedgEntry."Entry Status" := CheckLedgEntry."Entry Status"::Printed;
      CheckLedgEntry.MODIFY;
      // PHP End
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 50500 WHTManagement
{
  OBJECT-PROPERTIES
  {
    Date=08/16/18;
    Time=10:46:16 PM;
    Modified=Yes;
    Version List=PHL0.01,OC.03,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    Permissions=TableData 21=rimd,
                TableData 25=rimd,
                TableData 45=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PurchInvLine@1500064 : Record 123;
      PurchCreditLine@1500063 : Record 125;
      SalesInvLine@1500062 : Record 113;
      SalesCreditLine@1500061 : Record 115;
      WHTPostingSetup@1500060 : Record 50503;
      CurrExchRate@1500059 : Record 330;
      TempVendLedgEntry@1500058 : Record 25;
      TempVendLedgEntry1@1500057 : Record 25;
      TempCustLedgEntry@1500056 : Record 21;
      TempCustLedgEntry1@1500055 : Record 21;
      WHTRevenueTypes@1500054 : Record 50502;
      SourceCodeSetup@1500053 : Record 242;
      Vendor@1500032 : Record 23;
      GLSetup@1500033 : Record 98;
      NoSeriesMgt@1500052 : Codeunit 396;
      WHTBusPostGrp@1500050 : Code[10];
      WHTProdPostGrp@1500049 : Code[10];
      WHTRevenueType@1500048 : Code[10];
      GenBusPostGrp@1500047 : Code[10];
      GenProdPostGrp@1500046 : Code[10];
      Dim1@1500045 : Code[10];
      Dim2@1500044 : Code[10];
      SourceCode@1500043 : Code[10];
      ReasonCode@1500031 : Code[10];
      ActualVendorNo@1500030 : Code[20];
      AmountVAT@1500029 : Decimal;
      Amount@1500028 : Decimal;
      AbsorbBase@1500027 : Decimal;
      CurrFactor@1500026 : Decimal;
      AppliedAmount@1500025 : Decimal;
      AppliedBase@1500066 : Decimal;
      TempRemAmt@1500022 : Decimal;
      TransType@1500021 : 'Purchase,Sale,Settlement';
      DocType@1500020 : ' ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund';
      PayToAccType@1500019 : 'Vendor,Customer';
      BuyFromAccType@1500018 : 'Vendor,Customer';
      DocDate@1500017 : Date;
      CurrencyCode@1500016 : Code[10];
      DocNo@1500015 : Code[20];
      PayToVendCustNo@1500014 : Code[20];
      BuyFromVendCustNo@1500013 : Code[20];
      WHTReportLineNo@1500012 : Code[10];
      ExtDocNo@1500011 : Code[20];
      "Applies-toID"@1500037 : Code[20];
      PostingDate@1500010 : Date;
      UnrealizedWHT@1500009 : Boolean;
      NextWHTEntryNo@1500008 : Integer;
      TType@1500007 : 'Purchase,Sale';
      ApplyDocType@1500006 : ' ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund';
      ApplyDocNo@1500005 : Code[20];
      TotAmt@1500004 : Decimal;
      NextEntry@1500003 : Integer;
      TempRemBase@1500001 : Decimal;
      Text1500000@1500036 : TextConst 'ENU=Currency Code should be same for Payment and Invoice.';
      ExitLoop@1500034 : Boolean;
      Text1500001@1500035 : TextConst 'ENU=You cannot reprint the certificate from here. Go to reports and reprint.';
      Text1500003@1500039 : TextConst 'ENU=The WHT posting groups are different and thus the entries cannot be apply.';
      TempGenJnlLine@1500040 : TEMPORARY Record 81;
      TempPurchInvLine@1500068 : Record 123;
      TempPurchCreditLine@1500067 : Record 125;
      TotalInvoiceAmount@1500042 : Decimal;
      TotalInvoiceAmountLCY@1500041 : Decimal;
      WHTMinInvoiceAmt@1500038 : Decimal;
      Text1500004@1500070 : TextConst 'ENU=You cannot post a transaction using different WHT minimum invoice amounts on lines.';
      Text1500005@1000 : TextConst 'ENU=Do you wish to print the %1?';
      Text1500006@1001 : TextConst 'ENU=The Applied Ledger Entry %1 does not have a WHT Entry in General Journal Line %2.';

    PROCEDURE ApplyVendInvoiceWHT@1500000(VAR VendLedgerEntry@1500001 : Record 25;VAR GenJnlLine@1500000 : Record 81) EntryNo : Integer;
    VAR
      Currency@1500002 : 'Vendor,Customer';
      RemainingAmt@1500003 : Decimal;
    BEGIN
      TempVendLedgEntry1.RESET;
      SetVendAppliesToFilter(TempVendLedgEntry1,GenJnlLine);
      IF TempVendLedgEntry1.FINDSET(TRUE,FALSE) THEN
        REPEAT
          TempVendLedgEntry1.CALCFIELDS(
            Amount,"Amount (LCY)","Remaining Amount","Remaining Amt. (LCY)",
            "Original Amount","Original Amt. (LCY)");
          IF TempVendLedgEntry1."Rem. Amt for WHT" = 0 THEN
            TempVendLedgEntry1."Rem. Amt for WHT" := TempVendLedgEntry1."Remaining Amount";
          RemainingAmt := RemainingAmt + TempVendLedgEntry1."Rem. Amt for WHT";
          IF TempVendLedgEntry1."Document Type" = TempVendLedgEntry1."Document Type"::"Credit Memo" THEN
            RemainingAmt := RemainingAmt + TempVendLedgEntry1."Rem. Amt for WHT";
        UNTIL TempVendLedgEntry1.NEXT = 0;
      TotAmt := ABS(GenJnlLine.Amount);

      TempVendLedgEntry.RESET;
      SetVendAppliesToFilter(TempVendLedgEntry,GenJnlLine);
      TempVendLedgEntry.SETRANGE("Document Type",TempVendLedgEntry."Document Type"::"Credit Memo");
      IF TempVendLedgEntry.FINDSET THEN
        REPEAT
          TempVendLedgEntry.CALCFIELDS(
            Amount,"Amount (LCY)","Remaining Amount","Remaining Amt. (LCY)",
            "Original Amount","Original Amt. (LCY)");
          IF CheckPmtDisc(
               GenJnlLine."Posting Date",TempVendLedgEntry."Pmt. Discount Date",
               ABS(TempVendLedgEntry."Rem. Amt for WHT"),
               ABS(TempVendLedgEntry."Rem. Amt"),
               ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
               ABS(TotAmt))
          THEN
            TotAmt := TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible";

          IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
             (ABS(TempVendLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
          THEN BEGIN
            IF CheckPmtDisc(GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                 ABS(TempVendLedgEntry."Rem. Amt"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN BEGIN
              GenJnlLine.VALIDATE(
                Amount,
                -ABS(TempVendLedgEntry."Rem. Amt for WHT" - TempVendLedgEntry."Original Pmt. Disc. Possible"));
              RemainingAmt :=
                RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT" - TempVendLedgEntry."Original Pmt. Disc. Possible";
            END ELSE BEGIN
              GenJnlLine.VALIDATE(Amount,-ABS(TempVendLedgEntry."Rem. Amt for WHT"));
              IF TempVendLedgEntry."Document Type" <>
                 TempVendLedgEntry."Document Type"::"Credit Memo"
              THEN
                TotAmt := TotAmt - TempVendLedgEntry."Rem. Amt for WHT";
              RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";
            END;
          END ELSE BEGIN
            IF CheckPmtDisc(GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                 ABS(TempVendLedgEntry."Rem. Amt"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              GenJnlLine.VALIDATE(Amount,-TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible")
            ELSE
              GenJnlLine.VALIDATE(Amount,-TotAmt);
            ExitLoop := TRUE;
          END;
          IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
            GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
          ELSE BEGIN
            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
            RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";
            TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
            ExitLoop := FALSE;
          END;
          GenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
      //    GenJnlLine."Voucher No." := GenJnlLine."Voucher No."; // PHP Start Voucher No.
          NextEntry :=
            ProcessPayment(
              GenJnlLine,VendLedgerEntry."Transaction No.",VendLedgerEntry."Entry No.",Currency::Vendor,FALSE);

          IF ExitLoop THEN
            EXIT(NextEntry);
        UNTIL TempVendLedgEntry.NEXT = 0;
      ExitLoop := FALSE;
      TempVendLedgEntry.RESET;
      SetVendAppliesToFilter(TempVendLedgEntry,GenJnlLine);
      TempVendLedgEntry.SETFILTER("Document Type",'<>%1',TempVendLedgEntry."Document Type"::"Credit Memo");
      IF TempVendLedgEntry.FINDSET THEN
        REPEAT
          TempVendLedgEntry.CALCFIELDS(
            Amount,
            "Amount (LCY)",
            "Remaining Amount",
            "Remaining Amt. (LCY)",
            "Original Amount",
            "Original Amt. (LCY)");
          IF TempVendLedgEntry."Remaining Amount" = 0 THEN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                 ABS(TempVendLedgEntry."Rem. Amt"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";

          IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
             (ABS(TempVendLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
          THEN BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                 ABS(TempVendLedgEntry."Rem. Amt"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN BEGIN
              IF (ABS(TotAmt) < ABS(TempVendLedgEntry."Rem. Amt for WHT")) OR (TempVendLedgEntry."Rem. Amt for WHT" = 0) THEN
                GenJnlLine.VALIDATE(Amount,TotAmt)
              ELSE
                GenJnlLine.VALIDATE(
                  Amount,
                  ABS(TempVendLedgEntry."Rem. Amt for WHT" - TempVendLedgEntry."Original Pmt. Disc. Possible"));

              IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
              RemainingAmt :=
                RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT" + TempVendLedgEntry."Original Pmt. Disc. Possible";
            END ELSE BEGIN
              GenJnlLine.VALIDATE(Amount,ABS(TempVendLedgEntry."Rem. Amt for WHT"));
              IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
              RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";
            END;
          END ELSE BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                 ABS(TempVendLedgEntry."Rem. Amt"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              GenJnlLine.VALIDATE(Amount,TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible")
            ELSE
              GenJnlLine.VALIDATE(Amount,TotAmt);
            ExitLoop := TRUE;
          END;

          IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
            GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
          ELSE BEGIN
            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
            RemainingAmt := RemainingAmt + TempVendLedgEntry."Rem. Amt for WHT";
            TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
            ExitLoop := FALSE;
          END;

          GenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
          NextEntry :=
            ProcessPayment(
              GenJnlLine,VendLedgerEntry."Transaction No.",VendLedgerEntry."Entry No.",Currency::Vendor,FALSE);

          IF ExitLoop THEN
            EXIT(NextEntry);
        UNTIL TempVendLedgEntry.NEXT = 0;
      EXIT(NextEntry);
    END;

    LOCAL PROCEDURE SetVendAppliesToFilter@150001(VAR VendLedgEntry@150000 : Record 25;GenJnlLine@150001 : Record 81);
    BEGIN
      IF GenJnlLine."Applies-to ID" <> '' THEN
        VendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
      ELSE BEGIN
        VendLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
        VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
      END;
    END;

    PROCEDURE ApplyCustInvoiceWHT@1500001(VAR CustLedgerEntry@1500001 : Record 21;VAR GenJnlLine@1500000 : Record 81) EntryNo : Integer;
    VAR
      Currency@1500002 : 'Vendor,Customer';
      RemainingAmt@1500003 : Decimal;
    BEGIN
      TotAmt := ABS(GenJnlLine.Amount);
      TempCustLedgEntry1.RESET;
      SetCustAppliesToFilter(TempCustLedgEntry1,GenJnlLine);
      IF TempCustLedgEntry1.FINDSET(TRUE,FALSE) THEN
        REPEAT
          TempCustLedgEntry1.CALCFIELDS(
            Amount,
            "Amount (LCY)",
            "Remaining Amount",
            "Remaining Amt. (LCY)",
            "Original Amount",
            "Original Amt. (LCY)");
          IF TempCustLedgEntry1."Rem. Amt for WHT" = 0 THEN
            TempCustLedgEntry1."Rem. Amt for WHT" := TempCustLedgEntry1."Remaining Amount";
          RemainingAmt := RemainingAmt + TempCustLedgEntry1."Rem. Amt for WHT";
          IF TempCustLedgEntry1."Document Type" = TempCustLedgEntry1."Document Type"::"Credit Memo" THEN
            RemainingAmt := RemainingAmt + TempCustLedgEntry1."Rem. Amt for WHT";
        UNTIL TempCustLedgEntry1.NEXT = 0;

      TempCustLedgEntry.RESET;
      SetCustAppliesToFilter(TempCustLedgEntry,GenJnlLine);
      TempCustLedgEntry.SETRANGE("Document Type",TempCustLedgEntry."Document Type"::"Credit Memo");
      IF TempCustLedgEntry.FINDSET THEN
        REPEAT
          TempCustLedgEntry.CALCFIELDS(
            Amount,
            "Amount (LCY)",
            "Remaining Amount",
            "Remaining Amt. (LCY)",
            "Original Amount",
            "Original Amt. (LCY)");
          IF CheckPmtDisc(
               GenJnlLine."Posting Date",
               TempCustLedgEntry."Pmt. Discount Date",
               ABS(TempCustLedgEntry."Rem. Amt for WHT"),
               ABS(TempCustLedgEntry."Rem. Amt"),
               ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
               ABS(TotAmt))
          THEN
            TotAmt := TotAmt + ABS(TempCustLedgEntry."Original Pmt. Disc. Possible");
          IF (ABS(RemainingAmt) <= ABS(TotAmt)) OR
             (ABS(TempCustLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
          THEN BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Rem. Amt for WHT"),
                 ABS(TempCustLedgEntry."Rem. Amt"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN BEGIN
              GenJnlLine.VALIDATE(
                Amount,
                ABS(TempCustLedgEntry."Rem. Amt for WHT" - TempCustLedgEntry."Original Pmt. Disc. Possible"));
              IF TempCustLedgEntry."Document Type" <> TempCustLedgEntry."Document Type"::"Credit Memo" THEN
                TotAmt := -(TotAmt - TempCustLedgEntry."Rem. Amt for WHT");
              RemainingAmt :=
                RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT" + TempCustLedgEntry."Original Pmt. Disc. Possible";
            END ELSE BEGIN
              GenJnlLine.VALIDATE(Amount,ABS(TempCustLedgEntry."Rem. Amt for WHT"));
              IF TempCustLedgEntry."Document Type" <> TempCustLedgEntry."Document Type"::"Credit Memo" THEN
                TotAmt := -(TotAmt - TempCustLedgEntry."Rem. Amt for WHT");
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
            END;
          END ELSE BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Rem. Amt for WHT"),
                 ABS(TempCustLedgEntry."Rem. Amt"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              GenJnlLine.VALIDATE(Amount,ABS(TotAmt - ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
            ELSE
              GenJnlLine.VALIDATE(Amount,ABS(TotAmt));
            ExitLoop := TRUE;
          END;
          IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::Invoice THEN
            GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
          ELSE
            IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
              TotAmt := TotAmt - TempCustLedgEntry."Rem. Amt for WHT";
              ExitLoop := FALSE;
            END;
          GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
          NextEntry :=
            ProcessPayment(
              GenJnlLine,CustLedgerEntry."Transaction No.",CustLedgerEntry."Entry No.",Currency::Customer,FALSE);
          IF ExitLoop THEN
            EXIT(NextEntry);
        UNTIL TempCustLedgEntry.NEXT = 0;

      ExitLoop := FALSE;
      TempCustLedgEntry.RESET;
      SetCustAppliesToFilter(TempCustLedgEntry,GenJnlLine);
      TempCustLedgEntry.SETFILTER("Document Type",'<>%1',TempCustLedgEntry."Document Type"::"Credit Memo");
      IF TempCustLedgEntry.FINDSET THEN
        REPEAT
          TempCustLedgEntry.CALCFIELDS(
            Amount,"Amount (LCY)","Remaining Amount","Remaining Amt. (LCY)","Original Amount","Original Amt. (LCY)");
          IF CheckPmtDisc(
               GenJnlLine."Posting Date",
               TempCustLedgEntry."Pmt. Discount Date",
               ABS(TempCustLedgEntry."Rem. Amt for WHT"),
               ABS(TempCustLedgEntry."Rem. Amt"),
               ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
               ABS(TotAmt))
          THEN
            TotAmt := TotAmt + ABS(TempCustLedgEntry."Original Pmt. Disc. Possible");
          IF (ABS(RemainingAmt) <= ABS(TotAmt)) OR
             (ABS(TempCustLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
          THEN BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Rem. Amt for WHT"),
                 ABS(TempCustLedgEntry."Rem. Amt"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN BEGIN
              RemainingAmt :=
                RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT" + TempCustLedgEntry."Original Pmt. Disc. Possible";
              GenJnlLine.VALIDATE(
                Amount,-ABS(TempCustLedgEntry."Rem. Amt for WHT" - TempCustLedgEntry."Original Pmt. Disc. Possible"));
              IF TempCustLedgEntry."Document Type" <> TempCustLedgEntry."Document Type"::"Credit Memo" THEN
                TotAmt := (TotAmt - TempCustLedgEntry."Rem. Amt for WHT")
            END ELSE BEGIN
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
              GenJnlLine.VALIDATE(Amount,-ABS(TempCustLedgEntry."Rem. Amt for WHT"));
              IF TempCustLedgEntry."Document Type" <> TempCustLedgEntry."Document Type"::"Credit Memo" THEN
                TotAmt := (TotAmt - TempCustLedgEntry."Rem. Amt for WHT");
            END;
          END ELSE BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Rem. Amt for WHT"),
                 ABS(TempCustLedgEntry."Rem. Amt"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              GenJnlLine.VALIDATE(Amount,-ABS(TotAmt - TempCustLedgEntry."Original Pmt. Disc. Possible"))
            ELSE
              GenJnlLine.VALIDATE(Amount,-ABS(TotAmt));
            ExitLoop := TRUE;
          END;
          IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::Invoice THEN
            GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
          ELSE
            IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
              TotAmt := TotAmt - TempCustLedgEntry."Rem. Amt for WHT";
              ExitLoop := FALSE;
            END;
          GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
          NextEntry :=
            ProcessPayment(
              GenJnlLine,CustLedgerEntry."Transaction No.",CustLedgerEntry."Entry No.",Currency::Customer,FALSE);
          IF ExitLoop THEN
            EXIT(NextEntry);
        UNTIL TempCustLedgEntry.NEXT = 0;
      EXIT(NextEntry);
    END;

    LOCAL PROCEDURE SetCustAppliesToFilter@150003(VAR CustLedgEntry@150000 : Record 21;GenJnlLine@150001 : Record 81);
    BEGIN
      IF GenJnlLine."Applies-to ID" <> '' THEN
        CustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
      ELSE BEGIN
        CustLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
        CustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
      END;
    END;

    PROCEDURE ApplyManualCustInvoiceWHT@1500002(VAR CustLedgerEntry@1500001 : Record 21;VAR GenJnlLine@1500000 : Record 81) NextEntry : Integer;
    VAR
      WHTEntry@1500003 : Record 50504;
      Currency@1500002 : 'Vendor,Customer';
    BEGIN
      TempCustLedgEntry.RESET;
      TotAmt := ABS(GenJnlLine.Amount);
      IF GenJnlLine."Applies-to Doc. No." = '' THEN BEGIN
        TempCustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
        TempCustLedgEntry.SETRANGE("Document Type",TempCustLedgEntry."Document Type"::"Credit Memo");
        IF TempCustLedgEntry.FINDSET THEN
          REPEAT
            WHTEntry.RESET;
            WHTEntry.SETRANGE("Document No.",TempCustLedgEntry."Document No.");
            WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
            IF WHTEntry.FINDSET THEN
              REPEAT
                GenJnlLine.VALIDATE(Amount,WHTEntry."Remaining Unrealized Amount");
                GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
                GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
                TotAmt := TotAmt - WHTEntry."Remaining Unrealized Amount";
              UNTIL WHTEntry.NEXT = 0;
            CustLedgerEntry."Applies-to ID" := '';
            CustLedgerEntry.MODIFY;
          UNTIL TempCustLedgEntry.NEXT = 0;

        TempCustLedgEntry.RESET;
        TempCustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
        TempCustLedgEntry.SETFILTER("Document Type",'<>%1',TempCustLedgEntry."Document Type"::"Credit Memo");
        IF TempCustLedgEntry.FINDSET THEN
          REPEAT
            WHTEntry.RESET;
            WHTEntry.SETRANGE("Document No.",TempCustLedgEntry."Document No.");
            WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Invoice);
            //PHL0.01(-)
            //Original Code
            //IF WHTEntry.FINDSET THEN
            //Updated Code
            IF WHTEntry.FINDSET THEN BEGIN
            //PHL0.01(+)
              REPEAT
                IF TotAmt > ABS(WHTEntry."Remaining Unrealized Amount") THEN BEGIN
                  GenJnlLine.VALIDATE(Amount,WHTEntry."Remaining Unrealized Amount");
                  GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice;
                  GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
                  TotAmt := TotAmt - ABS(WHTEntry."Remaining Unrealized Amount");
                  ExitLoop := FALSE;
                END ELSE BEGIN
                  GenJnlLine.VALIDATE(Amount,-TotAmt);
                  GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice;
                  GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
                  ExitLoop := TRUE;
                END;
              UNTIL WHTEntry.NEXT = 0;
            //PHL0.01(-)
            END ELSE BEGIN
              IF GenJnlLine."WHT Payment" THEN
                ERROR(Text1500006,TempCustLedgEntry."Document No.",GenJnlLine."Line No.");
            END;
            //PHL0.01(+)
            NextEntry :=
              ProcessManualReceipt(
                GenJnlLine,CustLedgerEntry."Transaction No.",CustLedgerEntry."Entry No.",Currency::Customer);
            CustLedgerEntry."Applies-to ID" := '';
            CustLedgerEntry.MODIFY;
            IF ExitLoop THEN
              EXIT(NextEntry);
          UNTIL TempCustLedgEntry.NEXT = 0;
      END ELSE
        NextEntry :=
          ProcessManualReceipt(
            GenJnlLine,CustLedgerEntry."Transaction No.",CustLedgerEntry."Entry No.",Currency::Customer);
    END;

    PROCEDURE InsertVendInvoiceWHT@1500003(VAR PurchInvHeader@1500000 : Record 122);
    VAR
      TempPurchLine@1500003 : Record 39;
      PrepaymentAmtDeducted@1500002 : Decimal;
    BEGIN
      WITH PurchInvHeader DO BEGIN
        PurchInvLine.RESET;
        PurchInvLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        PurchInvLine.SETRANGE("Document No.","No.");
        PurchInvLine.SETFILTER(Quantity,'<>0');
        IF PurchInvLine.FINDSET THEN BEGIN
          WHTBusPostGrp := PurchInvLine."WHT Business Posting Group";
          WHTProdPostGrp := PurchInvLine."WHT Product Posting Group";
          IF WHTPostingSetup.GET(PurchInvLine."WHT Business Posting Group",PurchInvLine."WHT Product Posting Group") THEN
            WHTMinInvoiceAmt := WHTPostingSetup."WHT Minimum Invoice Amount";
          REPEAT
            IF WHTPostingSetup.GET(PurchInvLine."WHT Business Posting Group",PurchInvLine."WHT Product Posting Group") THEN BEGIN
              IF (WHTBusPostGrp <> PurchInvLine."WHT Business Posting Group") OR
                 (WHTProdPostGrp <> PurchInvLine."WHT Product Posting Group")
              THEN BEGIN
                IF WHTMinInvoiceAmt <> WHTPostingSetup."WHT Minimum Invoice Amount" THEN
                  ERROR(Text1500004);
              END;
              WHTBusPostGrp := PurchInvLine."WHT Business Posting Group";
              WHTProdPostGrp := PurchInvLine."WHT Product Posting Group";
            END;
          UNTIL PurchInvLine.NEXT = 0;
        END;
      END;

      WITH PurchInvHeader DO BEGIN
        PurchInvLine.RESET;
        PurchInvLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        PurchInvLine.SETRANGE("Document No.","No.");
        PurchInvLine.SETFILTER(Quantity,'<>0');
        PurchInvLine.SETRANGE("Prepayment Line",FALSE);
        IF PurchInvLine.FINDSET THEN
          REPEAT
            IF WHTPostingSetup.GET(PurchInvLine."WHT Business Posting Group",PurchInvLine."WHT Product Posting Group") THEN
              IF WHTPostingSetup."WHT %" > 0 THEN BEGIN
                DocNo := PurchInvLine."Document No.";
                DocType := DocType::Invoice;
                PayToAccType := PayToAccType::Vendor;
                PayToVendCustNo := "Pay-to Vendor No.";
                BuyFromAccType := BuyFromAccType::Vendor;
                GenBusPostGrp := PurchInvLine."Gen. Bus. Posting Group";
                GenProdPostGrp := PurchInvLine."Gen. Prod. Posting Group";
                TransType := TransType::Purchase;
                BuyFromVendCustNo := "Actual Vendor No.";
                PostingDate := "Posting Date";
                DocDate := "Document Date";
                CurrencyCode := "Currency Code";
                CurrFactor := "Currency Factor";
                ApplyDocType := "Applies-to Doc. Type";
                ApplyDocNo := "Applies-to Doc. No.";
                SourceCode := "Source Code";
                ReasonCode := "Reason Code";

                IF (WHTBusPostGrp <> PurchInvLine."WHT Business Posting Group") OR
                   (WHTProdPostGrp <> PurchInvLine."WHT Product Posting Group")
                THEN BEGIN
                  IF AmountVAT <> 0 THEN BEGIN
                    IF WHTPostingSetup."Realized WHT Type" IN
                       [WHTPostingSetup."Realized WHT Type"::Earliest,
                        WHTPostingSetup."Realized WHT Type"::Invoice]
                    THEN BEGIN
                      TempPurchLine.RESET;
                      TempPurchLine.SETCURRENTKEY("Document Type","Document No.",
                        "WHT Business Posting Group","WHT Product Posting Group");
                      TempPurchLine.SETRANGE("Document Type",TempPurchLine."Document Type"::Order);
                      TempPurchLine.SETRANGE("Document No.","Order No.");
                      TempPurchLine.SETRANGE("WHT Business Posting Group",WHTBusPostGrp);
                      TempPurchLine.SETRANGE("WHT Product Posting Group",WHTProdPostGrp);
                      TempPurchLine.CALCSUMS(TempPurchLine."Prepmt. Amt. Inv.",TempPurchLine."Prepmt Amt to Deduct");
                      PrepaymentAmtDeducted := TempPurchLine."Prepmt Amt to Deduct";
                      AmountVAT := AmountVAT - PrepaymentAmtDeducted;
                    END;
                    InsertWHT(TType::Purchase);
                  END;
                  WHTBusPostGrp := PurchInvLine."WHT Business Posting Group";
                  WHTProdPostGrp := PurchInvLine."WHT Product Posting Group";
                  Amount := 0;
                  AbsorbBase := 0;
                  AmountVAT := 0;
                  Amount := Amount + PurchInvLine.Amount;
                  AbsorbBase := AbsorbBase + PurchInvLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := AbsorbBase
                  ELSE
                    AmountVAT := Amount;
                END ELSE BEGIN
                  WHTBusPostGrp := PurchInvLine."WHT Business Posting Group";
                  WHTProdPostGrp := PurchInvLine."WHT Product Posting Group";
                  Amount := Amount + PurchInvLine.Amount;
                  AbsorbBase := AbsorbBase + PurchInvLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := AbsorbBase
                  ELSE
                    AmountVAT := Amount;
                END;
                WHTBusPostGrp := PurchInvLine."WHT Business Posting Group";
                WHTProdPostGrp := PurchInvLine."WHT Product Posting Group";
              END;
          UNTIL PurchInvLine.NEXT = 0;

        IF WHTPostingSetup."Realized WHT Type" = WHTPostingSetup."Realized WHT Type"::Earliest THEN BEGIN
          TempPurchLine.RESET;
          TempPurchLine.SETCURRENTKEY("Document Type","Document No.","WHT Business Posting Group","WHT Product Posting Group");
          TempPurchLine.SETRANGE("Document Type",TempPurchLine."Document Type"::Order);
          TempPurchLine.SETRANGE("Document No.","Order No.");
          TempPurchLine.SETRANGE("WHT Business Posting Group",WHTBusPostGrp);
          TempPurchLine.SETRANGE("WHT Product Posting Group",WHTProdPostGrp);
          TempPurchLine.CALCSUMS(TempPurchLine."Prepmt. Amt. Inv.",TempPurchLine."Prepmt Amt to Deduct");
          PrepaymentAmtDeducted := TempPurchLine."Prepmt Amt to Deduct";
          IF AmountVAT <> 0 THEN
            AmountVAT := AmountVAT - PrepaymentAmtDeducted;
        END;
        InsertWHT(TType::Purchase);
      END;
    END;

    PROCEDURE InsertVendCreditWHT@1500004(VAR PurchCreditHeader@1500001 : Record 124;AppliesID@1500002 : Code[20]);
    VAR
      WHTEntry@1500000 : Record 50504;
    BEGIN
      WITH PurchCreditHeader DO BEGIN
        PurchCreditLine.RESET;
        PurchCreditLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        PurchCreditLine.SETRANGE("Document No.","No.");
        PurchCreditLine.SETFILTER(Quantity,'<>0');
        IF PurchCreditLine.FINDSET THEN BEGIN
          WHTBusPostGrp := PurchCreditLine."WHT Business Posting Group";
          WHTProdPostGrp := PurchCreditLine."WHT Product Posting Group";
          IF WHTPostingSetup.GET(PurchCreditLine."WHT Business Posting Group",PurchCreditLine."WHT Product Posting Group") THEN
            WHTMinInvoiceAmt := WHTPostingSetup."WHT Minimum Invoice Amount";
          REPEAT
            IF WHTPostingSetup.GET(PurchCreditLine."WHT Business Posting Group",PurchCreditLine."WHT Product Posting Group") THEN BEGIN
              IF (WHTBusPostGrp <> PurchCreditLine."WHT Business Posting Group") OR
                 (WHTProdPostGrp <> PurchCreditLine."WHT Product Posting Group")
              THEN BEGIN
                IF WHTMinInvoiceAmt <> WHTPostingSetup."WHT Minimum Invoice Amount" THEN
                  ERROR(Text1500004);
              END;
              WHTBusPostGrp := PurchCreditLine."WHT Business Posting Group";
              WHTProdPostGrp := PurchCreditLine."WHT Product Posting Group";
            END;
          UNTIL PurchCreditLine.NEXT = 0;
        END;
      END;

      WITH PurchCreditHeader DO BEGIN
        PurchCreditLine.RESET;
        PurchCreditLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        PurchCreditLine.SETRANGE("Document No.","No.");
        PurchCreditLine.SETFILTER(Quantity,'<>0');
        IF PurchCreditLine.FINDSET THEN
          REPEAT
            IF WHTPostingSetup.GET(PurchCreditLine."WHT Business Posting Group",PurchCreditLine."WHT Product Posting Group") THEN
              IF WHTPostingSetup."WHT %" > 0 THEN BEGIN
                DocNo := PurchCreditLine."Document No.";
                DocType := DocType::"Credit Memo";
                PayToAccType := PayToAccType::Vendor;
                PayToVendCustNo := "Pay-to Vendor No.";
                BuyFromAccType := BuyFromAccType::Vendor;
                GenBusPostGrp := PurchCreditLine."Gen. Bus. Posting Group";
                GenProdPostGrp := PurchCreditLine."Gen. Prod. Posting Group";
                TransType := TransType::Purchase;
                BuyFromVendCustNo := "Actual Vendor No.";
                PostingDate := "Posting Date";
                DocDate := "Document Date";
                CurrencyCode := "Currency Code";
                CurrFactor := "Currency Factor";
                ApplyDocType := "Applies-to Doc. Type";
                ApplyDocNo := "Applies-to Doc. No.";
                "Applies-toID" := AppliesID;
                SourceCode := "Source Code";
                ReasonCode := "Reason Code";
                IF (WHTBusPostGrp <> PurchCreditLine."WHT Business Posting Group") OR
                   (WHTProdPostGrp <> PurchCreditLine."WHT Product Posting Group")
                THEN BEGIN
                  IF AmountVAT <> 0 THEN
                    InsertWHT(TType::Purchase);
                  WHTBusPostGrp := PurchCreditLine."WHT Business Posting Group";
                  WHTProdPostGrp := PurchCreditLine."WHT Product Posting Group";
                  Amount := 0;
                  AbsorbBase := 0;
                  AmountVAT := 0;
                  Amount := Amount + PurchCreditLine.Amount;
                  AbsorbBase := AbsorbBase + PurchCreditLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := -AbsorbBase
                  ELSE
                    AmountVAT := -Amount;
                END ELSE BEGIN
                  WHTBusPostGrp := PurchCreditLine."WHT Business Posting Group";
                  WHTProdPostGrp := PurchCreditLine."WHT Product Posting Group";
                  Amount := Amount + PurchCreditLine.Amount;
                  AbsorbBase := AbsorbBase + PurchCreditLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := -AbsorbBase
                  ELSE
                    AmountVAT := -Amount;
                END;
                WHTBusPostGrp := PurchCreditLine."WHT Business Posting Group";
                WHTProdPostGrp := PurchCreditLine."WHT Product Posting Group";
              END;
          UNTIL PurchCreditLine.NEXT = 0;
        InsertWHT(TType::Purchase);
      END;
    END;

    PROCEDURE InsertCustInvoiceWHT@1500005(VAR SalesInvHeader@1500000 : Record 112);
    BEGIN
      WITH SalesInvHeader DO BEGIN
        SalesInvLine.RESET;
        SalesInvLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        SalesInvLine.SETRANGE("Document No.","No.");
        SalesInvLine.SETFILTER(Quantity,'<>0');
        IF SalesInvLine.FINDSET THEN BEGIN
          WHTBusPostGrp := SalesInvLine."WHT Business Posting Group";
          WHTProdPostGrp := SalesInvLine."WHT Product Posting Group";
          IF WHTPostingSetup.GET(SalesInvLine."WHT Business Posting Group",SalesInvLine."WHT Product Posting Group") THEN
            WHTMinInvoiceAmt := WHTPostingSetup."WHT Minimum Invoice Amount";
          REPEAT
            IF WHTPostingSetup.GET(SalesInvLine."WHT Business Posting Group",SalesInvLine."WHT Product Posting Group") THEN BEGIN
              IF (WHTBusPostGrp <> SalesInvLine."WHT Business Posting Group") OR
                 (WHTProdPostGrp <> SalesInvLine."WHT Product Posting Group")
              THEN BEGIN
                IF WHTMinInvoiceAmt <> WHTPostingSetup."WHT Minimum Invoice Amount" THEN
                  ERROR(Text1500004);
              END;
              WHTBusPostGrp := SalesInvLine."WHT Business Posting Group";
              WHTProdPostGrp := SalesInvLine."WHT Product Posting Group";
            END;
          UNTIL SalesInvLine.NEXT = 0;
        END;
      END;

      WITH SalesInvHeader DO BEGIN
        SalesInvLine.RESET;
        SalesInvLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        SalesInvLine.SETRANGE("Document No.","No.");
        SalesInvLine.SETFILTER(Quantity,'<>0');
        SalesInvLine.SETRANGE("Prepayment Line",FALSE);
        IF SalesInvLine.FINDSET THEN
          REPEAT
            IF WHTPostingSetup.GET(SalesInvLine."WHT Business Posting Group",SalesInvLine."WHT Product Posting Group") THEN
              IF WHTPostingSetup."WHT %" > 0 THEN BEGIN
                DocNo := SalesInvLine."Document No.";
                DocType := DocType::Invoice;
                PayToAccType := PayToAccType::Customer;
                PayToVendCustNo := "Bill-to Customer No.";
                BuyFromAccType := BuyFromAccType::Customer;
                BuyFromVendCustNo := "Sell-to Customer No.";
                SourceCode := "Source Code";
                ReasonCode := "Reason Code";
                GenBusPostGrp := SalesInvLine."Gen. Bus. Posting Group";
                GenProdPostGrp := SalesInvLine."Gen. Prod. Posting Group";
                TransType := TransType::Sale;
                PostingDate := "Posting Date";
                DocDate := "Document Date";
                CurrencyCode := "Currency Code";
                CurrFactor := "Currency Factor";
                ApplyDocType := "Applies-to Doc. Type";
                ApplyDocNo := "Applies-to Doc. No.";
                IF (WHTBusPostGrp <> SalesInvLine."WHT Business Posting Group") OR
                   (WHTProdPostGrp <> SalesInvLine."WHT Product Posting Group")
                THEN BEGIN
                  IF AmountVAT <> 0 THEN
                    InsertWHT(TType::Sale);
                  WHTBusPostGrp := SalesInvLine."WHT Business Posting Group";
                  WHTProdPostGrp := SalesInvLine."WHT Product Posting Group";
                  Amount := 0;
                  AbsorbBase := 0;
                  AmountVAT := 0;
                  Amount := Amount - SalesInvLine.Amount;
                  AbsorbBase := AbsorbBase - SalesInvLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := AbsorbBase
                  ELSE
                    AmountVAT := Amount;
                END ELSE BEGIN
                  WHTBusPostGrp := SalesInvLine."WHT Business Posting Group";
                  WHTProdPostGrp := SalesInvLine."WHT Product Posting Group";
                  Amount := Amount - SalesInvLine.Amount;
                  AbsorbBase := AbsorbBase - SalesInvLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := AbsorbBase
                  ELSE
                    AmountVAT := Amount;
                END;
                WHTBusPostGrp := SalesInvLine."WHT Business Posting Group";
                WHTProdPostGrp := SalesInvLine."WHT Product Posting Group";
              END;
          UNTIL SalesInvLine.NEXT = 0;
        InsertWHT(TType::Sale);
      END;
    END;

    PROCEDURE InsertCustCreditWHT@1500006(VAR SalesCreditHeader@1500001 : Record 114;AppliesID@1500002 : Code[20]);
    BEGIN
      WITH SalesCreditHeader DO BEGIN
        SalesCreditLine.RESET;
        SalesCreditLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        SalesCreditLine.SETRANGE("Document No.","No.");
        SalesCreditLine.SETFILTER(Quantity,'<>0');
        IF SalesCreditLine.FINDSET THEN BEGIN
          WHTBusPostGrp := SalesCreditLine."WHT Business Posting Group";
          WHTProdPostGrp := SalesCreditLine."WHT Product Posting Group";
          IF WHTPostingSetup.GET(SalesCreditLine."WHT Business Posting Group",SalesCreditLine."WHT Product Posting Group") THEN
            WHTMinInvoiceAmt := WHTPostingSetup."WHT Minimum Invoice Amount";
          REPEAT
            IF WHTPostingSetup.GET(SalesCreditLine."WHT Business Posting Group",SalesCreditLine."WHT Product Posting Group") THEN BEGIN
              IF (WHTBusPostGrp <> SalesCreditLine."WHT Business Posting Group") OR
                 (WHTProdPostGrp <> SalesCreditLine."WHT Product Posting Group")
              THEN BEGIN
                IF WHTMinInvoiceAmt <> WHTPostingSetup."WHT Minimum Invoice Amount" THEN
                  ERROR(Text1500004);
              END;
              WHTBusPostGrp := SalesCreditLine."WHT Business Posting Group";
              WHTProdPostGrp := SalesCreditLine."WHT Product Posting Group";
            END;
          UNTIL SalesCreditLine.NEXT = 0;
        END;
      END;

      WITH SalesCreditHeader DO BEGIN
        SalesCreditLine.RESET;
        SalesCreditLine.SETCURRENTKEY("Document No.","WHT Business Posting Group","WHT Product Posting Group");
        SalesCreditLine.SETRANGE("Document No.","No.");
        SalesCreditLine.SETFILTER(Quantity,'<>0');
        IF SalesCreditLine.FINDSET THEN
          REPEAT
            IF WHTPostingSetup.GET(SalesCreditLine."WHT Business Posting Group",SalesCreditLine."WHT Product Posting Group") THEN
              IF WHTPostingSetup."WHT %" > 0 THEN BEGIN
                DocNo := SalesCreditLine."Document No.";
                DocType := DocType::"Credit Memo";
                PayToAccType := PayToAccType::Customer;
                PayToVendCustNo := "Bill-to Customer No.";
                BuyFromAccType := BuyFromAccType::Customer;
                BuyFromVendCustNo := "Sell-to Customer No.";
                SourceCode := "Source Code";
                ReasonCode := "Reason Code";
                GenBusPostGrp := SalesCreditLine."Gen. Bus. Posting Group";
                GenProdPostGrp := SalesCreditLine."Gen. Prod. Posting Group";
                TransType := TransType::Sale;
                PostingDate := "Posting Date";
                DocDate := "Document Date";
                CurrencyCode := "Currency Code";
                CurrFactor := "Currency Factor";
                ApplyDocType := "Applies-to Doc. Type";
                ApplyDocNo := "Applies-to Doc. No.";
                "Applies-toID" := AppliesID;
                IF (WHTBusPostGrp <> SalesCreditLine."WHT Business Posting Group") OR
                   (WHTProdPostGrp <> SalesCreditLine."WHT Product Posting Group")
                THEN BEGIN
                  IF AmountVAT <> 0 THEN
                    InsertWHT(TType::Sale);
                  WHTBusPostGrp := SalesCreditLine."WHT Business Posting Group";
                  WHTProdPostGrp := SalesCreditLine."WHT Product Posting Group";
                  Amount := 0;
                  AbsorbBase := 0;
                  AmountVAT := 0;
                  Amount := Amount - SalesCreditLine.Amount;
                  AbsorbBase := AbsorbBase - SalesCreditLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := -AbsorbBase
                  ELSE
                    AmountVAT := -Amount;
                END ELSE BEGIN
                  WHTBusPostGrp := SalesCreditLine."WHT Business Posting Group";
                  WHTProdPostGrp := SalesCreditLine."WHT Product Posting Group";
                  Amount := Amount - SalesCreditLine.Amount;
                  AbsorbBase := AbsorbBase - SalesCreditLine."WHT Absorb Base";
                  IF AbsorbBase <> 0 THEN
                    AmountVAT := -AbsorbBase
                  ELSE
                    AmountVAT := -Amount;
                END;
                WHTBusPostGrp := SalesCreditLine."WHT Business Posting Group";
                WHTProdPostGrp := SalesCreditLine."WHT Product Posting Group";
              END;
          UNTIL SalesCreditLine.NEXT = 0;
        InsertWHT(TType::Sale);
      END;
    END;

    PROCEDURE ProcessPayment@1500007(VAR GenJnlLine@1500025 : Record 81;TransactionNo@1500024 : Integer;EntryNo@1500023 : Integer;Source@1500022 : 'Vendor,Customer';AmountWithDisc@1500000 : Boolean) PaymentNo : Integer;
    VAR
      WHTEntry@1500021 : Record 50504;
      WHTEntry2@1500020 : Record 50504;
      WHTEntry3@1500019 : Record 50504;
      GLSetup@1500017 : Record 98;
      PaymentAmount@1500016 : Decimal;
      AppldAmount@1500014 : Decimal;
      WHTEntryTemp@1500012 : Record 50504;
      PurchCrMemoHeader@1500009 : Record 124;
      VendLedgEntry1@1500008 : Record 25;
      VendLedgEntry@1500007 : Record 25;
      ExpectedAmount@1500006 : Decimal;
      PaymentAmount1@1500005 : Decimal;
      TempWHT@1500004 : Record 50506;
      SalesCrMemoHeader@1500003 : Record 114;
      CustLedgEntry1@1500002 : Record 21;
      CustLedgEntry@1500001 : Record 21;
      TempGenJnlTemp@1500026 : Record 80;
      WHTEntry4@1106000000 : Record 50504;
    BEGIN
      CASE Source OF
        Source::Customer:
          BEGIN
            WHTEntry4.RESET;
            WHTEntry4.SETCURRENTKEY("Document Type","Document No.");
            WHTEntry4.SETRANGE("Document Type", TempCustLedgEntry."Document Type");
            WHTEntry4.SETFILTER("Document No.", TempCustLedgEntry."Document No.");
            IF WHTEntry4.FINDFIRST THEN BEGIN
              IF ABS(GenJnlLine.Amount) < ABS(TempCustLedgEntry.Amount) THEN
                PaymentAmount1 := GenJnlLine.Amount
              ELSE
                PaymentAmount1 := -TempCustLedgEntry.Amount;
              IF CheckPmtDisc(
                GenJnlLine."Posting Date",
                TempCustLedgEntry."Pmt. Discount Date",ABS(TempCustLedgEntry."Amount to Apply"),
                ABS(TempCustLedgEntry."Remaining Amount"),ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                ABS(PaymentAmount1))
              THEN
                PaymentAmount1 := PaymentAmount1 - TempCustLedgEntry."Original Pmt. Disc. Possible";
            END ELSE
              IF (TempCustLedgEntry."Document No." = '') AND (GenJnlLine.Amount <> 0) THEN
                PaymentAmount1 := GenJnlLine.Amount;
          END;
        Source::Vendor:
          BEGIN
            WHTEntry4.RESET;
            WHTEntry4.SETCURRENTKEY("Document Type","Document No.");
            WHTEntry4.SETRANGE("Document Type", TempVendLedgEntry."Document Type");
            WHTEntry4.SETFILTER("Document No.", TempVendLedgEntry."Document No.");
            IF WHTEntry4.FINDFIRST THEN BEGIN
              IF ABS(GenJnlLine.Amount) < ABS(TempVendLedgEntry.Amount) THEN
                PaymentAmount1 := GenJnlLine.Amount
              ELSE
                PaymentAmount1 := -TempVendLedgEntry.Amount;
              IF CheckPmtDisc(
                GenJnlLine."Posting Date",
                TempVendLedgEntry."Pmt. Discount Date",ABS(TempVendLedgEntry."Amount to Apply"),
                ABS(TempVendLedgEntry."Remaining Amount"),ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                ABS(PaymentAmount1))
              THEN
                PaymentAmount1 := PaymentAmount1 - TempVendLedgEntry."Original Pmt. Disc. Possible"; //xxx
            END ELSE
              IF (TempVendLedgEntry."Document No." = '') AND (GenJnlLine.Amount <> 0) THEN
                PaymentAmount1 := GenJnlLine.Amount;
          END;
      END;

      WHTEntry.RESET;
      WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
      IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
        WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Invoice);
      IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
        WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
      CASE Source OF
        Source::Vendor:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
        Source::Customer:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
      END;

      WHTEntry.SETRANGE(Closed,FALSE);
      WHTEntry.SETRANGE("Transaction No.",0);
      IF GenJnlLine."Applies-to Doc. No." <> '' THEN
        WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.")
      ELSE
        WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");
      IF WHTEntry.FINDSET THEN
        REPEAT
          WHTPostingSetup.GET(WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group");
          IF (WHTPostingSetup."Realized WHT Type" =
              WHTPostingSetup."Realized WHT Type"::Payment)
          THEN BEGIN
            WHTEntry3.RESET;
            WHTEntry3 := WHTEntry;
            CASE Source OF
              Source::Vendor:
                BEGIN
                  IF GenJnlLine."Applies-to Doc. No." = '' THEN
                    EXIT;
                  PurchCrMemoHeader.RESET;
                  PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                  PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                  IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                    TempRemAmt := 0;
                    VendLedgEntry1.RESET;
                    VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                    VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                    IF VendLedgEntry1.FINDFIRST THEN
                      VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                    WHTEntryTemp.RESET;
                    WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                    WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                    WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                    WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                    WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                    IF WHTEntryTemp.FINDFIRST THEN BEGIN
                      TempRemBase := WHTEntryTemp."Unrealized Amount";
                      TempRemAmt := WHTEntryTemp."Unrealized Base";
                    END;
                  END;

                  VendLedgEntry.RESET;
                  VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                  IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                    VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                  ELSE
                    IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                      VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");
                  IF VendLedgEntry.FINDFIRST THEN
                    VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                  IF WHTEntryTemp.FINDFIRST THEN
                    ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                  ELSE
                    ExpectedAmount := -(VendLedgEntry.Amount + 0);
                  IF VendLedgEntry1."Amount (LCY)" = 0 THEN
                    VendLedgEntry1."Rem. Amt" := 0;
                  IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                     (ABS(PaymentAmount1) >=
                      (ABS(VendLedgEntry."Rem. Amt" + VendLedgEntry1."Rem. Amt") -
                       ABS(VendLedgEntry."Original Pmt. Disc. Possible"))) AND
                     (NOT AmountWithDisc)
                  THEN BEGIN
                    IF VendLedgEntry."Remaining Amount" = 0 THEN BEGIN
                      AppldAmount :=
                        ROUND(
                          (PaymentAmount1 *
                           (WHTEntry."Unrealized Base" + TempRemAmt)) /
                          ExpectedAmount);
                      WHTEntry3."Remaining Unrealized Base" :=
                        ROUND(
                          WHTEntry."Remaining Unrealized Base" -
                          ROUND(
                            (PaymentAmount1 *
                             (WHTEntry."Unrealized Base" + TempRemAmt)) /
                            ExpectedAmount));
                      WHTEntry3."Remaining Unrealized Amount" :=
                        ROUND(
                          WHTEntry."Remaining Unrealized Amount" -
                          ROUND(
                            (PaymentAmount1 *
                             ((WHTEntry."Unrealized Base"
                               * WHTEntry."WHT %" / 100) + TempRemBase)) /
                            ExpectedAmount));
                    END ELSE BEGIN
                      AppldAmount :=
                        ROUND(
                          (PaymentAmount1 *
                           (WHTEntry."Unrealized Base" + TempRemAmt)) /
                          ExpectedAmount);
                      WHTEntry3."Remaining Unrealized Base" :=
                        ROUND(
                          WHTEntry."Remaining Unrealized Base" -
                          ROUND(
                            (PaymentAmount1 *
                             (WHTEntry."Unrealized Base" + TempRemAmt)) /
                            ExpectedAmount));
                      WHTEntry3."Remaining Unrealized Amount" :=
                        ROUND(
                          WHTEntry."Remaining Unrealized Amount" -
                          ROUND(
                            (PaymentAmount1 *
                             (WHTEntry."Unrealized Amount" + TempRemBase)) /
                            ExpectedAmount));
                    END
                  END ELSE BEGIN
                    AppldAmount :=
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) /
                        ExpectedAmount);
                    WHTEntry3."Remaining Unrealized Base" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Base" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) /
                          ExpectedAmount));
                    WHTEntry3."Remaining Unrealized Amount" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Amount" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Amount" + TempRemBase)) /
                          ExpectedAmount));
                  END;
                  PaymentAmount := PaymentAmount + AppldAmount;
                END;
              Source::Customer:
                BEGIN
                  SalesCrMemoHeader.RESET;
                  SalesCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                  SalesCrMemoHeader.SETRANGE("Applies-to Doc. Type",SalesCrMemoHeader."Applies-to Doc. Type"::Invoice);
                  IF SalesCrMemoHeader.FINDFIRST THEN BEGIN
                    TempRemAmt := 0;
                    CustLedgEntry1.RESET;
                    CustLedgEntry1.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                    CustLedgEntry1.SETRANGE("Document Type",CustLedgEntry1."Document Type"::"Credit Memo");
                    IF CustLedgEntry1.FINDFIRST THEN
                      CustLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                    WHTEntryTemp.RESET;
                    WHTEntryTemp.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                    WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                    WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
                    WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                    WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                    IF WHTEntryTemp.FINDFIRST THEN BEGIN
                      TempRemBase := WHTEntryTemp."Unrealized Amount";
                      TempRemAmt := WHTEntryTemp."Unrealized Base";
                    END;
                  END;

                  CustLedgEntry.RESET;
                  CustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                  IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                    CustLedgEntry.SETRANGE("Document Type",CustLedgEntry."Document Type"::Invoice)
                  ELSE
                    IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                      CustLedgEntry.SETRANGE("Document Type",CustLedgEntry."Document Type"::"Credit Memo");
                  IF CustLedgEntry.FINDFIRST THEN
                    CustLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                  IF CustLedgEntry1."Amount (LCY)" = 0 THEN
                    CustLedgEntry1."Rem. Amt" := 0;
                  ExpectedAmount := -(CustLedgEntry.Amount + CustLedgEntry1.Amount);
                  IF (GenJnlLine."Posting Date" <= CustLedgEntry."Pmt. Discount Date") AND
                     (ABS(PaymentAmount1) >= (ABS(CustLedgEntry."Rem. Amt" + CustLedgEntry1."Rem. Amt") -
                                              ABS(CustLedgEntry."Original Pmt. Disc. Possible"))) AND
                     (NOT AmountWithDisc)
                  THEN BEGIN
                    AppldAmount :=
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                    WHTEntry3."Remaining Unrealized Base" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Base" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));
                    WHTEntry3."Remaining Unrealized Amount" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Amount" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                  END ELSE BEGIN
                    AppldAmount :=
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                    WHTEntry3."Remaining Unrealized Base" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Base" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));
                    WHTEntry3."Remaining Unrealized Amount" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Amount" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                  END;
                  PaymentAmount := PaymentAmount + AppldAmount;
                END;
            END;
            IF (WHTEntry."Remaining Unrealized Base" = 0) AND (WHTEntry."Remaining Unrealized Amount" = 0) THEN
              WHTEntry3.Closed := TRUE;
            IF GenJnlLine."Currency Code" <> WHTEntry."Currency Code" THEN
              ERROR(Text1500000);
            IF AppldAmount = 0 THEN
              EXIT;
            WHTEntry2.INIT;
            WHTEntry2."Posting Date" := GenJnlLine."Document Date";
            WHTEntry2."Entry No." := NextEntryNo;
            WHTEntry2."Document Date" := WHTEntry."Document Date";
            WHTEntry2."Document Type" := GenJnlLine."Document Type";
            WHTEntry2."Document No." := WHTEntry."Document No.";
            WHTEntry2."Voucher No." := GenJnlLine."Voucher No."; // PHP Start Voucher No.
            WHTEntry2."Gen. Bus. Posting Group" := WHTEntry."Gen. Bus. Posting Group";
            WHTEntry2."Gen. Prod. Posting Group" := WHTEntry."Gen. Prod. Posting Group";
            WHTEntry2."Bill-to/Pay-to No." := WHTEntry."Bill-to/Pay-to No.";
            WHTEntry2."WHT Bus. Posting Group" := WHTEntry."WHT Bus. Posting Group";
            WHTEntry2."WHT Prod. Posting Group" := WHTEntry."WHT Prod. Posting Group";
            WHTEntry2."WHT Revenue Type" := WHTEntry."WHT Revenue Type";
            WHTEntry2."Currency Code" := GenJnlLine."Currency Code";
            WHTEntry2."Applies-to Entry No." := WHTEntry."Entry No.";
            WHTEntry2."User ID" := USERID;
            WHTEntry2."External Document No." := GenJnlLine."External Document No.";
            WHTEntry2."Actual Vendor No." := GenJnlLine."Actual Vendor No.";
            WHTEntry2."Original Document No." := GenJnlLine."Document No.";
            WHTEntry2."Source Code" := GenJnlLine."Source Code";
            WHTEntry2."Transaction No." := TransactionNo;
            WHTEntry2."Unrealized WHT Entry No." := WHTEntry."Entry No.";
            WHTEntry2."WHT %" := WHTEntry."WHT %";
            CASE Source OF
              Source::Vendor:
                BEGIN
                  WHTEntry2.Base := ROUND(AppldAmount);
                  WHTEntry2.Amount := ROUND(WHTEntry2.Base * WHTEntry2."WHT %" / 100);
                  WHTEntry2."Payment Amount" := PaymentAmount1;
                  WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Purchase;
                  WHTPostingSetup.GET(WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  WHTEntry2."WHT Report" := WHTPostingSetup."WHT Report";
                  IF GenJnlLine."Certificate Printed" THEN BEGIN
                    WHTEntry2."WHT Report Line No" := GenJnlLine."WHT Report Line No.";
                    TempWHT.SETRANGE("Document No.",WHTEntry2."Document No.");
                    IF TempWHT.FINDFIRST THEN
                      WHTEntry2."WHT Certificate No." := TempWHT."WHT Certificate No.";
                  END ELSE BEGIN
                    IF ((Source = Source::Vendor) AND
                        (WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice)) OR
                       ((Source = Source::Customer) AND
                        (WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo"))
                    THEN
                      IF (WHTReportLineNo = '') AND
                         (WHTEntry2.Amount <> 0) AND
                         (WHTPostingSetup."WHT Report Line No. Series" <> '')
                      THEN
                        WHTReportLineNo :=
                          NoSeriesMgt.GetNextNo(
                            WHTPostingSetup."WHT Report Line No. Series",WHTEntry2."Posting Date",TRUE);
                    WHTEntry2."WHT Report Line No" := WHTReportLineNo;
                  END;
                  TType := TType::Purchase;
                END;
              Source::Customer:
                BEGIN
                  WHTEntry2.Base := ROUND(AppldAmount);
                  WHTEntry2.Amount := ROUND(WHTEntry2.Base * WHTEntry2."WHT %" / 100);
                  WHTEntry2."Payment Amount" := PaymentAmount1;
                  WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Sale;
                  TType := TType::Sale;
                END;
            END;

            IF WHTEntry2."Currency Code" <> '' THEN BEGIN
              CurrFactor := GenJnlLine."Currency Factor";
              WHTEntry2."Base (LCY)" :=
                ROUND(
                  CurrExchRate.ExchangeAmtFCYToLCY(
                    GenJnlLine."Document Date",
                    WHTEntry2."Currency Code",
                    WHTEntry2.Base,CurrFactor));
              WHTEntry2."Amount (LCY)" :=
                ROUND(
                  CurrExchRate.ExchangeAmtFCYToLCY(
                    GenJnlLine."Document Date",
                    WHTEntry2."Currency Code",
                    WHTEntry2.Amount,CurrFactor));
            END ELSE BEGIN
              WHTEntry2."Amount (LCY)" := WHTEntry2.Amount;
              WHTEntry2."Base (LCY)" := WHTEntry2.Base;
            END;
            IF WHTEntry2."Currency Code" <> '' THEN BEGIN
              CurrFactor := GenJnlLine."Currency Factor";
              WHTEntry2."Base (LCY)" :=
                ROUND(
                  CurrExchRate.ExchangeAmtFCYToLCY(
                    GenJnlLine."Document Date",
                    WHTEntry2."Currency Code",
                    WHTEntry2.Base,CurrFactor));
              WHTEntry2."Amount (LCY)" :=
                ROUND(
                  CurrExchRate.ExchangeAmtFCYToLCY(
                    GenJnlLine."Document Date",
                    WHTEntry2."Currency Code",
                    WHTEntry2.Amount,CurrFactor));
            END ELSE BEGIN
              WHTEntry2."Amount (LCY)" := WHTEntry2.Amount;
              WHTEntry2."Base (LCY)" := WHTEntry2.Base;
            END;
            IF VendLedgEntry."Original Pmt. Disc. Possible" <> 0 THEN BEGIN
              IF WHTEntry2.Base <> WHTEntry."Unrealized Base" THEN BEGIN
                IF VendLedgEntry."Remaining Amount" = 0 THEN BEGIN
                  WHTEntry3."Rem Unrealized Amount (LCY)" := WHTEntry2."Rem Unrealized Amount (LCY)";
                  WHTEntry3."Rem Unrealized Base (LCY)" := WHTEntry2."Rem Unrealized Base (LCY)";
                  WHTEntry3."Remaining Unrealized Amount" := WHTEntry2."Remaining Unrealized Amount";
                  WHTEntry3."Remaining Unrealized Base" := WHTEntry2."Remaining Unrealized Base";
                  WHTEntry4.RESET;
                  WHTEntry4.SETCURRENTKEY("Applies-to Entry No.");
                  WHTEntry4.SETFILTER("Applies-to Entry No.",'=%1',WHTEntry."Entry No.");
                  WHTEntry4.CALCSUMS(WHTEntry4.Base);
                  WHTEntry3."Pymt. Disc. Diff. Base" := WHTEntry."Unrealized Base" - (WHTEntry4.Base + WHTEntry2.Base);
                  WHTEntry3."Pymt. Disc. Diff. Amount" := ROUND(( WHTEntry3."Pymt. Disc. Diff. Base" * WHTEntry3."WHT %" )/100);
                  WHTEntry3."WHT Difference" :=
                    WHTEntry3."WHT Difference" + ABS(ABS(WHTEntry3."Pymt. Disc. Diff. Amount") -
                    ABS(WHTEntry."Unrealized Amount" - (WHTEntry4.Amount + WHTEntry2.Amount)));
                END
              END
            END ELSE BEGIN
              WHTEntry3."Rem Unrealized Amount (LCY)" :=
                WHTEntry."Rem Unrealized Amount (LCY)" - WHTEntry2."Amount (LCY)";
              WHTEntry3."Rem Unrealized Base (LCY)" :=
                WHTEntry."Rem Unrealized Base (LCY)" - WHTEntry2."Base (LCY)";
            END;

            //PHL0.01(-)
            // Original Code
            //WHTEntry2.INSERT;
            // Updated Code
            WHTEntry2.INSERT(TRUE);
            //PHL0.01(+)
            WHTEntry3.MODIFY;

            AdjustWHTEntryWithWHTDifference(WHTEntry,WHTEntry2,WHTEntry3);

            // Payment Method Code.Begin
            IF Source = Source::Customer THEN
              TempGenJnlTemp.SETRANGE(Type,TempGenJnlTemp.Type::Sales)
            ELSE
              TempGenJnlTemp.SETRANGE(Type,TempGenJnlTemp.Type::Purchases);
            IF TempGenJnlTemp.FINDFIRST THEN
              IF GenJnlLine."Journal Template Name" <> TempGenJnlTemp.Name THEN BEGIN
                // Payment Method Code.End;
                IF WHTEntry2.Amount <> 0 THEN
                  InsertWHTPostingBuffer(WHTEntry2,GenJnlLine,0,AmountWithDisc)
              END; // Payment Method Code
          END;
        UNTIL (WHTEntry.NEXT = 0);
      IF (WHTPostingSetup."Realized WHT Type" =
          WHTPostingSetup."Realized WHT Type"::Payment)
      THEN
        EXIT(WHTEntry2."Entry No." + 1);
    END;

    PROCEDURE ProcessManualReceipt@1500008(VAR GenJnlLine@1500007 : Record 81;TransactionNo@1500006 : Integer;EntryNo@1500005 : Integer;Source@1500004 : 'Vendor,Customer') PaymentNo : Integer;
    VAR
      WHTEntry@1500025 : Record 50504;
      WHTEntry2@1500024 : Record 50504;
      WHTEntry3@1500023 : Record 50504;
      PaymentAmount@1500020 : Decimal;
      PaymentAmountLCY@1500019 : Decimal;
      AppldAmount@1500018 : Decimal;
      WHTEntryTemp@1500016 : Record 50504;
      PaymentAmount1@1500009 : Decimal;
      WHTAmount@1500000 : Decimal;
    BEGIN
      PaymentAmount := GenJnlLine.Amount;
      PaymentAmount1 := GenJnlLine.Amount;
      PaymentAmountLCY := GenJnlLine."Amount (LCY)";
      WHTEntry.RESET;
      WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
      CASE Source OF
        Source::Vendor:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
        Source::Customer:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
      END;

      IF GenJnlLine."Applies-to Doc. No." <> '' THEN
        WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.")
      ELSE
        WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");

      IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
        WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Invoice)
      ELSE
        IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
          WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");

      IF WHTEntry.FINDSET THEN
        REPEAT
          WHTEntryTemp.RESET;
          WHTEntryTemp := WHTEntry;
          CASE Source OF
            Source::Vendor:
              BEGIN
                IF GenJnlLine."Applies-to Doc. No." = '' THEN
                  EXIT;
                WHTEntry3.RESET;
                WHTAmount := 0;
                WHTEntry3.COPY(WHTEntry);
                IF WHTEntry3.FINDSET THEN
                  REPEAT
                    WHTAmount := WHTAmount + WHTEntry3."Unrealized Amount";
                  UNTIL WHTEntry3.NEXT = 0;
                AppldAmount := -ROUND(GenJnlLine.Amount * WHTEntry."Unrealized Amount" / WHTAmount);

                IF AppldAmount = 0 THEN
                  AppliedBase := WHTEntry."Remaining Unrealized Base"
                ELSE
                  AppliedBase := ROUND(AppldAmount * 100 / WHTEntry."WHT %");

                IF WHTEntry."WHT %" <> 0 THEN
                  WHTEntryTemp."Remaining Unrealized Base" :=
                    ROUND(WHTEntry."Remaining Unrealized Base" - ROUND(AppldAmount * 100 / WHTEntry."WHT %"))
                ELSE
                  WHTEntryTemp."Remaining Unrealized Base" := 0;
                WHTEntryTemp."Remaining Unrealized Amount" :=
                  ROUND(
                    WHTEntry."Remaining Unrealized Amount" -
                    ROUND(AppldAmount));
                PaymentAmount := PaymentAmount + AppldAmount;
                TType := TType::Purchase;
              END;
            Source::Customer:
              BEGIN
                WHTEntry3.RESET;
                WHTAmount := 0;
                WHTEntry3.COPY(WHTEntry);
                IF WHTEntry3.FINDSET THEN
                  REPEAT
                    WHTAmount := WHTAmount + WHTEntry3."Unrealized Amount";
                  UNTIL WHTEntry3.NEXT = 0;

                AppldAmount := ROUND(GenJnlLine.Amount * WHTEntry."Unrealized Amount" / WHTAmount);

                IF AppldAmount = 0 THEN
                  AppliedBase := WHTEntry."Remaining Unrealized Base"
                ELSE
                  AppliedBase := ROUND(AppldAmount * 100 / WHTEntry."WHT %");

                TType := TType::Sale;

                IF WHTEntry."WHT %" <> 0 THEN
                  WHTEntryTemp."Remaining Unrealized Base" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Base" -
                      ROUND(
                        AppldAmount * 100 / WHTEntry."WHT %"))
                ELSE
                  WHTEntryTemp."Remaining Unrealized Base" := 0;

                WHTEntryTemp."Remaining Unrealized Amount" :=
                  ROUND(
                    WHTEntry."Remaining Unrealized Amount" -
                    ROUND(AppldAmount));
                PaymentAmount := PaymentAmount + AppldAmount;
              END;
          END;

          IF GenJnlLine."Currency Code" <> WHTEntry."Currency Code" THEN
            ERROR(Text1500000);
          WHTEntry2.INIT;
          WHTEntry2."Posting Date" := GenJnlLine."Document Date";
          WHTEntry2."Entry No." := NextEntryNo;
          WHTEntry2."Document Date" := WHTEntry."Document Date";
          WHTEntry2."Document Type" := GenJnlLine."Document Type";
          WHTEntry2."Document No." := WHTEntry."Document No.";
          WHTEntry2."Voucher No." := GenJnlLine."Voucher No."; // PHP Start Voucher No.
          WHTEntry2."Gen. Bus. Posting Group" := WHTEntry."Gen. Bus. Posting Group";
          WHTEntry2."Gen. Prod. Posting Group" := WHTEntry."Gen. Prod. Posting Group";
          WHTEntry2."Bill-to/Pay-to No." := WHTEntry."Bill-to/Pay-to No.";
          WHTEntry2."WHT Bus. Posting Group" := WHTEntry."WHT Bus. Posting Group";
          WHTEntry2."WHT Prod. Posting Group" := WHTEntry."WHT Prod. Posting Group";
          WHTEntry2."WHT Revenue Type" := WHTEntry."WHT Revenue Type";
          WHTEntry2."Currency Code" := GenJnlLine."Currency Code";
          WHTEntry2."Applies-to Entry No." := WHTEntry."Entry No.";
          WHTEntry2."User ID" := USERID;
          WHTEntry2."External Document No." := GenJnlLine."External Document No.";
          WHTEntry2."Original Document No." := GenJnlLine."Document No.";
          WHTEntry2."Source Code" := GenJnlLine."Source Code";
          WHTEntry2."Transaction No." := TransactionNo;
          IF TType = TType::Sale THEN
            WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Sale
          ELSE
            WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Purchase;
          WHTEntry2."WHT %" := WHTEntry."WHT %";
          WHTEntry2."Unrealized WHT Entry No." := WHTEntry."Entry No.";
          WHTEntry2.Base := ROUND(AppliedBase);
          WHTEntry2.Amount := ROUND(AppldAmount);
          IF WHTEntry2."Currency Code" <> '' THEN BEGIN
            CurrFactor :=
              CurrExchRate.ExchangeRate(WHTEntry2."Posting Date",WHTEntry2."Currency Code");
            WHTEntry2."Base (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  GenJnlLine."Document Date",
                  WHTEntry2."Currency Code",
                  WHTEntry2.Base,CurrFactor));
            WHTEntry2."Amount (LCY)" := ROUND(WHTEntry2."Base (LCY)");
          END ELSE BEGIN
            WHTEntry2."Amount (LCY)" := WHTEntry2.Amount;
            WHTEntry2."Base (LCY)" := WHTEntry2.Base;
          END;
          //PHL0.01(-)
          // Original Code
          //WHTEntry2.INSERT;
          // Updated Code
          WHTEntry2.INSERT(TRUE);
          //PHL0.01(+)
          WHTEntryTemp."Rem Unrealized Amount (LCY)" :=
            WHTEntry."Rem Unrealized Amount (LCY)" - WHTEntry2."Amount (LCY)";
          WHTEntryTemp."Rem Unrealized Base (LCY)" :=
            WHTEntry."Rem Unrealized Base (LCY)" - WHTEntry2."Base (LCY)";
          WHTEntryTemp.MODIFY;
          IF WHTEntry2.Amount <> 0 THEN
            InsertWHTPostingBuffer(WHTEntry2,GenJnlLine,0,FALSE);
        UNTIL (WHTEntry.NEXT = 0);
      EXIT(WHTEntry2."Entry No." + 1);
    END;

    PROCEDURE InsertWHTPostingBuffer@1500009(VAR WHTEntryGL@1500002 : Record 50504;VAR GenJnlLine@1500001 : Record 81;Source@1500000 : 'Payment,Refund';Oldest@1500008 : Boolean);
    VAR
      PurchSetup@1500006 : Record 98;
      GenJnlLine2@1500005 : Record 81;
      GenJnlLine3@1500004 : Record 81;
      HighestLineNo@1500003 : Integer;
    BEGIN
      WHTPostingSetup.GET(WHTEntryGL."WHT Bus. Posting Group",WHTEntryGL."WHT Prod. Posting Group");
      PurchSetup.GET;
      GenJnlLine2 := GenJnlLine;
      GenJnlLine2.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlLine2.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlLine2.FINDLAST;
      HighestLineNo := GenJnlLine2."Line No." + 10000;
      GenJnlLine3.RESET;
      GenJnlLine3 := GenJnlLine;
      GenJnlLine3.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
      GenJnlLine3.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
      GenJnlLine3."Line No." := HighestLineNo;
      IF GenJnlLine3.NEXT = 0 THEN
        GenJnlLine3."Line No." := HighestLineNo + 10000
      ELSE BEGIN
        WHILE GenJnlLine3."Line No." = HighestLineNo + 1 DO BEGIN
          HighestLineNo := GenJnlLine3."Line No.";
          IF GenJnlLine3.NEXT = 0 THEN
            GenJnlLine3."Line No." := HighestLineNo + 20000;
        END;
        GenJnlLine3."Line No." := HighestLineNo + 10000;
      END;

      GenJnlLine3.INIT;
      GenJnlLine3.VALIDATE("Posting Date",GenJnlLine."Posting Date");
      GenJnlLine3."Document Type" := GenJnlLine."Document Type";
      GenJnlLine3."Account Type" := GenJnlLine3."Account Type"::"G/L Account";
      GenJnlLine3."System-Created Entry" := TRUE;
      GenJnlLine3."Is WHT" := TRUE;
      IF GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund THEN BEGIN
        IF TType = TType::Purchase THEN
          GenJnlLine3.VALIDATE("Account No.",WHTPostingSetup."Purch. WHT Adj. Account No.");
        IF TType = TType::Sale THEN
          GenJnlLine3.VALIDATE("Account No.",WHTPostingSetup."Sales WHT Adj. Account No.");
      END ELSE BEGIN
        IF TType = TType::Purchase THEN
          GenJnlLine3.VALIDATE("Account No.",WHTPostingSetup."Payable WHT Account Code");
        IF TType = TType::Sale THEN BEGIN
          WHTPostingSetup.TESTFIELD("Prepaid WHT Account Code");
          GenJnlLine3.VALIDATE("Account No.",WHTPostingSetup."Prepaid WHT Account Code");
        END;
      END;
      GenJnlLine3.VALIDATE("Currency Code",WHTEntryGL."Currency Code");
      IF GLSetup."Round Amount for WHT Calc" THEN BEGIN
        GenJnlLine3.VALIDATE(Amount,ROUND(-WHTEntryGL.Amount,1,'<'));
        GenJnlLine3."Amount (LCY)" := ROUND(-WHTEntryGL."Amount (LCY)",1,'<');
      END ELSE BEGIN
        GenJnlLine3.VALIDATE(Amount,-WHTEntryGL.Amount);
        GenJnlLine3."Amount (LCY)" := -WHTEntryGL."Amount (LCY)";
      END;
      GenJnlLine3."Gen. Posting Type" := GenJnlLine."Gen. Posting Type";
      GenJnlLine3."System-Created Entry" := TRUE; // Payment Method Code
      GLSetup.GET;
      IF (Oldest = TRUE) OR GLSetup."Manual Sales WHT Calc." THEN BEGIN
        IF TType = TType::Purchase THEN BEGIN
          CASE WHTPostingSetup."Bal. Payable Account Type" OF
            WHTPostingSetup."Bal. Payable Account Type"::"Bank Account":
              GenJnlLine3."Bal. Account Type" := GenJnlLine3."Account Type"::"Bank Account";
            WHTPostingSetup."Bal. Payable Account Type"::"G/L Account":
              GenJnlLine3."Bal. Account Type" := GenJnlLine3."Account Type"::"G/L Account";
          END;
          WHTPostingSetup.TESTFIELD("Bal. Payable Account No.");
          GenJnlLine3.VALIDATE("Bal. Account No.",WHTPostingSetup."Bal. Payable Account No.");
        END;

        IF TType = TType::Sale THEN BEGIN
          CASE WHTPostingSetup."Bal. Prepaid Account Type" OF
            WHTPostingSetup."Bal. Prepaid Account Type"::"Bank Account":
              GenJnlLine3."Bal. Account Type" := GenJnlLine3."Account Type"::"Bank Account";
            WHTPostingSetup."Bal. Prepaid Account Type"::"G/L Account":
              GenJnlLine3."Bal. Account Type" := GenJnlLine3."Account Type"::"G/L Account";
          END;
          WHTPostingSetup.TESTFIELD("Bal. Prepaid Account No.");
          GenJnlLine3.VALIDATE("Bal. Account No.",WHTPostingSetup."Bal. Prepaid Account No.");
        END;
      END;
      GenJnlLine3."Source Code" := GenJnlLine."Source Code";
      GenJnlLine3."Reason Code" := GenJnlLine."Reason Code";
      GenJnlLine3."Shortcut Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      GenJnlLine3."Shortcut Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      GenJnlLine3."Allow Zero-Amount Posting" := TRUE;
      GenJnlLine3."WHT Business Posting Group" := WHTEntryGL."WHT Bus. Posting Group";
      GenJnlLine3."WHT Product Posting Group" := WHTEntryGL."WHT Prod. Posting Group";
      GenJnlLine3."Document Type" := GenJnlLine."Document Type";
      GenJnlLine3."Document No." := GenJnlLine."Document No.";
      GenJnlLine3."External Document No." := GenJnlLine."External Document No.";
      // PHP Start UT.10
      GenJnlLine3.Description := GenJnlLine.Description;
      GenJnlLine3."Voucher No." := GenJnlLine."Voucher No."; // PHP Start Voucher No.
      GenJnlLine3."Fund Transfer Date" := GenJnlLine."Fund Transfer Date";
      // PHP End
      IF Source = Source::Refund THEN
        GenJnlLine3."Gen. Posting Type" := GenJnlLine3."Gen. Posting Type"::" ";
      GenJnlLine3.INSERT;
    END;

    PROCEDURE NextEntryNo@1500011() : Integer;
    VAR
      NewWHTEntry@1500000 : Record 50504;
    BEGIN
      NewWHTEntry.RESET;
      IF NewWHTEntry.FINDLAST THEN
        EXIT(NewWHTEntry."Entry No." + 1);

      EXIT(1);
    END;

    PROCEDURE NextTempEntryNo@1500012() : Integer;
    VAR
      NewWHTEntry@1500000 : Record 50506;
    BEGIN
      NewWHTEntry.RESET;
      IF NewWHTEntry.FINDLAST THEN
        EXIT(NewWHTEntry."Entry No." + 1);

      EXIT(1);
    END;

    PROCEDURE PrintWHTSlips@1500013(VAR GLReg@1500000 : Record 45);
    VAR
      GLEntry@1500019 : Record 17;
      WHTEntry@1500018 : Record 50504;
      WHTEntry2@1500017 : Record 50504;
      WHTSlipBuffer@1500015 : Record 50505;
      PurchSetup@1500014 : Record 312;
      ReportSelection@1500013 : Record 77;
      SalesSetup@1500011 : Record 311;
      GLRegFilter@1500010 : Text[250];
      StartTrans@1500009 : Integer;
      EndTrans@1500008 : Integer;
      x@1500007 : Integer;
      PrintSlips@1500006 : Integer;
      WHTSlipBuffer2@1500005 : Code[20];
      WHTSlipDocument2@1500004 : Code[20];
      VendorArray@1500003 : ARRAY [1000] OF Code[20];
      DocumentArray@1500002 : ARRAY [1000] OF Code[20];
      WHTSlipNo@1500001 : Code[20];
      ActualVendorNo@1500020 : Boolean;
      WHTCertificate2307@1000 : Report 50508;
      DefaultCertificateExist@1003 : Boolean;
      ReportID@1004 : Integer;
      AllowPrintWHTCertificate2307@1002 : Boolean;
    BEGIN
      x := 0;
      GLRegFilter := GLReg.GETFILTERS;
      GLEntry.RESET;
      IF GLReg."From Entry No." < 0 THEN
        GLEntry.SETRANGE("Entry No.",GLReg."To Entry No.",GLReg."From Entry No.")
      ELSE
        GLEntry.SETRANGE("Entry No.",GLReg."From Entry No.",GLReg."To Entry No.");
      IF GLEntry.FINDFIRST THEN
      StartTrans := GLEntry."Transaction No.";
      IF GLEntry.FINDLAST THEN
      EndTrans := GLEntry."Transaction No.";

      //PHL0.01(-)
      DefaultCertificateExist := FALSE;
      AllowPrintWHTCertificate2307 := FALSE;
      ReportSelection.RESET;
      ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"WHT Certificate");
      ReportSelection.SETRANGE("Report ID",50508);
      IF ReportSelection.FINDFIRST THEN BEGIN
        ReportID := ReportSelection."Report ID";
        DefaultCertificateExist := TRUE;
      END;
      //PHL0.01(-)

      WHTEntry.RESET;
      //PHL0.01(-)
      //WHTEntry.SETCURRENTKEY("Bill-to/Pay-to No.","Original Document No.","WHT Revenue Type");  // Original Code
      WHTEntry.SETCURRENTKEY("Bill-to/Pay-to No.","Document No.","WHT Revenue Type");  //Updated Code
      //PHL0.01(+)
      WHTEntry.SETRANGE("Transaction No.",StartTrans,EndTrans);
      IF NOT WHTEntry.FINDFIRST THEN
        EXIT;
      REPEAT
        IF WHTEntry."Transaction Type" = WHTEntry."Transaction Type"::Sale THEN BEGIN
          IF WHTEntry."Document Type" IN [
                                          WHTEntry."Document Type"::Invoice,
                                          WHTEntry."Document Type"::Payment]
          THEN
            EXIT;

          SalesSetup.GET;
          IF NOT SalesSetup."Print WHT on Credit Memo" THEN
            IF WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo" THEN
              EXIT;
        END;
        x := x + 1;
        IF WHTEntry."Actual Vendor No." <> '' THEN BEGIN
          VendorArray[x] := WHTEntry."Actual Vendor No.";
          ActualVendorNo := TRUE;
        END ELSE
          VendorArray[x] := WHTEntry."Bill-to/Pay-to No.";
        //PHL0.01(-)
        //DocumentArray[x] := WHTEntry."Original Document No.";  // Original Code
        DocumentArray[x] := WHTEntry."Document No.";  //Updated Code
        //PHL0.01(+)

        //PHL0.01(-)
        WHTEntry.CALCFIELDS("BIR Form");
        IF (WHTEntry."BIR Form" = ReportID) AND DefaultCertificateExist THEN
          AllowPrintWHTCertificate2307 := TRUE;
        //PHL0.01(+)

      UNTIL WHTEntry.NEXT = 0;

      PurchSetup.GET;
      WHTSlipBuffer.DELETEALL;
      FOR PrintSlips := 1 TO x DO
        BEGIN
        WHTSlipBuffer.INIT;
        WHTSlipBuffer."Line No." := PrintSlips;
        WHTSlipBuffer."Vendor No." := VendorArray[PrintSlips];
        WHTSlipBuffer."Document No." := DocumentArray[PrintSlips];
        WHTSlipBuffer.INSERT;
      END;

      x := 0;
      CLEAR(VendorArray);
      CLEAR(DocumentArray);
      WHTSlipBuffer.RESET;
      WHTSlipBuffer.SETCURRENTKEY("Vendor No.","Document No.");
      WHTSlipBuffer.FINDSET;
      REPEAT
        x := x + 1;
        VendorArray[x] := WHTSlipBuffer."Vendor No.";
        DocumentArray[x] := WHTSlipBuffer."Document No.";
      UNTIL WHTSlipBuffer.NEXT = 0;

      //PHL0.01(-)
      // Print Updated WHT Certificate
      FOR PrintSlips := 1 TO x DO
        BEGIN
          IF (VendorArray[PrintSlips] <> WHTSlipBuffer2) OR
            (DocumentArray[PrintSlips] <> WHTSlipDocument2)
          THEN BEGIN
            WHTEntry.RESET;
            WHTEntry.SETCURRENTKEY("Bill-to/Pay-to No.","Document No.","WHT Revenue Type");
            IF ActualVendorNo THEN
              WHTEntry.SETRANGE("Actual Vendor No.",VendorArray[PrintSlips])
            ELSE
              WHTEntry.SETRANGE("Bill-to/Pay-to No.",VendorArray[PrintSlips]);
            WHTEntry.SETRANGE("Document No.",DocumentArray[PrintSlips]);
            IF WHTEntry.FINDSET THEN BEGIN
              ReportSelection.RESET;
              ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"WHT Certificate");
              IF ReportSelection.FINDSET THEN
                REPEAT
                  IF PurchSetup."Print WHT Docs. on Purch. Inv." THEN BEGIN
                    IF ReportSelection."Report ID" = ReportID THEN BEGIN
                      // Print default WHT Certificate
                      IF AllowPrintWHTCertificate2307 THEN BEGIN
                        CLEAR(WHTCertificate2307);
                        WHTCertificate2307.AssignFilter(VendorArray[PrintSlips],DocumentArray[PrintSlips]);
                        IF PurchSetup."Confirm Printing" AND GUIALLOWED THEN BEGIN
                          IF CONFIRM(Text1500005,FALSE,ReportSelection."Report Caption") THEN BEGIN
                            WHTCertificate2307.USEREQUESTPAGE := FALSE;
                            WHTCertificate2307.RUN;
                          END;
                        END ELSE BEGIN
                          WHTCertificate2307.USEREQUESTPAGE := FALSE;
                          WHTCertificate2307.RUN;
                        END;
                      END;
                    END ELSE BEGIN
                      // Print additional WHT Certificate
                      IF PurchSetup."Confirm Printing" AND GUIALLOWED THEN BEGIN
                        IF CONFIRM(Text1500005,FALSE,ReportSelection."Report Caption") THEN BEGIN
                          REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,WHTEntry);
                        END;
                      END ELSE BEGIN
                        REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,WHTEntry);
                      END;
                    END;
                  END;
                UNTIL ReportSelection.NEXT = 0;
            END;
          END;
        WHTSlipBuffer2 := VendorArray[PrintSlips];
        WHTSlipDocument2 := DocumentArray[PrintSlips];
      END;
      CLEAR(WHTSlipBuffer2);
      CLEAR(WHTSlipDocument2);
      //PHL0.01(+)

      IF PurchSetup."WHT Certificate No. Series" <> '' THEN  //PHL0.01
      FOR PrintSlips := 1 TO x DO
        BEGIN
        IF (VendorArray[PrintSlips] <> WHTSlipBuffer2) OR
           (DocumentArray[PrintSlips] <> WHTSlipDocument2)
        THEN BEGIN
          WHTSlipNo :=
            NoSeriesMgt.GetNextNo(
              PurchSetup."WHT Certificate No. Series",WHTEntry."Posting Date",TRUE);
          WHTEntry.RESET;
          //PHL0.01(-)
          //WHTEntry.SETCURRENTKEY("Bill-to/Pay-to No.","Original Document No.","WHT Revenue Type");  // Original Code
          WHTEntry.SETCURRENTKEY("Bill-to/Pay-to No.","Document No.","WHT Revenue Type");  //Updated Code
          //PHL0.01(+)
          IF ActualVendorNo THEN
            WHTEntry.SETRANGE("Actual Vendor No.",VendorArray[PrintSlips])
          ELSE
            WHTEntry.SETRANGE("Bill-to/Pay-to No.",VendorArray[PrintSlips]);
          WHTEntry.SETRANGE("Original Document No.",DocumentArray[PrintSlips]);
          IF WHTEntry.FINDSET THEN
            REPEAT
              WHTRevenueTypes.RESET;
              WHTRevenueTypes.SETRANGE(Code,WHTEntry."WHT Revenue Type");
              WHTEntry2.RESET;
              WHTEntry2 := WHTEntry;
              IF WHTRevenueTypes.FINDFIRST THEN BEGIN
                WHTEntry2."WHT Certificate No." := WHTSlipNo;
                WHTEntry2.MODIFY;
              END;
            UNTIL WHTEntry.NEXT = 0;
          //PHL0.01(-)
          // Remove Printing of Original Certificate
          //WHTEntry.RESET;
          //WHTEntry.SETCURRENTKEY("Bill-to/Pay-to No.","Original Document No.","WHT Revenue Type");
          //IF ActualVendorNo THEN
          //  WHTEntry.SETRANGE("Actual Vendor No.",VendorArray[PrintSlips])
          //ELSE
          //  WHTEntry.SETRANGE("Bill-to/Pay-to No.",VendorArray[PrintSlips]);
          //WHTEntry.SETRANGE("Original Document No.",DocumentArray[PrintSlips]);
          //WHTEntry.SETRANGE("WHT Certificate No.",WHTSlipNo);
          //IF WHTEntry.FINDSET THEN
          //  ReportSelection.RESET;
          //ReportSelection.SETRANGE(Usage,ReportSelection.Usage::"WHT Certificate");
          //IF ReportSelection.FINDSET THEN
          //  REPEAT
          //    REPORT.RUN(ReportSelection."Report ID",PurchSetup."Print Dialog",FALSE,WHTEntry);
          //  UNTIL ReportSelection.NEXT = 0;
          //PHL0.01(+)
        END;
        WHTSlipBuffer2 := VendorArray[PrintSlips];
        WHTSlipDocument2 := DocumentArray[PrintSlips];
      END;
    END;

    PROCEDURE InsertVendJournalWHT@1500014(VAR GenJnlLine@1500000 : Record 81) EntryNo : Integer;
    BEGIN
      IF ((GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Invoice) AND
          (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::"Credit Memo") AND
          (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Payment) AND
          (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Refund))
      THEN
        EXIT;

      IF NOT WHTPostingSetup.GET(
           GenJnlLine."WHT Business Posting Group",GenJnlLine."WHT Product Posting Group")
      THEN
        EXIT;

      TransType := TransType::Purchase;
      CASE GenJnlLine."Document Type" OF
        GenJnlLine."Document Type"::Invoice:
          DocType := DocType::Invoice;
        GenJnlLine."Document Type"::"Credit Memo":
          DocType := DocType::"Credit Memo";
        GenJnlLine."Document Type"::Payment:
          DocType := DocType::Payment;
        GenJnlLine."Document Type"::Refund:
          DocType := DocType::Refund;
      END;

      PostingDate := GenJnlLine."Posting Date";
      DocNo := GenJnlLine."Document No.";
      PayToAccType := PayToAccType::Vendor;
      PayToVendCustNo := GenJnlLine."Account No.";
      BuyFromAccType := BuyFromAccType::Vendor;
      BuyFromVendCustNo := GenJnlLine."Account No.";
      ActualVendorNo := GenJnlLine."Actual Vendor No.";
      ApplyDocType := GenJnlLine."Applies-to Doc. Type";
      ApplyDocNo := GenJnlLine."Applies-to Doc. No.";
      "Applies-toID" := GenJnlLine."Applies-to ID";
      WHTBusPostGrp := GenJnlLine."WHT Business Posting Group";
      WHTProdPostGrp := GenJnlLine."WHT Product Posting Group";
      WHTPostingSetup.RESET;
      WHTPostingSetup.GET(WHTBusPostGrp,WHTProdPostGrp);
      WHTRevenueType := WHTPostingSetup."Revenue Type";
      Amount := -GenJnlLine.Amount;
      AbsorbBase := -GenJnlLine."WHT Absorb Base";
      IF AbsorbBase <> 0 THEN
        AmountVAT := AbsorbBase
      ELSE
        AmountVAT := Amount;
      CurrFactor := GenJnlLine."Currency Factor";
      DocDate := GenJnlLine."Document Date";
      Dim1 := GenJnlLine."Shortcut Dimension 1 Code";
      Dim2 := GenJnlLine."Shortcut Dimension 2 Code";
      ExtDocNo := GenJnlLine."External Document No.";
      CurrencyCode := GenJnlLine."Currency Code";
      SourceCode := GenJnlLine."Source Code";
      TempGenJnlLine.RESET;
      TempGenJnlLine.DELETEALL;
      TempGenJnlLine := GenJnlLine;
      EXIT(InsertWHT(TType::Purchase));
    END;

    PROCEDURE InsertCustJournalWHT@1500015(VAR GenJnlLine@1500000 : Record 81) EntryNo : Integer;
    BEGIN
      SourceCodeSetup.GET;
      IF GenJnlLine."Source Code" = SourceCodeSetup.Sales THEN
        EXIT;
      IF ((GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Invoice) AND
          (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::"Credit Memo") AND
          (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Payment) AND
          (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Refund))
      THEN
        EXIT;

      IF NOT WHTPostingSetup.GET(
           GenJnlLine."WHT Business Posting Group",GenJnlLine."WHT Product Posting Group")
      THEN
        EXIT;

      TransType := TransType::Sale;
      CASE GenJnlLine."Document Type" OF
        GenJnlLine."Document Type"::Invoice:
          DocType := DocType::Invoice;
        GenJnlLine."Document Type"::"Credit Memo":
          DocType := DocType::"Credit Memo";
        GenJnlLine."Document Type"::Payment:
          DocType := DocType::Payment;
        GenJnlLine."Document Type"::Refund:
          DocType := DocType::Refund;
      END;

      PostingDate := GenJnlLine."Posting Date";
      DocNo := GenJnlLine."Document No.";
      PayToAccType := PayToAccType::Customer;
      PayToVendCustNo := GenJnlLine."Account No.";
      BuyFromAccType := BuyFromAccType::Customer;
      BuyFromVendCustNo := GenJnlLine."Account No.";
      ApplyDocType := GenJnlLine."Applies-to Doc. Type";
      ApplyDocNo := GenJnlLine."Applies-to Doc. No.";
      "Applies-toID" := GenJnlLine."Applies-to ID";
      WHTBusPostGrp := GenJnlLine."WHT Business Posting Group";
      WHTProdPostGrp := GenJnlLine."WHT Product Posting Group";
      WHTPostingSetup.RESET;
      WHTPostingSetup.GET(WHTBusPostGrp,WHTProdPostGrp);
      WHTRevenueType := WHTPostingSetup."Revenue Type";
      AbsorbBase := GenJnlLine."WHT Absorb Base";
      Amount := GenJnlLine.Amount;
      IF AbsorbBase <> 0 THEN
        AmountVAT := AbsorbBase
      ELSE
        AmountVAT := Amount;
      CurrFactor := GenJnlLine."Currency Factor";
      DocDate := GenJnlLine."Document Date";
      Dim1 := GenJnlLine."Shortcut Dimension 1 Code";
      Dim2 := GenJnlLine."Shortcut Dimension 2 Code";
      ExtDocNo := GenJnlLine."External Document No.";
      CurrencyCode := GenJnlLine."Currency Code";
      SourceCode := GenJnlLine."Source Code";
      EXIT(InsertWHT(TType::Sale));
    END;

    PROCEDURE InsertWHT@1500016(TransType@1500000 : 'Purchase,Sale') EntryNo : Integer;
    VAR
      WHTEntry@1500003 : Record 50504;
      TempWHTEntry@1500001 : Record 50504;
      VendLedgerEntry@1500004 : Record 25;
      VendLedgerEntry1@1500005 : Record 25;
      CustLedgerEntry@1500007 : Record 21;
      CustLedgerEntry1@1500006 : Record 21;
      TotalWHT@1500008 : Decimal;
      TotalWHTBase@1500009 : Decimal;
      PurchCrMemoHeader@1500010 : Record 124;
      ExpectedAmount@1500012 : Decimal;
      WHTEntryTemp@1500013 : Record 50504;
      VendLedgEntry1@1500015 : Record 25;
      VendLedgEntry@1500014 : Record 25;
      PaymentAmount1@1500016 : Decimal;
      AppldAmount@1500017 : Decimal;
      WHTEntry3@1500018 : Record 50504;
      IsRefund@1500022 : Boolean;
      RemainingAmt@1500023 : Decimal;
      WHTPart@1240000 : Decimal;
    BEGIN
      IF WHTPostingSetup.GET(WHTBusPostGrp,WHTProdPostGrp) THEN
        IF WHTPostingSetup."Realized WHT Type" <> WHTPostingSetup."Realized WHT Type"::" " THEN BEGIN
          UnrealizedWHT := (WHTPostingSetup."Realized WHT Type" = WHTPostingSetup."Realized WHT Type"::Payment);
          WHTEntry.INIT;
          WHTEntry."Entry No." := NextEntryNo;
          WHTEntry."Gen. Bus. Posting Group" := GenBusPostGrp;
          WHTEntry."Gen. Prod. Posting Group" := GenProdPostGrp;
          WHTEntry."WHT Bus. Posting Group" := WHTBusPostGrp;
          WHTEntry."WHT Prod. Posting Group" := WHTProdPostGrp;
          WHTEntry."Posting Date" := PostingDate;
          WHTEntry."Document Date" := DocDate;
          WHTEntry."Document No." := DocNo;
          WHTEntry."WHT %" := WHTPostingSetup."WHT %";
          WHTEntry."Applies-to Doc. Type" := ApplyDocType;
          WHTEntry."Applies-to Doc. No." := ApplyDocNo;
          WHTEntry."Source Code" := SourceCode;
          WHTEntry."Reason Code" := ReasonCode;
          WHTEntry."WHT Revenue Type" := WHTPostingSetup."Revenue Type";
          WHTEntry."Document Type" := DocType;
          IF TransType = TransType::Purchase THEN
            WHTEntry."Transaction Type" := WHTEntry."Transaction Type"::Purchase
          ELSE
            WHTEntry."Transaction Type" := WHTEntry."Transaction Type"::Sale;
          WHTEntry."Actual Vendor No." := ActualVendorNo;
          WHTEntry."Source Code" := SourceCode;
          WHTEntry."Bill-to/Pay-to No." := PayToVendCustNo;
          WHTEntry."User ID" := USERID;
          WHTEntry."Currency Code" := CurrencyCode;

          // VAT for G/L entry/entries
          IF UnrealizedWHT THEN BEGIN
            SetWHTEntryAmounts(WHTEntry,AbsorbBase,AmountVAT,CurrFactor);
            IF WHTEntry."Applies-to Doc. No." <> '' THEN BEGIN
              TempWHTEntry.RESET;
              TempWHTEntry.SETRANGE("Document Type",WHTEntry."Applies-to Doc. Type");
              TempWHTEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
              TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
              TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
              IF TempWHTEntry.FINDFIRST THEN BEGIN
                IF ABS(WHTEntry."Unrealized Amount") <=
                   ABS(TempWHTEntry."Remaining Unrealized Amount")
                THEN BEGIN
                  TempWHTEntry."Remaining Unrealized Amount" :=
                    TempWHTEntry."Remaining Unrealized Amount" + WHTEntry."Unrealized Amount";
                  TempWHTEntry."Remaining Unrealized Base" :=
                    TempWHTEntry."Remaining Unrealized Base" + WHTEntry."Unrealized Base";
                  WHTEntry."Remaining Unrealized Amount" := 0;
                  WHTEntry."Remaining Unrealized Base" := 0;
                  WHTEntry.Closed := TRUE;
                END ELSE BEGIN
                  TempWHTEntry."Remaining Unrealized Amount" := 0;
                  TempWHTEntry."Remaining Unrealized Base" := 0;
                  WHTEntry."Remaining Unrealized Amount" :=
                    TempWHTEntry."Remaining Unrealized Amount" + WHTEntry."Unrealized Amount";
                  WHTEntry."Remaining Unrealized Base" :=
                    TempWHTEntry."Remaining Unrealized Base" + WHTEntry."Unrealized Base";
                END;

                IF (TempWHTEntry."Remaining Unrealized Base" = 0) AND
                   (TempWHTEntry."Remaining Unrealized Amount" = 0)
                THEN
                  TempWHTEntry.Closed := TRUE;

                TempWHTEntry.MODIFY;
                WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
              END;
            END ELSE BEGIN
              IF "Applies-toID" <> '' THEN BEGIN
                IF (TransType = TransType::Purchase) AND
                   (WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo")
                THEN BEGIN
                  VendLedgerEntry1.SETRANGE("Applies-to ID","Applies-toID");
                  IF VendLedgerEntry1.FINDSET THEN
                    REPEAT
                      IF FindWHTEntryForApply(
                           TempWHTEntry,VendLedgerEntry1."Document Type",VendLedgerEntry1."Document No.",
                           WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group")
                      THEN BEGIN
                        VendLedgerEntry1.CALCFIELDS("Remaining Amount");
                        WHTPart := ABS(VendLedgerEntry1."Amount to Apply" / VendLedgerEntry1."Remaining Amount");
                        IF WHTPart >= 1 THEN BEGIN
                          IF ABS(WHTEntry."Remaining Unrealized Amount") <=
                             ABS(TempWHTEntry."Remaining Unrealized Amount" * WHTPart)
                          THEN
                            CalcWHTEntriesRemAmounts(TempWHTEntry,WHTEntry,WHTPart)
                          ELSE
                            CalcWHTEntriesRemAmounts(WHTEntry,TempWHTEntry,WHTPart);
                        END ELSE
                          CalcWHTEntriesRemAmounts(TempWHTEntry,WHTEntry,WHTPart)
                      END;
                      TempWHTEntry."Applies-to Entry No." := WHTEntry."Entry No.";
                      TempWHTEntry.MODIFY;
                    UNTIL VendLedgerEntry1.NEXT = 0;
                END;

                IF TransType = TransType::Sale THEN BEGIN
                  CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::"Credit Memo");
                  CustLedgerEntry.SETRANGE("Document No.",WHTEntry."Document No.");
                  IF CustLedgerEntry.FINDFIRST THEN BEGIN
                    CustLedgerEntry1.SETRANGE("Closed by Entry No.",CustLedgerEntry."Entry No.");
                    IF CustLedgerEntry1.FINDSET THEN
                      REPEAT
                        TempWHTEntry.RESET;
                        TempWHTEntry.SETRANGE("Document Type",CustLedgerEntry1."Document Type");
                        TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry1."Document No.");
                        TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                        TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                        IF TempWHTEntry.FINDFIRST THEN BEGIN
                          WHTEntry."Remaining Unrealized Amount" :=
                            TempWHTEntry."Unrealized Amount" + WHTEntry."Unrealized Amount";
                          WHTEntry."Remaining Unrealized Base" :=
                            TempWHTEntry."Unrealized Base" + WHTEntry."Unrealized Base";
                          TempWHTEntry."Remaining Unrealized Amount" := 0;
                          TempWHTEntry."Remaining Unrealized Base" := 0;
                          TempWHTEntry.Closed := TRUE;
                          TempWHTEntry."Applies-to Entry No." := WHTEntry."Entry No.";
                          TempWHTEntry.MODIFY;
                        END;
                      UNTIL CustLedgerEntry1.NEXT = 0;

                    IF CustLedgerEntry."Closed by Entry No." <> 0 THEN BEGIN
                      CustLedgerEntry1.RESET;
                      CustLedgerEntry1.SETRANGE("Entry No.",CustLedgerEntry."Closed by Entry No.");
                      IF CustLedgerEntry1.FINDFIRST THEN BEGIN
                        TempWHTEntry.RESET;
                        TempWHTEntry.SETRANGE("Document Type",CustLedgerEntry1."Document Type");
                        TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry1."Document No.");
                        TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                        TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                        IF TempWHTEntry.FINDFIRST THEN BEGIN
                          IF ABS(WHTEntry."Remaining Unrealized Amount") <=
                             ABS(TempWHTEntry."Remaining Unrealized Amount")
                          THEN BEGIN
                            TempWHTEntry."Remaining Unrealized Amount" :=
                              TempWHTEntry."Remaining Unrealized Amount" +
                              WHTEntry."Remaining Unrealized Amount";
                            TempWHTEntry."Remaining Unrealized Base" :=
                              TempWHTEntry."Remaining Unrealized Base" +
                              WHTEntry."Remaining Unrealized Base";
                            TempWHTEntry.MODIFY;
                            WHTEntry."Remaining Unrealized Amount" := 0;
                            WHTEntry."Remaining Unrealized Base" := 0;
                            WHTEntry.Closed := TRUE;
                            WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                          END;
                        END;
                      END;
                    END;
                  END;
                END;
              END;
            END;
          END ELSE BEGIN
            IF AbsorbBase <> 0 THEN
              WHTEntry.Base := AbsorbBase
            ELSE
              WHTEntry.Base := AmountVAT;
            WHTEntry."Unrealized Amount" := 0;
            WHTEntry."Unrealized Base" := 0;
            WHTEntry."Remaining Unrealized Amount" := 0;
            WHTEntry."Remaining Unrealized Base" := 0;
            WHTEntry.Amount := ROUND(WHTEntry.Base * WHTEntry."WHT %" / 100);
            WHTEntry."Rem Realized Amount" := WHTEntry.Amount;
            WHTEntry."Rem Realized Base" := WHTEntry.Base;
            WHTEntry."Original Document No." := DocNo;
            WHTEntry."WHT Report" := WHTPostingSetup."WHT Report";
            IF ((WHTReportLineNo = '') AND
                (WHTPostingSetup."WHT Report Line No. Series" <> ''))
            THEN
              WHTEntry."WHT Report Line No" :=
                NoSeriesMgt.GetNextNo(
                  WHTPostingSetup."WHT Report Line No. Series",WHTEntry."Posting Date",TRUE);

            IF TransType = TransType::Purchase THEN BEGIN
              IF ((WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice) OR
                  (WHTEntry."Document Type" = WHTEntry."Document Type"::Payment))
              THEN BEGIN
                WHTEntry.Base := ABS(WHTEntry.Base);
                WHTEntry.Amount := ABS(WHTEntry.Amount);
                WHTEntry."Payment Amount" := ABS(Amount);
                WHTEntry."Rem Realized Base" := WHTEntry.Base;
                WHTEntry."Rem Realized Amount" := WHTEntry.Amount;
                IF (WHTPostingSetup."Realized WHT Type" =
                    WHTPostingSetup."Realized WHT Type"::Earliest)
                THEN BEGIN
                  IF WHTEntry."Applies-to Doc. No." <> '' THEN BEGIN
                    TempWHTEntry.RESET;
                    // TempWHTEntry.SETRANGE(Settled,FALSE);
                    TempWHTEntry.SETRANGE("Document Type",WHTEntry."Applies-to Doc. Type");
                    TempWHTEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
                    TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                    TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                    IF WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice THEN
                      TempWHTEntry.SETRANGE(
                        "Document Type",
                        TempWHTEntry."Document Type"::Payment,
                        TempWHTEntry."Document Type"::"Credit Memo");

                    IF WHTEntry."Document Type" = WHTEntry."Document Type"::Payment THEN
                      TempWHTEntry.SETFILTER(
                        "Document Type",
                        '%1|%2',
                        TempWHTEntry."Document Type"::Invoice,
                        TempWHTEntry."Document Type"::Refund);

                    IF TempWHTEntry.FINDFIRST THEN BEGIN
                      IF TempWHTEntry.Prepayment THEN BEGIN
                        PaymentAmount1 := WHTEntry.Base;
                        WHTEntry3.RESET;
                        WHTEntry3 := TempWHTEntry;

                        PurchCrMemoHeader.RESET;
                        PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",WHTEntry."Applies-to Doc. No.");
                        PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                        IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                          TempRemAmt := 0;
                          VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                          VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                          IF VendLedgEntry1.FINDFIRST THEN
                            VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                          WHTEntryTemp.RESET;
                          WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                          WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                          WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                          WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                          WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                          IF WHTEntryTemp.FINDFIRST THEN BEGIN
                            TempRemBase := WHTEntryTemp."Unrealized Amount";
                            TempRemAmt := WHTEntryTemp."Unrealized Base";
                          END;
                        END;

                        VendLedgEntry.RESET;
                        VendLedgEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
                        IF WHTEntry."Applies-to Doc. Type" = WHTEntry."Applies-to Doc. Type"::Invoice THEN
                          VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                        ELSE
                          IF WHTEntry."Applies-to Doc. Type" = WHTEntry."Applies-to Doc. Type"::"Credit Memo" THEN
                            VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");
                        IF VendLedgEntry.FINDFIRST THEN
                          VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                        IF WHTEntryTemp.FINDFIRST THEN
                          ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                        ELSE
                          ExpectedAmount := -(VendLedgEntry.Amount + 0);
                        IF VendLedgEntry1."Amount (LCY)" = 0 THEN
                          VendLedgEntry1."Rem. Amt" := 0;
                        IF (WHTEntry."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                           (ABS(PaymentAmount1) >=
                            (ABS(VendLedgEntry."Rem. Amt" + VendLedgEntry1."Rem. Amt") -
                             ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                        THEN BEGIN
                          AppldAmount :=
                            ROUND(
                              ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                               (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                              ExpectedAmount);
                          WHTEntry3."Remaining Unrealized Base" :=
                            ROUND(
                              TempWHTEntry."Remaining Unrealized Base" -
                              ROUND(
                                ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                                 (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                                ExpectedAmount));
                          WHTEntry3."Remaining Unrealized Amount" :=
                            ROUND(
                              TempWHTEntry."Remaining Unrealized Amount" -
                              ROUND(
                                ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                                 (TempWHTEntry."Unrealized Amount" + TempRemBase)) /
                                ExpectedAmount));
                        END ELSE BEGIN
                          AppldAmount :=
                            ROUND(
                              (PaymentAmount1 * (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                              ExpectedAmount);
                          WHTEntry3."Remaining Unrealized Base" :=
                            ROUND(
                              TempWHTEntry."Remaining Unrealized Base" -
                              ROUND(
                                (PaymentAmount1 * (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                                ExpectedAmount));
                          WHTEntry3."Remaining Unrealized Amount" :=
                            ROUND(
                              TempWHTEntry."Remaining Unrealized Amount" -
                              ROUND(
                                (PaymentAmount1 * (TempWHTEntry."Unrealized Amount" + TempRemBase)) /
                                ExpectedAmount));
                        END;
                        WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        WHTEntry."Unrealized WHT Entry No." := TempWHTEntry."Entry No.";
                        WHTEntry."WHT %" := TempWHTEntry."WHT %";
                        WHTEntry.Base := ROUND(AppldAmount);
                        WHTEntry.Amount := ROUND(WHTEntry.Base * WHTEntry."WHT %" / 100);
                        WHTEntry."Payment Amount" := PaymentAmount1;
                        WHTEntry."Rem Realized Base" := 0;
                        WHTEntry."Rem Realized Amount" := 0;

                        IF CurrencyCode = '' THEN BEGIN
                          WHTEntry3."Rem Unrealized Amount (LCY)" :=
                            TempWHTEntry."Rem Unrealized Amount (LCY)" - WHTEntry.Amount;
                          WHTEntry3."Rem Unrealized Base (LCY)" :=
                            TempWHTEntry."Rem Unrealized Base (LCY)" - WHTEntry.Base;
                        END ELSE BEGIN
                          WHTEntry3."Rem Unrealized Amount (LCY)" := TempWHTEntry."Rem Unrealized Amount (LCY)" -
                            ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry.Amount,CurrFactor));
                          WHTEntry3."Rem Unrealized Base (LCY)" := TempWHTEntry."Rem Unrealized Base (LCY)" -
                            ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry.Base,CurrFactor));
                        END;
                        IF (WHTEntry3."Remaining Unrealized Base" = 0) AND (WHTEntry3."Remaining Unrealized Amount" = 0) THEN
                          WHTEntry3.Closed := TRUE;
                        WHTEntry3.MODIFY;
                      END ELSE BEGIN
                        IF WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice THEN BEGIN
                          IF ABS(TempWHTEntry."Rem Realized Amount") >= ABS(WHTEntry.Amount) THEN BEGIN
                            IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo") OR
                                (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Refund))
                            THEN BEGIN
                              TempWHTEntry."Rem Realized Base" :=
                                TempWHTEntry."Rem Realized Base" + WHTEntry.Base;
                              TempWHTEntry."Rem Realized Amount" :=
                                TempWHTEntry."Rem Realized Amount" + WHTEntry.Amount;
                            END ELSE BEGIN
                              TempWHTEntry."Rem Realized Base" :=
                                TempWHTEntry."Rem Realized Base" - WHTEntry.Base;
                              TempWHTEntry."Rem Realized Amount" :=
                                TempWHTEntry."Rem Realized Amount" - WHTEntry.Amount;
                              WHTEntry.Amount := 0;
                            END;

                            IF CurrencyCode = '' THEN BEGIN
                              TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                              TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                            END ELSE BEGIN
                              TempWHTEntry."Rem Realized Amount (LCY)" :=
                                ROUND(
                                  CurrExchRate.ExchangeAmtFCYToLCY(
                                    DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount",CurrFactor));
                              TempWHTEntry."Rem Realized Base (LCY)" :=
                                ROUND(
                                  CurrExchRate.ExchangeAmtFCYToLCY(
                                    DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base",CurrFactor));
                            END;
                          END ELSE BEGIN
                            IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo") OR
                                (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Refund))
                            THEN BEGIN
                              WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                              WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                            END ELSE BEGIN
                              WHTEntry.Base := WHTEntry.Base - TempWHTEntry."Rem Realized Base";
                              WHTEntry.Amount := WHTEntry.Amount - TempWHTEntry."Rem Realized Amount";
                              WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - TempWHTEntry."Rem Realized Base";
                              WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" - TempWHTEntry."Rem Realized Amount";
                            END;
                            TempWHTEntry."Rem Realized Base" := 0;
                            TempWHTEntry."Rem Realized Amount" := 0;
                            TempWHTEntry."Rem Realized Base (LCY)" := 0;
                            TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                          END;
                        END ELSE BEGIN
                          TotAmt := 0;
                          TotAmt := TempGenJnlLine.Amount;
                          VendLedgerEntry.RESET;
                          VendLedgerEntry.SETRANGE("Document No.",TempWHTEntry."Document No.");
                          VendLedgerEntry.SETRANGE("Document Type",TempWHTEntry."Document Type");
                          IF VendLedgerEntry.FINDFIRST THEN BEGIN
                            TempVendLedgEntry.RESET;
                            TempVendLedgEntry.SETRANGE("Entry No.",VendLedgerEntry."Entry No.");
                            IF TempVendLedgEntry.FINDSET THEN BEGIN
                              TempVendLedgEntry.CALCFIELDS(
                                Amount,"Amount (LCY)",
                                "Remaining Amount","Remaining Amt. (LCY)");

                              IF ((WHTEntry."Document Type" = WHTEntry."Document Type"::Payment) AND
                                  (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Invoice))
                              THEN
                                BEGIN
                                IF CheckPmtDisc(
                                     TempGenJnlLine."Posting Date",
                                     TempVendLedgEntry."Pmt. Discount Date",
                                     ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                                     ABS(TempVendLedgEntry."Rem. Amt"),
                                     ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                                     ABS(TotAmt))
                                THEN
                                  TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";
                              END;

                              IF ABS(TempVendLedgEntry."Rem. Amt for WHT") < ABS(TotAmt) THEN BEGIN
                                IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo") OR
                                    (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Refund))
                                THEN BEGIN
                                  WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                                  WHTEntry."Rem Realized Amount" :=
                                    WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                                END ELSE BEGIN
                                  IF CheckPmtDisc(
                                       TempGenJnlLine."Posting Date",
                                       TempVendLedgEntry."Pmt. Discount Date",
                                       ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                                       ABS(TempVendLedgEntry."Rem. Amt"),
                                       ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                                       ABS(TotAmt))
                                  THEN BEGIN
                                    WHTEntry.Base := (WHTEntry.Base -
                                                      ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                                        TempVendLedgEntry."Original Pmt. Disc. Possible")) - ABS(TempWHTEntry.Amount);
                                    WHTEntry.Amount :=
                                      ROUND(WHTEntry.Base * WHTEntry."WHT %" / 100);
                                    WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" -
                                      ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                        TempVendLedgEntry."Original Pmt. Disc. Possible" - TempWHTEntry.Amount);
                                    WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" -
                                      ROUND(ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                          TempVendLedgEntry."Original Pmt. Disc. Possible" - TempWHTEntry.Amount) *
                                        WHTEntry."WHT %" / 100);
                                  END ELSE BEGIN
                                    WHTEntry.Base := (WHTEntry.Base -
                                                      ABS(TempVendLedgEntry."Rem. Amt for WHT")) - ABS(TempWHTEntry.Amount);
                                    WHTEntry.Amount :=
                                      ROUND(WHTEntry.Base * WHTEntry."WHT %" / 100);
                                    WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" -
                                      ABS(TempVendLedgEntry."Rem. Amt for WHT" - TempWHTEntry.Amount);
                                    WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" -
                                      ROUND(ABS(TempVendLedgEntry."Rem. Amt for WHT" - TempWHTEntry.Amount) * WHTEntry."WHT %" / 100);
                                  END;
                                END;
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo") OR
                                    (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Refund))
                                THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" + WHTEntry.Base;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" + WHTEntry.Amount;
                                END ELSE BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" - TotAmt;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" - ROUND(ABS(TotAmt) * WHTEntry."WHT %" / 100);
                                  WHTEntry.Amount := 0;
                                END;

                                IF CurrencyCode = '' THEN BEGIN
                                  TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                  TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                                END ELSE BEGIN
                                  TempWHTEntry."Rem Realized Amount (LCY)" :=
                                    ROUND(
                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                        DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount",CurrFactor));
                                  TempWHTEntry."Rem Realized Base (LCY)" :=
                                    ROUND(
                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                        DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base",CurrFactor));
                                END;
                                TotAmt := 0;
                              END;
                            END;
                          END;
                        END;

                        IF (TempWHTEntry."Rem Realized Amount" = 0) AND
                           (TempWHTEntry."Rem Realized Base" = 0)
                        THEN
                          TempWHTEntry.Closed := TRUE;
                        TempWHTEntry.MODIFY;
                      END;
                    END;
                  END ELSE BEGIN
                    IF "Applies-toID" <> '' THEN BEGIN
                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Payment THEN BEGIN
                        TotAmt := 0;
                        RemainingAmt := 0;
                        TempVendLedgEntry1.RESET;
                        TempVendLedgEntry1.SETRANGE("Applies-to ID",TempGenJnlLine."Applies-to ID");
                        IF TempVendLedgEntry1.FINDSET(TRUE,FALSE) THEN
                          REPEAT
                            TempVendLedgEntry1.CALCFIELDS(
                              Amount,"Amount (LCY)","Remaining Amount","Remaining Amt. (LCY)",
                              "Original Amount","Original Amt. (LCY)");
                            IF TempVendLedgEntry1."Rem. Amt for WHT" = 0 THEN
                              TempVendLedgEntry1."Rem. Amt for WHT" := TempVendLedgEntry1."Remaining Amt. (LCY)";
                            RemainingAmt := RemainingAmt + TempVendLedgEntry1."Rem. Amt for WHT";
                          UNTIL TempVendLedgEntry1.NEXT = 0;
                        TotAmt := ABS(TempGenJnlLine.Amount);
                        VendLedgerEntry.RESET;
                        VendLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        VendLedgerEntry.SETRANGE("Document Type",VendLedgerEntry."Document Type"::Refund);
                        IF VendLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := WHTEntry."Rem Realized Base";
                          TotalWHT := WHTEntry."Rem Realized Amount";
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",VendLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF ABS(TotalWHT) > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                WHTEntry."Rem Realized Base" :=
                                  WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (ABS(TotalWHT) > 0) AND (ABS(TotalWHT) <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL VendLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;

                        VendLedgerEntry.RESET;
                        VendLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        VendLedgerEntry.SETRANGE("Document Type",VendLedgerEntry."Document Type"::Invoice);
                        IF VendLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := WHTEntry."Rem Realized Base";
                          TotalWHT := WHTEntry."Rem Realized Amount";
                          REPEAT
                            IF VendLedgerEntry.Prepayment THEN BEGIN
                              TempVendLedgEntry.RESET;
                              TempVendLedgEntry.SETRANGE("Entry No.",VendLedgerEntry."Entry No.");
                              IF TempVendLedgEntry.FINDFIRST THEN BEGIN
                                TempVendLedgEntry.CALCFIELDS(
                                  Amount,"Amount (LCY)",
                                  "Remaining Amount","Remaining Amt. (LCY)");

                                IF CheckPmtDisc(
                                     TempGenJnlLine."Posting Date",
                                     TempVendLedgEntry."Pmt. Discount Date",
                                     ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                                     ABS(TempVendLedgEntry."Rem. Amt"),
                                     ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                                     ABS(TotAmt))
                                THEN
                                  TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";

                                IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
                                   (ABS(TempVendLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
                                THEN BEGIN
                                  IF CheckPmtDisc(
                                       TempGenJnlLine."Posting Date",
                                       TempVendLedgEntry."Pmt. Discount Date",
                                       ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                                       ABS(TempVendLedgEntry."Rem. Amt"),
                                       ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                                       ABS(TotAmt))
                                  THEN BEGIN
                                    TempGenJnlLine.VALIDATE(
                                      Amount,
                                      ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                        TempVendLedgEntry."Original Pmt. Disc. Possible"));

                                    IF TempVendLedgEntry."Document Type" <>
                                       TempVendLedgEntry."Document Type"::"Credit Memo"
                                    THEN
                                      TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";

                                    RemainingAmt :=
                                      RemainingAmt -
                                      TempVendLedgEntry."Rem. Amt for WHT";
                                  END ELSE BEGIN
                                    TempGenJnlLine.VALIDATE(Amount,ABS(TempVendLedgEntry."Rem. Amt for WHT"));
                                    IF TempVendLedgEntry."Document Type" <>
                                       TempVendLedgEntry."Document Type"::"Credit Memo"
                                    THEN
                                      TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
                                    RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";
                                  END;
                                END ELSE BEGIN
                                  IF CheckPmtDisc(
                                       TempGenJnlLine."Posting Date",
                                       TempVendLedgEntry."Pmt. Discount Date",
                                       ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                                       ABS(TempVendLedgEntry."Rem. Amt"),
                                       ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                                       ABS(TotAmt))
                                  THEN
                                    TempGenJnlLine.VALIDATE(Amount,TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible")
                                  ELSE
                                    TempGenJnlLine.VALIDATE(Amount,TotAmt);
                                  WHTEntry.Amount := 0;
                                  TotAmt := 0;
                                END;

                                IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
                                  TempGenJnlLine."Applies-to Doc. Type" := TempGenJnlLine."Applies-to Doc. Type"::Invoice
                                ELSE BEGIN
                                  IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                                    TempGenJnlLine."Applies-to Doc. Type" := TempGenJnlLine."Applies-to Doc. Type"::"Credit Memo";
                                  RemainingAmt := RemainingAmt + TempVendLedgEntry."Rem. Amt for WHT";
                                  TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
                                END;
                                TempGenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
                                PaymentAmount1 := TempGenJnlLine.Amount;

                                TempWHTEntry.RESET;
                                TempWHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
                                TempWHTEntry.SETRANGE("Transaction Type",TempWHTEntry."Transaction Type"::Purchase);
                                IF TempGenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
                                  TempWHTEntry.SETRANGE("Document No.",TempGenJnlLine."Applies-to Doc. No.");
                                  TempWHTEntry.SETRANGE("Document Type",TempGenJnlLine."Applies-to Doc. Type");
                                END ELSE
                                  TempWHTEntry.SETRANGE("Bill-to/Pay-to No.",TempGenJnlLine."Account No.");
                                IF TempWHTEntry.FINDSET THEN
                                  REPEAT
                                    WHTEntry3.RESET;
                                    WHTEntry3 := TempWHTEntry;
                                    PurchCrMemoHeader.RESET;
                                    PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",TempGenJnlLine."Applies-to Doc. No.");
                                    PurchCrMemoHeader.SETRANGE(
                                      "Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                                    IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                                      TempRemAmt := 0;
                                      VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                                      VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                                      IF VendLedgEntry1.FINDFIRST THEN
                                        VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                                      WHTEntryTemp.RESET;
                                      WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                                      WHTEntryTemp.SETRANGE("Document Type",TempWHTEntry."Document Type"::"Credit Memo");
                                      WHTEntryTemp.SETRANGE("Transaction Type",TempWHTEntry."Transaction Type"::Purchase);
                                      WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",TempWHTEntry."WHT Bus. Posting Group");
                                      WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",TempWHTEntry."WHT Prod. Posting Group");
                                      IF WHTEntryTemp.FINDFIRST THEN BEGIN
                                        TempRemBase := WHTEntryTemp."Unrealized Amount";
                                        TempRemAmt := WHTEntryTemp."Unrealized Base";
                                      END;
                                    END;

                                    VendLedgEntry.RESET;
                                    VendLedgEntry.SETRANGE("Document No.",TempGenJnlLine."Applies-to Doc. No.");
                                    IF TempGenJnlLine."Applies-to Doc. Type" = TempGenJnlLine."Applies-to Doc. Type"::Invoice THEN
                                      VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                                    ELSE
                                      IF TempGenJnlLine."Applies-to Doc. Type" =
                                         TempGenJnlLine."Applies-to Doc. Type"::"Credit Memo"
                                      THEN
                                        VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");
                                    IF VendLedgEntry.FINDFIRST THEN
                                      VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                                    IF WHTEntryTemp.FINDFIRST THEN
                                      ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                                    ELSE
                                      ExpectedAmount := -(VendLedgEntry.Amount + 0);
                                    IF VendLedgEntry1."Amount (LCY)" = 0 THEN
                                      VendLedgEntry1."Rem. Amt" := 0;
                                    IF (TempGenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                                       (ABS(PaymentAmount1) >=
                                        (ABS(VendLedgEntry."Rem. Amt" + VendLedgEntry1."Rem. Amt") -
                                         ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                                    THEN BEGIN
                                      AppldAmount :=
                                        ROUND(
                                          ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                                           (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                                          ExpectedAmount);
                                      WHTEntry3."Remaining Unrealized Base" :=
                                        ROUND(
                                          TempWHTEntry."Remaining Unrealized Base" -
                                          ROUND(
                                            ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                                             (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                                            ExpectedAmount));
                                      WHTEntry3."Remaining Unrealized Amount" :=
                                        ROUND(
                                          TempWHTEntry."Remaining Unrealized Amount" -
                                          ROUND(
                                            ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                                             (TempWHTEntry."Unrealized Amount" + TempRemBase)) /
                                            ExpectedAmount));
                                    END ELSE BEGIN
                                      AppldAmount :=
                                        ROUND(
                                          (PaymentAmount1 *
                                           (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                                          ExpectedAmount);
                                      WHTEntry3."Remaining Unrealized Base" :=
                                        ROUND(
                                          TempWHTEntry."Remaining Unrealized Base" -
                                          ROUND(
                                            (PaymentAmount1 * (TempWHTEntry."Unrealized Base" + TempRemAmt)) /
                                            ExpectedAmount));
                                      WHTEntry3."Remaining Unrealized Amount" :=
                                        ROUND(
                                          TempWHTEntry."Remaining Unrealized Amount" -
                                          ROUND(
                                            (PaymentAmount1 * (TempWHTEntry."Unrealized Amount" + TempRemBase)) /
                                            ExpectedAmount));
                                    END;

                                    InitWHTEntry(TempWHTEntry,AppldAmount,PaymentAmount1,WHTEntry3);
                                  UNTIL TempWHTEntry.NEXT(-1) = 0;
                              END;
                            END ELSE BEGIN
                              TempWHTEntry.RESET;
                              // TempWHTEntry.SETRANGE(Settled,FALSE);
                              TempWHTEntry.SETRANGE("Document No.",VendLedgerEntry."Document No.");
                              TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                              TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                              IF TempWHTEntry.FINDFIRST THEN BEGIN
                                TempVendLedgEntry.RESET;
                                TempVendLedgEntry.SETRANGE("Entry No.",VendLedgerEntry."Entry No.");
                                IF TempVendLedgEntry.FINDFIRST THEN BEGIN
                                  TempVendLedgEntry.CALCFIELDS(
                                    Amount,"Amount (LCY)",
                                    "Remaining Amount","Remaining Amt. (LCY)");

                                  IF CheckPmtDisc(
                                       TempGenJnlLine."Posting Date",
                                       TempVendLedgEntry."Pmt. Discount Date",
                                       ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                                       ABS(TempVendLedgEntry."Rem. Amt"),
                                       ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                                       ABS(TotAmt))
                                  THEN
                                    TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";

                                  IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
                                     (ABS(TempVendLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
                                  THEN BEGIN
                                    IF CheckPmtDisc(
                                         TempGenJnlLine."Posting Date",
                                         TempVendLedgEntry."Pmt. Discount Date",
                                         ABS(TempVendLedgEntry."Rem. Amt for WHT"),
                                         ABS(TempVendLedgEntry."Rem. Amt"),
                                         ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                                         ABS(TotAmt))
                                    THEN BEGIN
                                      IF TempVendLedgEntry."Document Type" <>
                                         TempVendLedgEntry."Document Type"::"Credit Memo"
                                      THEN
                                        TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";

                                      RemainingAmt :=
                                        RemainingAmt -
                                        TempVendLedgEntry."Rem. Amt for WHT" +
                                        TempVendLedgEntry."Original Pmt. Disc. Possible";

                                      WHTEntry.Base := WHTEntry.Base -
                                        ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                          TempVendLedgEntry."Original Pmt. Disc. Possible");
                                      WHTEntry.Amount := WHTEntry.Amount -
                                        ROUND(ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                            TempVendLedgEntry."Original Pmt. Disc. Possible") * WHTEntry."WHT %" / 100);
                                      WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" -
                                        ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                          TempVendLedgEntry."Original Pmt. Disc. Possible");
                                      WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" -
                                        ROUND(ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                                            TempVendLedgEntry."Original Pmt. Disc. Possible") * WHTEntry."WHT %" / 100);
                                    END ELSE BEGIN
                                      IF TempVendLedgEntry."Document Type" <>
                                         TempVendLedgEntry."Document Type"::"Credit Memo"
                                      THEN
                                        TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
                                      RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";

                                      WHTEntry.Base := WHTEntry.Base -
                                        ABS(TempVendLedgEntry."Rem. Amt for WHT");
                                      WHTEntry.Amount := WHTEntry.Amount -
                                        ROUND(ABS(TempVendLedgEntry."Rem. Amt for WHT") * WHTEntry."WHT %" / 100);
                                      WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" -
                                        ABS(TempVendLedgEntry."Rem. Amt for WHT");
                                      WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" -
                                        ROUND(ABS(TempVendLedgEntry."Rem. Amt for WHT") * WHTEntry."WHT %" / 100);
                                    END;
                                    TempWHTEntry."Rem Realized Base" := 0;
                                    TempWHTEntry."Rem Realized Amount" := 0;
                                    TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                    TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                                  END ELSE BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" - TotAmt;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" -
                                      ROUND(ABS(TotAmt) * WHTEntry."WHT %" / 100);
                                    WHTEntry.Amount := 0;
                                    TotAmt := 0;
                                  END;
                                END;

                                IF CurrencyCode = '' THEN BEGIN
                                  TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                  TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                                END ELSE BEGIN
                                  TempWHTEntry."Rem Realized Amount (LCY)" :=
                                    ROUND(
                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                        DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                  TempWHTEntry."Rem Realized Base (LCY)" :=
                                    ROUND(
                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                        DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                                END;
                                IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                    (TempWHTEntry."Rem Realized Base" = 0))
                                THEN
                                  TempWHTEntry.Closed := TRUE;
                                TempWHTEntry.MODIFY;
                              END;
                            END;
                          UNTIL VendLedgerEntry.NEXT = 0;
                          IF TotAmt > 0 THEN
                            BEGIN
                            WHTEntry.Base := TotAmt;
                            WHTEntry.Amount := ROUND(TotAmt * WHTPostingSetup."WHT %" / 100);
                            WHTEntry."Rem Realized Amount" := WHTEntry.Amount;
                            WHTEntry."Rem Realized Base" := WHTEntry.Base;
                            WHTEntry."Entry No." := NextEntryNo;
                          END ELSE
                            WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;
                      END;

                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice THEN BEGIN
                        VendLedgerEntry.RESET;
                        VendLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        VendLedgerEntry.SETFILTER(
                          "Document Type",
                          '%1|%2',
                          VendLedgerEntry."Document Type"::Payment,
                          VendLedgerEntry."Document Type"::"Credit Memo");
                        IF VendLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",VendLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment THEN BEGIN
                                  WHTEntry.Base := WHTEntry.Base - ABS(TempWHTEntry."Rem Realized Base");
                                  WHTEntry.Amount := WHTEntry.Amount - ABS(TempWHTEntry."Rem Realized Amount");
                                END;
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - ABS(TempWHTEntry."Rem Realized Base");
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" - ABS(TempWHTEntry."Rem Realized Amount");
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - ABS(TempWHTEntry."Rem Realized Base");
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" - ABS(TempWHTEntry."Rem Realized Amount");
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (TotalWHT <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo" THEN BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                  END ELSE BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" - TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" - TotalWHT;
                                    WHTEntry.Base := 0;
                                    WHTEntry.Amount := 0;
                                  END;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL VendLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;
                      END;
                    END;
                  END;
                END;
              END;

              // Purchase Credit Memo & Refund
              IF ((WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo") OR
                  (WHTEntry."Document Type" = WHTEntry."Document Type"::Refund))
              THEN BEGIN
                WHTEntry.Base := -ABS(WHTEntry.Base);
                WHTEntry.Amount := -ABS(WHTEntry.Amount);
                WHTEntry."Payment Amount" := -ABS(Amount);
                WHTEntry."Rem Realized Base" := WHTEntry.Base;
                WHTEntry."Rem Realized Amount" := WHTEntry.Amount;
                IF (WHTPostingSetup."Realized WHT Type" =
                    WHTPostingSetup."Realized WHT Type"::Earliest)
                THEN BEGIN
                  IF WHTEntry."Applies-to Doc. No." <> '' THEN BEGIN
                    TempWHTEntry.RESET;
                    // TempWHTEntry.SETRANGE(Settled,FALSE);
                    TempWHTEntry.SETRANGE("Document Type",WHTEntry."Applies-to Doc. Type");
                    TempWHTEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
                    TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                    TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                    IF WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo" THEN
                      TempWHTEntry.SETFILTER(
                        "Document Type",
                        '%1|%2',
                        TempWHTEntry."Document Type"::Refund,
                        TempWHTEntry."Document Type"::Invoice);

                    IF WHTEntry."Document Type" = WHTEntry."Document Type"::Refund THEN
                      TempWHTEntry.SETFILTER(
                        "Document Type",
                        '%1|%2',
                        TempWHTEntry."Document Type"::"Credit Memo",
                        TempWHTEntry."Document Type"::Payment);

                    IF TempWHTEntry.FINDFIRST THEN BEGIN
                      IF ABS(TempWHTEntry."Rem Realized Amount") >= ABS(WHTEntry.Amount) THEN BEGIN
                        IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Invoice) OR
                            (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment))
                        THEN BEGIN
                          TempWHTEntry."Rem Realized Base" :=
                            TempWHTEntry."Rem Realized Base" + WHTEntry.Base;
                          TempWHTEntry."Rem Realized Amount" :=
                            TempWHTEntry."Rem Realized Amount" + WHTEntry.Amount;
                          WHTEntry."Rem Realized Base" := 0;
                          WHTEntry."Rem Realized Amount" := 0;
                        END ELSE BEGIN
                          TempWHTEntry."Rem Realized Base" :=
                            TempWHTEntry."Rem Realized Base" - WHTEntry.Base;
                          TempWHTEntry."Rem Realized Amount" :=
                            TempWHTEntry."Rem Realized Amount" - WHTEntry.Amount;
                          WHTEntry.Amount := 0;
                        END;

                        IF CurrencyCode = '' THEN BEGIN
                          TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                          TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                        END ELSE BEGIN
                          TempWHTEntry."Rem Realized Amount (LCY)" :=
                            ROUND(
                              CurrExchRate.ExchangeAmtFCYToLCY(
                                DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                          TempWHTEntry."Rem Realized Base (LCY)" :=
                            ROUND(
                              CurrExchRate.ExchangeAmtFCYToLCY(
                                DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                        END;
                      END ELSE BEGIN
                        IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Invoice) OR
                            (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment))
                        THEN BEGIN
                          WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                          WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                        END ELSE BEGIN
                          WHTEntry.Base := WHTEntry.Base - TempWHTEntry."Rem Realized Base";
                          WHTEntry.Amount := WHTEntry.Amount - TempWHTEntry."Rem Realized Amount";
                          WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - TempWHTEntry."Rem Realized Base";
                          WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" - TempWHTEntry."Rem Realized Amount";
                        END;
                        TempWHTEntry."Rem Realized Base" := 0;
                        TempWHTEntry."Rem Realized Amount" := 0;
                        TempWHTEntry."Rem Realized Base (LCY)" := 0;
                        TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                      END;

                      IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                          (TempWHTEntry."Rem Realized Base" = 0))
                      THEN
                        TempWHTEntry.Closed := TRUE;
                      TempWHTEntry.MODIFY;
                    END;
                  END ELSE BEGIN
                    IF "Applies-toID" <> '' THEN BEGIN
                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo" THEN BEGIN
                        VendLedgerEntry.RESET;
                        VendLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        VendLedgerEntry.SETRANGE("Document Type",VendLedgerEntry."Document Type"::Refund);
                        IF VendLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := WHTEntry."Rem Realized Base";
                          TotalWHT := WHTEntry."Rem Realized Amount";
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",VendLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF ABS(TotalWHT) > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                WHTEntry.Base := WHTEntry.Base + TempWHTEntry."Rem Realized Base";
                                WHTEntry.Amount := WHTEntry.Amount + TempWHTEntry."Rem Realized Amount";
                                WHTEntry."Rem Realized Base" :=
                                  WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (ABS(TotalWHT) > 0) AND (ABS(TotalWHT) <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                  WHTEntry.Base := 0;
                                  WHTEntry.Amount := 0;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL VendLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;

                        VendLedgerEntry.RESET;
                        VendLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        VendLedgerEntry.SETRANGE("Document Type",VendLedgerEntry."Document Type"::Invoice);
                        IF VendLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",VendLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                                WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (ABS(TotalWHT) <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" - TotalWHTBase;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" - TotalWHT;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL VendLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;
                      END;

                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Refund THEN BEGIN
                        VendLedgerEntry.RESET;
                        VendLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        VendLedgerEntry.SETFILTER(
                          "Document Type",
                          '%1|%2',
                          VendLedgerEntry."Document Type"::Payment,
                          VendLedgerEntry."Document Type"::"Credit Memo");
                        IF VendLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",VendLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo" THEN BEGIN
                                  WHTEntry.Base := WHTEntry.Base + ABS(TempWHTEntry."Rem Realized Base");
                                  WHTEntry.Amount := WHTEntry.Amount + ABS(TempWHTEntry."Rem Realized Amount");
                                END;
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + ABS(TempWHTEntry."Rem Realized Base");
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" + ABS(TempWHTEntry."Rem Realized Amount");
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (TotalWHT <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  IF  TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment THEN BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" - TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" - TotalWHT;
                                  END ELSE BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                    WHTEntry.Base := 0;
                                    WHTEntry.Amount := 0;
                                  END;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL VendLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;
                      END;
                    END;
                  END;
                END;
              END;
            END;

            IF TransType = TransType::Sale THEN BEGIN
              IF ((WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice) OR
                  (WHTEntry."Document Type" = WHTEntry."Document Type"::Payment))
              THEN BEGIN
                WHTEntry.Base := -ABS(WHTEntry.Base);
                WHTEntry.Amount := -ABS(WHTEntry.Amount);
                WHTEntry."Payment Amount" := -ABS(Amount);
                WHTEntry."Rem Realized Base" := WHTEntry.Base;
                WHTEntry."Rem Realized Amount" := WHTEntry.Amount;
                IF (WHTPostingSetup."Realized WHT Type" =
                    WHTPostingSetup."Realized WHT Type"::Earliest)
                THEN BEGIN
                  IF WHTEntry."Applies-to Doc. No." <> '' THEN BEGIN
                    CustLedgerEntry.RESET;
                    CustLedgerEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
                    CustLedgerEntry.SETRANGE("Document Type",WHTEntry."Applies-to Doc. Type");
                    CustLedgerEntry.SETRANGE(Prepayment,FALSE);
                    IF CustLedgerEntry.FINDFIRST THEN BEGIN
                      TempWHTEntry.RESET;
                      TempWHTEntry.SETRANGE(Settled,FALSE);
                      TempWHTEntry.SETRANGE("Document Type",WHTEntry."Applies-to Doc. Type");
                      TempWHTEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
                      TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                      TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice THEN
                        TempWHTEntry.SETFILTER(
                          "Document Type",
                          '%1|%2',
                          TempWHTEntry."Document Type"::Payment,
                          TempWHTEntry."Document Type"::"Credit Memo");

                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Payment THEN
                        TempWHTEntry.SETFILTER(
                          "Document Type",
                          '%1|%2',
                          TempWHTEntry."Document Type"::Invoice,
                          TempWHTEntry."Document Type"::Refund);

                      IF TempWHTEntry.FINDFIRST THEN BEGIN
                        IF ABS(TempWHTEntry."Rem Realized Amount") >= ABS(WHTEntry.Amount) THEN BEGIN
                          IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo") OR
                              (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Refund))
                          THEN BEGIN
                            TempWHTEntry."Rem Realized Base" :=
                              TempWHTEntry."Rem Realized Base" - WHTEntry.Base;
                            TempWHTEntry."Rem Realized Amount" :=
                              TempWHTEntry."Rem Realized Amount" - WHTEntry.Amount;
                            WHTEntry."Rem Realized Base" := 0;
                            WHTEntry."Rem Realized Amount" := 0;
                          END ELSE BEGIN
                            TempWHTEntry."Rem Realized Base" :=
                              TempWHTEntry."Rem Realized Base" - WHTEntry.Base;
                            TempWHTEntry."Rem Realized Amount" :=
                              TempWHTEntry."Rem Realized Amount" - WHTEntry.Amount;
                            WHTEntry.Amount := 0;
                          END;

                          IF CurrencyCode = '' THEN BEGIN
                            TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                            TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                          END ELSE BEGIN
                            TempWHTEntry."Rem Realized Amount (LCY)" :=
                              ROUND(
                                CurrExchRate.ExchangeAmtFCYToLCY(
                                  DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                            TempWHTEntry."Rem Realized Base (LCY)" :=
                              ROUND(
                                CurrExchRate.ExchangeAmtFCYToLCY(
                                  DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                          END;
                        END ELSE BEGIN
                          IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo") OR
                              (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Refund))
                          THEN BEGIN
                            WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - TempWHTEntry."Rem Realized Base";
                            WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" - TempWHTEntry."Rem Realized Amount";
                          END ELSE BEGIN
                            WHTEntry.Base := WHTEntry.Base - TempWHTEntry."Rem Realized Base";
                            WHTEntry.Amount := WHTEntry.Amount - TempWHTEntry."Rem Realized Amount";
                            WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - TempWHTEntry."Rem Realized Base";
                            WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" - TempWHTEntry."Rem Realized Amount";
                          END;
                          TempWHTEntry."Rem Realized Base" := 0;
                          TempWHTEntry."Rem Realized Amount" := 0;
                          TempWHTEntry."Rem Realized Base (LCY)" := 0;
                          TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                        END;

                        IF (TempWHTEntry."Rem Realized Amount" = 0) AND
                           (TempWHTEntry."Rem Realized Base" = 0)
                        THEN
                          TempWHTEntry.Closed := TRUE;
                        TempWHTEntry.MODIFY;
                      END;
                    END ELSE
                      WHTEntry.Amount := 0;
                  END ELSE BEGIN
                    IF "Applies-toID" <> '' THEN BEGIN
                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Payment THEN BEGIN
                        IsRefund := FALSE;
                        CustLedgerEntry.RESET;
                        CustLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Refund);
                        IF CustLedgerEntry.FINDFIRST THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          IsRefund := TRUE;
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                WHTEntry."Rem Realized Base" :=
                                  WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (ABS(TotalWHT) <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" - TotalWHTBase;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" - TotalWHT;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL CustLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;

                        CustLedgerEntry.RESET;
                        CustLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Invoice);
                        CustLedgerEntry.SETRANGE(Prepayment,FALSE);
                        IF CustLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                WHTEntry.Base := WHTEntry.Base + TempWHTEntry."Rem Realized Base";
                                WHTEntry.Amount := WHTEntry.Amount + TempWHTEntry."Rem Realized Amount";
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                                WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (ABS(TotalWHT) <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                  WHTEntry.Base := 0;
                                  WHTEntry.Amount := 0;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL CustLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END ELSE
                          IF NOT IsRefund THEN
                            WHTEntry.Amount := 0;
                      END;

                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice THEN BEGIN
                        CustLedgerEntry.RESET;
                        CustLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        CustLedgerEntry.SETFILTER(
                          "Document Type",
                          '%1|%2',
                          CustLedgerEntry."Document Type"::Payment,
                          CustLedgerEntry."Document Type"::"Credit Memo");
                        IF CustLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment THEN BEGIN
                                  WHTEntry.Base := WHTEntry.Base + ABS(TempWHTEntry."Rem Realized Base");
                                  WHTEntry.Amount := WHTEntry.Amount + ABS(TempWHTEntry."Rem Realized Amount");
                                END;
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + ABS(TempWHTEntry."Rem Realized Base");
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" + ABS(TempWHTEntry."Rem Realized Amount");
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (TotalWHT <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo" THEN BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" - TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" - TotalWHT;
                                  END ELSE BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                    WHTEntry.Base := 0;
                                    WHTEntry.Amount := 0;
                                  END;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL CustLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;
                      END;
                    END;
                  END;
                END;
              END;

              // sales Credit Memo & Refund
              IF ((WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo") OR
                  (WHTEntry."Document Type" = WHTEntry."Document Type"::Refund))
              THEN BEGIN
                WHTEntry.Base := ABS(WHTEntry.Base);
                WHTEntry.Amount := ABS(WHTEntry.Amount);
                WHTEntry."Payment Amount" := ABS(Amount);
                WHTEntry."Rem Realized Base" := WHTEntry.Base;
                WHTEntry."Rem Realized Amount" := WHTEntry.Amount;
                IF (WHTPostingSetup."Realized WHT Type" =
                    WHTPostingSetup."Realized WHT Type"::Earliest)
                THEN BEGIN
                  IF WHTEntry."Applies-to Doc. No." <> '' THEN BEGIN
                    TempWHTEntry.RESET;
                    TempWHTEntry.SETRANGE(Settled,FALSE);
                    TempWHTEntry.SETRANGE("Document Type",WHTEntry."Applies-to Doc. Type");
                    TempWHTEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
                    TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                    TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                    IF WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo" THEN
                      TempWHTEntry.SETFILTER(
                        "Document Type",
                        '%1|%2',
                        TempWHTEntry."Document Type"::Refund,
                        TempWHTEntry."Document Type"::Invoice);

                    IF WHTEntry."Document Type" = WHTEntry."Document Type"::Refund THEN
                      TempWHTEntry.SETFILTER(
                        "Document Type",
                        '%1|%2',
                        TempWHTEntry."Document Type"::"Credit Memo",
                        TempWHTEntry."Document Type"::Payment);

                    IF TempWHTEntry.FINDFIRST THEN BEGIN
                      IF ABS(TempWHTEntry."Rem Realized Amount") >= ABS(WHTEntry.Amount) THEN BEGIN
                        IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Invoice) OR
                            (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment))
                        THEN BEGIN
                          TempWHTEntry."Rem Realized Base" :=
                            TempWHTEntry."Rem Realized Base" + WHTEntry.Base;
                          TempWHTEntry."Rem Realized Amount" :=
                            TempWHTEntry."Rem Realized Amount" + WHTEntry.Amount;
                          WHTEntry."Rem Realized Base" := 0;
                          WHTEntry."Rem Realized Amount" := 0;
                        END ELSE BEGIN
                          TempWHTEntry."Rem Realized Base" :=
                            TempWHTEntry."Rem Realized Base" - WHTEntry.Base;
                          TempWHTEntry."Rem Realized Amount" :=
                            TempWHTEntry."Rem Realized Amount" - WHTEntry.Amount;
                          WHTEntry.Amount := 0;
                        END;

                        IF CurrencyCode = '' THEN BEGIN
                          TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                          TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                        END ELSE BEGIN
                          TempWHTEntry."Rem Realized Amount (LCY)" :=
                            ROUND(
                              CurrExchRate.ExchangeAmtFCYToLCY(
                                DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                          TempWHTEntry."Rem Realized Base (LCY)" :=
                            ROUND(
                              CurrExchRate.ExchangeAmtFCYToLCY(
                                DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                        END;
                      END ELSE BEGIN
                        IF ((TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Invoice) OR
                            (TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment))
                        THEN BEGIN
                          WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                          WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                        END ELSE BEGIN
                          WHTEntry.Base := WHTEntry.Base - TempWHTEntry."Rem Realized Base";
                          WHTEntry.Amount := WHTEntry.Amount - TempWHTEntry."Rem Realized Amount";
                          WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - TempWHTEntry."Rem Realized Base";
                          WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" - TempWHTEntry."Rem Realized Amount";
                        END;
                        TempWHTEntry."Rem Realized Base" := 0;
                        TempWHTEntry."Rem Realized Amount" := 0;
                        TempWHTEntry."Rem Realized Base (LCY)" := 0;
                        TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                      END;

                      IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                          (TempWHTEntry."Rem Realized Base" = 0))
                      THEN
                        TempWHTEntry.Closed := TRUE;
                      TempWHTEntry.MODIFY;
                    END;
                  END ELSE BEGIN
                    IF "Applies-toID" <> '' THEN BEGIN
                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo" THEN BEGIN
                        CustLedgerEntry.RESET;
                        CustLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Refund);
                        IF CustLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                WHTEntry.Base := WHTEntry.Base - TempWHTEntry."Rem Realized Base";
                                WHTEntry.Amount := WHTEntry.Amount - TempWHTEntry."Rem Realized Amount";
                                WHTEntry."Rem Realized Base" :=
                                  WHTEntry."Rem Realized Base" - TempWHTEntry."Rem Realized Base";
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" - TempWHTEntry."Rem Realized Amount";
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (TotalWHT <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" - TotalWHTBase;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" - TotalWHT;
                                  WHTEntry.Base := 0;
                                  WHTEntry.Amount := 0;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL CustLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;

                        CustLedgerEntry.RESET;
                        CustLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Invoice);
                        IF CustLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" + TempWHTEntry."Rem Realized Base";
                                WHTEntry."Rem Realized Amount" := WHTEntry."Rem Realized Amount" + TempWHTEntry."Rem Realized Amount";
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (TotalWHT <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  TempWHTEntry."Rem Realized Base" :=
                                    TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                  TempWHTEntry."Rem Realized Amount" :=
                                    TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL CustLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;
                      END;

                      IF WHTEntry."Document Type" = WHTEntry."Document Type"::Refund THEN BEGIN
                        CustLedgerEntry.RESET;
                        CustLedgerEntry.SETRANGE("Applies-to ID","Applies-toID");
                        CustLedgerEntry.SETFILTER(
                          "Document Type",
                          '%1|%2',
                          CustLedgerEntry."Document Type"::Payment,
                          CustLedgerEntry."Document Type"::"Credit Memo");
                        IF CustLedgerEntry.FINDSET THEN BEGIN
                          TotalWHTBase := ABS(WHTEntry."Rem Realized Base");
                          TotalWHT := ABS(WHTEntry."Rem Realized Amount");
                          REPEAT
                            TempWHTEntry.RESET;
                            TempWHTEntry.SETRANGE(Settled,FALSE);
                            TempWHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                            IF TempWHTEntry.FINDFIRST THEN BEGIN
                              IF TotalWHT > ABS(TempWHTEntry."Rem Realized Amount") THEN BEGIN
                                IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::"Credit Memo" THEN BEGIN
                                  WHTEntry.Base := WHTEntry.Base - ABS(TempWHTEntry."Rem Realized Base");
                                  WHTEntry.Amount := WHTEntry.Amount - ABS(TempWHTEntry."Rem Realized Amount");
                                END;
                                WHTEntry."Rem Realized Base" := WHTEntry."Rem Realized Base" - ABS(TempWHTEntry."Rem Realized Base");
                                WHTEntry."Rem Realized Amount" :=
                                  WHTEntry."Rem Realized Amount" - ABS(TempWHTEntry."Rem Realized Amount");
                                TotalWHTBase := TotalWHTBase - ABS(TempWHTEntry."Rem Realized Base");
                                TotalWHT := TotalWHT - ABS(TempWHTEntry."Rem Realized Amount");
                                TempWHTEntry."Rem Realized Base" := 0;
                                TempWHTEntry."Rem Realized Amount" := 0;
                                TempWHTEntry."Rem Realized Base (LCY)" := 0;
                                TempWHTEntry."Rem Realized Amount (LCY)" := 0;
                              END ELSE BEGIN
                                IF (TotalWHT > 0) AND (TotalWHT <= ABS(TempWHTEntry."Rem Realized Amount")) THEN BEGIN
                                  IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment THEN BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" + TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" + TotalWHT;
                                  END ELSE BEGIN
                                    TempWHTEntry."Rem Realized Base" :=
                                      TempWHTEntry."Rem Realized Base" - TotalWHTBase;
                                    TempWHTEntry."Rem Realized Amount" :=
                                      TempWHTEntry."Rem Realized Amount" - TotalWHT;
                                    WHTEntry.Base := 0;
                                    WHTEntry.Amount := 0;
                                  END;
                                  WHTEntry."Rem Realized Amount" := 0;
                                  WHTEntry."Rem Realized Base" := 0;
                                  TotalWHTBase := 0;
                                  TotalWHT := 0;
                                END;
                              END;

                              IF CurrencyCode = '' THEN BEGIN
                                TempWHTEntry."Rem Realized Base (LCY)" := TempWHTEntry."Rem Realized Base";
                                TempWHTEntry."Rem Realized Amount (LCY)" := TempWHTEntry."Rem Realized Amount";
                              END ELSE BEGIN
                                TempWHTEntry."Rem Realized Amount (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Amount (LCY)",CurrFactor));
                                TempWHTEntry."Rem Realized Base (LCY)" :=
                                  ROUND(
                                    CurrExchRate.ExchangeAmtFCYToLCY(
                                      DocDate,CurrencyCode,TempWHTEntry."Rem Realized Base (LCY)",CurrFactor));
                              END;
                              IF ((TempWHTEntry."Rem Realized Amount" = 0) AND
                                  (TempWHTEntry."Rem Realized Base" = 0))
                              THEN
                                TempWHTEntry.Closed := TRUE;
                              TempWHTEntry.MODIFY;
                            END;
                          UNTIL CustLedgerEntry.NEXT = 0;
                          WHTEntry."Applies-to Entry No." := TempWHTEntry."Entry No.";
                        END;
                      END;
                    END;
                  END;
                END;
              END;
            END;

            IF WHTEntry.Amount = 0 THEN
              IF NextWHTEntryNo = 0 THEN
                EXIT
              ELSE
                EXIT(NextWHTEntryNo);

            IF ((WHTEntry."Rem Realized Amount" = 0) AND
                (WHTEntry."Rem Realized Base" = 0))
            THEN
              WHTEntry.Closed := TRUE;
          END;

          IF CurrencyCode = '' THEN BEGIN
            WHTEntry."Base (LCY)" := WHTEntry.Base;
            WHTEntry."Amount (LCY)" := WHTEntry.Amount;
            WHTEntry."Unrealized Amount (LCY)" := WHTEntry."Unrealized Amount";
            WHTEntry."Unrealized Base (LCY)" := WHTEntry."Unrealized Base";
            WHTEntry."Rem Realized Base (LCY)" := WHTEntry."Rem Realized Base";
            WHTEntry."Rem Realized Amount (LCY)" := WHTEntry."Rem Realized Amount";
            WHTEntry."Rem Unrealized Amount (LCY)" := WHTEntry."Remaining Unrealized Amount";
            WHTEntry."Rem Unrealized Base (LCY)" := WHTEntry."Remaining Unrealized Base";
          END ELSE BEGIN
            WHTEntry."Base (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry.Base,CurrFactor));
            WHTEntry."Amount (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry.Amount,CurrFactor));
            WHTEntry."Unrealized Base (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry."Unrealized Base",CurrFactor));
            WHTEntry."Rem Realized Amount (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry."Rem Realized Amount",CurrFactor));
            WHTEntry."Rem Realized Base (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry."Rem Realized Base",CurrFactor));
            WHTEntry."Unrealized Amount (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  DocDate,CurrencyCode,WHTEntry."Unrealized Amount",CurrFactor));
            WHTEntry."Rem Unrealized Amount (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  DocDate,CurrencyCode,WHTEntry."Remaining Unrealized Amount",CurrFactor));
            WHTEntry."Rem Unrealized Base (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  DocDate,CurrencyCode,WHTEntry."Remaining Unrealized Base",CurrFactor));
          END;

          IF (WHTEntry."Applies-to Doc. No." <> '') AND UnrealizedWHT THEN BEGIN
            TempWHTEntry.SETRANGE("Document Type",WHTEntry."Applies-to Doc. Type");
            TempWHTEntry.SETRANGE("Document No.",WHTEntry."Applies-to Doc. No.");
            TempWHTEntry.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
            TempWHTEntry.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
            IF TempWHTEntry.FINDFIRST THEN BEGIN
              TempWHTEntry."Rem Unrealized Amount (LCY)" :=
                TempWHTEntry."Rem Unrealized Amount (LCY)" + WHTEntry."Unrealized Amount (LCY)";
              TempWHTEntry."Rem Unrealized Base (LCY)" :=
                TempWHTEntry."Rem Unrealized Base (LCY)" + WHTEntry."Unrealized Base (LCY)";
              TempWHTEntry.MODIFY;
              WHTEntry."Rem Unrealized Amount (LCY)" := 0;
              WHTEntry."Rem Unrealized Base (LCY)" := 0;
            END;
          END;

          IF WHTPostingSetup."Realized WHT Type" = WHTPostingSetup."Realized WHT Type"::Earliest THEN BEGIN
            IF ABS(WHTEntry.Base) < WHTPostingSetup."WHT Minimum Invoice Amount" THEN
              EXIT;
          END;
          //PHL0.01(-)
          // Original Code
          //WHTEntry.INSERT;
          // Updated Code
          WHTEntry.INSERT(TRUE);
          //PHL0.01(+)
          NextWHTEntryNo := WHTEntry."Entry No." + 1;

          IF TempWHTEntry.Prepayment THEN BEGIN
            WHTEntry3.RESET;
            WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
            WHTEntry3.SETRANGE("Applies-to Entry No.",TempWHTEntry."Entry No.");
            WHTEntry3.CALCSUMS(Amount,"Amount (LCY)");
            IF (ABS(ABS(WHTEntry3.Amount) - ABS(TempWHTEntry."Unrealized Amount")) < 0.1) AND
               (ABS(ABS(WHTEntry3.Amount) - ABS(TempWHTEntry."Unrealized Amount")) > 0)
            THEN BEGIN
              WHTEntry."WHT Difference" := TempWHTEntry."Unrealized Amount" - WHTEntry3.Amount;
              WHTEntry.Amount := WHTEntry.Amount + WHTEntry."WHT Difference";
              WHTEntry.MODIFY;
            END;
            IF (ABS(ABS(WHTEntry3."Amount (LCY)") - ABS(TempWHTEntry."Unrealized Amount (LCY)")) < 0.1) AND
               (ABS(ABS(WHTEntry3."Amount (LCY)") - ABS(TempWHTEntry."Unrealized Amount (LCY)")) > 0)
            THEN BEGIN
              WHTEntry."Amount (LCY)" := WHTEntry."Amount (LCY)" +
                TempWHTEntry."Unrealized Amount (LCY)" - WHTEntry3."Amount (LCY)";
              WHTEntry.MODIFY;
            END;
          END;
        END;
      EXIT(NextWHTEntryNo);
    END;

    PROCEDURE WHTAmountJournal@1500017(VAR GenJnlLine1@1500000 : Record 81;Post@1500019 : Boolean) WHTAmount : Decimal;
    VAR
      WHTEntry@1500018 : Record 50504;
      WHTEntry3@1500017 : Record 50504;
      TotalWHTAmount@1500016 : Decimal;
      TotalWHTAmount2@1500015 : Decimal;
      TotalWHTAmount3@1500014 : Decimal;
      PaymentAmount@1500013 : Decimal;
      PaymentAmountLCY@1500012 : Decimal;
      PurchCrMemoHeader@1500009 : Record 124;
      VendLedgEntry1@1500008 : Record 25;
      WHTEntryTemp@1500007 : Record 50504;
      VendLedgEntry@1500006 : Record 25;
      PaymentAmount1@1500005 : Decimal;
      AppldAmount@1500003 : Decimal;
      ExpectedAmount@1500002 : Decimal;
      GenJnlLine@1500001 : Record 81;
      TotalWHTAmount4@1500021 : Decimal;
      WHTAmount1@1500022 : Decimal;
      RemainingAmt@1500023 : Decimal;
      GenJnlLineAmount@1240001 : Decimal;
    BEGIN
      GenJnlLine.COPY(GenJnlLine1);
      IF (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Payment) AND
         (GenJnlLine."Document Type" <> GenJnlLine."Document Type"::Refund)
      THEN
        EXIT;

      GLSetup.GET;

      TotalWHTAmount := 0;
      TotalWHTAmount2 := 0;
      TotalWHTAmount3 := 0;
      TotalWHTAmount4 := 0;
      RemainingAmt := 0;
      TotAmt := 0;
      TempVendLedgEntry.RESET;
      TempVendLedgEntry1.RESET;
      IF GenJnlLine."Applies-to Doc. No." = '' THEN BEGIN
        IF GenJnlLine."Applies-to ID" <> '' THEN BEGIN
          TempVendLedgEntry1.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
          TempVendLedgEntry1.SETRANGE(Open,TRUE);
          IF GenJnlLine."Bill-to/Pay-to No." = '' THEN
            TempVendLedgEntry1.SETRANGE("Buy-from Vendor No.",GenJnlLine."Account No.")
          ELSE
            TempVendLedgEntry1.SETRANGE("Buy-from Vendor No.",GenJnlLine."Bill-to/Pay-to No.");
        END ELSE
          EXIT(TotalWHTAmount);

        IF TempVendLedgEntry1.FINDSET THEN
          REPEAT
            TempVendLedgEntry1.CALCFIELDS(
              Amount,"Amount (LCY)",
              "Remaining Amount","Remaining Amt. (LCY)",
              "Original Amount","Original Amt. (LCY)");
            RemainingAmt := RemainingAmt + TempVendLedgEntry1."Remaining Amount";

            IF TempVendLedgEntry1."Document Type" = TempVendLedgEntry1."Document Type"::"Credit Memo" THEN
              RemainingAmt := RemainingAmt + TempVendLedgEntry1."Remaining Amount";
          UNTIL TempVendLedgEntry1.NEXT = 0;

        TotAmt := ABS(GenJnlLine.Amount);

        IF GenJnlLine."Applies-to ID" <> '' THEN BEGIN
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
          IF GenJnlLine."Bill-to/Pay-to No." = '' THEN
            TempVendLedgEntry.SETRANGE("Buy-from Vendor No.",GenJnlLine."Account No.")
          ELSE
            TempVendLedgEntry.SETRANGE("Buy-from Vendor No.",GenJnlLine."Bill-to/Pay-to No.");
        END ELSE
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Document No.");

        TempVendLedgEntry.SETRANGE(Open,TRUE);
        TempVendLedgEntry.SETRANGE("Document Type",TempVendLedgEntry."Document Type"::"Credit Memo");
        IF TempVendLedgEntry.FINDSET THEN
          REPEAT
            TempVendLedgEntry.CALCFIELDS(
              Amount,"Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Amount to Apply"),
                 ABS(TempVendLedgEntry."Remaining Amount"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              TotAmt := TotAmt + ABS(TempVendLedgEntry."Original Pmt. Disc. Possible");

            IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
               (ABS(TempVendLedgEntry."Remaining Amount") < ABS(TotAmt))
            THEN BEGIN
              GenJnlLine.VALIDATE(Amount,-ABS(TempVendLedgEntry."Remaining Amount"));
              RemainingAmt := RemainingAmt - TempVendLedgEntry."Remaining Amount";
            END ELSE BEGIN
              GenJnlLine.VALIDATE(Amount,-TotAmt);
              ExitLoop := TRUE;
            END;

            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
            ELSE BEGIN
              IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt - TempVendLedgEntry."Remaining Amount";
              TotAmt := TotAmt + ABS(TempVendLedgEntry."Remaining Amount");
              ExitLoop := FALSE;
            END;

            GenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
            PaymentAmount := GenJnlLine.Amount;
            PaymentAmount1 := GenJnlLine.Amount;
            PaymentAmountLCY := GenJnlLine."Amount (LCY)";
            WHTEntry.RESET;
            WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
            WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
            IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
              WHTEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
              WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
            END ELSE
              WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");

            IF WHTEntry.FINDSET THEN
              REPEAT
                PurchCrMemoHeader.RESET;
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                  TempRemAmt := 0;
                  VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                  VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  IF VendLedgEntry1.FINDFIRST THEN
                    VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                  WHTEntryTemp.RESET;
                  WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                  WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                  WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                  WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  IF WHTEntryTemp.FINDFIRST THEN BEGIN
                    TempRemBase := WHTEntryTemp."Unrealized Amount";
                    TempRemAmt := WHTEntryTemp."Unrealized Base";
                  END;
                END;

                VendLedgEntry.RESET;
                VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                  VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                ELSE
                  IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                    VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");

                IF VendLedgEntry.FINDFIRST THEN
                  VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");

                IF WHTEntryTemp.FINDFIRST THEN
                  ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                ELSE
                  ExpectedAmount := -(VendLedgEntry.Amount + 0);
                IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                   (ABS(PaymentAmount1) >=
                    (ABS(VendLedgEntry."Remaining Amount" +
                       VendLedgEntry1."Remaining Amount") -
                     ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                THEN
                  AppldAmount :=
                    ROUND(
                      ((PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) /
                       ExpectedAmount))
                ELSE
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);

                IF GenJnlLine."Currency Code" <> '' THEN BEGIN
                  CurrFactor :=
                    CurrExchRate.ExchangeRate(
                      GenJnlLine."Document Date",
                      GenJnlLine."Currency Code");

                  WHTAmount1 := ROUND(AppldAmount * WHTEntry."WHT %" / 100);
                  WHTEntry3.RESET;
                  WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
                  WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
                  WHTEntry3.CALCSUMS(Amount);
                  IF (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
                     (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) > 0)
                  THEN
                    WHTAmount1 := WHTAmount1 + (WHTEntry."Unrealized Amount" - (WHTEntry3.Amount + WHTAmount1));

                  TotalWHTAmount4 :=
                      CurrExchRate.ExchangeAmtFCYToLCY(
                        GenJnlLine."Document Date",
                        GenJnlLine."Currency Code",
                        // ROUND(AppldAmount * WHTEntry."WHT %" / 100),
                        WHTAmount1,
                        CurrFactor);

                  TotalWHTAmount4 :=
                    CurrExchRate.ExchangeAmtLCYToFCY(
                      GenJnlLine."Document Date",
                      GenJnlLine."Currency Code",
                      TotalWHTAmount4,
                      CurrFactor);
                  TotalWHTAmount := (TotalWHTAmount + TotalWHTAmount4);
                END ELSE
                  BEGIN
                  // TotalWHTAmount := ROUND(TotalWHTAmount + AppldAmount * WHTEntry."WHT %" / 100);
                  WHTAmount1 := ROUND(AppldAmount * WHTEntry."WHT %" / 100);
                  WHTEntry3.RESET;
                  WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
                  WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
                  WHTEntry3.CALCSUMS(Amount);
                  IF (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
                     (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) > 0)
                  THEN
                    WHTAmount1 := WHTAmount1 + (WHTEntry."Unrealized Amount" - (WHTEntry3.Amount + WHTAmount1));

                  TotalWHTAmount := ROUND(TotalWHTAmount + WHTAmount1);
                END;
                TotalWHTAmount2 := TotalWHTAmount;
              UNTIL WHTEntry.NEXT = 0;

          UNTIL TempVendLedgEntry.NEXT = 0;
        ExitLoop := FALSE;
        TempVendLedgEntry.RESET;
        IF GenJnlLine."Applies-to ID" <> '' THEN BEGIN
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
          IF GenJnlLine."Bill-to/Pay-to No." = '' THEN
            TempVendLedgEntry.SETRANGE("Buy-from Vendor No.",GenJnlLine."Account No.")
          ELSE
            TempVendLedgEntry.SETRANGE("Buy-from Vendor No.",GenJnlLine."Bill-to/Pay-to No.");
        END ELSE
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Document No.");

        TempVendLedgEntry.SETRANGE(Open,TRUE);
        TempVendLedgEntry.SETFILTER("Document Type",'<>%1',TempVendLedgEntry."Document Type"::"Credit Memo");
        IF TempVendLedgEntry.FINDSET THEN BEGIN
          REPEAT
            TempVendLedgEntry.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Amount to Apply"),
                 ABS(TempVendLedgEntry."Remaining Amount"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              TotAmt := TotAmt + ABS(TempVendLedgEntry."Original Pmt. Disc. Possible");

            UpdateAmounts(TempVendLedgEntry,GenJnlLine,RemainingAmt,TotAmt,GenJnlLineAmount,ExitLoop);

            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
            ELSE BEGIN
              IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt + TempVendLedgEntry."Remaining Amount";
              TotAmt := TotAmt + TempVendLedgEntry."Remaining Amount";
              ExitLoop := FALSE;
            END;

            GenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
            PaymentAmount := GenJnlLine.Amount;
            PaymentAmount1 := GenJnlLine.Amount;
            PaymentAmountLCY := GenJnlLine."Amount (LCY)";
            FilterWHTEntry(WHTEntry,GenJnlLine);
            IF WHTEntry.FINDSET THEN
              REPEAT
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                  TempRemAmt := 0;
                  VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                  VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  IF VendLedgEntry1.FINDFIRST THEN
                    VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                  WHTEntryTemp.RESET;
                  WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                  WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                  WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                  WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  IF WHTEntryTemp.FINDFIRST THEN BEGIN
                    TempRemBase := WHTEntryTemp."Unrealized Amount";
                    TempRemAmt := WHTEntryTemp."Unrealized Base";
                  END;
                END;

                VendLedgEntry.RESET;
                VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                  VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                ELSE
                  IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                    VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");
                IF VendLedgEntry.FINDFIRST THEN
                  VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                IF WHTEntryTemp.FINDFIRST THEN
                  ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                ELSE
                  ExpectedAmount := -(VendLedgEntry.Amount + 0);
                IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                   (ABS(PaymentAmount1) >=
                    (ABS(VendLedgEntry."Remaining Amount" + VendLedgEntry1."Remaining Amount") -
                     ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                THEN
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 *
                       (WHTEntry."Unrealized Base" + TempRemAmt)) /
                      ExpectedAmount)
                ELSE
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 *
                       (WHTEntry."Unrealized Base" + TempRemAmt)) /
                      ExpectedAmount);

                IF GenJnlLine."Currency Code" <> '' THEN BEGIN
                  CurrFactor :=
                    CurrExchRate.ExchangeRate(
                      GenJnlLine."Document Date",
                      GenJnlLine."Currency Code");
                  WHTAmount1 := ROUND(AppldAmount * WHTEntry."WHT %" / 100);

                  TotalWHTAmount4 :=
                      CurrExchRate.ExchangeAmtFCYToLCY(
                        GenJnlLine."Document Date",
                        GenJnlLine."Currency Code",
                        WHTAmount1,
                         CurrFactor);
                  TotalWHTAmount4 :=
                    CurrExchRate.ExchangeAmtLCYToFCY(
                      GenJnlLine."Document Date",
                      GenJnlLine."Currency Code",
                      TotalWHTAmount4,
                      CurrFactor);
                  TotalWHTAmount := (TotalWHTAmount + TotalWHTAmount4);
                //PHL0.01(-)
                // Original Code Start
                //END ELSE
                //  BEGIN
                //  WHTAmount1 := ROUND(AppldAmount * WHTEntry."WHT %" / 100);
                //  TotalWHTAmount := ROUND(TotalWHTAmount + WHTAmount1);
                //END;
                // Original Code End
                // Updated Code Start
                END ELSE BEGIN
                  WHTAmount1 := CalcAppliedWHTAmount(TempVendLedgEntry,GenJnlLine,WHTEntry."WHT %",ExitLoop);
                  TotalWHTAmount := ROUND(TotalWHTAmount + WHTAmount1);
                END;
                // Updated Code End
                //PHL0.01(+)
                TotalWHTAmount2 := TotalWHTAmount;
              UNTIL WHTEntry.NEXT = 0;

            IF ExitLoop THEN
              EXIT(TotalWHTAmount2);
          UNTIL TempVendLedgEntry.NEXT = 0;

          IF GenJnlLine."Currency Code" <> '' THEN BEGIN
            CurrFactor :=
              CurrExchRate.ExchangeRate(
                GenJnlLine."Document Date",
                GenJnlLine."Currency Code");

            TotalWHTAmount3 :=
              ROUND(
                TotalWHTAmount3 +
                ROUND(
                  CurrExchRate.ExchangeAmtFCYToLCY(
                    GenJnlLine."Document Date",
                    GenJnlLine."Currency Code",
                    TotalWHTAmount2,CurrFactor)));
          END;
        END;
        EXIT(TotalWHTAmount2);
      END;
      TotAmt := ABS(GenJnlLine.Amount);
      TempVendLedgEntry.RESET;
      TempVendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
      TempVendLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
      IF TempVendLedgEntry.FINDFIRST THEN BEGIN
        IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN BEGIN
          TempVendLedgEntry.CALCFIELDS(
            Amount,
            "Amount (LCY)",
            "Remaining Amount",
            "Remaining Amt. (LCY)",
            "Original Amount",
            "Original Amt. (LCY)");

          IF TempVendLedgEntry."Amount to Apply" = 0 THEN
            TempVendLedgEntry."Amount to Apply" := -ABSMin(TempVendLedgEntry."Remaining Amount",GenJnlLine.Amount);

          IF CheckPmtDisc(
               GenJnlLine."Posting Date",
               TempVendLedgEntry."Pmt. Discount Date",
               ABS(TempVendLedgEntry."Amount to Apply"),
               ABS(TempVendLedgEntry."Remaining Amount"),
               ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
               ABS(TotAmt))
          THEN
            TotAmt := TotAmt + ABS(TempVendLedgEntry."Original Pmt. Disc. Possible");

          IF ABS(TempVendLedgEntry."Remaining Amount") < ABS(TotAmt) THEN
            GenJnlLine.VALIDATE(Amount,ABS(TempVendLedgEntry."Remaining Amount"))
          ELSE
            GenJnlLine.VALIDATE(Amount,TotAmt);
        END ELSE
          IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
            TempVendLedgEntry.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF TempVendLedgEntry."Amount to Apply" = 0 THEN
              TempVendLedgEntry."Amount to Apply" := ABSMin(TempVendLedgEntry."Remaining Amount",GenJnlLine.Amount);

            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempVendLedgEntry."Pmt. Discount Date",
                 ABS(TempVendLedgEntry."Amount to Apply"),
                 ABS(TempVendLedgEntry."Remaining Amount"),
                 ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              TotAmt := TotAmt + ABS(TempVendLedgEntry."Original Pmt. Disc. Possible");

            IF ABS(TempVendLedgEntry."Remaining Amount") < ABS(TotAmt) THEN
              GenJnlLine.VALIDATE(Amount,-ABS(TempVendLedgEntry."Remaining Amount"))
            ELSE
              GenJnlLine.VALIDATE(Amount,-TotAmt);
          END;
      END;
      TotalWHTAmount := 0;
      PaymentAmount := GenJnlLine.Amount;
      PaymentAmount1 := GenJnlLine.Amount;
      PaymentAmountLCY := GenJnlLine."Amount (LCY)";
      FilterWHTEntry(WHTEntry,GenJnlLine);
      IF WHTEntry.FINDSET THEN BEGIN
        REPEAT
          PurchCrMemoHeader.SETRANGE(
            "Applies-to Doc. Type",
            PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
          PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
          IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
            TempRemAmt := 0;
            VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
            VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
            IF VendLedgEntry1.FINDFIRST THEN
              VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount","Remaining Amt. (LCY)");
            WHTEntryTemp.RESET;
            WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
            WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
            WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
            WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
            WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
            IF WHTEntryTemp.FINDFIRST THEN
              TempRemAmt := WHTEntryTemp."Unrealized Base";
          END;

          VendLedgEntry.RESET;
          VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
          VendLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
          IF VendLedgEntry.FINDFIRST THEN
            VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount","Remaining Amt. (LCY)");

          IF WHTEntryTemp.FINDFIRST THEN
            ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
          ELSE
            ExpectedAmount := -(VendLedgEntry.Amount + 0);

          AppldAmount :=
            ROUND(
              (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) /
              ExpectedAmount);

          IF GenJnlLine."Currency Code" <> '' THEN BEGIN
            CurrFactor :=
              CurrExchRate.ExchangeRate(
                GenJnlLine."Document Date",
                GenJnlLine."Currency Code");

            WHTAmount1 := ROUND(AppldAmount * WHTEntry."WHT %" / 100);
            WHTEntry3.RESET;
            WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
            WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
            WHTEntry3.CALCSUMS(Amount);
            IF (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
               (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) > 0)
            THEN
              WHTAmount1 := WHTAmount1 + (WHTEntry."Unrealized Amount" - (WHTEntry3.Amount + WHTAmount1));


            TotalWHTAmount4 :=
                CurrExchRate.ExchangeAmtFCYToLCY(
                  GenJnlLine."Document Date",
                  GenJnlLine."Currency Code",
                  WHTAmount1,
                  CurrFactor);

            TotalWHTAmount4 :=
              CurrExchRate.ExchangeAmtLCYToFCY(
                GenJnlLine."Document Date",
                GenJnlLine."Currency Code",
                TotalWHTAmount4,
                CurrFactor);
            TotalWHTAmount := (TotalWHTAmount + TotalWHTAmount4);
          END ELSE
            BEGIN
            WHTAmount1 := ROUND(AppldAmount * WHTEntry."WHT %" / 100);
            WHTEntry3.RESET;
            WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
            WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
            WHTEntry3.CALCSUMS(Amount);
            TotalWHTAmount := ROUND(TotalWHTAmount + WHTAmount1,GLSetup."Inv. Rounding Precision (LCY)",'=');
          END;
        UNTIL WHTEntry.NEXT = 0;
        EXIT(TotalWHTAmount);
      END;
    END;

    PROCEDURE ApplyCustCalcWHT@1500018(VAR GenJnlLine@1500000 : Record 81) WHTAmt : Decimal;
    VAR
      Currency@1500001 : 'Vendor,Customer';
      RemainingAmt@1500002 : Decimal;
    BEGIN
      AppliedAmount := ABS(GenJnlLine."Amount (LCY)");
      TotAmt := ABS(GenJnlLine.Amount);
      TempCustLedgEntry1.RESET;
      SetCustAppliesToFilter(TempCustLedgEntry1,GenJnlLine);
      IF TempCustLedgEntry1.FINDSET THEN
        REPEAT
          TempCustLedgEntry1.CALCFIELDS(
            Amount,
            "Amount (LCY)",
            "Remaining Amount",
            "Remaining Amt. (LCY)",
            "Original Amount",
            "Original Amt. (LCY)");

          RemainingAmt := RemainingAmt + TempCustLedgEntry1."Remaining Amount";

          IF TempCustLedgEntry1."Document Type" =
             TempCustLedgEntry1."Document Type"::"Credit Memo"
          THEN
            RemainingAmt := RemainingAmt + TempCustLedgEntry1."Remaining Amount";
        UNTIL TempCustLedgEntry1.NEXT = 0;

      TempCustLedgEntry.RESET;
      SetCustAppliesToFilter(TempCustLedgEntry,GenJnlLine);
      TempCustLedgEntry.SETRANGE("Document Type",TempCustLedgEntry."Document Type"::"Credit Memo");
      IF TempCustLedgEntry.FINDSET THEN
        REPEAT
          TempCustLedgEntry.CALCFIELDS(
            Amount,
            "Amount (LCY)",
            "Remaining Amount",
            "Remaining Amt. (LCY)",
            "Original Amount","Original Amt. (LCY)");

          IF TempCustLedgEntry."Amount to Apply" = 0 THEN
            TempCustLedgEntry."Amount to Apply" := -ABSMin(TempCustLedgEntry."Remaining Amount",GenJnlLine.Amount);

          IF CheckPmtDisc(
               GenJnlLine."Posting Date",
               TempCustLedgEntry."Pmt. Discount Date",
               ABS(TempCustLedgEntry."Amount to Apply"),
               ABS(TempCustLedgEntry."Remaining Amount"),
               ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
               ABS(TotAmt))
          THEN
            TotAmt := TotAmt + ABS(TempCustLedgEntry."Original Pmt. Disc. Possible");

          IF (ABS(RemainingAmt) <= ABS(TotAmt)) OR
             (ABS(TempCustLedgEntry."Remaining Amount") < ABS(TotAmt))
          THEN BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Amount to Apply"),
                 ABS(TempCustLedgEntry."Remaining Amount"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN BEGIN
              GenJnlLine.VALIDATE(
                Amount,
                ABS(TempCustLedgEntry."Remaining Amount" -
                  TempCustLedgEntry."Original Pmt. Disc. Possible"));
              IF TempCustLedgEntry."Document Type" <>
                 TempCustLedgEntry."Document Type"::"Credit Memo"
              THEN
                TotAmt := -(TotAmt - TempCustLedgEntry."Remaining Amount");

              RemainingAmt :=
                RemainingAmt - TempCustLedgEntry."Remaining Amount" +
                TempCustLedgEntry."Original Pmt. Disc. Possible";
            END ELSE BEGIN
              GenJnlLine.VALIDATE(Amount,ABS(TempCustLedgEntry."Remaining Amount"));
              IF TempCustLedgEntry."Document Type" <>
                 TempCustLedgEntry."Document Type"::"Credit Memo"
              THEN
                TotAmt := -(TotAmt - TempCustLedgEntry."Remaining Amount");
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Remaining Amount";
            END;
          END ELSE BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Amount to Apply"),
                 ABS(TempCustLedgEntry."Remaining Amount"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              GenJnlLine.VALIDATE(
                Amount,TotAmt - ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"))
            ELSE
              GenJnlLine.VALIDATE(Amount,ABS(TotAmt));
            ExitLoop := TRUE;
          END;

          IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::Invoice THEN
            GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
          ELSE
            IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Remaining Amount";
              TotAmt := TotAmt - TempCustLedgEntry."Remaining Amount";
              ExitLoop := FALSE;
            END;

          GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
          WHTAmt += CalcWHT(GenJnlLine,Currency::Customer);
        UNTIL (TempCustLedgEntry.NEXT = 0) OR ExitLoop;

      ExitLoop := FALSE;
      TempCustLedgEntry.RESET;
      SetCustAppliesToFilter(TempCustLedgEntry,GenJnlLine);
      TempCustLedgEntry.SETFILTER("Document Type",'<>%1',TempCustLedgEntry."Document Type"::"Credit Memo");
      IF TempCustLedgEntry.FINDSET THEN
        REPEAT
          TempCustLedgEntry.CALCFIELDS(
            Amount,
            "Amount (LCY)",
            "Remaining Amount",
            "Remaining Amt. (LCY)",
            "Original Amount",
            "Original Amt. (LCY)");

          IF TempCustLedgEntry."Amount to Apply" = 0 THEN
            TempCustLedgEntry."Amount to Apply" := ABSMin(TempCustLedgEntry."Remaining Amount",GenJnlLine.Amount);

          IF CheckPmtDisc(
               GenJnlLine."Posting Date",
               TempCustLedgEntry."Pmt. Discount Date",
               ABS(TempCustLedgEntry."Amount to Apply"),
               ABS(TempCustLedgEntry."Remaining Amount"),
               ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
               ABS(TotAmt))
          THEN
            TotAmt := TotAmt + ABS(TempCustLedgEntry."Original Pmt. Disc. Possible");

          IF (ABS(RemainingAmt) <= ABS(TotAmt)) OR
             (ABS(TempCustLedgEntry."Remaining Amount") < ABS(TotAmt))
          THEN BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Amount to Apply"),
                 ABS(TempCustLedgEntry."Remaining Amount"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN BEGIN
              RemainingAmt :=
                RemainingAmt - TempCustLedgEntry."Remaining Amount" +
                TempCustLedgEntry."Original Pmt. Disc. Possible";

              GenJnlLine.VALIDATE(
                Amount,
                -ABS(TempCustLedgEntry."Remaining Amount" -
                  TempCustLedgEntry."Original Pmt. Disc. Possible"));

              IF TempCustLedgEntry."Document Type" <>
                 TempCustLedgEntry."Document Type"::"Credit Memo"
              THEN
                TotAmt := (TotAmt - TempCustLedgEntry."Remaining Amount");
            END ELSE BEGIN
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Remaining Amount";
              GenJnlLine.VALIDATE(Amount,-ABS(TempCustLedgEntry."Remaining Amount"));
              IF TempCustLedgEntry."Document Type" <> TempCustLedgEntry."Document Type"::"Credit Memo" THEN
                TotAmt := (TotAmt - TempCustLedgEntry."Remaining Amount");
            END;
          END ELSE BEGIN
            IF CheckPmtDisc(
                 GenJnlLine."Posting Date",
                 TempCustLedgEntry."Pmt. Discount Date",
                 ABS(TempCustLedgEntry."Amount to Apply"),
                 ABS(TempCustLedgEntry."Remaining Amount"),
                 ABS(TempCustLedgEntry."Original Pmt. Disc. Possible"),
                 ABS(TotAmt))
            THEN
              GenJnlLine.VALIDATE(
                Amount,-(TotAmt - ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
            ELSE
              GenJnlLine.VALIDATE(Amount,-ABS(TotAmt));
            ExitLoop := TRUE;
          END;

          IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::Invoice THEN
            GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
          ELSE
            IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt - TempCustLedgEntry."Remaining Amount";
              TotAmt := TotAmt - TempCustLedgEntry."Remaining Amount";
              ExitLoop := FALSE;
            END;
          GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
          WHTAmt += CalcWHT(GenJnlLine,Currency::Customer);
        UNTIL (TempCustLedgEntry.NEXT = 0) OR ExitLoop;
      EXIT(WHTAmt);
    END;

    PROCEDURE CalcWHT@1500019(VAR GenJnlLine@1500004 : Record 81;Source@1500000 : 'Vendor,Customer') PaymentNo : Decimal;
    VAR
      WHTEntry@1500021 : Record 50504;
      WHTEntry3@1500019 : Record 50504;
      PaymentAmount@1500016 : Decimal;
      PaymentAmountLCY@1500015 : Decimal;
      AppldAmount@1500014 : Decimal;
      WHTEntryTemp@1500012 : Record 50504;
      PurchCrMemoHeader@1500010 : Record 124;
      VendLedgEntry1@1500009 : Record 25;
      VendLedgEntry@1500008 : Record 25;
      ExpectedAmount@1500007 : Decimal;
      PaymentAmount1@1500006 : Decimal;
      SalesCrMemoHeader@1500003 : Record 114;
      CustLedgEntry1@1500002 : Record 21;
      CustLedgEntry@1500001 : Record 21;
      WHTAmount1@1500022 : Decimal;
      WHTTotAmt@1500023 : Decimal;
    BEGIN
      PaymentAmount := GenJnlLine.Amount;
      PaymentAmount1 := GenJnlLine.Amount;
      PaymentAmountLCY := GenJnlLine."Amount (LCY)";
      WHTEntry.RESET;
      WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
      IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
        WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Invoice);

      IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
        WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");

      CASE Source OF
        Source::Vendor:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
        Source::Customer:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
      END;

      WHTEntry.SETRANGE(Closed,FALSE);
      IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
        WHTEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
        WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
      END ELSE
        WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");
      IF WHTEntry.FINDSET THEN BEGIN
        REPEAT
          CASE Source OF
            Source::Vendor:
              BEGIN
                IF GenJnlLine."Applies-to Doc. No." = '' THEN
                  EXIT;
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                  TempRemAmt := 0;
                  VendLedgEntry1.RESET;
                  VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                  IF VendLedgEntry1.FINDFIRST THEN
                    VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                  WHTEntryTemp.RESET;
                  WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                  WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                  WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                  WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  IF WHTEntryTemp.FINDFIRST THEN BEGIN
                    TempRemBase := WHTEntryTemp."Unrealized Amount";
                    TempRemAmt := WHTEntryTemp."Unrealized Base";
                  END;
                END;

                VendLedgEntry.RESET;
                VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                  VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                ELSE
                  IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                    VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");
                IF VendLedgEntry.FINDFIRST THEN
                  VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                IF WHTEntryTemp.FINDFIRST THEN
                  ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                ELSE
                  ExpectedAmount := -(VendLedgEntry.Amount + 0);
                IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                   (ABS(PaymentAmount1) >=
                    (ABS(VendLedgEntry."Remaining Amount" + VendLedgEntry1."Remaining Amount") -
                     ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                THEN
                  AppldAmount :=
                    ROUND(
                      ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                       (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount)
                ELSE
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);

                PaymentAmount := PaymentAmount + AppldAmount;
              END;
            Source::Customer:
              BEGIN
                SalesCrMemoHeader.SETRANGE("Applies-to Doc. Type",SalesCrMemoHeader."Applies-to Doc. Type"::Invoice);
                SalesCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                IF SalesCrMemoHeader.FINDFIRST THEN BEGIN
                  TempRemAmt := 0;
                  CustLedgEntry1.RESET;
                  CustLedgEntry1.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                  CustLedgEntry1.SETRANGE("Document Type",CustLedgEntry1."Document Type"::"Credit Memo");
                  IF CustLedgEntry1.FINDFIRST THEN
                    CustLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                  WHTEntryTemp.RESET;
                  WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                  WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
                  WHTEntryTemp.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                  WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                  WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  IF WHTEntryTemp.FINDFIRST THEN BEGIN
                    TempRemBase := WHTEntryTemp."Unrealized Amount";
                    TempRemAmt := WHTEntryTemp."Unrealized Base";
                  END;
                END;

                CustLedgEntry.RESET;
                CustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                CustLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                IF CustLedgEntry.FINDFIRST THEN
                  CustLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                ExpectedAmount := -(CustLedgEntry.Amount + CustLedgEntry1.Amount);
                IF (GenJnlLine."Posting Date" <= CustLedgEntry."Pmt. Discount Date") AND
                   (ABS(PaymentAmount1) >=
                    (ABS(CustLedgEntry."Remaining Amount" + CustLedgEntry1."Remaining Amount") -
                     ABS(CustLedgEntry."Original Pmt. Disc. Possible")))
                THEN
                  AppldAmount :=
                    ROUND(
                      ((PaymentAmount1 - CustLedgEntry."Original Pmt. Disc. Possible") *
                       (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount)
                ELSE
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                PaymentAmount := PaymentAmount + AppldAmount;
              END;
          END;

          IF GenJnlLine."Currency Code" <> WHTEntry."Currency Code" THEN
            ERROR(Text1500000);
          WHTAmount1 := ROUND(AppldAmount * WHTEntry."WHT %" / 100);
          WHTEntry3.RESET;
          WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
          WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
          WHTEntry3.CALCSUMS(Amount);
          IF (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
             (ABS(ABS(WHTEntry3.Amount) + ABS(WHTAmount1) - ABS(WHTEntry."Unrealized Amount")) > 0)
          THEN
            WHTAmount1 := WHTAmount1 + (WHTEntry."Unrealized Amount" - (WHTEntry3.Amount + WHTAmount1));

          WHTTotAmt := ROUND(WHTTotAmt + WHTAmount1);
        UNTIL (WHTEntry.NEXT = 0);
        EXIT(WHTTotAmt);
      END;
    END;

    PROCEDURE ApplyTempWHTEntry@1500020(VAR GenJnlLine@1500006 : Record 81;Source@1500000 : 'Vendor,Customer') PaymentNo : Integer;
    VAR
      WHTEntry@1500024 : Record 50504;
      WHTEntry3@1500022 : Record 50506;
      PaymentAmount@1500019 : Decimal;
      PaymentAmountLCY@1500018 : Decimal;
      AppldAmount@1500017 : Decimal;
      WHTEntryTemp@1500015 : Record 50504;
      PurchCrMemoHeader@1500012 : Record 124;
      VendLedgEntry1@1500011 : Record 25;
      VendLedgEntry@1500010 : Record 25;
      ExpectedAmount@1500009 : Decimal;
      PaymentAmount1@1500008 : Decimal;
      TempWHTEntry@1500007 : Record 50506;
      SalesCrMemoHeader@1500005 : Record 114;
      CustLedgEntry1@1500004 : Record 21;
      CustLedgEntry@1500003 : Record 21;
      WHTSlipNo@1500002 : Code[10];
      PurchSetup@1500001 : Record 312;
    BEGIN
      PaymentAmount := GenJnlLine.Amount;
      PaymentAmount1 := GenJnlLine.Amount;
      PaymentAmountLCY := GenJnlLine."Amount (LCY)";
      WHTEntry.RESET;
      WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
      CASE Source OF
        Source::Vendor:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
        Source::Customer:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
      END;
      IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
        WHTEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
        WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
      END ELSE
        WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");
      IF WHTEntry.FINDSET THEN
        REPEAT
          CASE Source OF
            Source::Vendor:
              BEGIN
                IF GenJnlLine."Applies-to Doc. No." = '' THEN
                  EXIT;
                PurchCrMemoHeader.RESET;
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                  TempRemAmt := 0;
                  VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                  VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  IF VendLedgEntry1.FINDFIRST THEN
                    VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                  WHTEntryTemp.RESET;
                  WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                  WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                  WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                  WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  IF WHTEntryTemp.FINDFIRST THEN BEGIN
                    TempRemBase := WHTEntryTemp."Unrealized Amount";
                    TempRemAmt := WHTEntryTemp."Unrealized Base";
                  END;
                END;
                VendLedgEntry.RESET;
                VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                  VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                ELSE
                  IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                    VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");

                IF VendLedgEntry.FINDFIRST THEN
                  VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                IF WHTEntryTemp.FINDFIRST THEN
                  ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                ELSE
                  ExpectedAmount := -(VendLedgEntry.Amount + 0);
                IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                   (ABS(PaymentAmount1) >=
                    (ABS(VendLedgEntry."Remaining Amt. (LCY)" + VendLedgEntry1."Remaining Amt. (LCY)") -
                     ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                THEN BEGIN
                  AppldAmount :=
                    ROUND(
                      ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                       (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                  WHTEntry."Remaining Unrealized Base" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Base" -
                      ROUND(
                        ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                         (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));
                  WHTEntry."Remaining Unrealized Amount" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Amount" -
                      ROUND(
                        ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                         (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                END ELSE BEGIN
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                  WHTEntry."Remaining Unrealized Base" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Base" -
                      ROUND(
                        (PaymentAmount1 *
                         (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));
                  WHTEntry."Remaining Unrealized Amount" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Amount" -
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Amount" + TempRemBase)) /
                        ExpectedAmount));
                END;
                PaymentAmount := PaymentAmount + AppldAmount;
              END;
            Source::Customer:
              BEGIN
                SalesCrMemoHeader.RESET;
                SalesCrMemoHeader.SETRANGE("Applies-to Doc. Type",SalesCrMemoHeader."Applies-to Doc. Type"::Invoice);
                SalesCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                IF SalesCrMemoHeader.FINDFIRST THEN BEGIN
                  TempRemAmt := 0;
                  CustLedgEntry1.RESET;
                  CustLedgEntry1.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                  CustLedgEntry1.SETRANGE("Document Type",CustLedgEntry1."Document Type"::"Credit Memo");
                  IF CustLedgEntry1.FINDFIRST THEN
                    CustLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                  WHTEntryTemp.RESET;
                  WHTEntryTemp.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                  WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                  WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
                  WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                  WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  IF WHTEntryTemp.FINDFIRST THEN BEGIN
                    TempRemBase := WHTEntryTemp."Unrealized Amount";
                    TempRemAmt := WHTEntryTemp."Unrealized Base";
                  END;
                END;

                CustLedgEntry.RESET;
                CustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                CustLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                IF CustLedgEntry.FINDFIRST THEN
                  CustLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                ExpectedAmount := -(CustLedgEntry.Amount + CustLedgEntry1.Amount);
                IF (GenJnlLine."Posting Date" <= CustLedgEntry."Pmt. Discount Date") AND
                   (ABS(PaymentAmount1) >=
                    (ABS(CustLedgEntry."Remaining Amount" + CustLedgEntry1."Remaining Amt. (LCY)") -
                     ABS(CustLedgEntry."Original Pmt. Disc. Possible")))
                THEN BEGIN
                  AppldAmount :=
                    ROUND(
                      ((PaymentAmount1 - CustLedgEntry."Original Pmt. Disc. Possible") *
                       (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);

                  WHTEntry."Remaining Unrealized Base" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Base" -
                      ROUND(
                        ((PaymentAmount1 - CustLedgEntry."Original Pmt. Disc. Possible") *
                         (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));

                  WHTEntry."Remaining Unrealized Amount" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Amount" -
                      ROUND(
                        ((PaymentAmount1 - CustLedgEntry."Original Pmt. Disc. Possible") *
                         (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                END ELSE BEGIN
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);

                  WHTEntry."Remaining Unrealized Base" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Base" -
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));
                  WHTEntry."Remaining Unrealized Amount" :=
                    ROUND(
                      WHTEntry."Remaining Unrealized Amount" -
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                END;
                PaymentAmount := PaymentAmount + AppldAmount;
              END;
          END;

          TempWHTEntry.INIT;
          TempWHTEntry."Posting Date" := GenJnlLine."Document Date";
          TempWHTEntry."Entry No." := NextTempEntryNo;
          TempWHTEntry."Document Date" := WHTEntry."Document Date";
          TempWHTEntry."Document Type" := GenJnlLine."Document Type";
          TempWHTEntry."Document No." := WHTEntry."Document No.";
          TempWHTEntry."Gen. Bus. Posting Group" := WHTEntry."Gen. Bus. Posting Group";
          TempWHTEntry."Gen. Prod. Posting Group" := WHTEntry."Gen. Prod. Posting Group";
          TempWHTEntry."Bill-to/Pay-to No." := WHTEntry."Bill-to/Pay-to No.";
          TempWHTEntry."WHT Bus. Posting Group" := WHTEntry."WHT Bus. Posting Group";
          TempWHTEntry."WHT Prod. Posting Group" := WHTEntry."WHT Prod. Posting Group";
          TempWHTEntry."WHT Revenue Type" := WHTEntry."WHT Revenue Type";
          TempWHTEntry."Currency Code" := GenJnlLine."Currency Code";
          TempWHTEntry."Unrealized WHT Entry No." := WHTEntry."Entry No.";
          TempWHTEntry."Applies-to Entry No." := WHTEntry."Entry No.";
          TempWHTEntry."User ID" := USERID;
          TempWHTEntry."External Document No." := GenJnlLine."External Document No.";
          TempWHTEntry."Original Document No." := GenJnlLine."Document No.";
          TempWHTEntry."Source Code" := GenJnlLine."Source Code";
          TempWHTEntry."WHT %" := WHTEntry."WHT %";
          CASE Source OF
            Source::Vendor:
              BEGIN
                TempWHTEntry.Base := ROUND(AppldAmount);
                TempWHTEntry.Amount := ROUND(TempWHTEntry.Base * TempWHTEntry."WHT %" / 100);
                TempWHTEntry."Transaction Type" := TempWHTEntry."Transaction Type"::Purchase;
              END;
            Source::Customer:
              BEGIN
                TempWHTEntry.Base := ROUND(AppldAmount);
                TempWHTEntry.Amount := ROUND(TempWHTEntry.Base * TempWHTEntry."WHT %" / 100);
                TempWHTEntry."Transaction Type" := TempWHTEntry."Transaction Type"::Sale;
              END;
          END;
          IF TempWHTEntry."Currency Code" <> '' THEN BEGIN
            CurrFactor :=
              CurrExchRate.ExchangeRate(
                TempWHTEntry."Posting Date",TempWHTEntry."Currency Code");

            TempWHTEntry."Base (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  GenJnlLine."Document Date",
                  TempWHTEntry."Currency Code",
                  TempWHTEntry.Base,CurrFactor));

            TempWHTEntry."Amount (LCY)" :=
              ROUND(
                TempWHTEntry."Base (LCY)" * TempWHTEntry."WHT %" / 100);
          END ELSE BEGIN
            TempWHTEntry."Amount (LCY)" := TempWHTEntry.Amount;
            TempWHTEntry."Base (LCY)" := TempWHTEntry.Base;
          END;

          IF WHTSlipNo = '' THEN BEGIN
            PurchSetup.GET;
            WHTSlipNo :=
              NoSeriesMgt.GetNextNo(
                PurchSetup."WHT Certificate No. Series",TempWHTEntry."Posting Date",TRUE);
          END;

          TempWHTEntry."WHT Certificate No." := WHTSlipNo;
          WHTPostingSetup.GET(WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group");
          TempWHTEntry."WHT Report" := WHTPostingSetup."WHT Report";

          IF GenJnlLine."WHT Report Line No." <> '' THEN
            TempWHTEntry."WHT Report Line No" := GenJnlLine."WHT Report Line No.";

          //PHL0.01(-)
          // Original Code
          //TempWHTEntry.INSERT;
          // Updated Code
          TempWHTEntry.INSERT(TRUE);
          //PHL0.01(+)
          NextWHTEntryNo := NextWHTEntryNo + 1;
          TType := TType::Purchase;
          WHTEntry3.RESET;
          WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
          WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
          WHTEntry3.CALCSUMS(Amount,"Amount (LCY)");

          IF (ABS(ABS(WHTEntry3.Amount) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
             (ABS(ABS(WHTEntry3.Amount) - ABS(WHTEntry."Unrealized Amount")) > 0)
          THEN BEGIN
            TempWHTEntry."WHT Difference" := WHTEntry."Unrealized Amount" - WHTEntry3.Amount;
            TempWHTEntry.Amount := TempWHTEntry.Amount - TempWHTEntry."WHT Difference";
            TempWHTEntry.MODIFY;
          END;

          IF (ABS(ABS(WHTEntry3."Amount (LCY)") - ABS(WHTEntry."Unrealized Amount (LCY)")) < 0.1) AND
             (ABS(ABS(WHTEntry3."Amount (LCY)") - ABS(WHTEntry."Unrealized Amount (LCY)")) > 0)
          THEN BEGIN
            TempWHTEntry."Amount (LCY)" :=
              TempWHTEntry."Amount (LCY)" - WHTEntry."Unrealized Amount (LCY)" + WHTEntry3."Amount (LCY)";
            TempWHTEntry.MODIFY;
          END;
        UNTIL (WHTEntry.NEXT = 0);
    END;

    PROCEDURE ApplyTempVendInvoiceWHT@1500021(VAR GenJnlLine@1500002 : Record 81) EntryNo : Integer;
    VAR
      Currency@1500003 : 'Vendor,Customer';
      GenJnlLineTemp@1500000 : Record 81;
      RemainingAmt@1500004 : Decimal;
    BEGIN
      GenJnlLineTemp.COPY(GenJnlLine);
      TempVendLedgEntry1.RESET;
      IF GenJnlLine."Applies-to Doc. No." = '' THEN BEGIN
        TempVendLedgEntry1.SETRANGE(Open,TRUE);
        TempVendLedgEntry1.SETRANGE("Applies-to ID",GenJnlLine."Document No.");
        IF TempVendLedgEntry1.FINDSET THEN
          REPEAT
            TempVendLedgEntry1.CALCFIELDS(
              Amount,"Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");
            RemainingAmt := RemainingAmt + TempVendLedgEntry1."Remaining Amt. (LCY)";
            IF TempVendLedgEntry1."Document Type" = TempVendLedgEntry1."Document Type"::"Credit Memo" THEN
              RemainingAmt := RemainingAmt + TempVendLedgEntry1."Remaining Amt. (LCY)";
          UNTIL TempVendLedgEntry1.NEXT = 0;

        TotAmt := ABS(GenJnlLineTemp.Amount);
        TempVendLedgEntry.RESET;
        TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLineTemp."Document No.");
        TempVendLedgEntry.SETRANGE(Open,TRUE);
        TempVendLedgEntry.SETRANGE("Document Type",TempVendLedgEntry."Document Type"::"Credit Memo");
        IF TempVendLedgEntry.FINDSET THEN
          REPEAT
            TempVendLedgEntry.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF (GenJnlLineTemp."Posting Date" < TempVendLedgEntry."Pmt. Discount Date") AND
               (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") -
                                ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
            THEN
              TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";

            IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
               (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") < ABS(TotAmt))
            THEN BEGIN
              IF (GenJnlLineTemp."Posting Date" < TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN BEGIN
                GenJnlLineTemp.VALIDATE(
                  Amount,
                  -ABS(TempVendLedgEntry."Remaining Amt. (LCY)" +
                    TempVendLedgEntry."Original Pmt. Disc. Possible"));
                IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := TotAmt - TempVendLedgEntry."Remaining Amt. (LCY)";
                RemainingAmt :=
                  RemainingAmt - TempVendLedgEntry."Remaining Amt. (LCY)" + TempVendLedgEntry."Original Pmt. Disc. Possible";
              END ELSE BEGIN
                GenJnlLineTemp.VALIDATE(Amount,-ABS(TempVendLedgEntry."Remaining Amt. (LCY)"));
                IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := TotAmt - TempVendLedgEntry."Remaining Amt. (LCY)";
                RemainingAmt := RemainingAmt - TempVendLedgEntry."Remaining Amt. (LCY)";
              END;
            END ELSE BEGIN
              IF (GenJnlLineTemp."Posting Date" < TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN
                GenJnlLineTemp.VALIDATE(Amount,TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible")
              ELSE
                GenJnlLineTemp.VALIDATE(Amount,TotAmt);
              ExitLoop := TRUE;
            END;

            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
              GenJnlLineTemp."Applies-to Doc. Type" := GenJnlLineTemp."Applies-to Doc. Type"::Invoice
            ELSE BEGIN
              IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                GenJnlLineTemp."Applies-to Doc. Type" := GenJnlLineTemp."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt - TempVendLedgEntry."Remaining Amt. (LCY)";
              TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
              ExitLoop := FALSE;
            END;

            GenJnlLineTemp."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
            NextEntry := ApplyTempWHTEntry(GenJnlLineTemp,Currency::Vendor);
            IF ExitLoop THEN
              EXIT(NextEntry);
          UNTIL TempVendLedgEntry.NEXT = 0;

        ExitLoop := FALSE;
        TempVendLedgEntry.RESET;
        TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Document No.");
        TempVendLedgEntry.SETRANGE(Open,TRUE);
        TempVendLedgEntry.SETFILTER("Document Type",'<>%1',TempVendLedgEntry."Document Type"::"Credit Memo");
        IF TempVendLedgEntry.FINDSET THEN BEGIN
          REPEAT
            TempVendLedgEntry.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");
            IF (GenJnlLineTemp."Posting Date" < TempVendLedgEntry."Pmt. Discount Date") AND
               (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") -
                                ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
            THEN
              TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";
            IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
               (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") < ABS(TotAmt))
            THEN BEGIN
              IF (GenJnlLineTemp."Posting Date" < TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN BEGIN
                GenJnlLineTemp.VALIDATE(
                  Amount,
                  ABS(TempVendLedgEntry."Remaining Amt. (LCY)" -
                    TempVendLedgEntry."Original Pmt. Disc. Possible"));

                IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
                RemainingAmt :=
                  RemainingAmt - TempVendLedgEntry."Remaining Amt. (LCY)" + TempVendLedgEntry."Original Pmt. Disc. Possible";
              END ELSE BEGIN
                GenJnlLineTemp.VALIDATE(Amount,ABS(TempVendLedgEntry."Remaining Amt. (LCY)"));
                IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
                RemainingAmt := RemainingAmt - TempVendLedgEntry."Remaining Amt. (LCY)";
              END;
            END ELSE BEGIN
              IF (GenJnlLineTemp."Posting Date" < TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN
                GenJnlLineTemp.VALIDATE(Amount,TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible")
              ELSE
                GenJnlLineTemp.VALIDATE(Amount,TotAmt);
              ExitLoop := TRUE;
            END;

            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
              GenJnlLineTemp."Applies-to Doc. Type" := GenJnlLineTemp."Applies-to Doc. Type"::Invoice
            ELSE BEGIN
              IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                GenJnlLineTemp."Applies-to Doc. Type" := GenJnlLineTemp."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
              TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
            END;

            GenJnlLineTemp."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
            NextEntry := ApplyTempWHTEntry(GenJnlLineTemp,Currency::Vendor);
            IF ExitLoop THEN
              EXIT(NextEntry);
          UNTIL TempVendLedgEntry.NEXT = 0;
        END ELSE
          NextEntry := ApplyTempWHTEntry(GenJnlLineTemp,Currency::Vendor);
      END ELSE
        NextEntry := ApplyTempWHTEntry(GenJnlLineTemp,Currency::Vendor);
    END;

    PROCEDURE VoidCheck2@1500023(CheckLedgEntry@1500000 : Record 272);
    VAR
      BankAccLedgEntry@1500002 : Record 271;
    BEGIN
      BankAccLedgEntry.GET(CheckLedgEntry."Bank Account Ledger Entry No.");
    END;

    PROCEDURE ApplyVendInvoiceWHTPosted@1500024(VAR VendLedgerEntry@1500002 : Record 25;VAR GenJnlLine@1500001 : Record 81;TransNo@1500000 : Integer) EntryNo : Integer;
    VAR
      Currency@1500003 : 'Vendor,Customer';
      RemainingAmt@1500004 : Decimal;
    BEGIN
      TempVendLedgEntry.RESET;
      IF GenJnlLine."Applies-to Doc. No." = '' THEN BEGIN
        TempVendLedgEntry1.SETRANGE("Applies-to ID",GenJnlLine."Document No.");
        TempVendLedgEntry1.SETRANGE(Open,TRUE);
        IF TempVendLedgEntry1.FINDSET(TRUE,FALSE) THEN
          REPEAT
            TempVendLedgEntry1.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF TempVendLedgEntry1."Rem. Amt for WHT" = 0 THEN
              TempVendLedgEntry1."Rem. Amt for WHT" := TempVendLedgEntry1."Remaining Amt. (LCY)";
            RemainingAmt := RemainingAmt + TempVendLedgEntry1."Rem. Amt for WHT";
            IF TempVendLedgEntry1."Document Type" = TempVendLedgEntry1."Document Type"::"Credit Memo" THEN
              RemainingAmt := RemainingAmt + TempVendLedgEntry1."Rem. Amt for WHT";
          UNTIL TempVendLedgEntry1.NEXT = 0;

        TotAmt := ABS(GenJnlLine.Amount);
        IF GenJnlLine."Applies-to ID" <> '' THEN
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
        ELSE
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Document No.");
        TempVendLedgEntry.SETRANGE("Document Type",TempVendLedgEntry."Document Type"::"Credit Memo");

        IF TempVendLedgEntry.FINDSET THEN
          REPEAT
            TempVendLedgEntry.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF (GenJnlLine."Posting Date" <= TempVendLedgEntry."Pmt. Discount Date") AND
               (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Rem. Amt for WHT") -
                                ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
            THEN
              TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";

            IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
               (ABS(TempVendLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
            THEN BEGIN
              IF (GenJnlLine."Posting Date" <= TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN BEGIN
                GenJnlLine.VALIDATE(
                  Amount,
                  -ABS(TempVendLedgEntry."Rem. Amt for WHT" +
                    TempVendLedgEntry."Original Pmt. Disc. Possible"));

                IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := TotAmt - TempVendLedgEntry."Rem. Amt for WHT";
                RemainingAmt :=
                  RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT" + TempVendLedgEntry."Original Pmt. Disc. Possible";
              END ELSE BEGIN
                GenJnlLine.VALIDATE(Amount,-ABS(TempVendLedgEntry."Rem. Amt for WHT"));
                IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := TotAmt - TempVendLedgEntry."Rem. Amt for WHT";
                RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";
              END;
            END ELSE BEGIN
              IF (GenJnlLine."Posting Date" <= TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN
                GenJnlLine.VALIDATE(Amount,TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible")
              ELSE
                GenJnlLine.VALIDATE(Amount,TotAmt);
              ExitLoop := TRUE;
            END;

            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
            ELSE BEGIN
              IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";
              TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
              ExitLoop := FALSE;
            END;

            GenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
            NextEntry :=
              ProcessPaymentPosted(
                GenJnlLine,TransNo,VendLedgerEntry."Entry No.",Currency::Vendor);

            IF ExitLoop THEN
              EXIT(NextEntry);
          UNTIL TempVendLedgEntry.NEXT = 0;

        ExitLoop := FALSE;
        TempVendLedgEntry.RESET;
        IF GenJnlLine."Applies-to ID" <> '' THEN
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
        ELSE
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Document No.");

        TempVendLedgEntry.SETFILTER("Document Type",'<>%1',TempVendLedgEntry."Document Type"::"Credit Memo");
        IF TempVendLedgEntry.FINDSET THEN BEGIN
          REPEAT
            TempVendLedgEntry.CALCFIELDS(
              Amount,"Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF (GenJnlLine."Posting Date" <= TempVendLedgEntry."Pmt. Discount Date") AND
               (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Rem. Amt for WHT") -
                                ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
            THEN
              TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";

            IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
               (ABS(TempVendLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
            THEN BEGIN
              IF (GenJnlLine."Posting Date" <= TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN BEGIN
                GenJnlLine.VALIDATE(
                  Amount,
                  ABS(TempVendLedgEntry."Rem. Amt for WHT" -
                    TempVendLedgEntry."Original Pmt. Disc. Possible"));

                IF TempVendLedgEntry."Document Type" <> TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
                RemainingAmt :=
                  RemainingAmt -
                  TempVendLedgEntry."Rem. Amt for WHT" +
                  TempVendLedgEntry."Original Pmt. Disc. Possible";
              END ELSE BEGIN
                GenJnlLine.VALIDATE(Amount,ABS(TempVendLedgEntry."Rem. Amt for WHT"));
                IF TempVendLedgEntry."Document Type" <>
                   TempVendLedgEntry."Document Type"::"Credit Memo"
                THEN
                  TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
                RemainingAmt := RemainingAmt - TempVendLedgEntry."Rem. Amt for WHT";
              END;
            END ELSE BEGIN
              IF (GenJnlLine."Posting Date" <= TempVendLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempVendLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempVendLedgEntry."Original Pmt. Disc. Possible")))
              THEN
                GenJnlLine.VALIDATE(Amount,TotAmt + TempVendLedgEntry."Original Pmt. Disc. Possible")
              ELSE
                GenJnlLine.VALIDATE(Amount,TotAmt);
              ExitLoop := TRUE;
            END;

            IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
            ELSE BEGIN
              IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
              RemainingAmt := RemainingAmt + TempVendLedgEntry."Rem. Amt for WHT";
              TotAmt := TotAmt + TempVendLedgEntry."Rem. Amt for WHT";
              ExitLoop := FALSE;
            END;

            GenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
            NextEntry :=
              ProcessPaymentPosted(
                GenJnlLine,TransNo,VendLedgerEntry."Entry No.",Currency::Vendor);
            IF ExitLoop THEN
              EXIT(NextEntry);
          UNTIL TempVendLedgEntry.NEXT = 0;
          EXIT(NextEntry);
        END;
        EXIT(
          ProcessPaymentPosted(
            GenJnlLine,TransNo,VendLedgerEntry."Entry No.",Currency::Vendor));
      END;
      EXIT(
        ProcessPaymentPosted(
          GenJnlLine,TransNo,VendLedgerEntry."Entry No.",Currency::Vendor));
    END;

    PROCEDURE ApplyCustInvoiceWHTPosted@1500025(VAR CustLedgerEntry@1500002 : Record 21;VAR GenJnlLine@1500001 : Record 81;TransNo@1500000 : Integer;AppliedEntryTransNo@1500004 : Integer) EntryNo : Integer;
    VAR
      Currency@1500003 : 'Vendor,Customer';
      RemainingAmt@1500005 : Decimal;
    BEGIN
      TempCustLedgEntry1.RESET;
      TotAmt := ABS(GenJnlLine.Amount);
      IF GenJnlLine."Applies-to Doc. No." = '' THEN BEGIN
        IF GenJnlLine."Applies-to ID" <> '' THEN
          TempCustLedgEntry1.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
        ELSE
          TempCustLedgEntry1.SETRANGE("Applies-to ID",GenJnlLine."Document No.");
        TempCustLedgEntry1.SETFILTER("Document No.",'<>%1',GenJnlLine."Document No.");
        IF TempCustLedgEntry1.FINDSET(TRUE,FALSE) THEN
          REPEAT
            TempCustLedgEntry1.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount","Original Amt. (LCY)");

            IF TempCustLedgEntry1."Rem. Amt for WHT" = 0 THEN
              TempCustLedgEntry1."Rem. Amt for WHT" := TempCustLedgEntry1."Remaining Amt. (LCY)";

            IF GenJnlLine."Posting Date" <= TempCustLedgEntry1."Pmt. Discount Date" THEN
              RemainingAmt :=
                RemainingAmt +
                TempCustLedgEntry1."Rem. Amt for WHT" -
                TempCustLedgEntry1."Original Pmt. Disc. Possible"
            ELSE
              RemainingAmt := RemainingAmt + TempCustLedgEntry1."Rem. Amt for WHT";

            IF TempCustLedgEntry1."Document Type" = TempCustLedgEntry1."Document Type"::"Credit Memo" THEN
              RemainingAmt := RemainingAmt + TempCustLedgEntry1."Rem. Amt for WHT";
          UNTIL TempCustLedgEntry1.NEXT = 0;

        TempCustLedgEntry.RESET;
        IF GenJnlLine."Applies-to ID" <> '' THEN
          TempCustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
        ELSE
          TempCustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Document No.");
        TempCustLedgEntry.SETRANGE("Document Type",TempCustLedgEntry."Document Type"::"Credit Memo");
        IF TempCustLedgEntry.FINDSET THEN
          REPEAT
            TempCustLedgEntry.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF (GenJnlLine."Posting Date" <= TempCustLedgEntry."Pmt. Discount Date") AND
               (ABS(TotAmt) >= (ABS(TempCustLedgEntry."Rem. Amt for WHT") -
                                ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
            THEN
              TotAmt := TotAmt + TempCustLedgEntry."Original Pmt. Disc. Possible";

            IF (ABS(RemainingAmt) <= ABS(TotAmt)) OR
               (ABS(TempCustLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
            THEN BEGIN
              IF (GenJnlLine."Posting Date" <= TempCustLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempCustLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
              THEN BEGIN
                GenJnlLine.VALIDATE(
                  Amount,
                  -ABS(TempCustLedgEntry."Rem. Amt for WHT" -
                    TempCustLedgEntry."Original Pmt. Disc. Possible"));

                IF TempCustLedgEntry."Document Type" <>
                   TempCustLedgEntry."Document Type"::"Credit Memo"
                THEN
                  TotAmt := -(TotAmt - TempCustLedgEntry."Rem. Amt for WHT");

                RemainingAmt :=
                  RemainingAmt -
                  TempCustLedgEntry."Rem. Amt for WHT" +
                  TempCustLedgEntry."Original Pmt. Disc. Possible";
              END ELSE BEGIN
                GenJnlLine.VALIDATE(Amount,ABS(TempCustLedgEntry."Rem. Amt for WHT"));
                IF TempCustLedgEntry."Document Type" <>
                   TempCustLedgEntry."Document Type"::"Credit Memo"
                THEN
                  TotAmt := -(TotAmt - TempCustLedgEntry."Rem. Amt for WHT");
                RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
              END;
            END ELSE BEGIN
              IF (GenJnlLine."Posting Date" <= TempCustLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempCustLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
              THEN
                GenJnlLine.VALIDATE(
                  Amount,ABS(TotAmt - TempCustLedgEntry."Original Pmt. Disc. Possible"))
              ELSE
                GenJnlLine.VALIDATE(Amount,ABS(TotAmt));
              ExitLoop := TRUE;
            END;

            IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::Invoice THEN BEGIN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice;
            END ELSE
              IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
                GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
                RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
                TotAmt := TotAmt - TempCustLedgEntry."Rem. Amt for WHT";
                ExitLoop := FALSE;
              END;
            GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
            NextEntry :=
              ProcessPaymentPosted(
                GenJnlLine,
                TempCustLedgEntry."Transaction No.",
                CustLedgerEntry."Entry No.",
                Currency::Customer);

            IF ExitLoop THEN
              EXIT(NextEntry);
          UNTIL TempCustLedgEntry.NEXT = 0;

        ExitLoop := FALSE;
        TempCustLedgEntry.RESET;
        IF GenJnlLine."Applies-to ID" <> '' THEN
          TempCustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID")
        ELSE
          TempCustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Document No.");
        TempCustLedgEntry.SETFILTER("Document Type",'<>%1',TempCustLedgEntry."Document Type"::"Credit Memo");
        TempCustLedgEntry.SETFILTER("Document No.",'<>%1',GenJnlLine."Document No.");
        IF TempCustLedgEntry.FINDSET THEN BEGIN
          REPEAT
            TempCustLedgEntry.CALCFIELDS(
              Amount,
              "Amount (LCY)",
              "Remaining Amount",
              "Remaining Amt. (LCY)",
              "Original Amount",
              "Original Amt. (LCY)");

            IF (GenJnlLine."Posting Date" <= TempCustLedgEntry."Pmt. Discount Date") AND
               (ABS(TotAmt) >= (ABS(TempCustLedgEntry."Rem. Amt for WHT") -
                                ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
            THEN
              TotAmt := TotAmt + TempCustLedgEntry."Original Pmt. Disc. Possible";

            IF (ABS(RemainingAmt) <= ABS(TotAmt)) OR
               (ABS(TempCustLedgEntry."Rem. Amt for WHT") < ABS(TotAmt))
            THEN BEGIN
              IF (GenJnlLine."Posting Date" <= TempCustLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempCustLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
              THEN BEGIN
                RemainingAmt :=
                  RemainingAmt -
                  TempCustLedgEntry."Rem. Amt for WHT" +
                  TempCustLedgEntry."Original Pmt. Disc. Possible";

                IF TempCustLedgEntry."Rem. Amt for WHT" <> 0 THEN
                  GenJnlLine.VALIDATE(
                    Amount,
                    -ABS(TempCustLedgEntry."Rem. Amt for WHT" -
                      TempCustLedgEntry."Original Pmt. Disc. Possible"));

                IF TempCustLedgEntry."Document Type" <>
                   TempCustLedgEntry."Document Type"::"Credit Memo"
                THEN
                  TotAmt := (TotAmt - TempCustLedgEntry."Rem. Amt for WHT");
              END ELSE BEGIN
                RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
                IF (AppliedEntryTransNo <> 0) AND (TempCustLedgEntry."Transaction No." <> AppliedEntryTransNo) THEN
                  GenJnlLine.VALIDATE(Amount,0)
                ELSE
                  IF TempCustLedgEntry."Rem. Amt for WHT" <> 0 THEN
                    GenJnlLine.VALIDATE(Amount,-ABS(TempCustLedgEntry."Rem. Amt for WHT"));
                IF TempCustLedgEntry."Document Type" <> TempCustLedgEntry."Document Type"::"Credit Memo" THEN
                  TotAmt := (TotAmt - TempCustLedgEntry."Rem. Amt for WHT");
              END;
            END ELSE BEGIN
              IF (GenJnlLine."Posting Date" <= TempCustLedgEntry."Pmt. Discount Date") AND
                 (ABS(TotAmt) >= (ABS(TempCustLedgEntry."Rem. Amt for WHT") -
                                  ABS(TempCustLedgEntry."Original Pmt. Disc. Possible")))
              THEN
                GenJnlLine.VALIDATE(
                  Amount,
                  -ABS(TotAmt - TempCustLedgEntry."Original Pmt. Disc. Possible"))
              ELSE
                GenJnlLine.VALIDATE(Amount,-ABS(TotAmt));
              ExitLoop := TRUE;
            END;

            IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::Invoice THEN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
            ELSE
              IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::"Credit Memo" THEN BEGIN
                GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
                RemainingAmt := RemainingAmt - TempCustLedgEntry."Rem. Amt for WHT";
                TotAmt := TotAmt - TempCustLedgEntry."Rem. Amt for WHT";
                ExitLoop := FALSE;
              END;

            GenJnlLine."Applies-to Doc. No." := TempCustLedgEntry."Document No.";
            IF TempCustLedgEntry."Document Type" = TempCustLedgEntry."Document Type"::Payment THEN BEGIN
              GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice;
              GenJnlLine."Applies-to Doc. No." := CustLedgerEntry."Document No.";
            END;

            NextEntry :=
              ProcessPaymentPosted(
                GenJnlLine,TransNo,CustLedgerEntry."Entry No.",Currency::Customer);

            IF ExitLoop THEN
              EXIT(NextEntry);
          UNTIL TempCustLedgEntry.NEXT = 0;
          EXIT(NextEntry);
        END;
        EXIT(
          ProcessPaymentPosted(
            GenJnlLine,TransNo,CustLedgerEntry."Entry No.",Currency::Customer));
      END;
      EXIT(
        ProcessPaymentPosted(
          GenJnlLine,TransNo,CustLedgerEntry."Entry No.",Currency::Customer));
    END;

    PROCEDURE ProcessPaymentPosted@1500026(VAR GenJnlLine@1500006 : Record 81;TransactionNo@1500005 : Integer;EntryNo@1500004 : Integer;Source@1500000 : 'Vendor,Customer') PaymentNo : Integer;
    VAR
      WHTEntry@1500024 : Record 50504;
      WHTEntry2@1500023 : Record 50504;
      WHTEntry3@1500022 : Record 50504;
      PaymentAmount@1500019 : Decimal;
      PaymentAmountLCY@1500018 : Decimal;
      AppldAmount@1500017 : Decimal;
      WHTEntryTemp@1500015 : Record 50504;
      PurchCrMemoHeader@1500012 : Record 124;
      VendLedgEntry1@1500011 : Record 25;
      VendLedgEntry@1500010 : Record 25;
      ExpectedAmount@1500009 : Decimal;
      PaymentAmount1@1500008 : Decimal;
      TempWHT@1500007 : Record 50506;
      SalesCrMemoHeader@1500003 : Record 114;
      CustLedgEntry1@1500002 : Record 21;
      CustLedgEntry@1500001 : Record 21;
      PmtDiscToBeDeducted@1500025 : Decimal;
    BEGIN
      GLSetup.GET;
      PaymentAmount := GenJnlLine.Amount;
      PaymentAmount1 := GenJnlLine.Amount;
      PaymentAmountLCY := GenJnlLine."Amount (LCY)";

      WHTEntry.RESET;
      WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
      IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
        WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Invoice);

      IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
        WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");

      CASE Source OF
        Source::Vendor:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
        Source::Customer:
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
      END;

      WHTEntry.SETRANGE(Closed,FALSE);
      IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
        WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
        WHTEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
      END ELSE
        WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");

      IF WHTEntry.FINDSET THEN
        REPEAT
          WHTPostingSetup.GET(WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group");
          IF (WHTPostingSetup."Realized WHT Type" =
              WHTPostingSetup."Realized WHT Type"::Payment)
          THEN BEGIN
            WHTEntry3.RESET;
            WHTEntry3 := WHTEntry;
            CASE Source OF
              Source::Vendor:
                BEGIN
                  IF GenJnlLine."Applies-to Doc. No." = '' THEN
                    EXIT;
                  PurchCrMemoHeader.RESET;
                  PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                  PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                  IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                    TempRemAmt := 0;
                    VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                    VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                    IF VendLedgEntry1.FINDFIRST THEN
                      VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                    WHTEntryTemp.RESET;
                    WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                    WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                    WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                    WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                    WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                    IF WHTEntryTemp.FINDFIRST THEN BEGIN
                      TempRemBase := WHTEntryTemp."Unrealized Amount";
                      TempRemAmt := WHTEntryTemp."Unrealized Base";
                    END;
                  END;

                  VendLedgEntry.RESET;
                  VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                  IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                    VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                  ELSE
                    IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                      VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");

                  IF VendLedgEntry.FINDFIRST THEN
                    VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");

                  IF WHTEntryTemp.FINDFIRST THEN
                    ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                  ELSE
                    ExpectedAmount := -(VendLedgEntry.Amount + 0);
                  IF VendLedgEntry1."Amount (LCY)" = 0 THEN
                    VendLedgEntry1."Rem. Amt for WHT" := 0;
                  IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                     (ABS(PaymentAmount1) >=
                      (ABS(VendLedgEntry."Rem. Amt for WHT" + VendLedgEntry1."Rem. Amt for WHT") -
                       ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                  THEN BEGIN
                    AppldAmount :=
                      ROUND(
                        ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                         (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                    WHTEntry3."Remaining Unrealized Base" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Base" -
                        ROUND(
                          ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                           (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));
                    WHTEntry3."Remaining Unrealized Amount" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Amount" -
                        ROUND(
                          ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                           (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                  END ELSE BEGIN
                    AppldAmount :=
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) /
                        ExpectedAmount);

                    WHTEntry3."Remaining Unrealized Base" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Base" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) /
                          ExpectedAmount));

                    WHTEntry3."Remaining Unrealized Amount" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Amount" -
                        ROUND(
                          (PaymentAmount1 * (WHTEntry."Unrealized Amount" + TempRemBase)) /
                          ExpectedAmount));
                  END;
                  PaymentAmount := PaymentAmount + AppldAmount;
                END;
              Source::Customer:
                BEGIN
                  SalesCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                  SalesCrMemoHeader.SETRANGE("Applies-to Doc. Type",SalesCrMemoHeader."Applies-to Doc. Type"::Invoice);
                  IF SalesCrMemoHeader.FINDFIRST THEN BEGIN
                    TempRemAmt := 0;
                    CustLedgEntry1.RESET;
                    CustLedgEntry1.SETRANGE("Document Type",CustLedgEntry1."Document Type"::"Credit Memo");
                    CustLedgEntry1.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                    IF CustLedgEntry1.FINDFIRST THEN
                      CustLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                    WHTEntryTemp.RESET;
                    WHTEntryTemp.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                    WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                    WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
                    WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                    WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                    IF WHTEntryTemp.FINDFIRST THEN BEGIN
                      TempRemBase := WHTEntryTemp."Unrealized Amount";
                      TempRemAmt := WHTEntryTemp."Unrealized Base";
                    END;
                  END;

                  CustLedgEntry.RESET;
                  CustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                  CustLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                  IF CustLedgEntry.FINDFIRST THEN
                    CustLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                  IF CustLedgEntry1."Amount (LCY)" = 0 THEN
                    CustLedgEntry1."Rem. Amt for WHT" := 0;

                  ExpectedAmount := -(CustLedgEntry.Amount + CustLedgEntry1.Amount);
                  IF (GenJnlLine."Posting Date" <= CustLedgEntry."Pmt. Discount Date") AND
                     (ABS(PaymentAmount1) >=
                      (ABS(CustLedgEntry."Rem. Amt for WHT" + CustLedgEntry1."Rem. Amt for WHT") -
                       ABS(CustLedgEntry."Original Pmt. Disc. Possible")))
                  THEN BEGIN
                    PmtDiscToBeDeducted := CustLedgEntry."Original Pmt. Disc. Possible" *
                      (PaymentAmount1 / (ExpectedAmount + CustLedgEntry."Original Pmt. Disc. Possible"));
                    AppldAmount :=
                      ROUND(
                        ((PaymentAmount1 - PmtDiscToBeDeducted) *
                         (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                    WHTEntry3."Remaining Unrealized Base" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Base" -
                        ROUND(
                          ((PaymentAmount1 - PmtDiscToBeDeducted) *
                           (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));
                    WHTEntry3."Remaining Unrealized Amount" :=
                      ROUND(
                        WHTEntry."Remaining Unrealized Amount" -
                        ROUND(
                          ((PaymentAmount1 - PmtDiscToBeDeducted) *
                           (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                  END ELSE BEGIN
                    AppldAmount :=
                      ROUND(
                        (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount);
                    GLSetup.GET;
                    IF GLSetup."Manual Sales WHT Calc." AND GenJnlLine."WHT Payment" THEN BEGIN
                      IF ABS(PaymentAmount1) > ABS(WHTEntry."Unrealized Amount") THEN BEGIN
                        WHTEntry3."Remaining Unrealized Base" := 0;
                        WHTEntry3."Remaining Unrealized Amount" := 0;
                        WHTEntry3."Rem Unrealized Base (LCY)" := 0;
                        WHTEntry3."Rem Unrealized Amount (LCY)" := 0;
                      END;
                    END ELSE BEGIN
                      WHTEntry3."Remaining Unrealized Base" :=
                        ROUND(
                          WHTEntry."Remaining Unrealized Base" -
                          ROUND(
                            (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount));

                      WHTEntry3."Remaining Unrealized Amount" :=
                        ROUND(
                          WHTEntry."Remaining Unrealized Amount" -
                          ROUND(
                            (PaymentAmount1 * (WHTEntry."Unrealized Amount" + TempRemBase)) / ExpectedAmount));
                    END;
                  END;
                  PaymentAmount := PaymentAmount + AppldAmount;
                END;
            END;
            IF (WHTEntry."Remaining Unrealized Base" = 0) AND
               (WHTEntry."Remaining Unrealized Amount" = 0)
            THEN
              WHTEntry3.Closed := TRUE;

            IF GenJnlLine."Source Currency Code" <> WHTEntry."Currency Code" THEN
              ERROR(Text1500000);

            GLSetup.GET;
            IF GLSetup."Manual Sales WHT Calc." AND NOT GenJnlLine."WHT Payment" THEN
              AppldAmount := 0;
            IF AppldAmount = 0 THEN
              EXIT(WHTEntry2."Entry No.");

            WHTEntry2.INIT;
            WHTEntry2."Posting Date" := GenJnlLine."Document Date";
            WHTEntry2."Entry No." := NextEntryNo;
            WHTEntry2."Document Date" := WHTEntry."Document Date";
            WHTEntry2."Document Type" := GenJnlLine."Document Type";
            WHTEntry2."Document No." := WHTEntry."Document No.";
            WHTEntry2."Gen. Bus. Posting Group" := WHTEntry."Gen. Bus. Posting Group";
            WHTEntry2."Gen. Prod. Posting Group" := WHTEntry."Gen. Prod. Posting Group";
            WHTEntry2."Bill-to/Pay-to No." := WHTEntry."Bill-to/Pay-to No.";
            WHTEntry2."WHT Bus. Posting Group" := WHTEntry."WHT Bus. Posting Group";
            WHTEntry2."WHT Prod. Posting Group" := WHTEntry."WHT Prod. Posting Group";
            WHTEntry2."WHT Revenue Type" := WHTEntry."WHT Revenue Type";
            WHTEntry2."Unrealized WHT Entry No." := WHTEntry."Entry No.";
            WHTEntry2."Currency Code" := GenJnlLine."Source Currency Code";
            WHTEntry2."Applies-to Entry No." := WHTEntry."Entry No.";
            WHTEntry2."User ID" := USERID;
            WHTEntry2."External Document No." := GenJnlLine."External Document No.";
            WHTEntry2."Actual Vendor No." := GenJnlLine."Actual Vendor No.";
            WHTEntry2."Original Document No." := GenJnlLine."Document No.";
            WHTEntry2."Source Code" := GenJnlLine."Source Code";
            WHTEntry2."Transaction No." := TransactionNo;
            WHTEntry2."WHT %" := WHTEntry."WHT %";
            CASE Source OF
              Source::Vendor:
                BEGIN
                  WHTEntry2.Base := ROUND(AppldAmount);
                  WHTEntry2.Amount := ROUND(WHTEntry2.Base * WHTEntry2."WHT %" / 100);
                  WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Purchase;
                  WHTPostingSetup.GET(WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  WHTEntry2."WHT Report" := WHTPostingSetup."WHT Report";
                  IF GenJnlLine."Certificate Printed" THEN BEGIN
                    WHTEntry2."WHT Report Line No" := GenJnlLine."WHT Report Line No.";
                    TempWHT.SETRANGE("Document No.",WHTEntry2."Document No.");
                    IF TempWHT.FINDFIRST THEN
                      WHTEntry2."WHT Certificate No." := TempWHT."WHT Certificate No.";
                  END ELSE BEGIN
                    IF ((Source = Source::Vendor) AND
                        (WHTEntry."Document Type" = WHTEntry."Document Type"::Invoice)) OR
                       ((Source = Source::Customer) AND
                        (WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo"))
                    THEN
                      IF (WHTReportLineNo = '') AND (WHTEntry2.Amount <> 0) AND
                         (WHTPostingSetup."WHT Report Line No. Series" <> '')
                      THEN
                        WHTReportLineNo :=
                          NoSeriesMgt.GetNextNo(
                            WHTPostingSetup."WHT Report Line No. Series",WHTEntry2."Posting Date",TRUE);

                    WHTEntry2."WHT Report Line No" := WHTReportLineNo;
                  END;
                END;
              Source::Customer:
                BEGIN
                  GLSetup.GET;
                  IF GLSetup."Manual Sales WHT Calc." AND GenJnlLine."WHT Payment" THEN BEGIN
                    WHTEntry2.Amount := GenJnlLine.Amount;
                    WHTEntry2.Base := ROUND((WHTEntry2.Amount * 100) / WHTEntry2."WHT %");
                    WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Sale;
                  END ELSE BEGIN
                    WHTEntry2.Base := ROUND(AppldAmount);
                    WHTEntry2.Amount := ROUND(WHTEntry2.Base * WHTEntry2."WHT %" / 100);
                    WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Sale;
                  END;
                END;
            END;

            WHTEntry2."Payment Amount" := PaymentAmount1;
            IF WHTEntry2."Currency Code" <> '' THEN BEGIN
              CurrFactor :=
                CurrExchRate.ExchangeRate(
                  WHTEntry2."Posting Date",WHTEntry2."Currency Code");

              WHTEntry2."Base (LCY)" :=
                ROUND(
                  CurrExchRate.ExchangeAmtFCYToLCY(
                    GenJnlLine."Document Date",
                    WHTEntry2."Currency Code",
                    WHTEntry2.Base,CurrFactor));

              WHTEntry2."Amount (LCY)" :=
                ROUND(
                  CurrExchRate.ExchangeAmtFCYToLCY(
                    GenJnlLine."Document Date",
                    WHTEntry2."Currency Code",
                    WHTEntry2.Amount,CurrFactor));
            END ELSE BEGIN
              WHTEntry2."Amount (LCY)" := WHTEntry2.Amount;
              WHTEntry2."Base (LCY)" := WHTEntry2.Base;
            END;

            //PHL0.01(-)
            // Original Code
            //WHTEntry2.INSERT;
            // Updated Code
            WHTEntry2.INSERT(TRUE);
            //PHL0.01(+)
            TType := TType::Purchase;
            WHTEntry3.MODIFY;

            WHTEntry3.RESET;
            WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
            WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
            WHTEntry3.CALCSUMS(Amount,"Amount (LCY)");
            IF (ABS(ABS(WHTEntry3.Amount) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
               (ABS(ABS(WHTEntry3.Amount) - ABS(WHTEntry."Unrealized Amount")) > 0)
            THEN BEGIN
              WHTEntry2."WHT Difference" := WHTEntry."Unrealized Amount" - WHTEntry3.Amount;
              WHTEntry2.Amount := WHTEntry2.Amount - WHTEntry2."WHT Difference";
              WHTEntry2.MODIFY;
            END;

            IF (ABS(ABS(WHTEntry3."Amount (LCY)") -
                  ABS(WHTEntry."Unrealized Amount (LCY)")) < 0.1) AND
               (ABS(ABS(WHTEntry3."Amount (LCY)") - ABS(WHTEntry."Unrealized Amount (LCY)")) > 0)
            THEN BEGIN
              WHTEntry2."Amount (LCY)" := WHTEntry2."Amount (LCY)" -
                WHTEntry."Unrealized Amount (LCY)" + WHTEntry3."Amount (LCY)";
              WHTEntry2.MODIFY;
            END;
          END;
        UNTIL (WHTEntry.NEXT = 0);

      IF (WHTPostingSetup."Realized WHT Type" =
          WHTPostingSetup."Realized WHT Type"::Payment)
      THEN
        EXIT(WHTEntry2."Entry No." + 1);
    END;

    PROCEDURE CheckPmtDisc@1500028(PostingDate@1500000 : Date;PmtDiscDate@1500001 : Date;Amount1@1500002 : Decimal;Amount2@1500003 : Decimal;Amount3@1500004 : Decimal;Amount4@1500005 : Decimal) : Boolean;
    BEGIN
      IF (PostingDate <= PmtDiscDate) AND
         (Amount1 >= (Amount2 - Amount3)) AND
         (Amount4 >= (Amount2 - Amount3))
      THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE PreprintingWHT@1500010(VAR GenJournalLine@1500000 : Record 81);
    VAR
      WHTEntry@1500001 : Record 50504;
      TempWHTEntry@1500006 : Record 50506;
      VendLedgEntry@1500002 : Record 25;
      WHTExists@1500003 : Boolean;
      NoS@1500004 : Code[10];
      PurchSetup@1500005 : Record 312;
    BEGIN
      IF GenJournalLine."Certificate Printed" THEN
        ERROR(Text1500001);
      IF GenJournalLine."Document Type" <> GenJournalLine."Document Type"::Payment THEN
        EXIT;
      IF GenJournalLine."Skip WHT" THEN
        EXIT;
      PurchSetup.GET;
      IF GenJournalLine."Applies-to Doc. No." <> '' THEN BEGIN
        WHTEntry.RESET;
        WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
        IF GenJournalLine."Applies-to Doc. Type" = GenJournalLine."Applies-to Doc. Type"::Invoice THEN
          WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Invoice);
        IF GenJournalLine."Applies-to Doc. Type" = GenJournalLine."Applies-to Doc. Type"::"Credit Memo" THEN
          WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
        WHTEntry.SETRANGE("Document No.",GenJournalLine."Applies-to Doc. No.");
        IF WHTEntry.FINDFIRST THEN BEGIN
          WHTPostingSetup.GET(WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group");
          WHTPostingSetup.TESTFIELD("WHT Report Line No. Series");
          GenJournalLine."WHT Report Line No." :=
            NoSeriesMgt.GetNextNo(
              WHTPostingSetup."WHT Report Line No. Series",GenJournalLine."Posting Date",TRUE);
        END;
      END ELSE BEGIN
        VendLedgEntry.RESET;
        VendLedgEntry.SETRANGE("Applies-to ID",GenJournalLine."Document No.");
        IF VendLedgEntry.FINDSET THEN
          REPEAT
            WHTEntry.RESET;
            WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
            IF VendLedgEntry."Document Type" = VendLedgEntry."Document Type"::Invoice THEN
              WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::Invoice);
            IF VendLedgEntry."Document Type" = VendLedgEntry."Document Type"::"Credit Memo" THEN
              WHTEntry.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
            WHTEntry.SETRANGE("Document No.",VendLedgEntry."Document No.");
            IF NOT WHTExists THEN
              IF WHTEntry.FINDFIRST THEN BEGIN
                WHTPostingSetup.GET(WHTEntry."WHT Bus. Posting Group",WHTEntry."WHT Prod. Posting Group");
                WHTPostingSetup.TESTFIELD("WHT Report Line No. Series");
                NoS := WHTPostingSetup."WHT Report Line No. Series";
                WHTExists := TRUE;
              END;
          UNTIL VendLedgEntry.NEXT = 0;
        IF NoS <> '' THEN
          GenJournalLine."WHT Report Line No." :=
            NoSeriesMgt.GetNextNo(NoS,GenJournalLine."Posting Date",TRUE);
      END;

      ApplyTempVendInvoiceWHT(GenJournalLine);
      //PHL0.01(-)
      // Review Code Start
      //TempWHTEntry.RESET;
      //TempWHTEntry.SETCURRENTKEY("Bill-to/Pay-to No.","Original Document No.","WHT Revenue Type");
      //TempWHTEntry.SETRANGE("Original Document No.",GenJournalLine."Document No.");
      //IF TempWHTEntry.FINDFIRST THEN
      //  IF TempWHTEntry."Document Type" = TempWHTEntry."Document Type"::Payment THEN
      //    REPORT.RUN(REPORT::"WHT certificate preprint",PurchSetup."Print Dialog",FALSE,TempWHTEntry);
      // Review Code End
      //PHL0.01(+)
      GenJournalLine."Certificate Printed" := TRUE;
      GenJournalLine.MODIFY;
    END;

    PROCEDURE CheckApplicationSalesWHT@1500034(VAR SalesHeader@1500000 : Record 36);
    VAR
      TempCustLedgEntry@1500002 : Record 21;
      WHTEntry@1500003 : Record 50504;
      SalesLine1@1500005 : Record 37;
    BEGIN
      IF SalesHeader."Applies-to Doc. No." <> '' THEN
        TempCustLedgEntry.SETRANGE("Document No.",SalesHeader."Applies-to Doc. No.")
      ELSE
        TempCustLedgEntry.SETRANGE("Applies-to ID",SalesHeader."Applies-to ID");

      IF TempCustLedgEntry.FINDSET THEN
        REPEAT
          WHTEntry.RESET;
          WHTEntry.SETRANGE("Document No.",TempCustLedgEntry."Document No.");
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
          IF WHTEntry.FINDSET THEN
            REPEAT
              SalesLine1.RESET;
              SalesLine1.SETRANGE("Document No.",SalesHeader."No.");
              SalesLine1.SETRANGE("Document Type",SalesHeader."Document Type");
              SalesLine1.SETRANGE("WHT Business Posting Group",WHTEntry."WHT Bus. Posting Group");
              SalesLine1.SETRANGE("WHT Product Posting Group",WHTEntry."WHT Prod. Posting Group");
              IF NOT SalesLine1.FINDFIRST THEN
                ERROR(Text1500003);
            UNTIL WHTEntry.NEXT = 0;
        UNTIL TempCustLedgEntry.NEXT = 0;
    END;

    PROCEDURE CheckApplicationPurchWHT@1500035(VAR PurchHeader@1500001 : Record 38);
    VAR
      TempVendLedgEntry@1500002 : Record 25;
      WHTEntry@1500003 : Record 50504;
      PurchLine1@1500005 : Record 39;
    BEGIN
      IF PurchHeader."Applies-to Doc. No." <> '' THEN
        TempVendLedgEntry.SETRANGE("Document No.",PurchHeader."Applies-to Doc. No.")
      ELSE
        TempVendLedgEntry.SETRANGE("Applies-to ID",PurchHeader."Applies-to ID");

      IF TempVendLedgEntry.FINDSET THEN
        REPEAT
          WHTEntry.RESET;
          WHTEntry.SETRANGE("Document No.",TempVendLedgEntry."Document No.");
          WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
          IF WHTEntry.FINDSET THEN
            REPEAT
              PurchLine1.RESET;
              PurchLine1.SETRANGE("Document No.",PurchHeader."No.");
              PurchLine1.SETRANGE("Document Type",PurchHeader."Document Type");
              PurchLine1.SETRANGE("WHT Business Posting Group",WHTEntry."WHT Bus. Posting Group");
              PurchLine1.SETRANGE("WHT Product Posting Group",WHTEntry."WHT Prod. Posting Group");
              IF NOT PurchLine1.FINDFIRST THEN
                ERROR(Text1500003);
            UNTIL WHTEntry.NEXT = 0;
        UNTIL TempVendLedgEntry.NEXT = 0;
    END;

    PROCEDURE CheckApplicationGenSalesWHT@1500033(VAR GenJnlLine@1500000 : Record 81);
    VAR
      TempCustLedgEntry@1500002 : Record 21;
      WHTEntry@1500003 : Record 50504;
    BEGIN
      IF (GenJnlLine."Applies-to Doc. No." <> '') OR
         (GenJnlLine."Applies-to ID" <> '')
      THEN BEGIN
        TempCustLedgEntry.RESET;
        IF GenJnlLine."Applies-to Doc. No." <> '' THEN
          TempCustLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.")
        ELSE
          TempCustLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
        IF TempCustLedgEntry.FINDSET THEN
          REPEAT
            WHTEntry.RESET;
            WHTEntry.SETRANGE("Document No.",TempCustLedgEntry."Document No.");
            WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Sale);
            IF WHTEntry.FINDSET THEN
              REPEAT
                GenJnlLine.SETRANGE("WHT Business Posting Group",WHTEntry."WHT Bus. Posting Group");
                GenJnlLine.SETRANGE("WHT Product Posting Group",WHTEntry."WHT Prod. Posting Group");
                IF NOT GenJnlLine.FINDFIRST THEN
                  ERROR(Text1500003);
              UNTIL WHTEntry.NEXT = 0;
          UNTIL TempCustLedgEntry.NEXT = 0;
      END;
    END;

    PROCEDURE CheckApplicationGenPurchWHT@1500022(VAR GenJnlLine@1500000 : Record 81);
    VAR
      TempVendLedgEntry@1500002 : Record 25;
      WHTEntry@1500003 : Record 50504;
    BEGIN
      IF (GenJnlLine."Applies-to Doc. No." <> '') OR
         (GenJnlLine."Applies-to ID" <> '')
      THEN BEGIN
        TempVendLedgEntry.RESET;
        IF GenJnlLine."Applies-to Doc. No." <> '' THEN
          TempVendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.")
        ELSE
          TempVendLedgEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
        IF TempVendLedgEntry.FINDSET THEN
          REPEAT
            WHTEntry.RESET;
            WHTEntry.SETRANGE("Document No.",TempVendLedgEntry."Document No.");
            WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
            IF WHTEntry.FINDSET THEN
              REPEAT
                GenJnlLine.SETRANGE("WHT Business Posting Group",WHTEntry."WHT Bus. Posting Group");
                GenJnlLine.SETRANGE("WHT Product Posting Group",WHTEntry."WHT Prod. Posting Group");
                IF NOT GenJnlLine.FINDFIRST THEN
                  ERROR(Text1500003);
              UNTIL WHTEntry.NEXT = 0;
          UNTIL TempVendLedgEntry.NEXT = 0;
      END;
    END;

    PROCEDURE CalcVendExtraWHTForEarliest@1500030(VAR GenJnlLine@1500000 : Record 81) WHTAmount : Decimal;
    VAR
      VendorLedgerEntry@1500003 : Record 25;
      WHTEntry@1500004 : Record 50504;
      TotalWHTBase@1500005 : Decimal;
      WHTBase@1500001 : Decimal;
      TotalWHTAmount@1500006 : Decimal;
      TotalWHTAmount2@1500008 : Decimal;
      TotalWHTAmount3@1500007 : Decimal;
      VendLedgEntry@1500015 : Record 25;
      PaymentAmount1@1500009 : Decimal;
      PurchCrMemoHeader@1500010 : Record 124;
      VendLedgEntry1@1500012 : Record 25;
      WHTEntryTemp@1500011 : Record 50504;
      AppldAmount@1500014 : Decimal;
      ExpectedAmount@1500013 : Decimal;
      WHTEntry3@1500016 : Record 50504;
      Diff@1500017 : Decimal;
      RemainingAmt@1500022 : Decimal;
    BEGIN
      WHTAmount := 0;
      TotalWHTBase := 0;
      WHTBase := 0;
      IF WHTPostingSetup.GET(
           GenJnlLine."WHT Business Posting Group",
           GenJnlLine."WHT Product Posting Group")
      THEN BEGIN
        IF (WHTPostingSetup."Realized WHT Type" =
            WHTPostingSetup."Realized WHT Type"::Earliest)
        THEN BEGIN
          IF GenJnlLine."WHT Absorb Base" <> 0 THEN
            WHTBase := ABS(GenJnlLine."WHT Absorb Base")
          ELSE
            WHTBase := ABS(GenJnlLine.Amount);
        END;
      END;
      TotalWHTBase := WHTBase;
      IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
        VendorLedgerEntry.RESET;
        VendorLedgerEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Payment)THEN
          VendorLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            VendorLedgerEntry."Document Type"::Invoice);

        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund)THEN
          VendorLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            VendorLedgerEntry."Document Type"::"Credit Memo");

        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice)THEN
          VendorLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            VendorLedgerEntry."Document Type"::Payment);

        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo")THEN
          VendorLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            VendorLedgerEntry."Document Type"::Refund);

        IF VendorLedgerEntry.FINDFIRST THEN
          BEGIN
          IF GenJnlLine."Currency Code" <> VendorLedgerEntry."Currency Code" THEN
            ERROR(Text1500000);

          IF VendorLedgerEntry.Prepayment THEN BEGIN
            TotalWHTAmount := 0;
            PaymentAmount1 := GenJnlLine.Amount;
            WHTEntry.RESET;
            WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
            WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
            IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
              WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
              WHTEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
            END ELSE
              WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");
            IF WHTEntry.FINDSET THEN BEGIN
              REPEAT
                PurchCrMemoHeader.SETRANGE(
                  "Applies-to Doc. Type",
                  PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                  TempRemAmt := 0;
                  VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                  VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  IF VendLedgEntry1.FINDFIRST THEN
                    VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount");
                  WHTEntryTemp.RESET;
                  WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                  WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                  WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                  WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                  WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                  IF WHTEntryTemp.FINDFIRST THEN
                    TempRemAmt := WHTEntryTemp."Unrealized Base";
                END;

                VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                VendLedgEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                IF VendLedgEntry.FINDFIRST THEN
                  VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount");
                IF WHTEntryTemp.FINDFIRST THEN
                  ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                ELSE
                  ExpectedAmount := -(VendLedgEntry.Amount + 0);
                IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                   (ABS(PaymentAmount1) >= (ABS(VendLedgEntry."Remaining Amount" +
                                              VendLedgEntry1."Remaining Amount") -
                                            ABS(VendLedgEntry."Original Pmt. Disc. Possible")))
                THEN
                  AppldAmount :=
                    ROUND(
                      ((PaymentAmount1 - VendLedgEntry."Original Pmt. Disc. Possible") *
                       (WHTEntry."Unrealized Base" + TempRemAmt)) / ExpectedAmount)
                ELSE
                  AppldAmount :=
                    ROUND(
                      (PaymentAmount1 * (WHTEntry."Unrealized Base" + TempRemAmt)) /
                      ExpectedAmount);
                TotalWHTAmount := ROUND(TotalWHTAmount + AppldAmount * WHTEntry."WHT %" / 100);
              UNTIL WHTEntry.NEXT = 0;

              WHTEntry3.RESET;
              WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
              WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
              WHTEntry3.CALCSUMS(Amount,"Amount (LCY)");
              IF (ABS(ABS(WHTEntry3.Amount) + ABS(TotalWHTAmount) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
                 (ABS(ABS(WHTEntry3.Amount) + ABS(TotalWHTAmount) - ABS(WHTEntry."Unrealized Amount")) > 0)
              THEN BEGIN
                Diff := WHTEntry."Unrealized Amount" - (WHTEntry3.Amount + TotalWHTAmount);
                TotalWHTAmount := TotalWHTAmount + Diff;
              END;

              EXIT(ROUND(TotalWHTAmount));
            END
          END ELSE BEGIN
            WHTEntry.RESET;
            WHTEntry.SETRANGE("Document No.",VendorLedgerEntry."Document No.");
            IF WHTEntry.FINDFIRST THEN
              IF WHTPostingSetup.GET(
                   WHTEntry."WHT Bus. Posting Group",
                   WHTEntry."WHT Prod. Posting Group")
              THEN
                IF ((WHTPostingSetup."Realized WHT Type" =
                     WHTPostingSetup."Realized WHT Type"::Earliest) AND
                    (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                THEN BEGIN
                  TotAmt := 0;
                  TotAmt := GenJnlLine.Amount;
                  TempVendLedgEntry.RESET;
                  TempVendLedgEntry.SETRANGE("Entry No.",VendorLedgerEntry."Entry No.");
                  IF TempVendLedgEntry.FINDSET THEN BEGIN
                    TempVendLedgEntry.CALCFIELDS(
                      Amount,"Amount (LCY)",
                      "Remaining Amount","Remaining Amt. (LCY)");

                    IF CheckPmtDisc(
                         GenJnlLine."Posting Date",
                         TempVendLedgEntry."Pmt. Discount Date",
                         ABS(TempVendLedgEntry."Amount to Apply"),
                         ABS(TempVendLedgEntry."Remaining Amount"),
                         ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),
                         ABS(TotAmt))
                    THEN
                      TotAmt := TotAmt - TempVendLedgEntry."Original Pmt. Disc. Possible";

                    IF ABS(WHTEntry."Rem Realized Base") >= WHTBase THEN
                      TotAmt := 0
                    ELSE
                      TotAmt := TotAmt - ABS(WHTEntry."Rem Realized Base");
                  END;
                  WHTBase := TotAmt;
                END;
          END;
        END;
      END ELSE BEGIN
        IF GenJnlLine."Applies-to ID" <> '' THEN BEGIN
          IF ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice) OR
              (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund))
          THEN BEGIN
            VendorLedgerEntry.RESET;
            VendorLedgerEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
            VendorLedgerEntry.SETFILTER(
              "Document Type",
              '%1|%2',
              VendorLedgerEntry."Document Type"::Payment,
              VendorLedgerEntry."Document Type"::"Credit Memo");
            IF VendorLedgerEntry.FINDSET THEN
              REPEAT
                WHTEntry.RESET;
                WHTEntry.SETRANGE("Document No.",VendorLedgerEntry."Document No.");
                IF WHTEntry.FINDSET THEN
                  REPEAT
                    IF WHTPostingSetup.GET(
                         WHTEntry."WHT Bus. Posting Group",
                         WHTEntry."WHT Prod. Posting Group")
                    THEN
                      IF ((WHTPostingSetup."Realized WHT Type" =
                           WHTPostingSetup."Realized WHT Type"::Earliest) AND
                          (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                      THEN BEGIN
                        IF TotalWHTBase > ABS(WHTEntry."Rem Realized Base") THEN BEGIN
                          TotalWHTBase := TotalWHTBase - ABS(WHTEntry."Rem Realized Base");
                          IF (((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo")) OR
                              ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::Payment)))
                          THEN
                            WHTBase := WHTBase - ABS(WHTEntry."Rem Realized Base");
                        END ELSE BEGIN
                          IF (TotalWHTBase > 0) AND (ABS(TotalWHTBase) <= ABS(WHTEntry."Rem Realized Base")) THEN
                            TotalWHTBase := TotalWHTBase - TotalWHTBase;
                          IF (((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo")) OR
                              ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::Payment)))
                          THEN
                            WHTBase := 0;
                        END;
                      END;
                  UNTIL WHTEntry.NEXT = 0;
              UNTIL VendorLedgerEntry.NEXT = 0;
          END;

          IF ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Payment) OR
              (GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo"))
          THEN BEGIN
            TotalWHTAmount := 0;
            TotalWHTAmount2 := 0;
            TotalWHTAmount3 := 0;
            RemainingAmt := 0;
            TotAmt := 0;
            TempVendLedgEntry1.RESET;
            TempVendLedgEntry1.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
            TempVendLedgEntry1.SETRANGE(Open,TRUE);
            IF GenJnlLine."Bill-to/Pay-to No." = '' THEN
              TempVendLedgEntry1.SETRANGE("Buy-from Vendor No.",GenJnlLine."Account No.")
            ELSE
              TempVendLedgEntry1.SETRANGE("Buy-from Vendor No.",GenJnlLine."Bill-to/Pay-to No.");

            IF TempVendLedgEntry1.FINDSET THEN
              REPEAT
                TempVendLedgEntry1.CALCFIELDS(
                  Amount,"Amount (LCY)",
                  "Remaining Amount","Remaining Amt. (LCY)");

                RemainingAmt := RemainingAmt + TempVendLedgEntry1."Remaining Amt. (LCY)";
              UNTIL TempVendLedgEntry1.NEXT = 0;

            TotAmt := ABS(GenJnlLine."Amount (LCY)");
            CurrFactor :=
              CurrExchRate.ExchangeRate(
                GenJnlLine."Document Date",GenJnlLine."Currency Code");

            VendorLedgerEntry.RESET;
            VendorLedgerEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
            VendorLedgerEntry.SETRANGE("Document Type",VendorLedgerEntry."Document Type"::Refund);
            IF VendorLedgerEntry.FINDSET THEN
              REPEAT
                WHTEntry.RESET;
                WHTEntry.SETRANGE("Document No.",VendorLedgerEntry."Document No.");
                IF WHTEntry.FINDSET THEN
                  REPEAT
                    IF WHTPostingSetup.GET(
                         WHTEntry."WHT Bus. Posting Group",
                         WHTEntry."WHT Prod. Posting Group")
                    THEN
                      IF ((WHTPostingSetup."Realized WHT Type" =
                           WHTPostingSetup."Realized WHT Type"::Earliest) AND
                          (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                      THEN BEGIN
                        IF TotalWHTBase > ABS(WHTEntry."Rem Realized Base") THEN BEGIN
                          TotalWHTBase := TotalWHTBase - ABS(WHTEntry."Rem Realized Base");
                          IF GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo" THEN
                            WHTBase := WHTBase - ABS(WHTEntry."Rem Realized Base");
                        END ELSE BEGIN
                          IF (TotalWHTBase > 0) AND (ABS(TotalWHTBase) <= ABS(WHTEntry."Rem Realized Base")) THEN BEGIN
                            TotalWHTBase := 0;
                            IF GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo" THEN
                              WHTBase := 0;
                          END;
                        END;
                      END;
                  UNTIL WHTEntry.NEXT = 0;
              UNTIL VendorLedgerEntry.NEXT = 0;

            VendorLedgerEntry.RESET;
            VendorLedgerEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
            VendorLedgerEntry.SETRANGE("Document Type",VendorLedgerEntry."Document Type"::Invoice);
            IF VendorLedgerEntry.FINDSET THEN
              BEGIN
              REPEAT
                IF GenJnlLine."Currency Code" <> VendorLedgerEntry."Currency Code" THEN
                  ERROR(Text1500000);

                IF VendorLedgerEntry.Prepayment THEN BEGIN
                  TempVendLedgEntry.RESET;
                  TempVendLedgEntry.SETRANGE("Entry No.",VendorLedgerEntry."Entry No.");
                  IF TempVendLedgEntry.FINDSET THEN BEGIN
                    TempVendLedgEntry.CALCFIELDS(
                      Amount,"Amount (LCY)",
                      "Remaining Amount","Remaining Amt. (LCY)");

                    IF CheckPmtDisc(
                         GenJnlLine."Posting Date",
                         TempVendLedgEntry."Pmt. Discount Date",
                         CurrExchRate.ExchangeAmtFCYToLCY(
                           GenJnlLine."Document Date",
                           GenJnlLine."Currency Code",
                           ABS(TempVendLedgEntry."Amount to Apply"),CurrFactor),
                         ABS(TempVendLedgEntry."Remaining Amt. (LCY)"),
                         CurrExchRate.ExchangeAmtFCYToLCY(
                           GenJnlLine."Document Date",
                           GenJnlLine."Currency Code",
                           ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),CurrFactor),
                         ABS(TotAmt))
                    THEN
                      TotAmt := TotAmt -
                        CurrExchRate.ExchangeAmtFCYToLCY(
                          GenJnlLine."Document Date",
                          GenJnlLine."Currency Code",
                          TempVendLedgEntry."Original Pmt. Disc. Possible",CurrFactor);

                    IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
                       (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") < ABS(TotAmt))
                    THEN BEGIN
                      IF CheckPmtDisc(
                           GenJnlLine."Posting Date",
                           TempVendLedgEntry."Pmt. Discount Date",
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             GenJnlLine."Document Date",
                             GenJnlLine."Currency Code",
                             ABS(TempVendLedgEntry."Amount to Apply"),CurrFactor),
                           ABS(TempVendLedgEntry."Remaining Amt. (LCY)"),
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             GenJnlLine."Document Date",
                             GenJnlLine."Currency Code",
                             ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),CurrFactor),
                           ABS(TotAmt))
                      THEN BEGIN
                        GenJnlLine.VALIDATE(
                          Amount,
                          ABS(TempVendLedgEntry."Remaining Amt. (LCY)" -
                            CurrExchRate.ExchangeAmtFCYToLCY(
                              GenJnlLine."Document Date",
                              GenJnlLine."Currency Code",
                              TempVendLedgEntry."Original Pmt. Disc. Possible",CurrFactor)));

                        IF TempVendLedgEntry."Document Type" <>
                           TempVendLedgEntry."Document Type"::"Credit Memo"
                        THEN
                          TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";

                        RemainingAmt :=
                          RemainingAmt -
                          TempVendLedgEntry."Remaining Amt. (LCY)";
                      END ELSE BEGIN
                        GenJnlLine.VALIDATE(Amount,ABS(TempVendLedgEntry."Remaining Amt. (LCY)"));
                        IF TempVendLedgEntry."Document Type" <>
                           TempVendLedgEntry."Document Type"::"Credit Memo"
                        THEN
                          TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
                        RemainingAmt := RemainingAmt - TempVendLedgEntry."Remaining Amt. (LCY)";
                      END;
                    END ELSE BEGIN
                      IF CheckPmtDisc(
                           GenJnlLine."Posting Date",
                           TempVendLedgEntry."Pmt. Discount Date",
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             GenJnlLine."Document Date",
                             GenJnlLine."Currency Code",
                             ABS(TempVendLedgEntry."Amount to Apply"),CurrFactor),
                           ABS(TempVendLedgEntry."Remaining Amt. (LCY)"),
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             GenJnlLine."Document Date",
                             GenJnlLine."Currency Code",
                             ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),CurrFactor),
                           ABS(TotAmt))
                      THEN
                        GenJnlLine.VALIDATE(Amount,TotAmt +
                          CurrExchRate.ExchangeAmtFCYToLCY(
                            GenJnlLine."Document Date",
                            GenJnlLine."Currency Code",
                            TempVendLedgEntry."Original Pmt. Disc. Possible",CurrFactor))
                      ELSE
                        GenJnlLine.VALIDATE(Amount,TotAmt);
                      TotAmt := 0;
                    END;

                    IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::Invoice THEN
                      GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::Invoice
                    ELSE BEGIN
                      IF TempVendLedgEntry."Document Type" = TempVendLedgEntry."Document Type"::"Credit Memo" THEN
                        GenJnlLine."Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type"::"Credit Memo";
                      RemainingAmt := RemainingAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
                      TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
                    END;
                    GenJnlLine."Applies-to Doc. No." := TempVendLedgEntry."Document No.";
                    PaymentAmount1 := GenJnlLine.Amount;
                    WHTEntry.RESET;
                    WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
                    WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                    IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
                      WHTEntry.SETRANGE("Document Type",GenJnlLine."Applies-to Doc. Type");
                      WHTEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                    END ELSE
                      WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJnlLine."Account No.");
                    IF WHTEntry.FINDSET THEN
                      REPEAT
                        PurchCrMemoHeader.RESET;
                        PurchCrMemoHeader.SETRANGE("Applies-to Doc. No.",GenJnlLine."Applies-to Doc. No.");
                        PurchCrMemoHeader.SETRANGE("Applies-to Doc. Type",PurchCrMemoHeader."Applies-to Doc. Type"::Invoice);
                        IF PurchCrMemoHeader.FINDFIRST THEN BEGIN
                          TempRemAmt := 0;
                          VendLedgEntry1.SETRANGE("Document Type",VendLedgEntry1."Document Type"::"Credit Memo");
                          VendLedgEntry1.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                          IF VendLedgEntry1.FINDFIRST THEN
                            VendLedgEntry1.CALCFIELDS(Amount,"Remaining Amount",
                              "Amount (LCY)","Remaining Amt. (LCY)");
                          WHTEntryTemp.RESET;
                          WHTEntryTemp.SETRANGE("Document Type",WHTEntry."Document Type"::"Credit Memo");
                          WHTEntryTemp.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
                          WHTEntryTemp.SETRANGE("Document No.",PurchCrMemoHeader."No.");
                          WHTEntryTemp.SETRANGE("WHT Bus. Posting Group",WHTEntry."WHT Bus. Posting Group");
                          WHTEntryTemp.SETRANGE("WHT Prod. Posting Group",WHTEntry."WHT Prod. Posting Group");
                          IF WHTEntryTemp.FINDFIRST THEN BEGIN
                            TempRemBase := WHTEntryTemp."Unrealized Amount";
                            TempRemAmt := WHTEntryTemp."Unrealized Base";
                          END;
                        END;

                        VendLedgEntry.RESET;
                        VendLedgEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
                        IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::Invoice THEN
                          VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::Invoice)
                        ELSE
                          IF GenJnlLine."Applies-to Doc. Type" = GenJnlLine."Applies-to Doc. Type"::"Credit Memo" THEN
                            VendLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type"::"Credit Memo");
                        IF VendLedgEntry.FINDFIRST THEN
                          VendLedgEntry.CALCFIELDS(Amount,"Remaining Amount",
                            "Amount (LCY)","Remaining Amt. (LCY)");
                        IF WHTEntryTemp.FINDFIRST THEN
                          ExpectedAmount := -(VendLedgEntry.Amount + VendLedgEntry1.Amount) // Original Code: Revised due to the miscalculation of WHT when CM is applied to Invoice. CM does not have a WHT
                        ELSE
                          ExpectedAmount := -(VendLedgEntry.Amount + 0);
                        IF (GenJnlLine."Posting Date" <= VendLedgEntry."Pmt. Discount Date") AND
                           (ABS(PaymentAmount1) >=
                            (ABS(VendLedgEntry."Remaining Amt. (LCY)" + VendLedgEntry1."Remaining Amt. (LCY)") -
                             ABS(
                               CurrExchRate.ExchangeAmtFCYToLCY(
                                 GenJnlLine."Document Date",
                                 GenJnlLine."Currency Code",
                                 TempVendLedgEntry."Original Pmt. Disc. Possible",CurrFactor))))
                        THEN
                          AppldAmount :=
                            ROUND(
                              ((PaymentAmount1 -
                                CurrExchRate.ExchangeAmtFCYToLCY(
                                  GenJnlLine."Document Date",
                                  GenJnlLine."Currency Code",
                                  TempVendLedgEntry."Original Pmt. Disc. Possible",CurrFactor)) *
                               (WHTEntry."Unrealized Base" + TempRemAmt)) /
                              ExpectedAmount)
                        ELSE
                          AppldAmount :=
                            ROUND(
                              (PaymentAmount1 *
                               (WHTEntry."Unrealized Base" + TempRemAmt)) /
                              ExpectedAmount);
                        TotalWHTAmount := ROUND(TotalWHTAmount + AppldAmount * WHTEntry."WHT %" / 100);
                        IF GenJnlLine."Currency Code" <> '' THEN BEGIN
                          TotalWHTAmount2 :=
                            ROUND(
                              TotalWHTAmount2 +
                              ROUND(
                                CurrExchRate.ExchangeAmtLCYToFCY(
                                  GenJnlLine."Document Date",
                                  GenJnlLine."Currency Code",
                                  AppldAmount * WHTEntry."WHT %" / 100,
                                  CurrFactor)));
                        END ELSE
                          TotalWHTAmount2 := TotalWHTAmount;

                        WHTEntry3.RESET;
                        WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
                        WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
                        WHTEntry3.CALCSUMS(Amount,"Amount (LCY)");
                        IF (ABS(ABS(WHTEntry3.Amount) + ABS(TotalWHTAmount2) - ABS(WHTEntry."Unrealized Amount")) < 0.1) AND
                           (ABS(ABS(WHTEntry3.Amount) + ABS(TotalWHTAmount2) - ABS(WHTEntry."Unrealized Amount")) > 0)
                        THEN BEGIN
                          Diff := WHTEntry."Unrealized Amount" - (WHTEntry3.Amount + TotalWHTAmount2);
                          TotalWHTAmount2 := TotalWHTAmount2 + Diff;
                        END;

                      UNTIL WHTEntry.NEXT = 0;
                  END;
                END ELSE  BEGIN
                  WHTEntry.RESET;
                  WHTEntry.SETRANGE("Document No.",VendorLedgerEntry."Document No.");
                  IF WHTEntry.FINDSET THEN
                    REPEAT
                      IF WHTPostingSetup.GET(
                           WHTEntry."WHT Bus. Posting Group",
                           WHTEntry."WHT Prod. Posting Group")
                      THEN
                        IF ((WHTPostingSetup."Realized WHT Type" =
                             WHTPostingSetup."Realized WHT Type"::Earliest) AND
                            (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                        THEN BEGIN
                          TempVendLedgEntry.RESET;
                          TempVendLedgEntry.SETRANGE("Entry No.",VendorLedgerEntry."Entry No.");
                          IF TempVendLedgEntry.FINDSET THEN BEGIN
                            TempVendLedgEntry.CALCFIELDS(
                              Amount,"Amount (LCY)",
                              "Remaining Amount","Remaining Amt. (LCY)");

                            IF CheckPmtDisc(
                                 GenJnlLine."Posting Date",
                                 TempVendLedgEntry."Pmt. Discount Date",
                                 CurrExchRate.ExchangeAmtFCYToLCY(
                                   GenJnlLine."Document Date",
                                   GenJnlLine."Currency Code",
                                   ABS(TempVendLedgEntry."Amount to Apply"),CurrFactor),
                                 ABS(TempVendLedgEntry."Remaining Amt. (LCY)"),
                                 CurrExchRate.ExchangeAmtFCYToLCY(
                                   GenJnlLine."Document Date",
                                   GenJnlLine."Currency Code",
                                   ABS(TempVendLedgEntry."Original Pmt. Disc. Possible"),CurrFactor),
                                 ABS(TotAmt))
                            THEN
                              TotAmt := TotAmt -
                                CurrExchRate.ExchangeAmtFCYToLCY(
                                  GenJnlLine."Document Date",
                                  GenJnlLine."Currency Code",
                                  TempVendLedgEntry."Original Pmt. Disc. Possible",CurrFactor);

                            IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
                               (ABS(TempVendLedgEntry."Remaining Amt. (LCY)") < ABS(TotAmt))
                            THEN BEGIN
                              IF TempVendLedgEntry."Document Type" <>
                                 TempVendLedgEntry."Document Type"::"Credit Memo"
                              THEN
                                TotAmt := TotAmt + TempVendLedgEntry."Remaining Amt. (LCY)";
                              RemainingAmt := RemainingAmt - TempVendLedgEntry."Remaining Amt. (LCY)";
                            END ELSE
                              TotAmt := 0;
                          END;
                        END;
                    UNTIL WHTEntry.NEXT = 0;
                END;
              UNTIL VendorLedgerEntry.NEXT = 0;
              IF TotAmt > 0 THEN  BEGIN
                TotalWHTAmount3 := ROUND(TotalWHTAmount3 + TotAmt * WHTPostingSetup."WHT %" / 100);
                IF GenJnlLine."Currency Code" <> '' THEN
                  TotalWHTAmount2 :=
                    ROUND(
                      TotalWHTAmount2 +
                      ROUND(
                        CurrExchRate.ExchangeAmtLCYToFCY(
                          GenJnlLine."Document Date",
                          GenJnlLine."Currency Code",
                          TotAmt * WHTPostingSetup."WHT %" / 100,
                          CurrFactor)))
                ELSE
                  TotalWHTAmount2 := TotalWHTAmount2 + TotalWHTAmount3;
              END ELSE
                WHTBase := 0;
              IF ROUND(TotalWHTAmount2) <> 0 THEN
                EXIT(ROUND(TotalWHTAmount2));
            END;
          END;
        END;
      END;

      WHTAmount := ROUND(WHTBase * WHTPostingSetup."WHT %" / 100);

      IF WHTPostingSetup.GET(GenJnlLine."WHT Business Posting Group",
           GenJnlLine."WHT Product Posting Group")
      THEN
        IF WHTPostingSetup."Realized WHT Type" = WHTPostingSetup."Realized WHT Type"::Earliest THEN BEGIN
          IF WHTBase < WHTPostingSetup."WHT Minimum Invoice Amount" THEN
            WHTAmount := 0;
        END;
    END;

    PROCEDURE CalcCustExtraWHTForEarliest@1500032(VAR GenJnlLine@1500000 : Record 81) WHTAmount : Decimal;
    VAR
      CustLedgerEntry@1500003 : Record 21;
      WHTEntry@1500004 : Record 50504;
      TotalWHTBase@1500005 : Decimal;
      WHTBase@1500001 : Decimal;
      IsRefund@1500006 : Boolean;
    BEGIN
      WHTAmount := 0;
      TotalWHTBase := 0;
      WHTBase := 0;
      IF WHTPostingSetup.GET(
           GenJnlLine."WHT Business Posting Group",
           GenJnlLine."WHT Product Posting Group")
      THEN BEGIN
        IF (WHTPostingSetup."Realized WHT Type" =
            WHTPostingSetup."Realized WHT Type"::Earliest)
        THEN BEGIN
          IF GenJnlLine."WHT Absorb Base" <> 0 THEN
            WHTBase := ABS(GenJnlLine."WHT Absorb Base")
          ELSE
            WHTBase := ABS(GenJnlLine.Amount);
        END;
      END;
      TotalWHTBase := WHTBase;
      IF GenJnlLine."Applies-to Doc. No." <> '' THEN BEGIN
        CustLedgerEntry.RESET;
        CustLedgerEntry.SETRANGE("Document No.",GenJnlLine."Applies-to Doc. No.");
        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Payment)THEN
          CustLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            CustLedgerEntry."Document Type"::Invoice);

        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund)THEN
          CustLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            CustLedgerEntry."Document Type"::"Credit Memo");

        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice)THEN
          CustLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            CustLedgerEntry."Document Type"::Payment);

        IF (GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo")THEN
          CustLedgerEntry.SETFILTER(
            "Document Type",
            '%1',
            CustLedgerEntry."Document Type"::Refund);

        IF CustLedgerEntry.FINDFIRST THEN
          IF NOT CustLedgerEntry.Prepayment THEN BEGIN
            WHTEntry.RESET;
            WHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
            IF WHTEntry.FINDFIRST THEN
              IF WHTPostingSetup.GET(
                   WHTEntry."WHT Bus. Posting Group",
                   WHTEntry."WHT Prod. Posting Group")
              THEN
                IF ((WHTPostingSetup."Realized WHT Type" =
                     WHTPostingSetup."Realized WHT Type"::Earliest) AND
                    (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                THEN BEGIN
                  IF ABS(WHTEntry."Rem Realized Base") >= WHTBase THEN
                    WHTBase := 0
                  ELSE
                    WHTBase := WHTBase - ABS(WHTEntry."Rem Realized Base");
                END;
          END ELSE
            WHTBase := 0;
      END ELSE BEGIN
        IF GenJnlLine."Applies-to ID" <> '' THEN BEGIN
          IF ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice) OR
              (GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund))
          THEN BEGIN
            CustLedgerEntry.RESET;
            CustLedgerEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
            CustLedgerEntry.SETFILTER(
              "Document Type",
              '%1|%2',
              CustLedgerEntry."Document Type"::Payment,
              CustLedgerEntry."Document Type"::"Credit Memo");
            IF CustLedgerEntry.FINDSET THEN
              REPEAT
                WHTEntry.RESET;
                WHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                IF WHTEntry.FINDSET THEN
                  REPEAT
                    IF WHTPostingSetup.GET(
                         WHTEntry."WHT Bus. Posting Group",
                         WHTEntry."WHT Prod. Posting Group")
                    THEN
                      IF ((WHTPostingSetup."Realized WHT Type" =
                           WHTPostingSetup."Realized WHT Type"::Earliest) AND
                          (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                      THEN BEGIN
                        IF TotalWHTBase > ABS(WHTEntry."Rem Realized Base") THEN BEGIN
                          TotalWHTBase := TotalWHTBase - ABS(WHTEntry."Rem Realized Base");
                          IF (((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo")) OR
                              ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::Payment)))
                          THEN
                            WHTBase := WHTBase - ABS(WHTEntry."Rem Realized Base");
                        END ELSE BEGIN
                          IF (TotalWHTBase > 0) AND (ABS(TotalWHTBase) <= ABS(WHTEntry."Rem Realized Base")) THEN
                            TotalWHTBase := TotalWHTBase - TotalWHTBase;
                          IF (((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Refund) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::"Credit Memo")) OR
                              ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Invoice) AND
                               (WHTEntry."Document Type" = WHTEntry."Document Type"::Payment)))
                          THEN
                            WHTBase := 0;
                        END;
                      END;
                  UNTIL WHTEntry.NEXT = 0;
              UNTIL CustLedgerEntry.NEXT = 0;
          END;

          IF ((GenJnlLine."Document Type" = GenJnlLine."Document Type"::Payment) OR
              (GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo"))
          THEN BEGIN
            IsRefund := FALSE;
            CustLedgerEntry.RESET;
            CustLedgerEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
            CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Refund);
            IF CustLedgerEntry.FINDSET THEN
              REPEAT
                IsRefund := TRUE;
                WHTEntry.RESET;
                WHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                IF WHTEntry.FINDSET THEN
                  REPEAT
                    IF WHTPostingSetup.GET(
                         WHTEntry."WHT Bus. Posting Group",
                         WHTEntry."WHT Prod. Posting Group")
                    THEN
                      IF ((WHTPostingSetup."Realized WHT Type" =
                           WHTPostingSetup."Realized WHT Type"::Earliest) AND
                          (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                      THEN BEGIN
                        IF TotalWHTBase > ABS(WHTEntry."Rem Realized Base") THEN BEGIN
                          TotalWHTBase := TotalWHTBase - ABS(WHTEntry."Rem Realized Base");
                          IF GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo" THEN
                            WHTBase := WHTBase - ABS(WHTEntry."Rem Realized Base");
                        END ELSE BEGIN
                          IF (TotalWHTBase > 0) AND (ABS(TotalWHTBase) <= ABS(WHTEntry."Rem Realized Base")) THEN BEGIN
                            TotalWHTBase := 0;
                            IF GenJnlLine."Document Type" = GenJnlLine."Document Type"::"Credit Memo" THEN
                              WHTBase := 0;
                          END;
                        END;
                      END;
                  UNTIL WHTEntry.NEXT = 0;
              UNTIL CustLedgerEntry.NEXT = 0;

            CustLedgerEntry.RESET;
            CustLedgerEntry.SETRANGE("Applies-to ID",GenJnlLine."Applies-to ID");
            CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Invoice);
            CustLedgerEntry.SETRANGE(Prepayment,FALSE);
            IF CustLedgerEntry.FINDSET THEN
              REPEAT
                WHTEntry.RESET;
                WHTEntry.SETRANGE("Document No.",CustLedgerEntry."Document No.");
                IF WHTEntry.FINDSET THEN
                  REPEAT
                    IF WHTPostingSetup.GET(
                         WHTEntry."WHT Bus. Posting Group",
                         WHTEntry."WHT Prod. Posting Group")
                    THEN
                      IF ((WHTPostingSetup."Realized WHT Type" =
                           WHTPostingSetup."Realized WHT Type"::Earliest) AND
                          (WHTEntry."WHT %" = WHTPostingSetup."WHT %"))
                      THEN BEGIN
                        IF TotalWHTBase > ABS(WHTEntry."Rem Realized Base") THEN BEGIN
                          TotalWHTBase := TotalWHTBase - ABS(WHTEntry."Rem Realized Base");
                          IF GenJnlLine."Document Type" = GenJnlLine."Document Type"::Payment THEN
                            WHTBase := WHTBase - ABS(WHTEntry."Rem Realized Base");
                        END ELSE BEGIN
                          IF (TotalWHTBase > 0) AND (ABS(TotalWHTBase) <= ABS(WHTEntry."Rem Realized Base")) THEN BEGIN
                            TotalWHTBase := 0;
                            IF GenJnlLine."Document Type" = GenJnlLine."Document Type"::Payment THEN
                              WHTBase := 0;
                          END;
                        END;
                      END;
                  UNTIL WHTEntry.NEXT = 0;
              UNTIL CustLedgerEntry.NEXT = 0
            ELSE
              IF NOT IsRefund THEN
                WHTBase := 0;
          END;
        END;
      END;

      WHTAmount := ROUND(WHTBase * WHTPostingSetup."WHT %" / 100);
    END;

    PROCEDURE InsertVendPrepaymentInvoiceWHT@1000000001(VAR PurchInvHeader@1500000 : Record 122;VAR PurchHeader@1000000000 : Record 38);
    VAR
      PurchLine@1000000001 : Record 39;
    BEGIN
      WITH PurchInvHeader DO BEGIN
        PurchLine.RESET;
        PurchLine.SETCURRENTKEY("Document Type","Document No.","WHT Business Posting Group","WHT Product Posting Group");
        PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
        PurchLine.SETRANGE("Document No.",PurchHeader."No.");
        PurchLine.SETFILTER(Type,'<>%1',PurchLine.Type::" ");

        IF PurchLine.FINDSET THEN
          REPEAT
            IF (PurchLine."Prepmt. Line Amount" - PurchLine."Prepmt. Amt. Inv.") <> 0 THEN
              IF WHTPostingSetup.GET(PurchLine."WHT Business Posting Group",PurchLine."WHT Product Posting Group") THEN
                IF WHTPostingSetup."WHT %" > 0 THEN BEGIN
                  DocNo := "No.";
                  DocType := DocType::Invoice;
                  PayToAccType := PayToAccType::Vendor;
                  PayToVendCustNo := "Pay-to Vendor No.";
                  BuyFromAccType := BuyFromAccType::Vendor;
                  GenBusPostGrp := PurchLine."Gen. Bus. Posting Group";
                  GenProdPostGrp := PurchLine."Gen. Prod. Posting Group";
                  TransType := TransType::Purchase;
                  BuyFromVendCustNo := "Actual Vendor No.";
                  PostingDate := "Posting Date";
                  DocDate := "Document Date";
                  CurrencyCode := "Currency Code";
                  CurrFactor := "Currency Factor";
                  ApplyDocType := "Applies-to Doc. Type";
                  ApplyDocNo := "Applies-to Doc. No.";
                  SourceCode := "Source Code";
                  ReasonCode := "Reason Code";

                  IF (WHTBusPostGrp <> PurchLine."WHT Business Posting Group") OR
                     (WHTProdPostGrp <> PurchLine."WHT Product Posting Group")
                  THEN BEGIN
                    IF AmountVAT <> 0 THEN
                      InsertPrepaymentUnrealizedWHT(TType::Purchase);
                    WHTBusPostGrp := PurchLine."WHT Business Posting Group";
                    WHTProdPostGrp := PurchLine."WHT Product Posting Group";
                    Amount := 0;
                    AbsorbBase := 0;
                    AmountVAT := 0;
                    Amount := Amount + PurchLine."Prepayment Amount";
                    AbsorbBase := AbsorbBase + PurchLine."WHT Absorb Base";
                    IF AbsorbBase <> 0 THEN
                      AmountVAT := AbsorbBase
                    ELSE
                      AmountVAT := Amount;
                  END ELSE BEGIN
                    WHTBusPostGrp := PurchLine."WHT Business Posting Group";
                    WHTProdPostGrp := PurchLine."WHT Product Posting Group";
                    Amount := Amount + PurchLine."Prepayment Amount";
                    AbsorbBase := AbsorbBase + PurchLine."WHT Absorb Base";
                    IF AbsorbBase <> 0 THEN
                      AmountVAT := AbsorbBase
                    ELSE
                      AmountVAT := Amount;
                  END;
                  WHTBusPostGrp := PurchLine."WHT Business Posting Group";
                  WHTProdPostGrp := PurchLine."WHT Product Posting Group";
                END;
          UNTIL PurchLine.NEXT = 0;
        InsertPrepaymentUnrealizedWHT(TType::Purchase);
      END;
    END;

    PROCEDURE InsertPrepaymentUnrealizedWHT@1500038(TransType@1500000 : 'Purchase,Sale') EntryNo : Integer;
    VAR
      WHTEntry@1500003 : Record 50504;
    BEGIN
      IF WHTPostingSetup.GET(WHTBusPostGrp,WHTProdPostGrp) THEN
        IF WHTPostingSetup."Realized WHT Type" <> WHTPostingSetup."Realized WHT Type"::" " THEN BEGIN
          UnrealizedWHT := (WHTPostingSetup."Realized WHT Type" IN [WHTPostingSetup."Realized WHT Type"::Earliest,
                                                                    WHTPostingSetup."Realized WHT Type"::Invoice]);
          WHTEntry.INIT;
          WHTEntry."Entry No." := NextEntryNo;
          WHTEntry."Gen. Bus. Posting Group" := GenBusPostGrp;
          WHTEntry."Gen. Prod. Posting Group" := GenProdPostGrp;
          WHTEntry."WHT Bus. Posting Group" := WHTBusPostGrp;
          WHTEntry."WHT Prod. Posting Group" := WHTProdPostGrp;
          WHTEntry."Posting Date" := PostingDate;
          WHTEntry."Document Date" := DocDate;
          WHTEntry."Document No." := DocNo;
          WHTEntry."WHT %" := WHTPostingSetup."WHT %";
          WHTEntry."Applies-to Doc. Type" := ApplyDocType;
          WHTEntry."Applies-to Doc. No." := ApplyDocNo;
          WHTEntry."Source Code" := SourceCode;
          WHTEntry."Reason Code" := ReasonCode;
          WHTEntry."WHT Revenue Type" := WHTPostingSetup."Revenue Type";
          WHTEntry."Document Type" := DocType;
          IF TransType = TransType::Purchase THEN
            WHTEntry."Transaction Type" := WHTEntry."Transaction Type"::Purchase
          ELSE
            WHTEntry."Transaction Type" := WHTEntry."Transaction Type"::Sale;
          WHTEntry."Actual Vendor No." := ActualVendorNo;
          WHTEntry."Source Code" := SourceCode;
          WHTEntry."Bill-to/Pay-to No." := PayToVendCustNo;
          WHTEntry."User ID" := USERID;
          WHTEntry."Currency Code" := CurrencyCode;

          IF UnrealizedWHT THEN BEGIN
            WHTEntry.Amount := 0;
            WHTEntry.Base := 0;
            WHTEntry.Prepayment := TRUE;
            IF AbsorbBase <> 0 THEN
              WHTEntry."Unrealized Base" := AbsorbBase
            ELSE
              WHTEntry."Unrealized Base" := AmountVAT;

            WHTEntry."Unrealized Amount" :=
              ROUND(WHTEntry."Unrealized Base" * WHTEntry."WHT %" / 100);
            WHTEntry."Remaining Unrealized Amount" := WHTEntry."Unrealized Amount";
            WHTEntry."Remaining Unrealized Base" := WHTEntry."Unrealized Base";
          END;

          IF CurrencyCode = '' THEN BEGIN
            WHTEntry."Base (LCY)" := WHTEntry.Base;
            WHTEntry."Amount (LCY)" := WHTEntry.Amount;
            WHTEntry."Unrealized Amount (LCY)" := WHTEntry."Unrealized Amount";
            WHTEntry."Unrealized Base (LCY)" := WHTEntry."Unrealized Base";
            WHTEntry."Rem Realized Base (LCY)" := WHTEntry."Rem Realized Base";
            WHTEntry."Rem Realized Amount (LCY)" := WHTEntry."Rem Realized Amount";
            WHTEntry."Rem Unrealized Amount (LCY)" := WHTEntry."Remaining Unrealized Amount";
            WHTEntry."Rem Unrealized Base (LCY)" := WHTEntry."Remaining Unrealized Base";
          END ELSE BEGIN
            WHTEntry."Base (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry.Base,CurrFactor));
            WHTEntry."Amount (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry.Amount,CurrFactor));
            WHTEntry."Unrealized Base (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry."Unrealized Base",CurrFactor));
            WHTEntry."Rem Realized Amount (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry."Rem Realized Amount (LCY)",CurrFactor));
            WHTEntry."Rem Realized Base (LCY)" :=
              ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry."Rem Realized Base (LCY)",CurrFactor));
            WHTEntry."Unrealized Amount (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  DocDate,CurrencyCode,WHTEntry."Unrealized Amount",CurrFactor));
            WHTEntry."Rem Unrealized Amount (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  DocDate,CurrencyCode,WHTEntry."Remaining Unrealized Amount",CurrFactor));
            WHTEntry."Rem Unrealized Base (LCY)" :=
              ROUND(
                CurrExchRate.ExchangeAmtFCYToLCY(
                  DocDate,CurrencyCode,WHTEntry."Remaining Unrealized Base",CurrFactor));
          END;

          //PHL0.01(-)
          // Original Code
          //WHTEntry.INSERT;
          // Updated Code
          WHTEntry.INSERT(TRUE);
          //PHL0.01(+)
          NextWHTEntryNo := WHTEntry."Entry No." + 1;
        END;
      EXIT(NextWHTEntryNo);
    END;

    PROCEDURE InitWHTEntry@1500027(TempWHTEntry@1500000 : Record 50504;AppldAmount@1500002 : Decimal;PaymentAmount1@1500003 : Decimal;VAR WHTEntry3@1500004 : Record 50504);
    VAR
      WHTEntry2@1500001 : Record 50504;
      TempWHT@1500005 : Record 50504;
      VendLedgEntry@1500006 : Record 25;
      WHTEntry4@1500007 : Record 50504;
    BEGIN
      WITH TempWHTEntry DO BEGIN
        WHTEntry2.INIT;
        WHTEntry2."Posting Date" := TempGenJnlLine."Document Date";
        WHTEntry2."Entry No." := NextEntryNo;
        WHTEntry2."Document Date" := "Document Date";
        WHTEntry2."Document Type" := TempGenJnlLine."Document Type";
        WHTEntry2."Document No." := DocNo;
        WHTEntry2."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        WHTEntry2."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        WHTEntry2."Bill-to/Pay-to No." := "Bill-to/Pay-to No.";
        WHTEntry2."WHT Bus. Posting Group" := "WHT Bus. Posting Group";
        WHTEntry2."WHT Prod. Posting Group" := "WHT Prod. Posting Group";
        WHTEntry2."WHT Revenue Type" := "WHT Revenue Type";
        WHTEntry2."Currency Code" := TempGenJnlLine."Currency Code";
        WHTEntry2."Applies-to Entry No." := "Entry No.";
        WHTEntry2."User ID" := USERID;
        WHTEntry2."External Document No." := TempGenJnlLine."External Document No.";
        WHTEntry2."Actual Vendor No." := TempGenJnlLine."Actual Vendor No.";
        WHTEntry2."Original Document No." := TempGenJnlLine."Document No.";
        WHTEntry2."Source Code" := TempGenJnlLine."Source Code";
        WHTEntry2."Unrealized WHT Entry No." := "Entry No.";
        WHTEntry2."WHT %" := "WHT %";
        VendLedgEntry.RESET;
        VendLedgEntry.SETRANGE("Document Type",TempGenJnlLine."Document Type");
        VendLedgEntry.SETRANGE("Document No.",TempGenJnlLine."Document No.");
        IF VendLedgEntry.FINDLAST THEN
          WHTEntry2."Transaction No." := VendLedgEntry."Transaction No.";
        WHTEntry2.Base := ROUND(AppldAmount);
        WHTEntry2.Amount := ROUND(WHTEntry2.Base * WHTEntry2."WHT %" / 100);
        WHTEntry2."Payment Amount" := PaymentAmount1;
        WHTEntry2."Transaction Type" := WHTEntry2."Transaction Type"::Purchase;
        WHTPostingSetup.GET("WHT Bus. Posting Group","WHT Prod. Posting Group");
        WHTEntry2."WHT Report" := WHTPostingSetup."WHT Report";

        IF TempGenJnlLine."Certificate Printed" THEN BEGIN
          WHTEntry2."WHT Report Line No" := TempGenJnlLine."WHT Report Line No.";
          TempWHT.SETRANGE("Document No.","Document No.");
          IF TempWHT.FINDFIRST THEN
            WHTEntry2."WHT Certificate No." := TempWHT."WHT Certificate No.";
        END ELSE BEGIN
          IF ((TransType = TransType::Purchase) AND
              ("Document Type" = "Document Type"::Invoice))
          THEN
            IF (WHTReportLineNo = '') AND
               (WHTEntry2.Amount <> 0) AND
               (WHTPostingSetup."WHT Report Line No. Series" <> '')
            THEN
              WHTReportLineNo :=
                NoSeriesMgt.GetNextNo(
                  WHTPostingSetup."WHT Report Line No. Series",WHTEntry2."Posting Date",TRUE);
          WHTEntry2."WHT Report Line No" := WHTReportLineNo;
        END;

        IF WHTEntry2."Currency Code" <> '' THEN BEGIN
          CurrFactor :=
            CurrExchRate.ExchangeRate(
              WHTEntry2."Posting Date",
              WHTEntry2."Currency Code");
          WHTEntry2."Base (LCY)" :=
            ROUND(
              CurrExchRate.ExchangeAmtFCYToLCY(
                TempGenJnlLine."Document Date",
                WHTEntry2."Currency Code",
                WHTEntry2.Base,CurrFactor));
          WHTEntry2."Amount (LCY)" :=
            ROUND(
              CurrExchRate.ExchangeAmtFCYToLCY(
                TempGenJnlLine."Document Date",
                WHTEntry2."Currency Code",
                WHTEntry2.Amount,CurrFactor));
        END ELSE BEGIN
          WHTEntry2."Amount (LCY)" := WHTEntry2.Amount;
          WHTEntry2."Base (LCY)" := WHTEntry2.Base;
        END;

        IF CurrencyCode = '' THEN BEGIN
          WHTEntry3."Rem Unrealized Amount (LCY)" -= WHTEntry2.Amount;
          WHTEntry3."Rem Unrealized Base (LCY)" -= WHTEntry2.Base;
        END ELSE BEGIN
          WHTEntry3."Rem Unrealized Amount (LCY)" -=
            ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry2.Amount,CurrFactor));
          WHTEntry3."Rem Unrealized Base (LCY)" -=
            ROUND(CurrExchRate.ExchangeAmtFCYToLCY(DocDate,CurrencyCode,WHTEntry2.Base,CurrFactor));
        END;
        WHTEntry3.Closed :=
          (WHTEntry3."Remaining Unrealized Base" = 0) AND (WHTEntry3."Remaining Unrealized Amount" = 0);

        IF ((WHTEntry2."Rem Realized Amount" = 0) AND
            (WHTEntry2."Rem Realized Base" = 0))
        THEN
          WHTEntry2.Closed := TRUE;

        //PHL0.01(-)
        // Original Code
        //WHTEntry2.INSERT;
        // Updated Code
        WHTEntry2.INSERT(TRUE);
        //PHL0.01(+)
        NextWHTEntryNo := WHTEntry2."Entry No." + 1;
        WHTEntry3.MODIFY;

        WHTEntry4.RESET;
        WHTEntry4.SETCURRENTKEY("Applies-to Entry No.");
        WHTEntry4.SETRANGE("Applies-to Entry No.","Entry No.");
        WHTEntry4.CALCSUMS(Amount,"Amount (LCY)");
        IF (ABS(ABS(WHTEntry4.Amount) - ABS("Unrealized Amount")) < 0.1) AND
           (ABS(ABS(WHTEntry4.Amount) - ABS("Unrealized Amount")) > 0)
        THEN BEGIN
          WHTEntry2."WHT Difference" := "Unrealized Amount" - WHTEntry4.Amount;
          WHTEntry2.Amount := WHTEntry2.Amount + WHTEntry2."WHT Difference";
          WHTEntry2.MODIFY;
        END;
        IF (ABS(ABS(WHTEntry4."Amount (LCY)") - ABS("Unrealized Amount (LCY)")) < 0.1) AND
           (ABS(ABS(WHTEntry4."Amount (LCY)") - ABS("Unrealized Amount (LCY)")) > 0)
        THEN BEGIN
          WHTEntry2."Amount (LCY)" := WHTEntry2."Amount (LCY)" +
            "Unrealized Amount (LCY)" - WHTEntry4."Amount (LCY)";
          WHTEntry2.MODIFY;
        END;
      END;
    END;

    PROCEDURE CheckWHTCalculationRule@1500029(TotalInvoiceAmountLCY@1500000 : Decimal;WHTPostingSetup@1500001 : Record 50503) : Boolean;
    BEGIN
      CASE WHTPostingSetup."WHT Calculation Rule" OF
        WHTPostingSetup."WHT Calculation Rule"::"Less than":
          IF ABS(TotalInvoiceAmountLCY) < WHTPostingSetup."WHT Minimum Invoice Amount" THEN
            EXIT(TRUE);
        WHTPostingSetup."WHT Calculation Rule"::"Less than or equal to":
          IF ABS(TotalInvoiceAmountLCY) <= WHTPostingSetup."WHT Minimum Invoice Amount" THEN
            EXIT(TRUE);
        WHTPostingSetup."WHT Calculation Rule"::"Equal to":
          IF ABS(TotalInvoiceAmountLCY) = WHTPostingSetup."WHT Minimum Invoice Amount" THEN
            EXIT(TRUE);
        WHTPostingSetup."WHT Calculation Rule"::"Greater than":
          IF ABS(TotalInvoiceAmountLCY) > WHTPostingSetup."WHT Minimum Invoice Amount" THEN
            EXIT(TRUE);
        WHTPostingSetup."WHT Calculation Rule"::"Greater than or equal to":
          IF ABS(TotalInvoiceAmountLCY) >= WHTPostingSetup."WHT Minimum Invoice Amount" THEN
            EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    PROCEDURE InsertVendPrepaymentCrMemoWHT@1500031(VAR PurchCrMemoHeader@1500000 : Record 124;VAR PurchHeader@1000000000 : Record 38);
    VAR
      PurchLine@1000000001 : Record 39;
    BEGIN
      WITH PurchCrMemoHeader DO BEGIN
        PurchLine.RESET;
        PurchLine.SETCURRENTKEY("Document Type","Document No.","WHT Business Posting Group","WHT Product Posting Group");
        PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
        PurchLine.SETRANGE("Document No.",PurchHeader."No.");
        PurchLine.SETFILTER(Type,'<>%1',PurchLine.Type::" ");

        IF PurchLine.FINDSET THEN
          REPEAT
            IF (PurchLine."Prepmt. Line Amount" - PurchLine."Prepmt. Amt. Inv.") <> 0 THEN
              IF WHTPostingSetup.GET(PurchLine."WHT Business Posting Group",PurchLine."WHT Product Posting Group") THEN
                IF WHTPostingSetup."Realized WHT Type" = WHTPostingSetup."Realized WHT Type"::Earliest THEN
                  IF WHTPostingSetup."WHT %" > 0 THEN BEGIN
                    DocNo := "No.";
                    DocType := DocType::Invoice;
                    PayToAccType := PayToAccType::Vendor;
                    PayToVendCustNo := "Pay-to Vendor No.";
                    BuyFromAccType := BuyFromAccType::Vendor;
                    GenBusPostGrp := PurchLine."Gen. Bus. Posting Group";
                    GenProdPostGrp := PurchLine."Gen. Prod. Posting Group";
                    TransType := TransType::Purchase;
                    BuyFromVendCustNo := "Actual Vendor No.";
                    PostingDate := "Posting Date";
                    DocDate := "Document Date";
                    CurrencyCode := "Currency Code";
                    CurrFactor := "Currency Factor";
                    ApplyDocType := "Applies-to Doc. Type";
                    ApplyDocNo := "Applies-to Doc. No.";
                    SourceCode := "Source Code";
                    ReasonCode := "Reason Code";

                    IF (WHTBusPostGrp <> PurchLine."WHT Business Posting Group") OR
                       (WHTProdPostGrp <> PurchLine."WHT Product Posting Group")
                    THEN BEGIN
                      IF AmountVAT <> 0 THEN
                        InsertPrepaymentUnrealizedWHT(TType::Purchase);
                      WHTBusPostGrp := PurchLine."WHT Business Posting Group";
                      WHTProdPostGrp := PurchLine."WHT Product Posting Group";
                      Amount := 0;
                      AbsorbBase := 0;
                      AmountVAT := 0;
                      Amount := -(Amount + PurchLine."Prepayment Amount");
                      AbsorbBase := -(AbsorbBase + PurchLine."WHT Absorb Base");
                      IF AbsorbBase <> 0 THEN
                        AmountVAT := AbsorbBase
                      ELSE
                        AmountVAT := Amount;
                    END ELSE BEGIN
                      WHTBusPostGrp := PurchLine."WHT Business Posting Group";
                      WHTProdPostGrp := PurchLine."WHT Product Posting Group";
                      Amount := -(Amount + PurchLine."Prepayment Amount");
                      AbsorbBase := -(AbsorbBase + PurchLine."WHT Absorb Base");
                      IF AbsorbBase <> 0 THEN
                        AmountVAT := AbsorbBase
                      ELSE
                        AmountVAT := Amount;
                    END;
                    WHTBusPostGrp := PurchLine."WHT Business Posting Group";
                    WHTProdPostGrp := PurchLine."WHT Product Posting Group";
                  END;
          UNTIL PurchLine.NEXT = 0;
        InsertPrepaymentUnrealizedWHT(TType::Purchase);
      END;
    END;

    PROCEDURE ABSMin@84(Decimal1@1000 : Decimal;Decimal2@1001 : Decimal) : Decimal;
    BEGIN
      IF ABS(Decimal1) < ABS(Decimal2) THEN
        EXIT(Decimal1);
      EXIT(Decimal2);
    END;

    LOCAL PROCEDURE CalcWHTEntriesRemAmounts@1240012(VAR WHTEntry@1240000 : Record 50504;VAR ClosingWHTEntry@1240001 : Record 50504;WHTPart@1240002 : Decimal);
    VAR
      WHTBaseToApply@1240003 : Decimal;
      WHTAmountToApply@1240004 : Decimal;
      WHTBaseToApplyLCY@1240006 : Decimal;
      WHTAmountToApplyLCY@1240005 : Decimal;
    BEGIN
      IF WHTPart >= 1 THEN BEGIN
        WHTEntry."Remaining Unrealized Amount" += ClosingWHTEntry."Remaining Unrealized Amount";
        WHTEntry."Remaining Unrealized Base" += ClosingWHTEntry."Remaining Unrealized Base";
        WHTEntry."Rem Unrealized Amount (LCY)" += ClosingWHTEntry."Rem Unrealized Amount (LCY)";
        WHTEntry."Rem Unrealized Base (LCY)" += ClosingWHTEntry."Rem Unrealized Base (LCY)";

        ClosingWHTEntry."Remaining Unrealized Amount" := 0;
        ClosingWHTEntry."Remaining Unrealized Base" := 0;
        ClosingWHTEntry."Rem Unrealized Amount (LCY)" := 0;
        ClosingWHTEntry."Rem Unrealized Base (LCY)" := 0;
      END ELSE BEGIN
        WHTBaseToApply := ROUND(WHTEntry."Remaining Unrealized Base" * WHTPart);
        WHTAmountToApply := ROUND(WHTEntry."Remaining Unrealized Amount" * WHTPart);
        WHTBaseToApplyLCY := ROUND(WHTEntry."Rem Unrealized Base (LCY)" * WHTPart);
        WHTAmountToApplyLCY := ROUND(WHTEntry."Remaining Unrealized Amount" * WHTPart);

        WHTEntry."Remaining Unrealized Amount" -= WHTAmountToApply;
        WHTEntry."Remaining Unrealized Base" -= WHTBaseToApply;
        WHTEntry."Rem Unrealized Amount (LCY)" -= WHTAmountToApplyLCY;
        WHTEntry."Rem Unrealized Base (LCY)" -= WHTBaseToApplyLCY;

        ClosingWHTEntry."Remaining Unrealized Amount" += WHTAmountToApply;
        ClosingWHTEntry."Remaining Unrealized Base" += WHTBaseToApply;
        ClosingWHTEntry."Rem Unrealized Amount (LCY)" += WHTAmountToApplyLCY;
        ClosingWHTEntry."Rem Unrealized Base (LCY)" += WHTBaseToApplyLCY;
      END;

      CloseWHTEntry(WHTEntry);
      CloseWHTEntry(ClosingWHTEntry);
    END;

    LOCAL PROCEDURE CloseWHTEntry@1240002(VAR WHTEntry@1240000 : Record 50504);
    BEGIN
      IF (WHTEntry."Remaining Unrealized Base" = 0) AND
         (WHTEntry."Remaining Unrealized Amount" = 0)
      THEN
        WHTEntry.Closed := TRUE;
    END;

    LOCAL PROCEDURE FindWHTEntryForApply@1240008(VAR WHTEntry@1240000 : Record 50504;DocType@1240001 : Option;DocNo@1240002 : Code[20];WHTBusPostingGr@1240003 : Code[10];WHTProdPostingGr@1240004 : Code[10]) : Boolean;
    BEGIN
      WHTEntry.RESET;
      WHTEntry.SETRANGE("Document Type",DocType);
      WHTEntry.SETRANGE("Document No.",DocNo);
      WHTEntry.SETRANGE("WHT Bus. Posting Group",WHTBusPostingGr);
      WHTEntry.SETRANGE("WHT Prod. Posting Group",WHTProdPostingGr);
      EXIT(WHTEntry.FINDFIRST);
    END;

    LOCAL PROCEDURE SetWHTEntryAmounts@1450000(VAR WHTEntry@1450000 : Record 50504;AbsorbBase@1450001 : Decimal;AmountVAT@1450002 : Decimal;CurrFactor@1450005 : Decimal);
    BEGIN
      WITH WHTEntry DO BEGIN
        Amount := 0;
        Base := 0;
        IF AbsorbBase <> 0 THEN
          "Unrealized Base" := AbsorbBase
        ELSE
          "Unrealized Base" := AmountVAT;
        "Unrealized Amount" := ROUND("Unrealized Base" * "WHT %" / 100);
        "Unrealized Base (LCY)" :=
          ROUND(CurrExchRate.ExchangeAmtFCYToLCY("Document Date","Currency Code","Unrealized Base",CurrFactor));
        "Unrealized Amount (LCY)" :=
          ROUND(CurrExchRate.ExchangeAmtFCYToLCY("Document Date","Currency Code","Unrealized Amount",CurrFactor));
        "Remaining Unrealized Amount" := "Unrealized Amount";
        "Remaining Unrealized Base" := "Unrealized Base";
        "Rem Unrealized Amount (LCY)" := "Unrealized Amount (LCY)";
        "Rem Unrealized Base (LCY)" := "Unrealized Base (LCY)";
      END;
    END;

    LOCAL PROCEDURE AdjustWHTEntryWithWHTDifference@1240000(WHTEntry@1240002 : Record 50504;VAR WHTEntry2@1240001 : Record 50504;VAR WHTEntry3@1240000 : Record 50504);
    VAR
      AmountDifference@1240003 : Decimal;
    BEGIN
      WHTEntry3.RESET;
      WHTEntry3.SETCURRENTKEY("Applies-to Entry No.");
      WHTEntry3.SETRANGE("Applies-to Entry No.",WHTEntry."Entry No.");
      WHTEntry3.CALCSUMS(Amount,"Amount (LCY)");
      AmountDifference := ABS(WHTEntry3.Amount) - ABS(WHTEntry."Unrealized Amount");
      IF (ABS(AmountDifference) < 0.1) AND
         (ABS(AmountDifference) > 0)
      THEN BEGIN
        WHTEntry2."WHT Difference" := WHTEntry2."WHT Difference" + ABS(WHTEntry."Unrealized Amount" - WHTEntry3.Amount);
        WHTEntry2.MODIFY;
      END ELSE
        IF WHTEntry2."WHT Difference" = 0 THEN
          IF (ABS(ABS(WHTEntry3."Amount (LCY)") - ABS(WHTEntry."Unrealized Amount (LCY)")) < 0.1) AND
             (ABS(ABS(WHTEntry3."Amount (LCY)") - ABS(WHTEntry."Unrealized Amount (LCY)")) > 0)
          THEN BEGIN
            WHTEntry2."Amount (LCY)" :=
              WHTEntry2."Amount (LCY)" + (WHTEntry."Unrealized Amount (LCY)" - WHTEntry3."Amount (LCY)");
            WHTEntry2.MODIFY;
          END;
    END;

    LOCAL PROCEDURE UpdateAmounts@1240001(VendorLedgerEntry@1240004 : Record 25;VAR GenJournalLine@1240002 : Record 81;VAR RemainingAmt@1240000 : Decimal;VAR TotAmt@1240001 : Decimal;VAR GenJnlLineAmount@1240003 : Decimal;VAR ExitLoop@1240005 : Boolean);
    BEGIN
      IF (ABS(RemainingAmt) < ABS(TotAmt)) OR
         (ABS(VendorLedgerEntry."Remaining Amount") < ABS(TotAmt))
      THEN BEGIN
        GenJnlLineAmount := ABS(ABSMin(VendorLedgerEntry."Remaining Amount",RemainingAmt));
        GenJournalLine.VALIDATE(Amount,ABS(ABSMin(VendorLedgerEntry."Amount to Apply",GenJnlLineAmount)));
        TotAmt := TotAmt - ABS(GenJournalLine.Amount);
        RemainingAmt := RemainingAmt + ABS(GenJournalLine.Amount);
      END ELSE BEGIN
        GenJournalLine.VALIDATE(Amount,TotAmt);
        ExitLoop := TRUE;
      END;
    END;

    LOCAL PROCEDURE FilterWHTEntry@1240007(VAR WHTEntry@1240000 : Record 50504;GenJournalLine@1240001 : Record 81);
    BEGIN
      WHTEntry.RESET;
      WHTEntry.SETCURRENTKEY("Transaction Type","Document No.","Document Type","Bill-to/Pay-to No.");
      WHTEntry.SETRANGE("Transaction Type",WHTEntry."Transaction Type"::Purchase);
      IF GenJournalLine."Applies-to Doc. No." <> '' THEN BEGIN
        WHTEntry.SETRANGE("Document Type",GenJournalLine."Applies-to Doc. Type");
        WHTEntry.SETRANGE("Document No.",GenJournalLine."Applies-to Doc. No.");
      END ELSE
        WHTEntry.SETRANGE("Bill-to/Pay-to No.",GenJournalLine."Account No.");
    END;

    PROCEDURE CalcAppliedWHTAmount@1240006(VAR VendorLedgerEntry@1240003 : Record 25;GenJournalLine@1240000 : Record 81;WHTPercent@1240002 : Decimal;ExitLoop@1240005 : Boolean) : Decimal;
    VAR
      Result@1240001 : Decimal;
      EntryNo@1240004 : Integer;
      TotalAmountToApply@1240006 : Decimal;
      AppliedAmount@1240008 : Decimal;
    BEGIN
      //PHL0.01(-)
      IF ExitLoop THEN BEGIN
        // Here we can have several Vendor Ledger Entries to be applied.
        // So we need iterate through remaining entries to calculate WHT amount per entry
        EntryNo := VendorLedgerEntry."Entry No.";
        TotalAmountToApply := GenJournalLine.Amount;
        REPEAT
          AppliedAmount := ABSMin(-VendorLedgerEntry."Amount to Apply",TotalAmountToApply);
          Result += CalcWHTAmount(AppliedAmount,WHTPercent);
          TotalAmountToApply -= AppliedAmount;
        UNTIL (VendorLedgerEntry.NEXT = 0) OR (TotalAmountToApply <= 0);
        VendorLedgerEntry.GET(EntryNo);
        EXIT(Result);
      //PHL0.01(+)
      END;

      EXIT(ROUND(GenJournalLine.Amount * WHTPercent / 100));
    END;

    LOCAL PROCEDURE CalcWHTAmount@1240004(Amount@1240000 : Decimal;WHTPercent@1240002 : Decimal) : Decimal;
    BEGIN
      EXIT(ROUND(Amount * WHTPercent / 100));  //PHL0.01
    END;

    PROCEDURE WHTTotalAmountPurchDocument@1(DocumentType@1002 : Option;DocumentNo@1000 : Code[20]) TotalWHTAmount : Decimal;
    VAR
      PurchLine@1001 : Record 39;
    BEGIN
      //PHL0.01 Start
      TotalWHTAmount := 0;

      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",DocumentType);
      PurchLine.SETRANGE("Document No.",DocumentNo);
      IF PurchLine.FINDFIRST THEN
      REPEAT
        IF WHTPostingSetup.GET(
          PurchLine."WHT Business Posting Group",
          PurchLine."WHT Product Posting Group")
        THEN BEGIN
          TotalWHTAmount += PurchLine.Amount * WHTPostingSetup."WHT %" / 100;
        END;
      UNTIL PurchLine.NEXT = 0;
      //PHL0.01 End
    END;

    PROCEDURE WHTTotalAmountPurchDocument2@6(DocumentType@1002 : Option;DocumentNo@1000 : Code[20]) TotalWHTAmount : Decimal;
    VAR
      PurchLine@1001 : Record 39;
    BEGIN
      //PHL0.01 Start
      TotalWHTAmount := 0;

      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",DocumentType);
      PurchLine.SETRANGE("Document No.",DocumentNo);
      IF PurchLine.FINDFIRST THEN
      REPEAT
        IF WHTPostingSetup.GET(
          PurchLine."WHT Business Posting Group",
          PurchLine."WHT Product Posting Group")
        THEN BEGIN
          TotalWHTAmount += PurchLine."VAT Base Amount" * WHTPostingSetup."WHT %" / 100;
        END;
      UNTIL PurchLine.NEXT = 0;
      //PHL0.01 End
    END;

    PROCEDURE WHTTotalAmountPostedPurchInvDoc@3(DocumentNo@1000 : Code[20]) TotalWHTAmount : Decimal;
    VAR
      PurchInvLine@1005 : Record 123;
    BEGIN
      //PHL0.01 Start
      TotalWHTAmount := 0;

      PurchInvLine.RESET;
      PurchInvLine.SETRANGE("Document No.",DocumentNo);
      IF PurchInvLine.FINDFIRST THEN
      REPEAT
        IF WHTPostingSetup.GET(
          PurchInvLine."WHT Business Posting Group",
          PurchInvLine."WHT Product Posting Group")
        THEN BEGIN
          TotalWHTAmount += PurchInvLine.Amount * WHTPostingSetup."WHT %" / 100;
        END;
      UNTIL PurchInvLine.NEXT = 0;
      //PHL0.01 End
    END;

    PROCEDURE WHTTotalAmountPostedPurchCrDoc@4(DocumentNo@1000 : Code[20]) TotalWHTAmount : Decimal;
    VAR
      PurchCrMemoLine@1003 : Record 125;
    BEGIN
      //PHL0.01 Start
      TotalWHTAmount := 0;

      PurchCrMemoLine.RESET;
      PurchCrMemoLine.SETRANGE("Document No.",DocumentNo);
      IF PurchCrMemoLine.FINDFIRST THEN
      REPEAT
        IF WHTPostingSetup.GET(
          PurchCrMemoLine."WHT Business Posting Group",
          PurchCrMemoLine."WHT Product Posting Group")
        THEN BEGIN
          TotalWHTAmount += PurchCrMemoLine.Amount * WHTPostingSetup."WHT %" / 100;
        END;
      UNTIL PurchInvLine.NEXT = 0;
      //PHL0.01 End
    END;

    PROCEDURE WHTTotalAmountSalesDocument@2(DocumentType@1002 : Option;DocumentNo@1000 : Code[20]) TotalWHTAmount : Decimal;
    VAR
      SalesLine@1001 : Record 37;
    BEGIN
      //PHL0.01 Start
      TotalWHTAmount := 0;

      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type",DocumentType);
      SalesLine.SETRANGE("Document No.",DocumentNo);
      IF SalesLine.FINDFIRST THEN
      REPEAT
        IF WHTPostingSetup.GET(
          SalesLine."WHT Business Posting Group",
          SalesLine."WHT Product Posting Group")
        THEN BEGIN
          TotalWHTAmount += SalesLine.Amount * WHTPostingSetup."WHT %" / 100;
        END;
      UNTIL SalesLine.NEXT = 0;
      //PHL0.01 End
    END;

    PROCEDURE WHTTotalAmountPurchDocument_QtyToInvoice@5(DocumentType@1002 : Option;DocumentNo@1000 : Code[20]) TotalWHTAmount : Decimal;
    VAR
      PurchLine@1001 : Record 39;
    BEGIN
      //PHL0.01 Start
      TotalWHTAmount := 0;

      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",DocumentType);
      PurchLine.SETRANGE("Document No.",DocumentNo);
      IF PurchLine.FINDFIRST THEN
      REPEAT
        IF WHTPostingSetup.GET(
          PurchLine."WHT Business Posting Group",
          PurchLine."WHT Product Posting Group")
        THEN BEGIN
          IF PurchLine."Qty. to Invoice" > 0 THEN
            TotalWHTAmount += (PurchLine.Amount * WHTPostingSetup."WHT %" / 100) * (PurchLine."Qty. to Invoice");
        END;
      UNTIL PurchLine.NEXT = 0;
      //PHL0.01 End
    END;

    PROCEDURE WHTTotalAmountPurchDocument_QtyToInvoice2@28(DocumentType@1002 : Option;DocumentNo@1000 : Code[20]) TotalWHTAmount : Decimal;
    VAR
      PurchLine@1001 : Record 39;
    BEGIN
      //PHL0.01 Start
      TotalWHTAmount := 0;

      PurchLine.RESET;
      PurchLine.SETRANGE("Document Type",DocumentType);
      PurchLine.SETRANGE("Document No.",DocumentNo);
      IF PurchLine.FINDFIRST THEN
      REPEAT
        IF WHTPostingSetup.GET(
          PurchLine."WHT Business Posting Group",
          PurchLine."WHT Product Posting Group")
        THEN BEGIN
          IF (PurchLine."Qty. to Invoice" > 0) AND (PurchLine."Qty. to Invoice" < 1)  THEN BEGIN
            TotalWHTAmount += ROUND(((PurchLine.Amount * WHTPostingSetup."WHT %" / 100) * (PurchLine."Qty. to Invoice")),0.01, '=');
          END
          ELSE IF (PurchLine."Qty. to Invoice" > 0) THEN
            TotalWHTAmount += ROUND((((PurchLine.Amount * WHTPostingSetup."WHT %" / 100) / PurchLine.Quantity) * (PurchLine."Qty. to Invoice")),0.01, '=');
        END;
      UNTIL PurchLine.NEXT = 0;
      //PHL0.01 End
    END;

    PROCEDURE CheckApplicationPaymentWHT@7(GenJnlLine@1000 : Record 81);
    VAR
      VendLedgEntry2@1001 : Record 25;
      Error01@1003 : TextConst 'ENU=No %1 found with details %2 %3. %1 must be recorded first.';
      Error03@1002 : TextConst 'ENU=You cannot apply %1 in %2 %3 with %4. Proceeding with the transaction will cause inconsistency to the record.';
      WHTEntry@1004 : Record 50504;
      WHTPostingSetup@1005 : Record 50503;
    BEGIN
      { ******************
      PHP: OC
      Check the applied document has WHT Entry
      ****************** }

      WITH GenJnlLine DO BEGIN
        IF ("Document Type" = "Document Type"::Payment) THEN
          IF ("WHT Product Posting Group" <> '') OR ("WHT Business Posting Group" <> '') THEN BEGIN
            IF WHTPostingSetup.GET("WHT Business Posting Group", "WHT Product Posting Group") AND
               (WHTPostingSetup."WHT %" <> 0) THEN BEGIN
              TESTFIELD("Applies-to Doc. Type");
              TESTFIELD("Applies-to Doc. No.");
            END;
            IF "Account Type" = "Account Type"::Vendor THEN BEGIN // Valid only for Vendor Payment
              IF "Applies-to ID" <> '' THEN BEGIN // Check if the Journal Entry has been applied to Vendor Ledger Multiple Times
                VendLedgEntry2.RESET;
                VendLedgEntry2.SETRANGE("Applies-to ID", "Applies-to ID");
                VendLedgEntry2.SETRANGE(Open, TRUE);
                IF VendLedgEntry2.FINDSET THEN
                  REPEAT
                    WHTEntry.RESET;
                    WHTEntry.SETRANGE("Bill-to/Pay-to No.", VendLedgEntry2."Vendor No.");
                    WHTEntry.SETRANGE("Document Type", VendLedgEntry2."Document Type");
                    WHTEntry.SETRANGE("Document No.", VendLedgEntry2."Document No.");
                    IF  WHTEntry.FINDLAST THEN
                      ERROR(Error03, "Applies-to ID", VendLedgEntry2."Document Type", VendLedgEntry2."Document No.", WHTEntry.TABLECAPTION);
                  UNTIL VendLedgEntry2.NEXT = 0;
              END ELSE BEGIN
                VendLedgEntry2.RESET;
                VendLedgEntry2.SETRANGE("Document Type", "Applies-to Doc. Type");
                VendLedgEntry2.SETRANGE("Document No.", "Applies-to Doc. No.");
                VendLedgEntry2.SETRANGE(Open, TRUE);
                IF VendLedgEntry2.FINDSET THEN
                  REPEAT
                    WHTEntry.RESET;
                    WHTEntry.SETRANGE("Bill-to/Pay-to No.", VendLedgEntry2."Vendor No.");
                    WHTEntry.SETRANGE("Document Type", VendLedgEntry2."Document Type");
                    WHTEntry.SETRANGE("Document No.", VendLedgEntry2."Document No.");
                    IF WHTEntry.FINDLAST THEN BEGIN
                      TESTFIELD("WHT Business Posting Group", WHTEntry."WHT Bus. Posting Group");
                      TESTFIELD("WHT Product Posting Group", WHTEntry."WHT Prod. Posting Group");
                    END;
                  UNTIL VendLedgEntry2.NEXT = 0;
              END;
            END;
          END ELSE BEGIN
            IF "Account Type" = "Account Type"::Vendor THEN BEGIN // Valid only for Vendor Payment
              IF "Applies-to ID" <> '' THEN BEGIN // Check if the Journal Entry has been applied to Vendor Ledger Multiple Times
                VendLedgEntry2.RESET;
                VendLedgEntry2.SETRANGE("Applies-to ID", "Applies-to ID");
                VendLedgEntry2.SETRANGE(Open, TRUE);
                IF VendLedgEntry2.FINDSET THEN
                  REPEAT
                    WHTEntry.RESET;
                    WHTEntry.SETRANGE("Bill-to/Pay-to No.", VendLedgEntry2."Vendor No.");
                    WHTEntry.SETRANGE("Document Type", VendLedgEntry2."Document Type");
                    WHTEntry.SETRANGE("Document No.", VendLedgEntry2."Document No.");
                    IF  WHTEntry.FINDLAST THEN
                      ERROR(Error03, "Applies-to ID", VendLedgEntry2."Document Type", VendLedgEntry2."Document No.", WHTEntry.TABLECAPTION);
                  UNTIL VendLedgEntry2.NEXT = 0;
              END ELSE BEGIN
                VendLedgEntry2.RESET;
                VendLedgEntry2.SETRANGE("Document Type", "Applies-to Doc. Type");
                VendLedgEntry2.SETRANGE("Document No.", "Applies-to Doc. No.");
                VendLedgEntry2.SETRANGE(Open, TRUE);
                IF VendLedgEntry2.FINDSET THEN
                  REPEAT
                    WHTEntry.RESET;
                    WHTEntry.SETRANGE("Bill-to/Pay-to No.", VendLedgEntry2."Vendor No.");
                    WHTEntry.SETRANGE("Document Type", VendLedgEntry2."Document Type");
                    WHTEntry.SETRANGE("Document No.", VendLedgEntry2."Document No.");
                    IF WHTEntry.FINDLAST THEN BEGIN
                      TESTFIELD("WHT Business Posting Group", WHTEntry."WHT Bus. Posting Group");
                      TESTFIELD("WHT Product Posting Group", WHTEntry."WHT Prod. Posting Group");
                    END;
                  UNTIL VendLedgEntry2.NEXT = 0;
              END;
            END;
          END;
      END;
    END;

    BEGIN
    {
      //PHL0.01
    }
    END.
  }
}

OBJECT Page 370 Bank Account Card
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=12:48:23 AM;
    Modified=Yes;
    Version List=NAVW19.00,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bank Account Card;
    SourceTable=Table270;
    PageType=Card;
    OnInit=BEGIN
             MapPointVisible := TRUE;
           END;

    OnOpenPage=VAR
                 Contact@1001 : Record 5050;
                 MapMgt@1000 : Codeunit 802;
               BEGIN
                 IF NOT MapMgt.TestSetup THEN
                   MapPointVisible := FALSE;
                 ContactActionVisible := Contact.READPERMISSION;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Check Report Name");
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 40      ;1   ;ActionGroup;
                      CaptionML=ENU=&Bank Acc.;
                      Image=Bank }
      { 42      ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      RunObject=Page 375;
                      RunPageLink=No.=FIELD(No.),
                                  Date Filter=FIELD(Date Filter),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter);
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 43      ;2   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Bank Account),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 84      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(270),
                                  No.=FIELD(No.);
                      Image=Dimensions }
      { 52      ;2   ;Action    ;
                      CaptionML=ENU=Balance;
                      RunObject=Page 377;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter);
                      Image=Balance }
      { 53      ;2   ;Action    ;
                      Name=Statements;
                      CaptionML=ENU=St&atements;
                      RunObject=Page 389;
                      RunPageLink=Bank Account No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Process }
      { 44      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      RunObject=Page 372;
                      RunPageView=SORTING(Bank Account No.);
                      RunPageLink=Bank Account No.=FIELD(No.);
                      Promoted=No;
                      Image=BankAccountLedger;
                      PromotedCategory=Process }
      { 46      ;2   ;Action    ;
                      CaptionML=ENU=Chec&k Ledger Entries;
                      RunObject=Page 374;
                      RunPageView=SORTING(Bank Account No.);
                      RunPageLink=Bank Account No.=FIELD(No.);
                      Image=CheckLedger }
      { 56      ;2   ;Action    ;
                      CaptionML=ENU=C&ontact;
                      Visible=ContactActionVisible;
                      Image=ContactPerson;
                      OnAction=BEGIN
                                 ShowContact;
                               END;
                                }
      { 81      ;2   ;Separator  }
      { 86      ;2   ;Action    ;
                      CaptionML=ENU=Online Map;
                      Image=Map;
                      OnAction=BEGIN
                                 DisplayMap;
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=PagePositivePayEntries;
                      CaptionML=ENU=Positive Pay Entries;
                      RunObject=Page 1231;
                      RunPageLink=Bank Account No.=FIELD(No.);
                      Visible=False;
                      Image=CheckLedger }
      { 1905334303;1 ;Action    ;
                      Name=BankAccountReconciliations;
                      CaptionML=ENU=Bank Account Reconciliations;
                      RunObject=Page 388;
                      RunPageView=SORTING(Bank Account No.);
                      RunPageLink=Bank Account No.=FIELD(No.);
                      Promoted=Yes;
                      Image=BankAccountRec;
                      PromotedCategory=Process }
      { 1906306803;1 ;Action    ;
                      CaptionML=ENU=Receivables-Payables;
                      RunObject=Page 355;
                      Promoted=Yes;
                      Image=ReceivablesPayables;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1903941404;1 ;Action    ;
                      CaptionML=ENU=Cash Receipt Journals;
                      RunObject=Page 255;
                      Promoted=Yes;
                      Image=Journals;
                      PromotedCategory=Process }
      { 1906045504;1 ;Action    ;
                      CaptionML=ENU=Payment Journals;
                      RunObject=Page 256;
                      Promoted=Yes;
                      Image=Journals;
                      PromotedCategory=Process }
      { 37      ;1   ;Action    ;
                      Name=PagePosPayExport;
                      CaptionML=ENU=Positive Pay Export;
                      RunObject=Page 1233;
                      RunPageLink=No.=FIELD(No.);
                      Promoted=Yes;
                      Visible=False;
                      Image=Export;
                      PromotedCategory=Process }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1900084706;1 ;Action    ;
                      CaptionML=ENU=List;
                      RunObject=Report 1402;
                      Promoted=Yes;
                      Image=OpportunitiesList;
                      PromotedCategory=Report }
      { 1900670506;1 ;Action    ;
                      CaptionML=ENU=Detail Trial Balance;
                      RunObject=Report 1404;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906306806;1 ;Action    ;
                      CaptionML=ENU=Receivables-Payables;
                      RunObject=Report 5;
                      Promoted=No;
                      Image=ReceivablesPayables;
                      PromotedCategory=Report }
      { 1904208406;1 ;Action    ;
                      CaptionML=ENU=Check Details;
                      RunObject=Report 1406;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;;Container;
                Name=;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr=Name;
                Importance=Promoted }

    { 6   ;2   ;Field     ;
                SourceExpr=Address }

    { 8   ;2   ;Field     ;
                SourceExpr="Address 2" }

    { 11  ;2   ;Field     ;
                SourceExpr="Post Code" }

    { 10  ;2   ;Field     ;
                SourceExpr=City }

    { 12  ;2   ;Field     ;
                SourceExpr="Country/Region Code" }

    { 14  ;2   ;Field     ;
                SourceExpr="Phone No." }

    { 18  ;2   ;Field     ;
                SourceExpr=Contact }

    { 64  ;2   ;Field     ;
                SourceExpr="Bank Branch No." }

    { 36  ;2   ;Field     ;
                SourceExpr="Bank Account No.";
                Importance=Promoted }

    { 20  ;2   ;Field     ;
                SourceExpr="Search Name" }

    { 22  ;2   ;Field     ;
                SourceExpr=Balance;
                Importance=Promoted }

    { 54  ;2   ;Field     ;
                SourceExpr="Balance (LCY)" }

    { 24  ;2   ;Field     ;
                SourceExpr="Min. Balance" }

    { 26  ;2   ;Field     ;
                SourceExpr="Our Contact Code" }

    { 28  ;2   ;Field     ;
                SourceExpr=Blocked }

    { 30  ;2   ;Field     ;
                SourceExpr="Last Date Modified" }

    { 1902768601;1;Group  ;
                CaptionML=ENU=Communication }

    { 16  ;2   ;Field     ;
                Name=Phone No.2;
                SourceExpr="Phone No.";
                Importance=Promoted }

    { 66  ;2   ;Field     ;
                SourceExpr="Fax No." }

    { 68  ;2   ;Field     ;
                SourceExpr="E-Mail";
                Importance=Promoted }

    { 70  ;2   ;Field     ;
                SourceExpr="Home Page" }

    { 1904784501;1;Group  ;
                CaptionML=ENU=Posting }

    { 34  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Importance=Promoted }

    { 48  ;2   ;Field     ;
                SourceExpr="Last Check No." }

    { 33  ;2   ;Field     ;
                SourceExpr="Last FT No." }

    { 50  ;2   ;Field     ;
                SourceExpr="Transit No." }

    { 60  ;2   ;Field     ;
                SourceExpr="Last Statement No.";
                Importance=Promoted }

    { 29  ;2   ;Field     ;
                SourceExpr="Last Payment Statement No." }

    { 62  ;2   ;Field     ;
                SourceExpr="Balance Last Statement";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF "Balance Last Statement" <> xRec."Balance Last Statement" THEN
                               IF NOT CONFIRM(Text001,FALSE,"No.") THEN
                                 ERROR(Text002);
                           END;
                            }

    { 32  ;2   ;Field     ;
                SourceExpr="Bank Acc. Posting Group";
                Importance=Promoted }

    { 27  ;2   ;Group     ;
                CaptionML=ENU=Payment Match Tolerance;
                GroupType=Group }

    { 23  ;3   ;Field     ;
                SourceExpr="Match Tolerance Type" }

    { 25  ;3   ;Field     ;
                DecimalPlaces=0:2;
                SourceExpr="Match Tolerance Value" }

    { 1905090301;1;Group  ;
                CaptionML=ENU=Transfer }

    { 59  ;2   ;Field     ;
                Name=Bank Branch No.2;
                SourceExpr="Bank Branch No.";
                Importance=Promoted }

    { 58  ;2   ;Field     ;
                Name=Bank Account No.2;
                SourceExpr="Bank Account No.";
                Importance=Promoted }

    { 76  ;2   ;Field     ;
                Name=Transit No.2;
                SourceExpr="Transit No." }

    { 78  ;2   ;Field     ;
                SourceExpr="SWIFT Code";
                Importance=Promoted }

    { 82  ;2   ;Field     ;
                SourceExpr=IBAN;
                Importance=Promoted }

    { 7   ;2   ;Field     ;
                SourceExpr="Bank Statement Import Format" }

    { 3   ;2   ;Field     ;
                SourceExpr="Payment Export Format" }

    { 15  ;2   ;Field     ;
                SourceExpr="SEPA Direct Debit Exp. Format" }

    { 9   ;2   ;Field     ;
                SourceExpr="Credit Transfer Msg. Nos." }

    { 13  ;2   ;Field     ;
                SourceExpr="Direct Debit Msg. Nos." }

    { 5   ;2   ;Field     ;
                SourceExpr="Creditor No." }

    { 19  ;2   ;Field     ;
                SourceExpr="Bank Name - Data Conversion" }

    { 21  ;2   ;Field     ;
                SourceExpr="Bank Clearing Standard" }

    { 17  ;2   ;Field     ;
                SourceExpr="Bank Clearing Code" }

    { 31  ;2   ;Field     ;
                SourceExpr="Positive Pay Export Code";
                Visible=False;
                LookupPageID=Bank Export/Import Setup }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      MapPointVisible@19022708 : Boolean INDATASET;
      Text001@1000 : TextConst 'ENU=There may be a statement using the %1.\\Do you want to change Balance Last Statement?';
      Text002@1001 : TextConst 'ENU=Canceled.';
      ContactActionVisible@1002 : Boolean INDATASET;

    BEGIN
    {
      !! Documentation Page 370 Bank Account Card

      4:43 PM Thursday, August 29, 2024
        Additional column for Last FT No. to be used for FT Report
    }
    END.
  }
}

OBJECT Page 50030 Request for Purchases
{
  OBJECT-PROPERTIES
  {
    Date=08/16/18;
    Time=[ 3:12:12 PM];
    Modified=Yes;
    Version List=NAVW19.00.00.47838,NAVOC1.00.02.01;
  }
  PROPERTIES
  {
    Editable=No;
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=CONST(Invoice),
                          Request Type=CONST(Request for Purchase));
    PageType=List;
    CardPageID=Request for Purchase;
    OnOpenPage=VAR
                 PurchasesPayablesSetup@1000 : Record 312;
               BEGIN
                 // SetSecurityFilterOnRespCenter;

                 IF UserSetupMgt.GetRFPurFilter <> '' THEN BEGIN
                  FILTERGROUP(2);
                  SETRANGE("Responsibility Center",UserSetupMgt.GetRFPurFilter);
                  FILTERGROUP(0);
                 END;

                 JobQueueActive := PurchasesPayablesSetup.JobQueueActive;
               END;

    OnAfterGetCurrRecord=BEGIN
                           SetControlAppearance;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.UnresolvedTicket.PAGE.SetTicketRecordReferance(Rec); // PHP Start Ticket Module
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1102601017;1 ;ActionGroup;
                      CaptionML=ENU=&Invoice;
                      Image=Invoice }
      { 1102601019;2 ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      Promoted=Yes;
                      Visible=False;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Purchase Statistics",Rec);
                               END;
                                }
      { 1102601021;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 1102601022;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=Approvals;
                      CaptionML=ENU=Approvals;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;ActionGroup;
                      CaptionML=ENU=Release;
                      Image=ReleaseDoc }
      { 1102601015;2 ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Re&lease;
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 1102601016;2 ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Re&open;
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 1102601000;1 ;ActionGroup;
                      CaptionML=ENU=Request Approval;
                      Image=Action }
      { 14      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      Enabled=OpenApprovalEntriesExist;
                      Image=Cancel;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 50      ;1   ;ActionGroup;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 52      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      Promoted=Yes;
                      Visible=False;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SendToPosting(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      Visible=False;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=ENU=Test Report;
                      Visible=False;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 53      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      Promoted=Yes;
                      Visible=False;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SendToPosting(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Name=PostBatch;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post &Batch;
                      Promoted=Yes;
                      Visible=False;
                      Image=PostBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purchase Invoices",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=ENU=Remove From Job Queue;
                      Visible=JobQueueActive;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Width=15;
                SourceExpr="No.";
                Style=Strong;
                StyleExpr=TRUE }

    { 16  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 18  ;2   ;Field     ;
                SourceExpr="Employee No." }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Employee Name;
                SourceExpr=GetEmpName;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor No.";
                Visible=False }

    { 13  ;2   ;Field     ;
                SourceExpr="Order Address Code";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Buy-from Vendor Name";
                Visible=False }

    { 15  ;2   ;Field     ;
                SourceExpr="Vendor Authorization No.";
                Visible=False }

    { 27  ;2   ;Field     ;
                SourceExpr="Buy-from Post Code";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Buy-from Country/Region Code";
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                SourceExpr="Buy-from Contact";
                Visible=FALSE }

    { 163 ;2   ;Field     ;
                SourceExpr="Pay-to Vendor No.";
                Visible=FALSE }

    { 161 ;2   ;Field     ;
                SourceExpr="Pay-to Name";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                SourceExpr="Pay-to Post Code";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                SourceExpr="Pay-to Country/Region Code";
                Visible=FALSE }

    { 151 ;2   ;Field     ;
                SourceExpr="Pay-to Contact";
                Visible=FALSE }

    { 147 ;2   ;Field     ;
                SourceExpr="Ship-to Code";
                Visible=FALSE }

    { 145 ;2   ;Field     ;
                SourceExpr="Ship-to Name";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                SourceExpr="Ship-to Post Code";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                SourceExpr="Ship-to Country/Region Code";
                Visible=FALSE }

    { 135 ;2   ;Field     ;
                SourceExpr="Ship-to Contact";
                Visible=FALSE }

    { 131 ;2   ;Field     ;
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 113 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 111 ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 115 ;2   ;Field     ;
                SourceExpr="Location Code";
                Visible=TRUE }

    { 99  ;2   ;Field     ;
                SourceExpr="Purchaser Code" }

    { 31  ;2   ;Field     ;
                SourceExpr="Assigned User ID";
                Visible=False }

    { 11  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Vendor Invoice No.";
                Visible=False }

    { 1102601003;2;Field  ;
                SourceExpr=Status }

    { 1102601005;2;Field  ;
                SourceExpr="Payment Terms Code";
                Visible=FALSE }

    { 1102601007;2;Field  ;
                SourceExpr="Due Date";
                Visible=FALSE }

    { 1102601009;2;Field  ;
                SourceExpr="Payment Discount %";
                Visible=FALSE }

    { 1102601011;2;Field  ;
                SourceExpr="Payment Method Code";
                Visible=FALSE }

    { 1102601020;2;Field  ;
                SourceExpr="Shipment Method Code";
                Visible=FALSE }

    { 1102601025;2;Field  ;
                SourceExpr="Requested Receipt Date";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Job Queue Status";
                Visible=JobQueueActive }

    { 19  ;2   ;Field     ;
                SourceExpr="INTP No." }

    { 24  ;2   ;Field     ;
                SourceExpr="Created By User ID" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 25  ;1   ;Part      ;
                Name=UnresolvedTicket;
                CaptionML=ENU=Unresolved Ticket;
                PagePartID=Page50654;
                PartType=Page;
                ShowFilter=No }

    { 8   ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.),
                            Date Filter=FIELD(Date Filter);
                PagePartID=Page9093;
                Visible=TRUE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ReportPrint@1102601000 : Codeunit 228;
      NoSeriesMgt@1003 : Codeunit 396;
      JobQueueActive@1001 : Boolean INDATASET;
      OpenApprovalEntriesExist@1002 : Boolean;
      CustomSetup@1000 : Record 50001;
      PurchaseHeader@1004 : Record 38;
      Usersetup@1005 : Record 91;
      UserSetupMgt@1006 : Codeunit 5700;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1000 : Codeunit 1535;
    BEGIN
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
    END;

    PROCEDURE FilterINTP@1(VAR INTP_@1000 : Record 50040);
    BEGIN
      FILTERGROUP(2);
      SETRANGE("INTP No.", INTP_."No.");
      FILTERGROUP(0);
    END;

    BEGIN
    END.
  }
}


OBJECT Codeunit 951 Time Sheet Approval Management
{
  OBJECT-PROPERTIES
  {
    Date=09/25/18;
    Time=[ 3:49:01 PM];
    Modified=Yes;
    Version List=NAVW19.00,OC02.01;
  }
  PROPERTIES
  {
    Permissions=TableData 5200=r;
    OnRun=BEGIN
            AfterSubmit;
          END;

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst '@@@="There is nothing to submit for line with Time Sheet No.=10, Line No.=10000.";ENU="There is nothing to submit for line with %1=%2, %3=%4."';
      Text002@1001 : TextConst 'ENU=You are not authorized to approve time sheet lines. Contact your time sheet administrator.';
      Text003@1002 : TextConst 'ENU=Time sheet line cannot be reopened because there are linked service lines.';
      Text004@1004 : TextConst 'ENU=&All open lines [%1 line(s)],&Selected line(s) only';
      Text005@1003 : TextConst 'ENU=&All submitted lines [%1 line(s)],&Selected line(s) only';
      Text006@1005 : TextConst 'ENU=&All approved lines [%1 line(s)],&Selected line(s) only';
      Text007@1007 : TextConst 'ENU=Submit for approval';
      Text008@1006 : TextConst 'ENU=Reopen for editing';
      Text009@1010 : TextConst 'ENU=Approve for posting';
      Text010@1008 : TextConst 'ENU=Reject for correction';
      TimeSheetLines@1009 : Record 951;
      Count@1011 : Integer;
      SMTPMail@1012 : Codeunit 400;
      Resouce@1013 : Record 156;
      UserSetup@1014 : Record 91;
      TimeSheetHeader@1015 : Record 950;
      SMTPSetup@1016 : Record 409;
      EmailTemplate@1017 : Text;
      Job@1018 : Record 167;
      CustomEmailReminder@1020 : Codeunit 50011;
      UserSetupMgt@1019 : Codeunit 5700;

    PROCEDURE AfterSubmit@18();
    BEGIN
      TimeSheetLines.SETFILTER(Status,'Submitted');
      IF TimeSheetLines.COUNT > 0 THEN
        IF TimeSheetLines.FINDSET THEN BEGIN
          REPEAT
            SendMailNotification(TimeSheetLines);
          UNTIL TimeSheetLines.NEXT = 0;
      END;
    END;

    PROCEDURE AfterReopen@23();
    BEGIN
      TimeSheetLines.SETFILTER(Status,'Open');
      IF TimeSheetLines.COUNT > 0 THEN
        IF TimeSheetLines.FINDSET THEN BEGIN
          REPEAT
            MESSAGE('');
            // SendMailNotification(TimeSheetLines);
          UNTIL TimeSheetLines.NEXT = 0;
      END;
    END;

    PROCEDURE SendMailNotification@14(VAR TimeSheetLine@1000 : Record 951);
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF TimeSheetLine."Submitted Mail Sent" = "Submitted Mail Sent"::"1" THEN
          EXIT;

        "Submitted Mail Sent" := "Submitted Mail Sent"::"1";
        MODIFY(TRUE);
        TimeSheetHeader.GET("Time Sheet No.");
        UserSetup.GET(TimeSheetHeader."Approver User ID");
        SMTPSetup.FINDFIRST;
        IF UserSetup."E-Mail" = '' THEN
          EXIT;

        IF TimeSheetLine.Type = TimeSheetLine.Type::Job THEN BEGIN
          IF Job.GET(TimeSheetLine."Job No.") AND (Job."Person Responsible No." <> '') AND
            Resouce.GET(Job."Person Responsible No.") AND (Resouce."Time Sheet Owner User ID" <> '') AND
            UserSetup.GET(Resouce."Time Sheet Owner User ID") AND (UserSetup."E-Mail" <> '') THEN BEGIN
            SMTPMail.CreateMessage(SMTPSetup."User ID", SMTPSetup."User ID", UserSetup."E-Mail",
              'Time Sheet Approval Notification','',TRUE);
            END ELSE BEGIN
            SMTPMail.CreateMessage(SMTPSetup."User ID", SMTPSetup."User ID", UserSetup."E-Mail",
              'Time Sheet Approval Notification','',TRUE);
            END;
          END ELSE BEGIN
            SMTPMail.CreateMessage(SMTPSetup."User ID", SMTPSetup."User ID", UserSetup."E-Mail",
            'Time Sheet Approval Notification','',TRUE);
        END;
        SMTPMail.AppendBody('<!DOCTYPE html>');
        SMTPMail.AppendBody('<html>');
        SMTPMail.AppendBody('<head>');
        SMTPMail.AppendBody('<title></title>');
        SMTPMail.AppendBody('</head>');
        SMTPMail.AppendBody('<body>');
        SMTPMail.AppendBody(('<h4>Time Sheet Filling has been made by: '+ TimeSheetHeader."Owner User ID" +'</h4>'));
        SMTPMail.AppendBody('<table>');
        SMTPMail.AppendBody('<tr>');
        SMTPMail.AppendBody('<td>Time Sheet No.</td>');
        SMTPMail.AppendBody('<td><strong>'+ TimeSheetLine."Time Sheet No." +'</strong></td>');
        SMTPMail.AppendBody('</tr>');
        SMTPMail.AppendBody('<tr>');
        SMTPMail.AppendBody('<td>Type</td>');
        SMTPMail.AppendBody('<td><strong>'+ FORMAT(TimeSheetLine.Type) +'</strong></td>');
        SMTPMail.AppendBody('</tr>');
        IF TimeSheetLine.Type = Type::Job THEN  BEGIN
            SMTPMail.AppendBody('<tr>');
            SMTPMail.AppendBody('<td>Job No.</td>');
            SMTPMail.AppendBody('<td><strong>'+ FORMAT(TimeSheetLine."Job No.") +'</strong></td>');
            SMTPMail.AppendBody('</tr>');
            SMTPMail.AppendBody('<tr>');
            SMTPMail.AppendBody('<td>Job Task No.</td>');
            SMTPMail.AppendBody('<td><strong>'+ FORMAT(TimeSheetLine."Job Task No.") +'</strong></td>');
            SMTPMail.AppendBody('</tr>');
        END;
        SMTPMail.AppendBody('<tr>');
        SMTPMail.AppendBody('<td>Description</td>');
        SMTPMail.AppendBody('<td><strong>'+ TimeSheetLine.Description +'</strong></td>');
        SMTPMail.AppendBody('</tr>');
        SMTPMail.AppendBody('<tr>');
        SMTPMail.AppendBody('<td>Time Sheet Starting Date</td>');
        SMTPMail.AppendBody('<td><strong>'+ FORMAT(TimeSheetLine."Time Sheet Starting Date") +'</strong></td>');
        SMTPMail.AppendBody('</tr>');
        SMTPMail.AppendBody('<tr>');
        SMTPMail.AppendBody('<td>Chargeable</td>');
        SMTPMail.AppendBody('<td><strong>'+ FORMAT(TimeSheetLine.Chargeable) +'</strong></td>');
        SMTPMail.AppendBody('</tr>');
        //SMTPMail.AppendBody('<tr>');
        //SMTPMail.AppendBody('<td>Quantity</td>');
        //SMTPMail.AppendBody('<td><strong>'+ FORMAT(TimeSheetLine."Total Quantity") +'</strong></td>');
        //SMTPMail.AppendBody('</tr>');
        SMTPMail.AppendBody('</table>');
        SMTPMail.AppendBody('</body>');
        SMTPMail.AppendBody('</html>');
        SMTPMail.Send;

      END;
    END;

    PROCEDURE Submit@1(VAR TimeSheetLine@1000 : Record 951) : Text[50];
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF Status = Status::Submitted THEN
          EXIT;
        IF Type = Type::" " THEN
          FIELDERROR(Type);
        TestStatus;
        CALCFIELDS("Total Quantity");
        IF "Total Quantity" = 0 THEN
          ERROR(
            Text001,
            FIELDCAPTION("Time Sheet No."),
            "Time Sheet No.",
            FIELDCAPTION("Line No."),
            "Line No.");
        CASE Type OF
          Type::Job:
            BEGIN
              TESTFIELD("Job No.");
              TESTFIELD("Job Task No.");
            END;
          Type::Absence:
            BEGIN
              TESTFIELD("Cause of Absence Code");
            END;
          Type::Service:
            BEGIN
              TESTFIELD("Service Order No.");
            END;
        END;
        UpdateApproverID;
        Status := Status::Submitted;
        MODIFY(TRUE);
        // PHP Start
        SaveEmailQueue(TimeSheetLine);
        // PHP End
      END;
    END;

    PROCEDURE ReopenSubmitted@7(VAR TimeSheetLine@1000 : Record 951);
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF Status = Status::Open THEN
          EXIT;
        TESTFIELD(Status,Status::Submitted);
        Status := Status::Open;
        MODIFY(TRUE);
        // PHP Start
        SaveEmailQueue(TimeSheetLine);
        // PHP End
      END;
    END;

    PROCEDURE ReopenApproved@3(VAR TimeSheetLine@1000 : Record 951);
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF Status = Status::Submitted THEN
          EXIT;
        TESTFIELD(Status,Status::Approved);
        TESTFIELD(Posted,FALSE);
        CheckApproverPermissions(TimeSheetLine);
        CheckLinkedServiceDoc(TimeSheetLine);
        UpdateApproverID;
        Status := Status::Submitted;
        IF NOT MODIFY(TRUE) THEN
          EXIT;
        // PHP Start
        SaveEmailQueue(TimeSheetLine);
        // PHP End
      END;
    END;

    PROCEDURE Reject@6(VAR TimeSheetLine@1000 : Record 951);
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF Status = Status::Rejected THEN
          EXIT;
        TESTFIELD(Status,Status::Submitted);
        CheckApproverPermissions(TimeSheetLine);
        Status := Status::Rejected;
        MODIFY(TRUE);
      END;
    END;

    PROCEDURE Approve@12(VAR TimeSheetLine@1000 : Record 951);
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF Status = Status::Approved THEN
          EXIT;
        TESTFIELD(Status,Status::Submitted);
        CheckApproverPermissions(TimeSheetLine);
        Status := Status::Approved;
        "Approved By" := USERID;
        "Approval Date" := TODAY;
        MODIFY(TRUE);
        CASE Type OF
          Type::Absence:
            PostAbsence(TimeSheetLine);
          Type::Service:
            AfterApproveServiceOrderTmeSheetEntries(TimeSheetLine);
        END;
        // PHP start
        SaveEmailQueue(TimeSheetLine);
        // PHP end
      END;
    END;

    PROCEDURE Approve2@16(VAR TimeSheetLine@1000 : Record 951);
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF Status = Status::Approved THEN
          EXIT;
        TESTFIELD(Status,Status::Submitted);
        CheckApproverPermissions(TimeSheetLine);
        Status := Status::Approved;
        "Approved By" := USERID;
        "Approval Date" := TODAY;
        MODIFY(TRUE);
        CASE Type OF
          Type::Absence:
            PostAbsence(TimeSheetLine);
          Type::Service:
            AfterApproveServiceOrderTmeSheetEntries(TimeSheetLine);
        END;
        // PHP start
        SaveEmailQueue(TimeSheetLine);
        // PHP end
      END;
    END;

    LOCAL PROCEDURE PostAbsence@2(VAR TimeSheetLine@1000 : Record 951);
    VAR
      Resource@1005 : Record 156;
      TimeSheetHeader@1003 : Record 950;
      TimeSheetDetail@1004 : Record 952;
      Employee@1001 : Record 5200;
      EmployeeAbsence@1002 : Record 5207;
      TimeSheetMgt@1006 : Codeunit 950;
    BEGIN
      TimeSheetHeader.GET(TimeSheetLine."Time Sheet No.");
      Resource.GET(TimeSheetHeader."Resource No.");
      Employee.SETRANGE("Resource No.",TimeSheetHeader."Resource No.");
      Employee.FINDFIRST;
      TimeSheetDetail.SETRANGE("Time Sheet No.",TimeSheetLine."Time Sheet No.");
      TimeSheetDetail.SETRANGE("Time Sheet Line No.",TimeSheetLine."Line No.");
      IF TimeSheetDetail.FINDSET(TRUE) THEN
        REPEAT
          EmployeeAbsence.INIT;
          EmployeeAbsence.VALIDATE("Employee No.",Employee."No.");
          EmployeeAbsence.VALIDATE("From Date",TimeSheetDetail.Date);
          EmployeeAbsence.VALIDATE("Cause of Absence Code",TimeSheetDetail."Cause of Absence Code");
          EmployeeAbsence.VALIDATE("Unit of Measure Code",Resource."Base Unit of Measure");
          EmployeeAbsence.VALIDATE(Quantity,TimeSheetDetail.Quantity);
          EmployeeAbsence.INSERT(TRUE);

          TimeSheetDetail.Posted := TRUE;
          TimeSheetDetail.MODIFY;
          TimeSheetMgt.CreateTSPostingEntry(
            TimeSheetDetail,
            TimeSheetDetail.Quantity,
            TimeSheetDetail.Date,
            '',
            TimeSheetLine.Description);
        UNTIL TimeSheetDetail.NEXT = 0;

      TimeSheetLine.Posted := TRUE;
      TimeSheetLine.MODIFY;
    END;

    LOCAL PROCEDURE CheckApproverPermissions@4(TimeSheetLine@1000 : Record 951);
    VAR
      UserSetup@1001 : Record 91;
    BEGIN
      UserSetup.GET(USERID);
      IF NOT UserSetup."Time Sheet Admin." THEN BEGIN
        IF TimeSheetLine."Approver ID" <> UPPERCASE(USERID) THEN
          ERROR(Text002);
      END;
    END;

    LOCAL PROCEDURE ProcessManagerAction@5(VAR TimeSheetLine@1001 : Record 951;Action@1000 : 'Approve,Reject,Reopen');
    BEGIN
      IF TimeSheetLine.FINDSET THEN
        REPEAT
          CASE Action OF
            Action::Approve:
              Approve(TimeSheetLine);
            Action::Reject:
              Reject(TimeSheetLine);
            Action::Reopen:
              ReopenApproved(TimeSheetLine);
          END;
        UNTIL TimeSheetLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CheckLinkedServiceDoc@8(TimeSheetLine@1000 : Record 951);
    VAR
      ServiceLine@1001 : Record 5902;
    BEGIN
      ServiceLine.SETRANGE("Document Type",ServiceLine."Document Type"::Order);
      ServiceLine.SETRANGE("Document No.",TimeSheetLine."Service Order No.");
      ServiceLine.SETRANGE("Time Sheet No.",TimeSheetLine."Time Sheet No.");
      ServiceLine.SETRANGE("Time Sheet Line No.",TimeSheetLine."Line No.");
      IF NOT ServiceLine.ISEMPTY THEN
        ERROR(Text003);
    END;

    PROCEDURE GetTimeSheetDialogText@9(ActionType@1002 : 'Submit,Reopen';LinesQty@1001 : Integer) : Text[100];
    BEGIN
      CASE ActionType OF
        ActionType::Submit:
          EXIT(STRSUBSTNO(Text004,LinesQty));
        ActionType::Reopen:
          EXIT(STRSUBSTNO(Text005,LinesQty));
      END;
    END;

    PROCEDURE GetManagerTimeSheetDialogText@10(ActionType@1000 : 'Approve,Reopen,Reject';LinesQty@1001 : Integer) : Text[100];
    BEGIN
      CASE ActionType OF
        ActionType::Approve,
        ActionType::Reject:
          EXIT(STRSUBSTNO(Text005,LinesQty));
        ActionType::Reopen:
          EXIT(STRSUBSTNO(Text006,LinesQty));
      END;
    END;

    PROCEDURE GetTimeSheetDialogInstruction@11(ActionType@1000 : 'Submit,Reopen') : Text[100];
    BEGIN
      CASE ActionType OF
        ActionType::Submit:
          EXIT(Text007);
        ActionType::Reopen:
          EXIT(Text008);
      END;
    END;

    PROCEDURE GetManagerTimeSheetDialogInstruction@15(ActionType@1000 : 'Approve,Reopen,Reject') : Text[100];
    BEGIN
      CASE ActionType OF
        ActionType::Approve:
          EXIT(Text009);
        ActionType::Reject:
          EXIT(Text010);
        ActionType::Reopen:
          EXIT(Text008);
      END;
    END;

    LOCAL PROCEDURE AfterApproveServiceOrderTmeSheetEntries@13(VAR TimeSheetLine@1000 : Record 951);
    VAR
      ServHeader@1001 : Record 5900;
      ServMgtSetup@1003 : Record 5911;
      TimeSheetMgt@1002 : Codeunit 950;
    BEGIN
      IF ServMgtSetup.GET AND ServMgtSetup."Copy Time Sheet to Order" THEN BEGIN
        ServHeader.GET(ServHeader."Document Type"::Order,TimeSheetLine."Service Order No.");
        TimeSheetMgt.CreateServDocLinesFromTSLine(ServHeader,TimeSheetLine);
      END;
    END;

    PROCEDURE CheckResourceIfBlocked@17(VAR TimeSheetLines_@1000 : Record 951) : Boolean;
    VAR
      TimesheetHeader_@1001 : Record 950;
      Resource_@1002 : Record 156;
    BEGIN
      IF TimesheetHeader_.GET(TimeSheetLines_."Time Sheet No.") AND Resource_.GET(TimesheetHeader_."Resource No.") AND (Resource_.Blocked = FALSE) THEN BEGIN
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE GetTimeSheetResourceName@20(TimeSheetLine@1000 : Record 951) : Text[50];
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF TimeSheetHeader.GET(TimeSheetLine."Time Sheet No.") AND (Resouce.GET(TimeSheetHeader."Resource No.")) THEN
          EXIT(Resouce.Name);
        EXIT('');
      END;
    END;

    LOCAL PROCEDURE GetTimeSheetUserId@55(TimeSheetLine@1000 : Record 951) : Code[50];
    BEGIN
      WITH TimeSheetLine DO BEGIN
        IF TimeSheetHeader.GET(TimeSheetLine."Time Sheet No.") AND (Resouce.GET(TimeSheetHeader."Resource No.")) THEN
          EXIT(Resouce."Time Sheet Owner User ID");
        EXIT('');
      END;
    END;

    LOCAL PROCEDURE SaveEmailQueue@45(TimeSheetLine@1000 : Record 951);
    VAR
      THHeader@1009 : Record 950;
      THLine@1008 : Record 951;
      ToAddress@1006 : Text;
      CcAddress@1005 : Text;
      EmailBody@1004 : Text;
      Attachment@1003 : Text;
      Subject@1001 : Text;
      ServEmailQue@1002 : Record 5935;
      EmailBody001@1010 : TextConst 'ENU="<p>Time sheet filing has been made/modified by <strong>%1</strong></p><table border=""true""><tbody><tr><td style=""text-align: left;""><strong>Time Sheet No.:</strong></td><td>%2</td></tr><tr><td style=""text-align: left;""><strong>Status:</strong></td><td><span style=""text-decoration: underline;"">%7</span></td></tr><tr><td style=""text-align: left;""><strong>Type:</strong></td><td><span style=""color: #0000ff;"">%3</span></td></tr><tr><td style=""text-align: left;""><strong>Description:</strong></td><td>%4</td></tr><tr><td style=""text-align: left;""><strong>Date:</strong></td><td>%5</td></tr><tr><td style=""text-align: left;""><strong>Quantity:</strong></td><td>%8</td></tr><tr><td style=""text-align: left;""><strong>Chargeable:</strong></td><td>%6</td></tr></tbody></table><p>This email is system generated, please do not reply.</p>"';
      TimeSheetDetail@1007 : Record 952;
      EmailBody002A@1011 : TextConst 'ENU="<p>Time sheet filing has been made/modified by <strong>%1</strong></p><table border=""true""><tbody><tr><td style=""text-align: left;""><strong>Time Sheet No.:</strong></td><td>%2</td></tr><tr><td style=""text-align: left;""><strong>Status:</strong></td><td><span style=""text-decoration: underline;"">%3</span></td></tr><tr><td style=""text-align: left;""><strong>Type:</strong></td><td><span style=""color: #0000ff;"">%4</span></td></tr><tr><td style=""text-align: left;""><strong>Job No.:</strong></td><td>%5</td></tr><tr><td style=""text-align: left;""><strong>Job Name:</strong>"';
      EmailBody002B@1012 : TextConst 'ENU="</td><td>%6</td></tr><tr><td style=""text-align: left;""><strong>Customer:</strong></td><td>%7</td></tr><tr><td style=""text-align: left;""><strong>Description:</strong></td><td>%8</td></tr><tr><td style=""text-align: left;""><strong>Date:</strong></td><td>%9</td></tr><tr><td style=""text-align: left;""><strong>Quantity:</strong></td><td>%10</td></tr><tr><td style=""text-align: left;""><strong>Chargeable:</strong></td><td>%11</td></tr></tbody></table><p>This email is system generated, please do not reply.</p>"';
    BEGIN
      WITH TimeSheetLine DO BEGIN
          Subject := STRSUBSTNO('%1 Time Sheet Approval Notification', TimeSheetLine.Type);
          ToAddress := UserSetupMgt.GetUserEmail(TimeSheetLine."Approver ID");
          CcAddress := UserSetupMgt.GetUserEmail(GetTimeSheetUserId(TimeSheetLine));

          TimeSheetDetail.SETRANGE("Time Sheet No.", TimeSheetLine."Time Sheet No.");
          TimeSheetDetail.SETRANGE("Time Sheet Line No.", TimeSheetLine."Line No.");
          IF TimeSheetDetail.FINDSET THEN BEGIN
            REPEAT
              IF TimeSheetLine.Type = TimeSheetLine.Type::Job THEN BEGIN // Change email body if Jobs
                Job.GET(TimeSheetLine."Job No.");
                EmailBody := STRSUBSTNO( EmailBody002A + EmailBody002B,
                  GetTimeSheetResourceName(TimeSheetLine), TimeSheetLine."Time Sheet No.", TimeSheetLine.Status, TimeSheetLine.Type,
                  Job."No.", Job.Description, Job."Bill-to Name", TimeSheetLine.Description, TimeSheetDetail.Date, TimeSheetLine.Chargeable,
                  TimeSheetDetail.Quantity);
              END ELSE BEGIN
                EmailBody := STRSUBSTNO( EmailBody001,
                  GetTimeSheetResourceName(TimeSheetLine), TimeSheetLine."Time Sheet No.", TimeSheetLine.Type, TimeSheetLine.Description,
                  TimeSheetDetail.Date, TimeSheetLine.Chargeable, TimeSheetLine.Status, TimeSheetDetail.Quantity);
              END;
              Attachment := '';
              CustomEmailReminder.SaveEmailQueueWithAttachment2(
              ToAddress, CcAddress, Subject, EmailBody, ServEmailQue."Document Type"::"Time Sheet",
              '', TimeSheetLine."Time Sheet No.", Attachment);
            UNTIL TimeSheetDetail.NEXT = 0;
          END;
      END;
    END;

    BEGIN
    END.
  }
}


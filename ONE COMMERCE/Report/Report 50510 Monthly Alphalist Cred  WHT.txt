OBJECT Report 50510 Monthly Alphalist Cred. WHT
{
  OBJECT-PROPERTIES
  {
    Date=02/08/18;
    Time=[ 8:42:56 PM];
    Modified=Yes;
    Version List=PHL0.01;
  }
  PROPERTIES
  {
    CaptionML=ENU=Monthly Alphalist Cred. WHT;
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  FileMgt@1000000000 : Codeunit 419;
                BEGIN
                  IF IncludeCSV THEN
                    FileName := FileMgt.ServerTempFileName('');
                END;

    OnPostReport=BEGIN
                   //Insert Controls

                   EnterCell(RowCtr,7,FORMAT(ABS(TotalTaxBase)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                   EnterCell(RowCtr,9,FORMAT(ABS(TotalAmtWthld)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

                   EnterCell(RowCtr+2,1,Text017,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                   EnterCell(RowCtr+3,1,Text018,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                   EnterCell(RowCtr+4,1,Text019,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                   EnterCell(RowCtr+5,1,Text020,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                   EnterCell(RowCtr+6,1,Text021,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                   EnterCell(RowCtr+8,7,Text022,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                   EnterCell(RowCtr+9,7,Text023,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                   EnterCell(RowCtr+11,1,Text024,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                   Window.CLOSE;

                   TempExcelBuffer.CreateBook('Monthly Alphalist Cred. WHT','Monthly Alphalist Cred. WHT');
                   TempExcelBuffer.WriteSheet('Monthly Alphalist Cred. WHT',COMPANYNAME,COPYSTR(USERID,30));
                   TempExcelBuffer.CloseBook;
                   TempExcelBuffer.OpenExcel;

                   TempExcelBuffer.GiveUserControl;

                   //Format Excel Column
                   TempExcelBuffer.AutoFit('A8');
                   TempExcelBuffer.AutoFit('G8');
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50501;
               DataItemTableView=SORTING(Code);
               OnPreDataItem=BEGIN
                               //Clear Excel Buffer
                               TempExcelBuffer.DELETEALL;

                               //Assign Initial Date Filter
                               //DateFilter := FORMAT(WORKDATE);

                               //Check Date Filter
                               IF DateFilter = '' THEN
                                 ERROR(Text001);

                               IF WHTProdPostingGrpFilter = '' THEN
                                 ERROR(Text002);

                               //Get Company Information
                               CompInfo.GET;

                               //Get End Date
                               CustomerRec.SETFILTER("Date Filter",DateFilter);
                               EndDate := CustomerRec.GETRANGEMAX("Date Filter");

                               //Insert Header
                               EnterCell(1,1,CompInfo.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(2,1,CompInfo.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(3,1,CompInfo.Address,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(4,1,CompInfo."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(6,1,'MONTHLY ALPHALIST OF PAYEES (MAP)',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(7,1,'RETURN PERIOD '+ FORMAT(EndDate,0,'<Month,2>/<YEAR4>'),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                               EnterCell(8,1,'Sequence No.',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,2,'TIN Including branch code',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,3,'Registered Name',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,4,'Return period',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,5,'ATC',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,6,'Nature of Payment',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,7,'Amount Tax Base',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,8,'Tax Rate',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                               EnterCell(8,9,'Tax Withheld',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                               RowCtr := 9;
                               SeqNo := 1;

                               Window.OPEN(Text025);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,Code);
                                END;
                                 }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               IF CustomerFilter <> '' THEN
                                 SETFILTER("No.",CustomerFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(2,"No.");
                                END;
                                 }

    { 3   ;2   ;DataItem;                    ;
               DataItemTable=Table50504;
               DataItemTableView=SORTING(Entry No.);
               OnPreDataItem=BEGIN
                               SETFILTER("Posting Date",DateFilter);
                               SETRANGE("WHT Prod. Posting Group","WHT Product Posting Group".Code);
                               SETRANGE("Transaction Type","Transaction Type"::Sale);
                               SETRANGE("Bill-to/Pay-to No.",Customer."No.");
                               IF ISEMPTY THEN
                                 CurrReport.SKIP;

                               TaxRate := 0;
                               TaxBase := 0;
                               AmtWthld := 0;
                               WHTRevenueType := '';
                             END;

               OnAfterGetRecord=BEGIN
                                  IF ISEMPTY THEN
                                    CurrReport.SKIP;

                                  Window.UPDATE(3,"Entry No.");

                                  TaxRate := "WHT %";
                                  TaxBase := TaxBase + "Base (LCY)";
                                  AmtWthld := AmtWthld + "Amount (LCY)";
                                  WHTRevenueType := FORMAT("WHT Revenue Type");
                                END;

               OnPostDataItem=BEGIN
                                IF COUNT = 0 THEN
                                  CurrReport.SKIP;

                                IF AmtWthld = 0 THEN
                                  CurrReport.SKIP;

                                //Insert Details
                                EnterCell(RowCtr,1,FORMAT(SeqNo),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                EnterCell(RowCtr,2,Customer."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                EnterCell(RowCtr,3,Customer.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                EnterCell(RowCtr,4,FORMAT(EndDate),FALSE,FALSE,FALSE,'mm/yyyy',TempExcelBuffer."Cell Type"::Date);
                                EnterCell(RowCtr,5,WHTRevenueType,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                EnterCell(RowCtr,7,FORMAT(ABS(TaxBase)),FALSE,FALSE,FALSE,'#,###.00',TempExcelBuffer."Cell Type"::Number);
                                EnterCell(RowCtr,8,FORMAT(TaxRate),FALSE,FALSE,FALSE,'##0.00',TempExcelBuffer."Cell Type"::Number);
                                EnterCell(RowCtr,9,FORMAT(ABS(AmtWthld)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

                                TotalTaxBase := TotalTaxBase + TaxBase;
                                TotalAmtWthld := TotalAmtWthld + AmtWthld;

                                RowCtr := RowCtr + 1;
                                SeqNo := SeqNo + 1;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   DateFilter := FORMAT(WORKDATE); // PASIMAS01
                 END;

    }
    CONTROLS
    {
      { 5   ;    ;Container ;
                  ContainerType=ContentArea }

      { 4   ;1   ;Group     ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 3   ;2   ;Field     ;
                  Name=Customer Filter;
                  CaptionML=ENU=Customer Filter;
                  SourceExpr=CustomerFilter;
                  OnLookup=BEGIN
                             CLEAR(CustomerList);

                             CustomerList.LOOKUPMODE(TRUE);
                             CustomerList.SETTABLEVIEW(CustomerRec);
                             IF NOT (CustomerList.RUNMODAL = ACTION::LookupOK) THEN
                               EXIT(FALSE);

                             Text := CustomerList.GetSelectionFilter;

                             EXIT(TRUE);
                           END;
                            }

      { 2   ;2   ;Field     ;
                  Name=WHT Prod. Posting Group Filter;
                  CaptionML=ENU=WHT Prod. Posting Group;
                  SourceExpr=WHTProdPostingGrpFilter;
                  TableRelation="WHT Product Posting Group";
                  OnLookup=BEGIN
                             CLEAR(WHTProdPostingGroupsPage);
                             WHTProdPostingGroupsPage.LOOKUPMODE(TRUE);
                             WHTProdPostingGroupsPage.SETTABLEVIEW(WHTProdPostingGroup);
                             IF NOT (WHTProdPostingGroupsPage.RUNMODAL = ACTION::LookupOK) THEN
                               EXIT(FALSE);

                             Text := WHTProdPostingGroupsPage.GetSelectionFilter;

                             EXIT(TRUE);
                           END;
                            }

      { 1   ;2   ;Field     ;
                  Name=Date Filter;
                  CaptionML=ENU=Date Filter;
                  SourceExpr=DateFilter;
                  OnValidate=BEGIN
                               IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                                 CustomerRec.SETFILTER("Date Filter",DateFilter);
                               DateFilter := CustomerRec.GETFILTER("Date Filter");
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TempExcelBuffer@1013 : TEMPORARY Record 370;
      CompInfo@1012 : Record 79;
      CustomerRec@1011 : Record 18;
      WHTProdPostingGroup@1010 : Record 50501;
      CustomerList@1009 : Page 22;
      WHTProdPostingGroupsPage@1008 : Page 50501;
      ApplicationManagement@1007 : Codeunit 1;
      Window@1006 : Dialog;
      CustomerFilter@1005 : Text[250];
      WHTProdPostingGrpFilter@1004 : Text[250];
      DateFilter@1003 : Text[30];
      EndDate@1002 : Date;
      RowCtr@1001 : Integer;
      SeqNo@1000 : Integer;
      Text001@1016 : TextConst 'ENU=Please specify a Date Filter.';
      Text002@1015 : TextConst 'ENU=Please specify a WHT Prod. Posting Group Filter';
      Text017@1027 : TextConst 'ENU=I declare under the penalties of perjury that this certificate has been made in good faith, verified by me, and to the best of my knowledge and belief,';
      Text018@1028 : TextConst 'ENU="is true and correct pursuant to the provisins of the NIRC, and the regulations issued under the authority thereof; that the information contained"';
      Text019@1029 : TextConst 'ENU=herein completely reflects all income payments with the corresponding taxes withheld from payees are duly remitted to the BIR and proper';
      Text020@1026 : TextConst 'ENU="Certificates of Creditable Witholding Tax at Source (BIR Form No. 2307) have been issued to payees; that the information appearing herein"';
      Text021@1025 : TextConst 'ENU=shall be consistent with the total amount and that, inconsistent shall result to denial of the claims for expenses.';
      Text022@1024 : TextConst 'ENU=Signature over printed name';
      Text023@1023 : TextConst 'ENU=Taxpayer/Authorized representative';
      Text024@1022 : TextConst 'ENU=Attachments to BIR Form Nos. 1601-E, 1601-F,1600';
      Text025@1014 : TextConst 'ENU=Processing Monthly Alphalist Cred. WHT...\WHT Product Posting Group #1#############\Customer No.              #2#############\Entry No.                 #3#############';
      TaxRate@1017 : Decimal;
      TaxBase@1018 : Decimal;
      AmtWthld@1019 : Decimal;
      TotalTaxBase@1020 : Decimal;
      TotalAmtWthld@1021 : Decimal;
      PeriodNo@1031 : Integer;
      BIRFile@1000000006 : File;
      FileName@1000000005 : Text;
      ReportValueFoot@1000000004 : ARRAY [7] OF Text[250];
      ReportValueHead@1000000003 : ARRAY [7] OF Text[250];
      ReportValue@1000000002 : ARRAY [15] OF Text[250];
      IncludeCSV@1000000001 : Boolean;
      ExcelOnly@1000000000 : Boolean;
      Text000@1000000010 : TextConst 'ENU=Please enter the file name.';
      Text003@1000000009 : TextConst 'ENU=Export';
      Text004@1000000008 : TextConst 'ENU=All Files (*.*)|*.*';
      Text005@1000000007 : TextConst 'ENU=Monthly Alphalist of Payees.dat';
      WHTRevenueType@1000000011 : Text[30];

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    PROCEDURE WriteCSV@1(LocString@1000 : ARRAY [15] OF Text[500]);
    VAR
      ArrayCtr@1001 : Integer;
      TextToWrite@1002 : Text[500];
    BEGIN
      FOR ArrayCtr := 1 TO 15 DO BEGIN
        TextToWrite += ApplyQuote(FORMAT(LocString[ArrayCtr])) + ',';
      END;
      TextToWrite := DELSTR(TextToWrite,STRLEN(TextToWrite),1);
      BIRFile.WRITE(TextToWrite);
      CLEAR(LocString)
    END;

    PROCEDURE ApplyQuote@1000000001(LocString@1000 : Text[500]) : Text[250];
    VAR
      CharCtr@1000000001 : Integer;
      ApplyQuote@1000000002 : Boolean;
    BEGIN
      ApplyQuote := FALSE;
      FOR CharCtr := 1 TO STRLEN(LocString) DO BEGIN
        IF LocString[CharCtr] = ',' THEN BEGIN
          //EXIT('"' + LocString + '"'); // Original Code
          EXIT('' + LocString + '');
        END;
      END;

      EXIT (LocString);
    END;

    PROCEDURE WriteCSVHeadandFoot@1000000000(LocString@1000 : ARRAY [7] OF Text[500]);
    VAR
      ArrayCtr@1001 : Integer;
      TextToWrite@1002 : Text[500];
    BEGIN
      FOR ArrayCtr := 1 TO 7 DO BEGIN
        TextToWrite += ApplyQuote(FORMAT(LocString[ArrayCtr])) + ',';
      END;
      TextToWrite := DELSTR(TextToWrite,STRLEN(TextToWrite),1);
      BIRFile.WRITE(TextToWrite);
      CLEAR(LocString)
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}


OBJECT Table 50013 Request For Quotation
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=12:33:07 AM;
    Modified=Yes;
    Version List=NAVOC1.00.02,NAVOC1.00.02.42;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Customer Name;
    OnInsert=BEGIN
               InitInsert;

               IF GetFilterContNo <> '' THEN BEGIN
                 VALIDATE("Addressee No.", GetFilterContNo);
                 IF GETFILTER("Opportunity No.") <> '' THEN
                   IF GETRANGEMIN("Opportunity No.") = GETRANGEMAX("Opportunity No.") THEN
                     VALIDATE("Opportunity No.",GETRANGEMIN("Opportunity No."));
               END;
             END;

    OnModify=BEGIN
               IF Status = Status::Open THEN
                 ValidateStatus;
               "Modified By" := USERID;

               IF Status <> Status::Completed THEN BEGIN
                   CLEAR("Completed By");
                   CLEAR("Completed Date");
               END;
               IF Status <> Status::Cancelled THEN BEGIN
                 CLEAR("Cancelled By");
                 CLEAR("Cancelled Date");
               END;
             END;

    OnDelete=BEGIN
               TestRFQAdmin;
               ApprovalsMgmt.DeleteApprovalEntries(RECORDID);
             END;

    OnRename=BEGIN
               ERROR(Error005, Rec.TABLECAPTION);
             END;

    LookupPageID=Page50015;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  CustomSetup.GET;
                                                                  NoSeriesMgt.TestManual(CustomSetup."RFQ Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 30  ;   ;Project Description ;Text250       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TESTFIELD("Project Description");
                                                                TestRelatedRFQFields;
                                                              END;
                                                               }
    { 40  ;   ;Customer No.        ;Code20        ;TableRelation=Customer WHERE (Customer Type=CONST(Customer));
                                                   OnValidate=VAR
                                                                RecordRestrictionMgt@1000 : Codeunit 1550;
                                                              BEGIN
                                                                TestRFQAdmin;
                                                                TestRelatedRFQFields;
                                                                TESTFIELD("Customer No.");
                                                                IF ("RTPS No." <> '') AND RTPS.GET("RTPS No.") AND ("Customer No." <> RTPS."Customer No.") THEN
                                                                  ERROR(Text063,FIELDCAPTION("Customer No."), "Customer No.", RTPS.TABLECAPTION, RTPS.FIELDCAPTION("Customer No."), RTPS."Customer No.");

                                                                IF "Opportunity No." <> '' THEN
                                                                  ERROR(Text062, FIELDCAPTION("Customer No."), FIELDCAPTION("Opportunity No."), "Opportunity No.");

                                                                 IF "Customer No." = '' THEN BEGIN
                                                                  INIT;
                                                                   "No. Series" := xRec."No. Series";
                                                                   InitRecord;
                                                                  EXIT;
                                                                 END;

                                                                GetCust("Customer No.");
                                                                Cust.CheckBlockedCustOnDocs(Cust,1,FALSE,FALSE);
                                                                RecordRestrictionMgt.CheckRecordHasUsageRestrictions(Cust.RECORDID);
                                                                Cust.TESTFIELD("Gen. Bus. Posting Group");
                                                                Cust.TESTFIELD("Customer Posting Group");
                                                                Cust.TESTFIELD("VAT Bus. Posting Group");
                                                                "Customer Name" := Cust.Name;
                                                                Address := Cust.Address;
                                                                "Address 2" := Cust."Address 2";
                                                                IF NOT SkipSellToContact THEN
                                                                  UpdateBillToCont("Customer No.");
                                                              END;
                                                               }
    { 50  ;   ;Customer Name       ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TestRelatedRFQFields;
                                                                TESTFIELD("Customer Name");
                                                              END;
                                                               }
    { 60  ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TestRelatedRFQFields
                                                              END;
                                                               }
    { 70  ;   ;Address 2           ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TestRelatedRFQFields;
                                                              END;
                                                               }
    { 80  ;   ;Quotation Type      ;Option        ;OnValidate=BEGIN
                                                                TestRelatedRFQFields;
                                                              END;

                                                   OptionCaptionML=ENU=New Request,Revision,Cancelled;
                                                   OptionString=New Request,Revision,Cancelled }
    { 90  ;   ;Purpose             ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   OptionCaptionML=ENU=Budgetary Pricing,Request for Information,Request for Proposal,Request for Quotation;
                                                   OptionString=Budgetary Pricing,Request for Information,Request for Proposal,Request for Quotation }
    { 100 ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 101 ;   ;Request Status      ;Option        ;OptionCaptionML=ENU=" ,Cancelled,Done";
                                                   OptionString=[ ,Cancelled,Done];
                                                   Editable=No }
    { 109 ;   ;Addressee No.       ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                Cont@1000 : Record 5050;
                                                                Customer@1001 : Record 18;
                                                                Opportunity@1002 : Record 5092;
                                                                ContBusinessRelation@1003 : Record 5054;
                                                              BEGIN
                                                                TestRFQAdmin;
                                                                IF ("Addressee No." <> xRec."Addressee No.") AND
                                                                   (xRec."Addressee No." <> '')
                                                                THEN BEGIN
                                                                  IF ("Addressee No." = '') AND ("Opportunity No." <> '') THEN
                                                                    ERROR(Text049,FIELDCAPTION("Addressee No."));
                                                                  IF HideValidationDialog OR NOT GUIALLOWED THEN
                                                                    Confirmed := TRUE
                                                                  ELSE
                                                                    Confirmed := CONFIRM(Text005,FALSE,FIELDCAPTION("Addressee No."));
                                                                  IF Confirmed THEN BEGIN
                                                                    IF "Opportunity No." <> '' THEN BEGIN
                                                                      Opportunity.GET("Opportunity No.");
                                                                      IF Opportunity."Contact No." <> "Addressee No." THEN BEGIN
                                                                        MODIFY;
                                                                        Opportunity.VALIDATE("Contact No.","Addressee No.");
                                                                        Opportunity.MODIFY;
                                                                      END
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    Rec := xRec;
                                                                    EXIT;
                                                                  END;
                                                                END;

                                                                IF ("Customer No." <> '') AND ("Addressee No." <> '') THEN BEGIN
                                                                  Cont.GET("Addressee No.");
                                                                  ContBusinessRelation.RESET;
                                                                  ContBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Customer);
                                                                  ContBusinessRelation.SETRANGE("No.","Addressee No.");
                                                                  IF ContBusinessRelation.FINDFIRST THEN
                                                                    IF ContBusinessRelation."Contact No." <> Cont."Company No." THEN
                                                                      ERROR(Text038,Cont."No.",Cont.Name,"Customer No.");
                                                                END;

                                                                UpdateCustomer("Addressee No.");
                                                              END;

                                                   OnLookup=VAR
                                                              Cont@1001 : Record 5050;
                                                              ContBusinessRelation@1000 : Record 5054;
                                                            BEGIN
                                                              IF "Customer No." <> '' THEN
                                                                IF Cont.GET("Addressee No.") THEN
                                                                  Cont.SETRANGE("Company No.",Cont."Company No.")
                                                                ELSE BEGIN
                                                                  ContBusinessRelation.RESET;
                                                                  ContBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Customer);
                                                                  ContBusinessRelation.SETRANGE("No.","Customer No.");
                                                                  IF ContBusinessRelation.FINDFIRST THEN BEGIN
                                                                    Cont.SETRANGE("Company No.",ContBusinessRelation."Contact No.")
                                                                  END ELSE BEGIN
                                                                    Cont.SETRANGE("No.",'');
                                                                  END;
                                                                END;

                                                              IF "Addressee No."<> '' THEN
                                                                IF Cont.GET("Addressee No.") THEN ;
                                                              IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                                                xRec := Rec;
                                                                VALIDATE("Addressee No.",Cont."No.");

                                                              END;
                                                            END;
                                                             }
    { 110 ;   ;Addressee           ;Text50        ;OnValidate=VAR
                                                                Cont@1000 : Record 5050;
                                                              BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   Editable=No }
    { 111 ;   ;Addressee Designation;Text50       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   Editable=No }
    { 120 ;   ;Email               ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   Editable=No }
    { 130 ;   ;Budget              ;Decimal       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 135 ;   ;Related RFQ No.     ;Code20        ;OnValidate=VAR
                                                                CopiedRFQ@1000 : Record 50013;
                                                                ToRFQ@1001 : Record 50013;
                                                                RFQ@1002 : Record 50013;
                                                              BEGIN
                                                                TestRFQAdmin;
                                                                TESTFIELD("Related RFQ No.");
                                                                IF "Related RFQ No." <> '' THEN BEGIN
                                                                  CopiedRFQ.GET("Related RFQ No.");
                                                                  // PHP Start
                                                                  IF (CopiedRFQ."Quotation Type" = CopiedRFQ."Quotation Type"::Revision) OR
                                                                     (CopiedRFQ."Related RFQ No." <> '') THEN BEGIN
                                                                     ERROR(Error007, CopiedRFQ."No.", CopiedRFQ."Quotation Type", CopiedRFQ."Related RFQ No.");
                                                                  END;

                                                                  RFQ.SETRANGE("Related RFQ No.", "Related RFQ No.");
                                                                  RFQ.SETRANGE(Status, RFQ.Status::Open, RFQ.Status::"Pending Approval");
                                                                  IF RFQ.FINDFIRST THEN
                                                                    ERROR(Error008, RFQ."Related RFQ No.", RFQ.Status);

                                                                  // PHP End
                                                                  CopiedRFQ.TESTFIELD(Status, CopiedRFQ.Status::Completed);
                                                                  Rec.TRANSFERFIELDS(CopiedRFQ, FALSE);
                                                                  InitValue;
                                                                  IF CopiedRFQ."No. Series" <> '' THEN BEGIN
                                                                    "No." := CopiedRFQ."No." + ' v02';
                                                                    IF INCSTR("No.") = '' THEN
                                                                      "No." := COPYSTR("No.",1,MAXSTRLEN("No.") - 3) + ' v02';
                                                                  END;
                                                                  WHILE ToRFQ.GET("No.") DO
                                                                    "No." := INCSTR(ToRFQ."No.");

                                                                  CLEAR("No. Series");
                                                                  CLEAR("Request Status");
                                                                  CLEAR("Completed By");
                                                                  CLEAR("Completed Date");
                                                                  CLEAR("Override Completed By");
                                                                  CLEAR("Override Completed Date");
                                                                  CLEAR("Deadline for Submission");
                                                                  "Request Status" := "Request Status"::" ";
                                                                  "Quotation Type" := "Quotation Type"::Revision;
                                                                  "Related RFQ No." := CopiedRFQ."No.";
                                                                  Status := Status::Open;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              RequForQtn@1000 : Record 50013;
                                                            BEGIN
                                                              RequForQtn.RESET;
                                                              RequForQtn.SETFILTER("No.",'<>%1',"No.");
                                                              RequForQtn.SETFILTER(Status, FORMAT(RequForQtn.Status::Completed));
                                                              IF PAGE.RUNMODAL(0,RequForQtn) = ACTION::LookupOK THEN BEGIN
                                                                "Related RFQ No." := RequForQtn."No.";
                                                                VALIDATE("Related RFQ No.", RequForQtn."No.");
                                                              END;
                                                            END;
                                                             }
    { 136 ;   ;Technical Lead No.  ;Code20        ;TableRelation=Resource;
                                                   OnValidate=VAR
                                                                Resource@1000 : Record 156;
                                                              BEGIN
                                                                TestRFQAdmin;
                                                                IF Resource.GET("Technical Lead No.") THEN BEGIN
                                                                  VALIDATE("Technical Lead",Resource.Name);
                                                                  "Technology Group Code" := Resource."User Group Code";
                                                                  IF UserGroup.GET("Technology Group Code") THEN
                                                                    VALIDATE("Technology House",UserGroup.Name);
                                                                END ELSE BEGIN
                                                                  CLEAR("Technical Lead");
                                                                  CLEAR("Technology Group Code");
                                                                  CLEAR("Technology House");
                                                                END;
                                                              END;
                                                               }
    { 137 ;   ;Technical Lead      ;Text50        ;Editable=No }
    { 138 ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TestRelatedRFQFields;
                                                                IF "Job No." <> '' THEN BEGIN
                                                                  Job.GET("Job No.");
                                                                END ELSE BEGIN
                                                                  CLEAR(Job);
                                                                END;

                                                                "Project Description" := Job.Description;
                                                                "RTPS No." := Job."RTPS No.";
                                                                "Customer No." := Job."Bill-to Customer No.";
                                                                "Technical Lead No." := Job."Technical In-charge No.";
                                                                VALIDATE("Customer No.");
                                                                VALIDATE("Technical Lead No.");
                                                              END;
                                                               }
    { 140 ;   ;Technology House    ;Text100       ;OnValidate=BEGIN
                                                                // TestRFQAdmin;
                                                              END;

                                                   Editable=No }
    { 150 ;   ;Client Type Approve ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Is Equipment Type Approved by Client?;
                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 160 ;   ;NTC Type Approval   ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Does it require NTC-TA(Type Approval)?;
                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 170 ;   ;Equipment Freq. Related;Option     ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Is Equipment Frequency Related?;
                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 180 ;   ;Permit To Import    ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 190 ;   ;Permit To Purchase  ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 200 ;   ;Permit To Possess   ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 210 ;   ;Construction Permit ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 220 ;   ;Radio Station License;Option       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 230 ;   ;Others              ;Text150       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 240 ;   ;Repeat Order        ;Option        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   OptionCaptionML=ENU=Not Applicable,Yes,No;
                                                   OptionString=Not Applicable,Yes,No }
    { 250 ;   ;QTP IsEquipment     ;Boolean       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Equipment ? }
    { 251 ;   ;QTP Equipment       ;Text100       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Equipment }
    { 255 ;   ;QTP IsServices      ;Boolean       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Services ? }
    { 256 ;   ;QTP Services        ;Text100       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Services }
    { 257 ;   ;Competitor 1        ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 258 ;   ;Competitor 2        ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 259 ;   ;Competitor 3        ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 260 ;   ;Competitor Price 1  ;Decimal       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 261 ;   ;Competitor Price 2  ;Decimal       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 262 ;   ;Competitor Price 3  ;Decimal       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 270 ;   ;Deadline for Submission;DateTime   ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                IF ((Usersetup.GET(USERID)) AND (Usersetup."RFQ Admin" = FALSE)) OR NOT Usersetup.GET(USERID) THEN
                                                                  ERROR(Error004,FIELDCAPTION("Deadline for Submission"));
                                                              END;
                                                               }
    { 280 ;   ;Timeline of the Project;Date       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 290 ;   ;Remarks             ;Text250       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 300 ;   ;If Revised/Cancelled Why;Text250   ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                // PHP Start
                                                                IF "Quotation Type" = "Quotation Type"::Revision THEN
                                                                  TESTFIELD("If Revised/Cancelled Why");
                                                                // PHP End
                                                              END;
                                                               }
    { 310 ;   ;Requested By        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TESTFIELD("Requested By");
                                                              END;
                                                               }
    { 320 ;   ;ASD BOM             ;Boolean       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Bill of Materials;
                                                   Description=Attached Signed Docs }
    { 321 ;   ;ASD Design          ;Boolean       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Design }
    { 322 ;   ;ASD Installation Material;Boolean  ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Installation Materials }
    { 323 ;   ;ASD Service Engineering;Boolean    ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Service Engineering }
    { 324 ;   ;ASD Others          ;Boolean       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Others }
    { 325 ;   ;ASD Others Text     ;Text30        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   CaptionML=ENU=Other Attachments }
    { 500 ;   ;No. Series          ;Code20        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 510 ;   ;Date Created        ;Date          ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 511 ;   ;Time Created        ;Time          ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 600 ;   ;Status              ;Option        ;OptionCaptionML=ENU=Open,Pending Approval,Released,Cancelled,Closed,Completed;
                                                   OptionString=Open,Pending Approval,Released,Cancelled,Closed,Completed;
                                                   Editable=No }
    { 800 ;   ;Date and Time Requested;DateTime   ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   Editable=No }
    { 801 ;   ;Approved By         ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 802 ;   ;Date Approved       ;Date          ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 810 ;   ;Received By         ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 811 ;   ;Date and Time Received;DateTime    ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 1010;   ;Created By          ;Text250       ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   Editable=No }
    { 1011;   ;Modified By         ;Text250       ;Editable=No }
    { 1012;   ;RTPS No.            ;Code20        ;TableRelation="RTPS Document" WHERE (Status=CONST(Completed));
                                                   OnValidate=VAR
                                                                DeadlineOfSubmission@1000 : DateTime;
                                                              BEGIN
                                                                TestRFQAdmin;
                                                                 IF "RTPS No." = '' THEN BEGIN
                                                                  INIT;
                                                                   "No. Series" := xRec."No. Series";
                                                                   InitRecord;
                                                                  EXIT;
                                                                 END;

                                                                RTPS.GET("RTPS No.");

                                                                IF "Opportunity No." <> '' THEN
                                                                  EXIT;

                                                                IF (RTPS."Customer No." = "Customer No.") AND (RTPS."Contact No." = "Addressee No.") AND
                                                                   (RTPS."Opportunity No." = "Opportunity No.") THEN
                                                                   EXIT;

                                                                VALIDATE("Technical Lead No.", RTPS."Technical In-charge");
                                                                VALIDATE("Project Description", RTPS."Project Description");
                                                                VALIDATE("Project Description 2", RTPS."Project Description 2");
                                                                IF "Customer No." <> RTPS."Customer No." THEN
                                                                  VALIDATE("Customer No.", RTPS."Customer No.");
                                                              END;
                                                               }
    { 1013;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   OnValidate=BEGIN
                                                                IF NOT UserSetupMgt.CheckRespCenter(6,"Responsibility Center") THEN
                                                                 ERROR(Text026, ResponsibilityCenter.TABLECAPTION, UserSetupMgt.GetRFQFilter);
                                                              END;
                                                               }
    { 1014;   ;Assigned User ID    ;Code50        ;TableRelation="User Group";
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 1015;   ;Cost Analyst No.    ;Code20        ;TableRelation=Resource WHERE (Job Type=CONST(Job Analyst));
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TESTFIELD("Cost Analyst No.");
                                                                IF "Cost Analyst No." <> '' THEN
                                                                  Resource.GET("Cost Analyst No.")
                                                                ELSE BEGIN
                                                                  CLEAR(Resource);
                                                                END;
                                                                "Cost Analyst" := Resource.Name;
                                                              END;
                                                               }
    { 1016;   ;Cost Analyst        ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;

                                                   Editable=No }
    { 1017;   ;Salesperson Code    ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 1019;   ;Contact No.         ;Text50        ;OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 1020;   ;Approver ID         ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                              END;
                                                               }
    { 1021;   ;Completed By        ;Text50        ;Editable=No }
    { 1022;   ;Completed Date      ;DateTime      ;Editable=No }
    { 1030;   ;Override Completed By;Code50       ;TableRelation="User Setup" }
    { 1035;   ;Override Completed Date;DateTime   ;OnValidate=BEGIN
                                                                IF DT2DATE("Override Completed Date") < "Date Created" THEN
                                                                  ERROR(Error009, "No.", FIELDCAPTION("Override Completed Date"));
                                                              END;
                                                               }
    { 50500;  ;Opportunity No.     ;Code20        ;TableRelation=Opportunity WHERE (Closed=CONST(No),
                                                                                    Contact No.=FIELD(Addressee No.));
                                                   OnValidate=BEGIN
                                                                TestRFQAdmin;
                                                                TestRelatedRFQFields;
                                                                LinkOpportunity(xRec."Opportunity No.");
                                                              END;
                                                               }
    { 500010; ;Cancelled By        ;Text50        ;Editable=No }
    { 500015; ;Cancelled Date      ;DateTime      ;Editable=No }
    { 500016; ;Incoming Document Entry No.;Integer;TableRelation="Incoming Document" }
    { 500017; ;Technology Group Code;Code20       ;FieldClass=Normal;
                                                   TableRelation="User Group" }
    { 500018; ;Project Description 2;Text250      ;OnValidate=BEGIN
                                                                TestRelatedRFQFields;
                                                              END;
                                                               }
    { 500019; ;Bid Submission Date ;Date          ;OnValidate=BEGIN
                                                                IF "Bid Submission Date" < "Document Date" THEN
                                                                  ERROR(Error006, FIELDCAPTION("Bid Submission Date"),FIELDCAPTION("Document Date"),TABLECAPTION, FIELDCAPTION("No."),"No.");
                                                                VALIDATE("Bid Submission Time",090000T);
                                                              END;
                                                               }
    { 500020; ;Bid Submission Time ;Time           }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Project Description                      }
    {    ;Cost Analyst No.                         }
    {    ;Cost Analyst                             }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Project Description,Cost Analyst No.,Cost Analyst }
  }
  CODE
  {
    VAR
      Cust@1000 : Record 18;
      Error001@1011 : TextConst 'ENU=RFQ No. %1 is already opened.';
      Error002@1001 : TextConst 'ENU=RFQ No. %1 is already done.';
      Error003@1002 : TextConst 'ENU=RFQ No. %1 is already cancelled.';
      recUser@1003 : Record 2000000120;
      Employee@1004 : Record 5200;
      Job@1005 : Record 167;
      Usersetup@1006 : Record 91;
      Resource@1007 : Record 156;
      Error004@1014 : TextConst 'ENU=You don''t have permission to modify the field %1.';
      Error005@1030 : TextConst 'ENU=You cannot rename a %1.';
      Error006@1032 : TextConst 'ENU=%1  must be later than %2 in %3 %4 %5.';
      Error007@1033 : TextConst 'ENU=You cannot select ''%1''. Quotation Type ''%2'',  Related RFQ No. ''%3''.';
      Error008@1034 : TextConst 'ENU=Request for Quotation ''%1''  is currently under revision with a status ''%2''.';
      Error009@1037 : TextConst 'ENU=RFQ No. %1 ''%2''  must be later than Document Date.';
      Text001@1010 : TextConst 'ENU=Do you want to done the Request for Quotation %1?';
      Text002@1009 : TextConst 'ENU=Do you want to cancel the Request for Quotation %1?';
      Text003@1008 : TextConst 'ENU=Do you want to open the Request for Quotation %1?';
      UserGroup@1031 : Record 9000;
      RTPS@1012 : Record 50010;
      CustomSetup@1013 : Record 50001;
      ResponsibilityCenter@1026 : Record 5714;
      ApprovalsMgmt@1015 : Codeunit 1535;
      UserSetupMgt@1024 : Codeunit 5700;
      NoSeriesMgt@1029 : Codeunit 396;
      SkipBillToContact@1016 : Boolean;
      Text004@1020 : TextConst 'ENU=You have successfully overridden the completion details.';
      Text005@1036 : TextConst 'ENU=Do you want to change %1?';
      Text049@1017 : TextConst 'ENU=The %1 field cannot be blank because this document is linked to an opportunity.';
      HideValidationDialog@1018 : Boolean;
      Confirmed@1019 : Boolean;
      Text038@1021 : TextConst 'ENU=Contact %1 %2 is related to a different company than customer %3.';
      Text037@1022 : TextConst 'ENU=Contact %1 %2 is not related to customer %3.';
      SkipSellToContact@1023 : Boolean;
      Text026@1025 : TextConst 'ENU=Your identification is set up to process from %1 %2 only.';
      Text062@1027 : TextConst 'ENU=You cannot change %1 because the corresponding %2 %3 has been assigned to this document.';
      Text063@1028 : TextConst 'ENU=The %1 %2 doesn''t match to %3 %4 %5.';

    PROCEDURE AssistEdit@11(OldRFQ@1000 : Record 50013) : Boolean;
    VAR
      RFQ@1001 : Record 50013;
    BEGIN
      WITH RFQ DO BEGIN
        RFQ := Rec;
        CustomSetup.GET;
        CustomSetup.TESTFIELD("RFQ Nos.");
        IF NoSeriesMgt.SelectSeries(CustomSetup."RFQ Nos.",OldRFQ."No. Series","No. Series") THEN BEGIN
          CustomSetup.GET;
          CustomSetup.TESTFIELD("RFQ Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := RFQ;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE InitInsert@61();
    VAR
      NoSeriesMgt@1000 : Codeunit 396;
    BEGIN
      IF "No." = '' THEN BEGIN
        NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Date Created","No.","No. Series");
      END;

      InitRecord;
    END;

    LOCAL PROCEDURE InitRecord@10();
    BEGIN
      IF "Date Created"= 0D THEN
        "Date Created" := TODAY;
      IF "Time Created" = 0T THEN
        "Time Created" := TIME;
      IF "Document Date" = 0D THEN
        "Document Date" := TODAY;
      "Created By" := USERID;
      "Date and Time Requested":= CURRENTDATETIME;

      "Assigned User ID" := UserSetupMgt.GetUserSetupIDWithTestfield;
      "Approver ID" := UserSetupMgt.GetUserSetupApproverID(USERID);
      IF "Requested By" = '' THEN
        "Requested By" := Usersetup."Employee No.";

      TESTFIELD("Requested By");
      TESTFIELD("Project Description");
      TESTFIELD("Customer No.");
      TESTFIELD("Cost Analyst No.");
      TESTFIELD("Customer Name");
      "Responsibility Center" := UserSetupMgt.GetRFQFilter;
      "Salesperson Code" := UserSetupMgt.GetSalespersonPurchaserCode;
    END;

    PROCEDURE InitValue@20();
    BEGIN
      "Date Created" := TODAY;
      "Time Created" := TIME;
      "Document Date" := TODAY;
      "Requested By" := UserSetupMgt.GetUserSetupEmployeeNo;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@1() : Code[20];
    VAR
      CustomSetup@1000 : Record 50001;
    BEGIN
      CustomSetup.GET;
      CustomSetup.TESTFIELD("RFQ Nos.");
      EXIT(CustomSetup."RFQ Nos.");
    END;

    PROCEDURE SetNoVisibility@69() : Boolean;
    VAR
      NoSeries@1000 : Record 308;
    BEGIN
      IF "No." <> '' THEN
        EXIT(TRUE);
      CustomSetup.GET;
      IF (CustomSetup."RFQ Nos." = '') OR NOT NoSeries.GET(CustomSetup."RFQ Nos.") THEN
        EXIT(TRUE);

      EXIT(NoSeries."Manual Nos.");
    END;

    PROCEDURE PrintDocument@2();
    VAR
      RequestForQuotation@1000 : Report 50013;
    BEGIN
      CLEAR(RequestForQuotation);
      RequestForQuotation.SetReportFilter("No.");
      RequestForQuotation.RUNMODAL;
    END;

    PROCEDURE CheckFields@3();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      TESTFIELD("No.");
      // TESTFIELD("Job No.");
      TESTFIELD("Addressee No.");
      TESTFIELD("Project Description");

      IF Purpose IN [Purpose::"Request for Proposal", Purpose::"Request for Quotation"] THEN
        TESTFIELD("RTPS No.");

      IF RTPS.GET("RTPS No.") THEN
        RTPS.TESTFIELD(Status, RTPS.Status::Completed);

      TESTFIELD("Customer No.");
      Customer.GET("Customer No.");
      Customer.TESTFIELD("VAT Registration No.");

      TESTFIELD(Purpose);
      TESTFIELD("Document Date");
      TESTFIELD("Cost Analyst No.");
      TESTFIELD(Addressee);
      TESTFIELD("Addressee Designation");
      TESTFIELD(Email);

      IF Purpose = Purpose::"Request for Proposal" THEN
       TESTFIELD(Budget);

      IF ("QTP IsEquipment") = TRUE THEN
        TESTFIELD("QTP Equipment");
      IF ("QTP IsServices") = TRUE THEN
        TESTFIELD("QTP Services");
      TESTFIELD("Competitor 1");
      // TESTFIELD("Deadline for Submission");
      TESTFIELD("Timeline of the Project");
      TESTFIELD("Requested By");
      TESTFIELD("Bid Submission Date");
      TESTFIELD("Bid Submission Time");
      TESTFIELD("Technology Group Code");
      IF "ASD Others"= TRUE THEN
        TESTFIELD("ASD Others Text");
    END;

    LOCAL PROCEDURE ValidateStatus@5();
    BEGIN
      IF Status = Status::Closed THEN
        ERROR(Error002);
      IF Status = Status::Released THEN
        ERROR(Error003);
    END;

    PROCEDURE GetEmployeeName@4(EmpNo@1000 : Code[20]) : Text;
    VAR
      Employee@1001 : Record 5200;
    BEGIN
      IF Employee.GET(EmpNo) THEN
        EXIT(Employee."First Name"+ ' '+Employee."Last Name");
    END;

    PROCEDURE GetResourceName@8(ResNo@1000 : Code[20]) : Text;
    VAR
      Res@1001 : Record 156;
    BEGIN
      IF Res.GET(ResNo) THEN
        EXIT(Res.Name);
    END;

    PROCEDURE DoneDocument@6() : Boolean;
    BEGIN
      TESTFIELD(Status, Status::Released);
      IF "Request Status" = "Request Status"::Done THEN BEGIN
        ERROR(Error001, "No.");
        EXIT(FALSE);
      END;

      IF NOT CONFIRM(Text001,TRUE, "No.") THEN
        EXIT(FALSE);

      Rec."Request Status" := "Request Status"::Done;
      Rec."Completed By" := USERID;
      Rec."Completed Date" := CURRENTDATETIME;
      Rec.MODIFY;
      EXIT(TRUE);
    END;

    PROCEDURE CancelDocument@7() : Boolean;
    BEGIN
      TESTFIELD(Status, Status::Released);
      IF "Request Status" = "Request Status"::Cancelled THEN  BEGIN
        ERROR(Error003, "No.");
        EXIT(FALSE);
      END;

      IF NOT CONFIRM(Text002, TRUE, "No.") THEN
        EXIT(FALSE);

      Rec."Request Status" := "Request Status"::Cancelled;
      Rec.MODIFY;
      EXIT(TRUE);
    END;

    PROCEDURE OpenDocument@15() : Boolean;
    BEGIN
      TESTFIELD(Status, Status::Released);
      IF "Request Status" = "Request Status"::" " THEN  BEGIN
        ERROR(Error001, "No.");
        EXIT(FALSE);
      END;

      IF NOT CONFIRM(Text003, TRUE, "No.") THEN
        EXIT(FALSE);

      Rec."Request Status" := "Request Status"::" ";
      CLEAR(Rec."Completed By");
      CLEAR(Rec."Completed Date");
      Rec.MODIFY;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE TestRFQAdmin@9();
    BEGIN
      IF ((Usersetup.GET(USERID)) AND (Usersetup."RFQ Admin" = FALSE)) OR NOT Usersetup.GET(USERID) THEN
        TESTFIELD(Status, Status::Open);
    END;

    LOCAL PROCEDURE GetCust@13(CustNo@1000 : Code[20]);
    BEGIN
      IF NOT (CustNo = '') THEN BEGIN
        IF CustNo <> Cust."No." THEN
          Cust.GET(CustNo);
      END ELSE
        CLEAR(Cust);
    END;

    LOCAL PROCEDURE UpdateBillToCont@27(CustomerNo@1000 : Code[20]);
    VAR
      ContBusRel@1003 : Record 5054;
      Cust@1001 : Record 18;
    BEGIN
      IF Cust.GET(CustomerNo) THEN BEGIN
        IF Cust."Primary Contact No." <> '' THEN
          "Addressee No." := Cust."Primary Contact No."
        ELSE BEGIN
          ContBusRel.RESET;
          ContBusRel.SETCURRENTKEY("Link to Table","No.");
          ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Customer);
          ContBusRel.SETRANGE("No.","Customer No.");
          IF ContBusRel.FINDFIRST THEN BEGIN
            "Addressee No." := ContBusRel."Contact No.";
            "Addressee Designation" := '';
            Email := '';
            Addressee := '';

          END ELSE
            "Addressee No." := '';
        END;
        Addressee := Cust.Contact;
      END;
    END;

    LOCAL PROCEDURE UpdateCustomer@25(AddresseeNo@1000 : Code[20]);
    VAR
      ContBusinessRelation@1007 : Record 5054;
      Customer@1006 : Record 18;
      Cont@1005 : Record 5050;
      CustTemplate@1004 : Record 5105;
      ContComp@1003 : Record 5050;
    BEGIN
      IF Cont.GET(AddresseeNo) THEN
        "Addressee No." := Cont."No."
      ELSE BEGIN
         Addressee := '';
         "Addressee Designation" := '';
         Email := '';
        EXIT;
      END;

      ContBusinessRelation.RESET;
      ContBusinessRelation.SETCURRENTKEY("Link to Table","Contact No.");
      ContBusinessRelation.SETRANGE("Link to Table",ContBusinessRelation."Link to Table"::Customer);
      ContBusinessRelation.SETRANGE("Contact No.",Cont."Company No.");
      IF ContBusinessRelation.FINDFIRST THEN BEGIN
        IF ("Customer No." <> '') AND
           ("Customer No." <> ContBusinessRelation."No.")
        THEN
          ERROR(Text037,Cont."No.",Cont.Name,"Customer No.");
        IF "Customer No." = '' THEN BEGIN
          SkipSellToContact := TRUE;
          VALIDATE("Customer No.",ContBusinessRelation."No.");
          SkipSellToContact := FALSE;
        END;
      END;

      IF Cont.Type = Cont.Type::Person THEN BEGIN
        Addressee := Cont.Name;
        Email := Cont."E-Mail";
        "Addressee Designation" := Cont."Job Title";
      END ELSE
        IF Customer.GET("Customer No.") THEN BEGIN
          Addressee := Customer.Contact;
          Email := Customer."E-Mail";
          "Addressee Designation" := '';
        END ELSE BEGIN
          Addressee := '';
          "Addressee Designation" := '';
          Email := '';

        END;

      // IF "Document Type" = "Document Type"::Quote THEN BEGIN
      //  IF Customer.GET("Sell-to Customer No.") OR Customer.GET(ContBusinessRelation."No.") THEN BEGIN
      //    IF Customer."Copy Sell-to Addr. to Qte From" = Customer."Copy Sell-to Addr. to Qte From"::Company THEN BEGIN
      //      Cont.TESTFIELD("Company No.");
      //      Cont.GET(Cont."Company No.");
      //    END;
      //  END ELSE BEGIN
      //    Cont.TESTFIELD("Company No.");
      //    Cont.GET(Cont."Company No.");
      //  END;
      //  "Sell-to Address" := Cont.Address;
      //  "Sell-to Address 2" := Cont."Address 2";
      //  "Sell-to City" := Cont.City;
      //  "Sell-to Post Code" := Cont."Post Code";
      //  "Sell-to County" := Cont.County;
      //  "Sell-to Country/Region Code" := Cont."Country/Region Code";
      // END;
      // IF ("Customer No." = "Bill-to Customer No.") OR
      //   ("Bill-to Customer No." = '')
      // THEN
      //  VALIDATE("Bill-to Contact No.","Sell-to Contact No.");
    END;

    PROCEDURE LinkOpportunity@79(OldOpportunityNo@1000 : Code[20]);
    VAR
      SalesHeader@1001 : Record 36;
      Opportunity@1002 : Record 5092;
    BEGIN
       IF "Opportunity No." <> OldOpportunityNo THEN
        IF "Opportunity No." <> '' THEN
          IF Opportunity.GET("Opportunity No.") THEN BEGIN
            Opportunity.TESTFIELD(Status,Opportunity.Status::"In Progress");
            "Project Description" := Opportunity.Description;
            VALIDATE("Cost Analyst No.", Opportunity."Cost Analyst In-charge No.");
            VALIDATE("Technical Lead No.", Opportunity."Technical Lead No.");
            VALIDATE("Timeline of the Project", Opportunity."Expected Timeline");
          END;
    END;

    LOCAL PROCEDURE GetFilterContNo@65() : Code[20];
    BEGIN
      IF GETFILTER("Addressee No.") <> '' THEN
        IF GETRANGEMIN("Addressee No.") = GETRANGEMAX("Addressee No.") THEN
          EXIT(GETRANGEMAX("Addressee No."));
    END;

    [Integration]
    PROCEDURE OnRFQNewNote@28(VAR RFQ@1000 : Record 50013);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnRFQNewLink@21(VAR RFQ@1000 : Record 50013);
    BEGIN
    END;

    [Integration(TRUE)]
    PROCEDURE OnCheckRFQReleaseRestriction@14();
    BEGIN
    END;

    LOCAL PROCEDURE TestRelatedRFQFields@16();
    VAR
      RFQ@1000 : Record 50013;
    BEGIN
      // PHP Start
      IF "Related RFQ No." <> '' THEN
        TESTFIELD("Related RFQ No.", '');
      // PHP End
    END;

    PROCEDURE CreateRFQRevision@12(VAR RequestForQuotation@1000 : Record 50013);
    VAR
      NewRequestForQuotation@1005 : Record 50013;
      NewRFQ@1003 : Record 50013;
      RequestForQuotationDialog@1002 : Page 50028;
      Error001@1008 : TextConst 'ENU="Request for Quotaion No. ''%1'' Quotation Type should not be = ''%2''."';
      Text001@1007 : TextConst 'ENU=New record has been inserted.';
      Decision@1001 : Boolean;
    BEGIN
      // PHP Start
      WITH RequestForQuotation DO BEGIN
        RequestForQuotationDialog.SetRequestForQuotationDialog(RequestForQuotation, 2);
        IF RequestForQuotation."Quotation Type" = RequestForQuotation."Quotation Type"::Revision THEN
          ERROR(Error001, RequestForQuotation."No.", RequestForQuotation."Quotation Type"::Revision);

        IF RequestForQuotation."No." <> '' THEN BEGIN
          RequestForQuotation.TESTFIELD(Status, RequestForQuotation.Status::Completed);
          RequestForQuotation.TESTFIELD("Related RFQ No.", '');
          IF GetRFQRevision(RequestForQuotation) <> '' THEN
            RequestForQuotationDialog.GetOngoingRevision(GetRFQRevision(RequestForQuotation));
        END;

        Decision := RequestForQuotationDialog.RUNMODAL = ACTION::OK;
        IF Decision THEN BEGIN
          IF RequestForQuotation.FINDSET THEN BEGIN
            NewRFQ.INIT;
            NewRFQ.VALIDATE("Related RFQ No.", RequestForQuotation."No.");
            NewRFQ.VALIDATE("Requested By", RequestForQuotationDialog.GetRequestedBy);
            NewRFQ.VALIDATE("If Revised/Cancelled Why", RequestForQuotationDialog.GetReviseCancelledReason);
            IF NewRFQ.INSERT(TRUE) THEN
              MESSAGE(Text001);
          END;
        END;
      END;
      // PHP End
    END;

    PROCEDURE GetRFQRevision@17(VAR SelectedRFQ@1000 : Record 50013) : Code[20];
    VAR
      RFQ@1001 : Record 50013;
    BEGIN
      RFQ.SETRANGE("Related RFQ No.", SelectedRFQ."No.");
      IF RFQ.FINDFIRST THEN
        EXIT(RFQ."No.");
    END;

    PROCEDURE OverrideCompletion@18(VAR RequestForQuotation@1000 : Record 50013;EnableMessage@1004 : Boolean);
    VAR
      NewRequestForQuotation@1003 : Record 50013;
      RequestforQuotationDialog@1001 : Page 50028;
      Decision@1002 : Boolean;
    BEGIN
      WITH RequestForQuotation DO BEGIN
        TESTFIELD(Status, Status::Completed);
        NewRequestForQuotation := RequestForQuotation;
        RequestforQuotationDialog.SetRequestForQuotationDialog(NewRequestForQuotation, 1);
        Decision := RequestforQuotationDialog.RUNMODAL = ACTION::OK;

        IF Decision THEN BEGIN
          RequestforQuotationDialog.GetRequestForQuotation(NewRequestForQuotation);
          RequestForQuotation.VALIDATE("Completed By", NewRequestForQuotation."Override Completed By");
          RequestForQuotation.VALIDATE("Completed Date", NewRequestForQuotation."Override Completed Date");
          IF RequestForQuotation.MODIFY(TRUE) THEN
            IF EnableMessage THEN
              MESSAGE(Text004);
        END;
      END;
    END;

    BEGIN
    END.
  }
}


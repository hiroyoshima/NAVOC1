OBJECT Table 50034 TERF Header
{
  OBJECT-PROPERTIES
  {
    Date=09/05/18;
    Time=[ 7:03:35 PM];
    Modified=Yes;
    Version List=X8OC0.01,OC02.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Document Type;
    OnInsert=BEGIN
               InitRecord;
             END;

    OnModify=BEGIN
               IF "Document Status" = "Document Status"::"Fully Returned" THEN
                 ERROR(Err001);

               "Modified By" := USERID;
               "Modified At" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               TERFLine_@1000 : Record 50035;
               ApprovalsMgmt@1001 : Codeunit 1535;
             BEGIN
               // TESTFIELD(Status,Status::Open);

               CASE "Document Type" OF
                "Document Type"::TERF:
                  BEGIN
                   TERFLine_.SETRANGE("Document Type", "Document Type"::TERF);
                   TERFLine_.SETRANGE("Document No.", "No.");
                   TERFLine_.DELETEALL(TRUE);
                  END;
                 "Document Type"::Withdrawal:
                  BEGIN
                    TERFLine_.SETRANGE("Document Type", "Document Type"::Withdrawal);
                    TERFLine_.SETRANGE("Document No.", "No.");
                    TERFLine_.DELETEALL(TRUE);
                  END;
               END;

               ApprovalsMgmt.DeleteApprovalEntries(RECORDID);
             END;

    CaptionML=ENU=TERF/Withdrawal Document;
    LookupPageID=Page50082;
  }
  FIELDS
  {
    { 5   ;   ;Document Type       ;Option        ;OptionCaptionML=ENU=TERF,Withdrawal,Delivery Receipt;
                                                   OptionString=TERF,Withdrawal,Delivery Receipt }
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 15  ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 25  ;   ;Created By          ;Text100       ;Editable=No }
    { 30  ;   ;Modified By         ;Text100       ;Editable=No }
    { 31  ;   ;Document Status     ;Option        ;OptionCaptionML=ENU=Open,Partially Returned,Fully Returned;
                                                   OptionString=Open,Partially Returned,Fully Returned;
                                                   Editable=No }
    { 35  ;   ;Job No.             ;Code20        ;TableRelation=Job.No.;
                                                   OnValidate=BEGIN
                                                                Job.GET("Job No.");
                                                                "Project Name" := Job.Description;
                                                              END;
                                                               }
    { 40  ;   ;Customer P.O No.    ;Code50        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);

                                                                IF "INTP No." <> '' THEN
                                                                  TESTFIELD("INTP No.");
                                                              END;
                                                               }
    { 50  ;   ;Project Name        ;Text250       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 51  ;   ;Project Name 2      ;Text250        }
    { 55  ;   ;Department Code     ;Code20        ;TableRelation="User Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 60  ;   ;Expected Date of Return;Date       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                // TESTFIELD(Purpose, Purpose::Accountability);

                                                                IF "Expected Date of Return" <> xRec."Expected Date of Return" THEN
                                                                  IF CONFIRM(Text001, FALSE, FIELDCAPTION("Expected Date of Return")) THEN
                                                                    UpdateTerfLines;
                                                              END;
                                                               }
    { 65  ;   ;INTP No.            ;Code20        ;TableRelation="Internal Notice to Proceed";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF ("INTP No." <> '') AND (INTP.GET("INTP No.")) THEN BEGIN
                                                                  IF INTP."P.O No. (Customer)" = '' THEN
                                                                    INTP."P.O No. (Customer)" := INTP."No.";
                                                                END ELSE BEGIN
                                                                  CLEAR(INTP);
                                                                END;

                                                                VALIDATE("Project Name", INTP."Project Name");
                                                                VALIDATE("Project Name 2", INTP."Project Name 2");
                                                                VALIDATE("Customer No.", INTP."Customer No.");
                                                                VALIDATE("Customer P.O No.", INTP."P.O No. (Customer)");
                                                              END;
                                                               }
    { 70  ;   ;D.R No.             ;Code20         }
    { 75  ;   ;A.R No.             ;Code20         }
    { 80  ;   ;POC/Demo Unit       ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 85  ;   ;Office Testing      ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 90  ;   ;Service Unit        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 95  ;   ;Accountability      ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 100 ;   ;Others              ;Text100       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;
                                                               }
    { 110 ;   ;Pull-Out            ;Boolean        }
    { 120 ;   ;Returned            ;Boolean        }
    { 600 ;   ;Status              ;Option        ;OptionCaptionML=ENU=Open,Pending Approval,Released,Cancelled;
                                                   OptionString=Open,Pending Approval,Released,Cancelled;
                                                   Editable=No }
    { 611 ;   ;Created At          ;DateTime      ;Editable=No }
    { 620 ;   ;Modified At         ;DateTime      ;Editable=No }
    { 630 ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                Customer_@1000 : Record 18;
                                                              BEGIN
                                                                IF "Customer No." <> '' THEN BEGIN
                                                                  Customer_.GET("Customer No.");
                                                                END ELSE BEGIN
                                                                  CLEAR(Customer_);
                                                                END;

                                                                "Customer Name" := Customer_.Name;
                                                                Address := Customer_.Address;
                                                                "Address 2" := Customer_."Address 2";
                                                              END;
                                                               }
    { 635 ;   ;Customer Name       ;Text50         }
    { 640 ;   ;Address             ;Text50         }
    { 641 ;   ;Address 2           ;Text50         }
    { 650 ;   ;iRMA No.            ;Code50        ;CaptionML=ENU=Internal RMA No. }
    { 655 ;   ;Sales               ;Boolean        }
    { 656 ;   ;Storage             ;Boolean        }
    { 657 ;   ;RMA                 ;Boolean        }
    { 658 ;   ;Golden Units        ;Boolean        }
    { 660 ;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center" }
    { 670 ;   ;Incoming Document Entry No.;Integer;TableRelation="Incoming Document" }
    { 680 ;   ;Purpose             ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;

                                                   OptionCaptionML=ENU=" ,Accountability,Project";
                                                   OptionString=[ ,Accountability,Project] }
    { 681 ;   ;Class               ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Status, Status::Open);
                                                              END;

                                                   OptionCaptionML=ENU=" ,Permanent,Temporary";
                                                   OptionString=[ ,Permanent,Temporary] }
    { 690 ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                IF "Employee No." <> '' THEN
                                                                  Employee.GET("Employee No.")
                                                                ELSE
                                                                  CLEAR(Employee);

                                                                "Department Code" := Employee."Department Code";

                                                                IF "Employee No." = '' THEN
                                                                  CheckTerfLineExists;
                                                              END;
                                                               }
    { 691 ;   ;Noted By            ;Code20        ;TableRelation=Employee }
  }
  KEYS
  {
    {    ;No.,Document Type                       ;Clustered=Yes }
    {    ;Document Type,No.                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      recCustomSetup@1000 : Record 50001;
      GlobalReference@1001 : Codeunit 50030;
      cduNoSeriesMgt@1002 : Codeunit 396;
      UserSetupMgt@1008 : Codeunit 5700;
      Job@1003 : Record 167;
      Err001@1004 : TextConst 'ENU=You can''t edit Document if status is Fully Returned!';
      Project@1005 : Record 50005;
      UserSetup@1006 : Record 91;
      TERFLines@1007 : Record 50035;
      INTP@1009 : Record 50040;
      Employee@1010 : Record 5200;
      Err002@1013 : TextConst 'ENU=You cannot reset %1 because the document still has one or more lines.';
      Text001@1012 : TextConst 'ENU=You have changed %1 on the TERF header, but it has not been changed on the existing TERF lines.\ Do you want to update the lines?';
      Text002@1011 : TextConst 'ENU=There''s nothing to release.';

    PROCEDURE AssistEdit@2() : Boolean;
    BEGIN
      recCustomSetup.GET;
      CASE "Document Type" OF
        "Document Type"::TERF:
          BEGIN
            recCustomSetup.TESTFIELD("TERF Nos.");
            IF cduNoSeriesMgt.SelectSeries(recCustomSetup."TERF Nos.",xRec."No. Series","No. Series") THEN BEGIN
              cduNoSeriesMgt.SetSeries("No.");
              EXIT(TRUE);
            END;
          END;
        "Document Type"::Withdrawal:
          BEGIN
            recCustomSetup.TESTFIELD("Withdrawal No.");
            IF cduNoSeriesMgt.SelectSeries(recCustomSetup."Withdrawal No.",xRec."No. Series","No. Series") THEN BEGIN
              cduNoSeriesMgt.SetSeries("No.");
              EXIT(TRUE);
            END;
          END;
      END;
    END;

    PROCEDURE TestLinkedDocuments@3();
    VAR
      PurchHeader@1002 : Record 38;
      PurchInvoiceHeader@1000 : Record 122;
      Error001@1001 : TextConst 'ENU=You''re not allowed to delete %1 because it is already linked to a purchase document.';
    BEGIN
      PurchHeader.SETFILTER("Reference RFP No.", "No.");
      PurchInvoiceHeader.SETFILTER("Request for Purchase No.", "No.");

      IF (PurchHeader.COUNT > 0) OR (PurchInvoiceHeader.COUNT > 0) THEN
        ERROR(Error001, "No.");
    END;

    PROCEDURE InitRecord@4();
    BEGIN
      recCustomSetup.GET;
      CASE "Document Type" OF
        "Document Type"::TERF:
          BEGIN
            IF "No." = '' THEN BEGIN
              recCustomSetup.GET;
              recCustomSetup.TESTFIELD("TERF Nos.");
              cduNoSeriesMgt.InitSeries(recCustomSetup."TERF Nos.",xRec."No. Series",0D,"No.","No. Series");
            END;
            "Responsibility Center" := UserSetupMgt.GetTERFFilter;
            "Document Date" := WORKDATE;
            "Expected Date of Return" := TODAY;
          END;
        "Document Type"::Withdrawal:
          BEGIN
            IF "No." = '' THEN BEGIN
              recCustomSetup.GET;
              recCustomSetup.TESTFIELD("Withdrawal No.");
              cduNoSeriesMgt.InitSeries(recCustomSetup."Withdrawal No.",xRec."No. Series",0D,"No.","No. Series");
            END;
            "Responsibility Center" := UserSetupMgt.GetWithdrawalFilter;
            "Document Date" := WORKDATE;
            Class := Class::Permanent;
          END;
          ELSE
            "Document Date" := WORKDATE;
      END;

      VALIDATE("Employee No.",UserSetupMgt.GetUserSetupEmployeeNo);
      "Created By" := USERID;
      "Created At" := CURRENTDATETIME;
    END;

    PROCEDURE RFPNoVisibility@5() : Boolean;
    VAR
      NoSeries@1000 : Record 308;
    BEGIN
      recCustomSetup.GET;
      CASE "Document Type" OF
        "Document Type"::TERF:
          BEGIN
            IF (recCustomSetup."TERF Nos." <> '') AND (NoSeries.GET(recCustomSetup."TERF Nos.")) AND (NoSeries."Manual Nos." = FALSE) THEN
              EXIT(FALSE);
          END;
        "Document Type"::Withdrawal:
          BEGIN
            IF (recCustomSetup."Withdrawal No." <> '') AND (NoSeries.GET(recCustomSetup."Withdrawal No.")) AND (NoSeries."Manual Nos." = FALSE) THEN
              EXIT(FALSE);
          END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE TestTERFHeader@1();
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Withdrawal:
          BEGIN
            TESTFIELD("Customer No.");
            TESTFIELD("Customer Name");
            TESTFIELD("Document Date");
          END;
        "Document Type"::TERF:
          BEGIN
            TESTFIELD("Document Date");
            TESTFIELD("Employee No.");
            TESTFIELD("Department Code");
            IF "INTP No." <> '' THEN BEGIN
              TESTFIELD("Project Name");
              TESTFIELD("Customer P.O No.");
              TESTFIELD("Customer No.");
              TESTFIELD("Customer Name");
            END;

            // Test Terf Header
            TERFLines.SETRANGE("Document No.", "No.");
            TERFLines.SETRANGE("Document Type", "Document Type");
            IF TERFLines.FINDSET THEN BEGIN
              REPEAT
                CASE TERFLines.Type OF
                  TERFLines.Type::"Fixed Asset":
                    BEGIN
                      TERFLines.TESTFIELD("No.");
                      TERFLines.TESTFIELD(Description);
                      TERFLines.TESTFIELD(Quantity);
                      TERFLines.TESTFIELD("Unit of Measure");
                      TERFLines.TESTFIELD("Responsible Person");
                      TERFLines.TESTFIELD(Quantity);
                    END;
                  TERFLines.Type::Item:
                    BEGIN
                      TERFLines.TESTFIELD("No.");
                      TERFLines.TESTFIELD(Description);
                      TERFLines.TESTFIELD(Quantity);
                      TERFLines.TESTFIELD("Unit of Measure");
                      TERFLines.TESTFIELD("Expected Date of Return");
                    END;
                END;
              UNTIL TERFLines.NEXT = 0;
            END ELSE BEGIN
              ERROR(Text002);
            END;
          END;
      END;
    END;

    PROCEDURE TestWithdrawalLines@6();
    BEGIN
      GetTerfLine;
      IF TERFLines.FINDSET THEN BEGIN
        REPEAT
          TERFLines.TESTFIELD("Unit of Measure");
          IF TERFLines.Type = TERFLines.Type::"Fixed Asset" THEN BEGIN
            TERFLines.TESTFIELD("Responsible Person");
            TERFLines.TESTFIELD(Quantity);
          END;
        UNTIL TERFLines.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdateTerfLines@9();
    BEGIN
      GetTerfLine;
      IF TERFLines.FINDSET THEN BEGIN
        REPEAT
          TERFLines."Expected Date of Return" := "Expected Date of Return";
          TERFLines.MODIFY(TRUE);
        UNTIL TERFLines.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckTerfLineExists@25();
    BEGIN
      GetTerfLine;
      IF TERFLines.FINDSET THEN
        ERROR(Err002, FIELDCAPTION("Employee No."));
    END;

    LOCAL PROCEDURE GetTerfLine@26();
    BEGIN
      TERFLines.SETRANGE("Document No.", "No.");
      TERFLines.SETRANGE("Document Type", "Document Type");
    END;

    BEGIN
    END.
  }
}


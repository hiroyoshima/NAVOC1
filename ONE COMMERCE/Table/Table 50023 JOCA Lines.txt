OBJECT Table 50023 JOCA Lines
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=[ 3:56:00 AM];
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestJobOrderStatusOpen;
             END;

    OnDelete=BEGIN
               TestJobOrderStatusOpen;
             END;

    CaptionML=ENU=Cash Advance Lines;
  }
  FIELDS
  {
    { 10  ;   ;Line No.            ;Integer        }
    { 20  ;   ;Job Order No.       ;Code20         }
    { 30  ;   ;Type                ;Option        ;OnValidate=VAR
                                                                TempJOCALines@1000 : TEMPORARY Record 50023;
                                                              BEGIN
                                                                TestJobOrderStatusOpen;

                                                                TempJOCALines := Rec;
                                                                INIT;

                                                                Type := TempJOCALines.Type;
                                                              END;

                                                   OptionCaptionML=ENU=" ,,Item";
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 40  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item)) Item WHERE (Blocked=CONST(No),
                                                                                                        Cash Advance Account=CONST(Yes));
                                                   OnValidate=VAR
                                                                JOCALines@1001 : TEMPORARY Record 50023;
                                                                Item@1000 : Record 27;
                                                              BEGIN
                                                                TestJobOrderStatusOpen;

                                                                JOCALines := Rec;
                                                                INIT;

                                                                Type := JOCALines.Type;
                                                                "No." := JOCALines."No.";

                                                                CASE Type OF
                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      Description := Item.Description;
                                                                      "Unit of Measure Code" := Item."Base Unit of Measure";
                                                                      VALIDATE("Unit Cost", Item."Unit Cost");
                                                                    END;
                                                                END;
                                                              END;
                                                               }
    { 50  ;   ;Description         ;Text50         }
    { 60  ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure" WHERE (Item No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                TestJobOrderStatusOpen;
                                                                IF Type = Type::" " THEN
                                                                  FIELDERROR(Type);
                                                              END;
                                                               }
    { 70  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                TestJobOrderStatusOpen;
                                                                IF Type = Type::" " THEN
                                                                  FIELDERROR(Type);

                                                                Amount := ROUND(Quantity * "Unit Cost"); // Implement Currency
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 80  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                TestJobOrderStatusOpen;
                                                                IF Type = Type::" " THEN
                                                                  FIELDERROR(Type);

                                                                Amount := ROUND(Quantity * "Unit Cost"); // Implement Currency
                                                              END;
                                                               }
    { 90  ;   ;Amount              ;Decimal       ;Editable=No }
    { 500 ;   ;Job No.             ;Code20        ;TableRelation=Job }
    { 510 ;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   OnValidate=BEGIN
                                                                // TESTFIELD("Receipt No.",'');
                                                                // // PHP Start
                                                                // TestJobLinkOnValidate;
                                                                // // PHP End
                                                                 IF "Job Task No." <> xRec."Job Task No." THEN BEGIN
                                                                  VALIDATE("Job Planning Line No.",0);
                                                                 END;

                                                                 IF "Job Task No." = '' THEN BEGIN
                                                                //  CLEAR(JobJnlLine);
                                                                  "Job Line Type" := "Job Line Type"::" ";
                                                                //  UpdateJobPrices;
                                                                //  CreateDim(
                                                                //    DimMgt.TypeToTableID3(Type),"No.",
                                                                //    DATABASE::Job,"Job No.",
                                                                //    DATABASE::"Responsibility Center","Responsibility Center",
                                                                //    DATABASE::"Work Center","Work Center No.");
                                                                  EXIT;
                                                                 END;

                                                                // JobSetCurrencyFactor;
                                                                // IF JobTaskIsSet THEN BEGIN
                                                                //  CreateTempJobJnlLine(TRUE);
                                                                //  UpdateJobPrices;
                                                                // END;
                                                                // UpdateDimensionsFromJobTask;
                                                              END;

                                                   CaptionML=ENU=Job Task No. }
    { 520 ;   ;Job Line Type       ;Option        ;OnValidate=VAR
                                                                ErrChangeNotAllowed@1001 : TextConst 'ENU=%1 cannot be changed when %2 is set.';
                                                              BEGIN
                                                                 IF "Job Planning Line No." <> 0 THEN
                                                                  ERROR(ErrChangeNotAllowed, FIELDCAPTION("Job Line Type"), FIELDCAPTION("Job Planning Line No."));
                                                              END;

                                                   AccessByPermission=TableData 167=R;
                                                   CaptionML=ENU=Job Line Type;
                                                   OptionCaptionML=ENU=" ,Schedule,Contract,Both Schedule and Contract";
                                                   OptionString=[ ,Schedule,Contract,Both Schedule and Contract] }
    { 530 ;   ;Job Planning Line No.;Integer      ;OnValidate=VAR
                                                                JobPlanningLine@1000 : Record 1003;
                                                              BEGIN
                                                                // // PHP Start
                                                                // TestJobLinkOnValidate;
                                                                // // PHP End
                                                                //
                                                                 IF "Job Planning Line No." <> 0 THEN BEGIN
                                                                  JobPlanningLine.GET("Job No.","Job Task No.","Job Planning Line No.");
                                                                  JobPlanningLine.TESTFIELD("Job No.","Job No.");
                                                                  JobPlanningLine.TESTFIELD("Job Task No.","Job Task No.");
                                                                  CASE Type OF
                                                                    Type::"G/L Account":
                                                                      JobPlanningLine.TESTFIELD(Type,JobPlanningLine.Type::"G/L Account");
                                                                    Type::Item:
                                                                      JobPlanningLine.TESTFIELD(Type,JobPlanningLine.Type::Item);
                                                                  END;
                                                                  JobPlanningLine.TESTFIELD("No.","No.");
                                                                  JobPlanningLine.TESTFIELD("Usage Link",TRUE);
                                                                  JobPlanningLine.TESTFIELD("System-Created Entry",FALSE);
                                                                  "Job Line Type" := JobPlanningLine."Line Type" + 1;
                                                                //  VALIDATE("Job Remaining Qty.",JobPlanningLine."Remaining Qty." - "Qty. to Invoice");
                                                                 END;
                                                                // ELSE
                                                                //  VALIDATE("Job Remaining Qty.",0);
                                                              END;

                                                   OnLookup=VAR
                                                              JobPlanningLine@1000 : Record 1003;
                                                            BEGIN
                                                              // JobPlanningLine.SETRANGE("Job No.","Job No.");
                                                              // JobPlanningLine.SETRANGE("Job Task No.","Job Task No.");
                                                              // CASE Type OF
                                                              //  Type::"G/L Account":
                                                              //    JobPlanningLine.SETRANGE(Type,JobPlanningLine.Type::"G/L Account");
                                                              //  Type::Item:
                                                              //    JobPlanningLine.SETRANGE(Type,JobPlanningLine.Type::Item);
                                                              // END;
                                                              // JobPlanningLine.SETRANGE("No.","No.");
                                                              // JobPlanningLine.SETRANGE("Usage Link",TRUE);
                                                              // JobPlanningLine.SETRANGE("System-Created Entry",FALSE);
                                                              //
                                                              // IF PAGE.RUNMODAL(0,JobPlanningLine) = ACTION::LookupOK THEN
                                                              //  VALIDATE("Job Planning Line No.",JobPlanningLine."Line No.");
                                                            END;

                                                   AccessByPermission=TableData 167=R;
                                                   CaptionML=ENU=Job Planning Line No.;
                                                   BlankZero=Yes }
  }
  KEYS
  {
    {    ;Job Order No.,Line No.                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      JobOrder@1000 : Record 50012;

    LOCAL PROCEDURE TestJobOrderStatusOpen@4();
    BEGIN
      JobOrder.GET("Job Order No.");
      JobOrder.TESTFIELD(Status, JobOrder.Status::Open);
    END;

    BEGIN
    END.
  }
}


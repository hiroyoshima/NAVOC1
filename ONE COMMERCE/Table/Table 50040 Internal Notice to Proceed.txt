OBJECT Table 50040 Internal Notice to Proceed
{
  OBJECT-PROPERTIES
  {
    Date=06/28/18;
    Time=[ 2:13:15 AM];
    Modified=Yes;
    Version List=NAVW25.00.00.06;
  }
  PROPERTIES
  {
    Permissions=TableData 352=rim;
    DataCaptionFields=No.,Project Name;
    OnInsert=VAR
               Employee_@1000 : Record 5200;
             BEGIN
               InitInsert;
               "Document Date" := CURRENTDATETIME;
               "Created At" := CURRENTDATETIME;

               IF UserSetup.GET(USERID) AND (UserSetup."Resource No." <> '') THEN BEGIN
                 VALIDATE("Cost Analyst No.", UserSetup."Resource No.");

                 IF UserSetup."Employee No." <> '' THEN
                   VALIDATE("Issued By No.", UserSetup."Employee No.");

               END;

               VALIDATE("Notice To Proceed", TRUE);
               SetupDefaultDimension;
             END;

    OnModify=BEGIN
               "Modified At" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               ApprovalsMgmt@1000 : Codeunit 1535;
             BEGIN
               // CheckLedgerEntries;

               ApprovalsMgmt.DeleteApprovalEntries(RECORDID);
               DimMgt.DeleteDefaultDim(DATABASE::"Internal Notice to Proceed", "No.");
             END;

    OnRename=BEGIN
               ERROR(Error002, Rec.TABLECAPTION);
             END;

    CaptionML=ENU=Internal Notice to Proceed;
    LookupPageID=Page50040;
    DrillDownPageID=Page50040;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  NoSeriesMgt.TestManual(INTPSetup."INTP Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;
                                                               }
    { 15  ;   ;Job Order No.       ;Code20        ;TableRelation="Job Order";
                                                   OnValidate=VAR
                                                                JobOrder@1000 : Record 50012;
                                                              BEGIN
                                                                TestINTPDocStatus;
                                                                IF "Job Order No." <> '' THEN
                                                                  JobOrder.GET("Job Order No.")
                                                                ELSE
                                                                  CLEAR(JobOrder);
                                                                // "SR No." := JobOrder."SR No.";
                                                              END;
                                                               }
    { 16  ;   ;SR No.              ;Code20        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Service Report No. }
    { 17  ;   ;No of Sites         ;Integer       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 18  ;   ;Salesperson No.     ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=VAR
                                                                UserSetup@1001 : Record 91;
                                                                PersontoNotify@1000 : Record 50024;
                                                              BEGIN
                                                                TestINTPDocStatus;
                                                                IF ("Salesperson No." <> '') AND ("Salesperson No." <> xRec."Salesperson No.") THEN BEGIN
                                                                  UpdateDefaultDimFromTable(DATABASE::"Salesperson/Purchaser", "Salesperson No.");
                                                                  UserSetup.SETRANGE("Sales Resp. Ctr. Filter", "Salesperson No.");
                                                                  IF UserSetup.FINDSET THEN
                                                                    REPEAT
                                                                      InsertPersonToNotify(UserSetup."User ID");
                                                                    UNTIL UserSetup.NEXT = 0;
                                                                END;
                                                              END;
                                                               }
    { 19  ;   ;Salesperson         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Salesperson No.)));
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   Editable=No }
    { 20  ;   ;Notice To Proceed   ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF "Notice To Proceed" = TRUE THEN BEGIN
                                                                  VALIDATE("Notice To Mobilize",FALSE);
                                                                  VALIDATE("w/o P.O", TRUE);
                                                                  VALIDATE("Release Date of P.O", TODAY);
                                                                END ELSE BEGIN
                                                                  CLEAR("w/o P.O");
                                                                  CLEAR("Release Date of P.O");
                                                                END;
                                                              END;
                                                               }
    { 21  ;   ;Site Names          ;Text250       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 50  ;   ;Notice To Mobilize  ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF "Notice To Mobilize" = TRUE THEN BEGIN
                                                                  VALIDATE("Notice To Proceed", FALSE);
                                                                  VALIDATE("w/ P.O", TRUE);
                                                                  VALIDATE("P.O Date (Customer)", TODAY);
                                                                END ELSE BEGIN
                                                                  CLEAR("w/ P.O");
                                                                  CLEAR("P.O No. (Customer)");
                                                                  CLEAR("P.O Date (Customer)");
                                                                END;
                                                              END;
                                                               }
    { 70  ;   ;Reference No.       ;Code20        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 80  ;   ;Document Date       ;DateTime      ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 90  ;   ;Document Time       ;Time          ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 100 ;   ;LOG-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "LOG-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Logistics PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Logistics }
    { 101 ;   ;LOG-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 110 ;   ;WMU-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "WMU-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Warehouse PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Warehouse Management Unit }
    { 111 ;   ;WMU-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 120 ;   ;INV-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "INV-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Inventory PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Inventory }
    { 121 ;   ;INV-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 130 ;   ;ACC-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "ACC-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Accounting PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Accounting }
    { 132 ;   ;ACC-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 140 ;   ;TAU-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "TAU-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Tel. Audit PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Telecom Audit }
    { 141 ;   ;TAU-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 150 ;   ;PMO-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "PMO-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Project Control PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Project Control }
    { 151 ;   ;PMO-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 160 ;   ;FIN-AP Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "FIN-AP Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Finance AP PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Finance - Accounts Payable }
    { 161 ;   ;Fin-AP PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 170 ;   ;PUR-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "PUR-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Purchasing PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Purchasing }
    { 171 ;   ;PUR-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 180 ;   ;SAL-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "SAL-00 Dept." THEN BEGIN
                                                                  TESTFIELD("Salesperson No.");
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Sales PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sales }
    { 181 ;   ;SAL-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 190 ;   ;FIN-AR Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "FIN-AR Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Finance AR PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Finance - Accounts Receivables }
    { 191 ;   ;Others              ;Text50         }
    { 192 ;   ;FIN-AR PTN          ;Code100       ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 200 ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                Cust@1000 : Record 18;
                                                                RecordRestrictionMgt@1001 : Codeunit 1550;
                                                              BEGIN
                                                                TestINTPDocStatus;
                                                                IF Cust.GET("Customer No.") THEN BEGIN
                                                                  RecordRestrictionMgt.CheckRecordHasUsageRestrictions(Cust.RECORDID);
                                                                  Cust.TESTFIELD("Gen. Bus. Posting Group");
                                                                  Cust.TESTFIELD("Customer Posting Group");
                                                                  Cust.TESTFIELD("VAT Bus. Posting Group");
                                                                  Cust.TESTFIELD(Blocked, Cust.Blocked::" ");
                                                                END ELSE BEGIN
                                                                  CLEAR(Cust);
                                                                END;
                                                                "Customer Name" := Cust.Name;
                                                                "Customer Name 2" := Cust."Name 2";
                                                                "Prices Including VAT" := Cust."Prices Including VAT";
                                                              END;
                                                               }
    { 210 ;   ;Customer Name       ;Text50        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 211 ;   ;Customer Name 2     ;Text50         }
    { 215 ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   OnValidate=VAR
                                                                Project@1000 : Record 50005;
                                                              BEGIN
                                                              END;
                                                               }
    { 220 ;   ;P.O No. (Customer)  ;Code50        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=P.O No. }
    { 230 ;   ;P.O Date (Customer) ;Date          ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=P.O Date }
    { 240 ;   ;Complete Equip. Date;Date          ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Date of Complete Equipments Ready }
    { 250 ;   ;Proj. Target Complete Date;Date    ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Project Target Completion Date }
    { 260 ;   ;xrec. Delivery To Client Whse.;Text50;
                                                   CaptionML=ENU=Delivery to Customer Warehouse }
    { 261 ;   ;Dlvr.-Cust. Whse.   ;Option        ;OnValidate=BEGIN
                                                                IF "Dlvr.-Cust. Whse." = "Dlvr.-Cust. Whse."::No THEN
                                                                  CLEAR("Date of Dlvr.-Cust. Whse.");
                                                              END;

                                                   CaptionML=ENU=Delivery to Customer Warehouse;
                                                   OptionCaptionML=ENU=,No,Yes;
                                                   OptionString=[ ,No,Yes];
                                                   BlankZero=Yes }
    { 262 ;   ;Date of Dlvr.-Cust. Whse.;Date     ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                                IF "Date of Dlvr.-Cust. Whse." <> 0D THEN
                                                                  "Dlvr.-Cust. Whse." := "Dlvr.-Cust. Whse."::Yes;
                                                              END;

                                                   CaptionML=ENU=Date of Delivery to Customer Warehouse }
    { 270 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=VAR
                                                                Vend@1000 : Record 23;
                                                              BEGIN
                                                                TestINTPDocStatus;
                                                                IF "Vendor No." <> '' THEN
                                                                  Vend.GET("Vendor No.")
                                                                ELSE BEGIN
                                                                  CLEAR(Vend);
                                                                END;
                                                                "Vendor Name" := Vend.Name;
                                                              END;
                                                               }
    { 280 ;   ;Vendor Name         ;Text50        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 290 ;   ;P.O No. To Supplier ;Code20        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=P.O No. to Supplier }
    { 300 ;   ;Project Name        ;Text250       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                                "Project Name" := UPPERCASE("Project Name");
                                                              END;
                                                               }
    { 301 ;   ;Project Name 2      ;Text250       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                                "Project Name 2" := UPPERCASE("Project Name 2");
                                                              END;
                                                               }
    { 310 ;   ;Site Survey         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF "Site Survey" = FALSE THEN BEGIN
                                                                  CLEAR("S.S O and L No.");
                                                                  CLEAR("Approved MOA/MOU");
                                                                  CLEAR("Approved RAAWA/Work Permit");
                                                                  CLEAR("Floor Plans from Customer");
                                                                  CLEAR("Ctctd. Strctrd. Cblng Subcon");
                                                                END;
                                                              END;
                                                               }
    { 311 ;   ;S.S O and L No.     ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 312 ;   ;Approved MOA/MOU    ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 314 ;   ;Approved RAAWA/Work Permit;Boolean ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 315 ;   ;Floor Plans from Customer;Boolean  ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 317 ;   ;Ctctd. Strctrd. Cblng Subcon;Boolean;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Contacted Structured Cabling SubCon }
    { 320 ;   ;Installation        ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF Installation = FALSE THEN BEGIN
                                                                  CLEAR("Approved BOQ");
                                                                  CLEAR("Approved HLD and TSSR Design");
                                                                  CLEAR("Approved Work Permit/RAAWA");
                                                                  CLEAR("Signed Notice to Install");
                                                                END;
                                                              END;
                                                               }
    { 321 ;   ;Approved BOQ        ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Approved Consolidated BOQ with Pricing }
    { 322 ;   ;Approved HLD and TSSR Design;Boolean;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 323 ;   ;Approved Work Permit/RAAWA;Boolean ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 324 ;   ;Signed Notice to Install;Boolean   ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Signed Notice to Install from Customer }
    { 325 ;   ;Maintenance         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 326 ;   ;Building Clearance  ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 330 ;   ;Commissioning       ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 340 ;   ;Testing             ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 350 ;   ;Preliminary Acceptance;Boolean     ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 360 ;   ;Final Acceptance    ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 370 ;   ;Rectification       ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 380 ;   ;Troubleshooting     ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   Description=T. }
    { 381 ;   ;T. 1st Trip         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 382 ;   ;T. 2nd Trip         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 383 ;   ;T. 3rd Trip         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 390 ;   ;Quality Audit/Trial/POC;Boolean    ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   Description=Q. }
    { 391 ;   ;Q. 1st Trip         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 392 ;   ;Q. 2nd Trip         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 393 ;   ;Q. 3rd Trip         ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 500 ;   ;Shipment (Air Freight);Boolean     ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 510 ;   ;Shipment (Sea Freight);Boolean     ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 520 ;   ;Delivery To Customers Whse.;Boolean;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 530 ;   ;Q. Others Please Specify;Boolean   ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF "Q. Others Please Specify" = FALSE THEN BEGIN
                                                                  CLEAR("Q. Others Remarks");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Others Please Specify }
    { 531 ;   ;Q. Others Remarks   ;Text50        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Remarks }
    { 540 ;   ;A. Notice To Proceed;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Notice to Proceed;
                                                   Description=Attachments }
    { 550 ;   ;ATP/CTF             ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Approval to Proceed/Conduct Trial Form }
    { 560 ;   ;A. Signed Trial     ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Signed Trial Contract/Test Parameters }
    { 570 ;   ;A. P.O. From Client ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=P.O from Customer }
    { 580 ;   ;A. P.O. To Supplier ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=P.O to Supplier }
    { 590 ;   ;A. Bill Of Materials;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Bill of Materials }
    { 600 ;   ;A. Allocated Budget ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Allocated Budget }
    { 610 ;   ;A. Others Please Specify;Boolean   ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Others Please Specify }
    { 620 ;   ;A. Others Remarks   ;Text100       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Remarks }
    { 630 ;   ;Within Warranty     ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 640 ;   ;With Maintenance Service;Boolean   ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=With Maintenance Service Contract }
    { 650 ;   ;Expired Warranty    ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Expired Warranty / Justification }
    { 660 ;   ;Expired Justification;Text30       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 661 ;   ;Remarks             ;Text50        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 662 ;   ;Exception Report    ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF "Exception Report" = FALSE THEN BEGIN
                                                                  CLEAR("Exception Report No.");
                                                                END;
                                                              END;
                                                               }
    { 800 ;   ;No. Series          ;Code20        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 900 ;   ;Approval Status     ;Option        ;OptionCaptionML=ENU=Open,Pending Approval,Released,Cancelled;
                                                   OptionString=Open,Pending Approval,Released,Cancelled;
                                                   Editable=No }
    { 950 ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                IF Status IN [Status::New, Status::Revised] THEN
                                                                  TESTFIELD("Approval Status", "Approval Status"::Open);

                                                                IF Status = Status::Revised THEN
                                                                  TESTFIELD("Related INTP No.");

                                                                IF NOT (Status IN [Status::New, Status::Revised]) THEN BEGIN
                                                                  SetStatus("Approval Status"::Released,FALSE);
                                                                  IF ApprovalsMgmt.IsOnChangeOfINTPStatusNotificationWorkflowEnabled(Rec)  THEN
                                                                    OnSendINTPStatusNotification(Rec);
                                                                END;
                                                              END;

                                                   OptionCaptionML=ENU=New,Revised,Completed,Cancelled,Lost;
                                                   OptionString=New,Revised,Completed,Cancelled,Lost }
    { 1012;   ;Created At          ;DateTime      ;Editable=No }
    { 1013;   ;Modified At         ;DateTime      ;Editable=No }
    { 1020;   ;Clustering Mobilization;Boolean    ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1021;   ;Supply Only         ;Option        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   OptionCaptionML=ENU=,No,Yes;
                                                   OptionString=[ ,No,Yes];
                                                   BlankZero=Yes }
    { 1022;   ;Per Site Mobilization;Boolean      ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1023;   ;Demo POC            ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1024;   ;w/o P.O             ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF "w/o P.O" = FALSE THEN BEGIN
                                                                  CLEAR("Release Date of P.O" );
                                                                END ELSE BEGIN
                                                                  "Release Date of P.O" := TODAY;
                                                                END;
                                                              END;
                                                               }
    { 1025;   ;Release Date of P.O ;Date          ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1050;   ;POW-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "POW-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Power PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Power System }
    { 1051;   ;TRM-WRD Dept.       ;Boolean       ;OnValidate=BEGIN
                                                                IF "TRM-WRD Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Transmission Wired PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Transmission Wired }
    { 1052;   ;ICT-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "ICT-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."ICT PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Information Communication System (ICT) }
    { 1053;   ;CPE-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "CPE-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Device PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Device Management }
    { 1054;   ;PMD-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "PMD-00 Dept." THEN BEGIN
                                                                  TESTFIELD("Project Manager No.");
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Project Mgmt. Dept. PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Project Management }
    { 1055;   ;OSP-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "OSP-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Outside Plant PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Outside Plant (OSP) }
    { 1056;   ;AUD-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "AUD-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Audit PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Audit Department }
    { 1057;   ;QAU-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "QAU-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Quality Assurance PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Quality Assurance }
    { 1058;   ;WRL-A1 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "WRL-A1 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Wireless Access 1 PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Wireless Access (1) }
    { 1059;   ;TRM-WRL Dept.       ;Boolean       ;OnValidate=BEGIN
                                                                IF "TRM-WRL Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Transmission Wrl. PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Transmission Wireless }
    { 1060;   ;WRL-A2 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "WRL-A2 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Wireless Access 2 PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Wireless Access (2) }
    { 1061;   ;w/ P.O              ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;

                                                                IF "w/ P.O" = FALSE THEN BEGIN
                                                                  CLEAR("P.O No. (Customer)");
                                                                  CLEAR("P.O Date (Customer)");
                                                                END;
                                                              END;
                                                               }
    { 1065;   ;Sales Engineer No.  ;Code20        ;TableRelation=Resource;
                                                   OnValidate=VAR
                                                                Resource@1001 : Record 156;
                                                              BEGIN
                                                                TestINTPDocStatus;

                                                                IF ("Sales Engineer No." <> '') AND ("Sales Engineer No." <> xRec."Sales Engineer No.") THEN BEGIN
                                                                  UpdateDefaultDimFromTable(DATABASE::Resource, "Sales Engineer No.");
                                                                  IF Resource.GET("Sales Engineer No.") AND (Resource."Time Sheet Owner User ID" <> '') THEN
                                                                    InsertPersonToNotify(Resource."Time Sheet Owner User ID");
                                                                END;
                                                              END;
                                                               }
    { 1066;   ;Sales Engineer      ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Sales Engineer No.)));
                                                   Editable=No }
    { 1070;   ;Project Manager No. ;Code20        ;TableRelation=Resource;
                                                   OnValidate=VAR
                                                                Resource@1000 : Record 156;
                                                              BEGIN
                                                                TestINTPDocStatus;

                                                                IF "Project Manager No." <> '' THEN BEGIN
                                                                  VALIDATE("PMD-00 Dept.", TRUE);
                                                                  IF Resource.GET("Project Manager No.") AND (Resource."Time Sheet Owner User ID" <> '') THEN
                                                                    InsertPersonToNotify(Resource."Time Sheet Owner User ID");
                                                                END ELSE BEGIN
                                                                  VALIDATE("PMD-00 Dept.", FALSE);
                                                                END;
                                                              END;
                                                               }
    { 1071;   ;Project Manager     ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Project Manager No.)));
                                                   Editable=No }
    { 1075;   ;Site Acquisition    ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                                IF "Site Acquisition" = FALSE THEN BEGIN
                                                                  CLEAR("S.A O and L No.");
                                                                END;
                                                              END;
                                                               }
    { 1076;   ;S.A O and L No.     ;Boolean       ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1080;   ;Issued By No.       ;Code20        ;TableRelation=Employee }
    { 1081;   ;Audit Resp. No.     ;Code20        ;TableRelation=Employee }
    { 1082;   ;Finance Resp. No.   ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1083;   ;Accounting Resp. No.;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1084;   ;Inventory Resp. No. ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1085;   ;Warehouse Resp. No. ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1086;   ;Reviewed Resp. No.  ;Code20        ;TableRelation=Employee }
    { 1087;   ;Legal Resp. No.     ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1088;   ;Technical In-charge No.;Code20     ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1089;   ;CEO Resp. No.       ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1090;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1),
                                                                                               Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1, "Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 1095;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                               Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2, "Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 1100;   ;Comments            ;BLOB          ;SubType=Memo }
    { 1101;   ;Exception Report No.;Code50        ;OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;
                                                               }
    { 1110;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID }
    { 1120;   ;Cost Analyst No.    ;Code20        ;TableRelation=Resource;
                                                   OnValidate=VAR
                                                                Resource@1000 : Record 156;
                                                              BEGIN
                                                                TESTFIELD("Cost Analyst No.");
                                                                IF Resource.GET("Cost Analyst No.") AND (Resource."Time Sheet Owner User ID" <> '') THEN
                                                                  InsertPersonToNotify(Resource."Time Sheet Owner User ID");
                                                              END;
                                                               }
    { 1121;   ;Cost Analyst        ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Cost Analyst No.)));
                                                   Editable=No }
    { 1130;   ;POW-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1131;   ;TRM-WRD PTN         ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1132;   ;ICT-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1133;   ;CPE-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1134;   ;PMD-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1135;   ;OSP-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1136;   ;QAU-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1137;   ;WRL-A1 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1138;   ;WRL-A2 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1139;   ;TRM-WRL PTN         ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1141;   ;AUD-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1150;   ;Invoices            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (INTP No.=FIELD(No.)));
                                                   Editable=No }
    { 1160;   ;Incoming Document Entry No.;Integer }
    { 1170;   ;Cancelled By        ;Code50        ;TableRelation="User Setup";
                                                   Editable=No }
    { 1175;   ;Prices Including VAT;Boolean        }
    { 1176;   ;Amount              ;Decimal       ;DecimalPlaces=0:5 }
    { 1177;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 1180;   ;HRD-00 PTN          ;Code50        ;TableRelation="User Setup";
                                                   CaptionML=ENU=Person to Notify }
    { 1181;   ;HRD-00 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "HRD-00 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Human Capital Mgmt. PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Human Resource }
    { 1185;   ;Total Amt. Invoice  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Entry Global Dim. 1=FILTER(<>''),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Code),
                                                                                                              Document Type=FILTER(Credit Memo|Invoice)));
                                                   DecimalPlaces=0:5 }
    { 1190;   ;Related INTP No.    ;Code20        ;TableRelation="Internal Notice to Proceed";
                                                   OnValidate=BEGIN
                                                                IF "Related INTP No." = "No." THEN
                                                                  FIELDERROR("Related INTP No.");
                                                              END;

                                                   CaptionML=ENU=Related Internal Notice to Proceed No. }
    { 1195;   ;SCU-01 Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "SCU-01 Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Passive Unit PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Passive Unit }
    { 1200;   ;SCU-01 PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify }
    { 1201;   ;Project Category Code;Code20       ;TableRelation="Project Category";
                                                   OnValidate=VAR
                                                                ProjectCategory@1000 : Record 50554;
                                                              BEGIN
                                                                TestINTPDocStatus;
                                                                IF ("Project Category Code" <> '') OR ("Project Category Code" <> xRec."Project Category Code") THEN BEGIN
                                                                  UpdateDefaultDimFromTable(DATABASE::"Project Category", "Project Category Code");
                                                                  IF ProjectCategory.GET("Project Category Code") THEN BEGIN
                                                                    IF ProjectCategory."Auto-tick Required Jobs-INTP" THEN
                                                                      "Require Job in Purch. Docs." := TRUE;
                                                                  END;
                                                                END;
                                                              END;
                                                               }
    { 1220;   ;Require Job in Purch. Docs.;Boolean;CaptionML=ENU=Require Job in Purchase Documents }
    { 1225;   ;RFQ No.             ;Code20        ;TableRelation="Request For Quotation" WHERE (Status=CONST(Completed));
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Request for Quotation No. }
    { 1235;   ;RMS-DT Dept.        ;Boolean       ;OnValidate=BEGIN
                                                                IF "RMS-DT Dept." THEN BEGIN
                                                                  INTPSetup.GET;
                                                                  InsertPersonToNotify(INTPSetup."Documentation PTN");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Documentation Team }
    { 1245;   ;RMS-DT PTN          ;Code50        ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                TestINTPDocStatus;
                                                              END;

                                                   CaptionML=ENU=Person to Notify Documentation Team }
    { 1250;   ;Advance Deposit     ;Boolean       ;InitValue=Yes }
    { 1260;No ;Start Date of Warranty;Date        ;OnValidate=BEGIN
                                                                TESTFIELD("Start Date of Warranty");
                                                                IF "Start Date of Warranty" <> xRec."Start Date of Warranty" THEN
                                                                  SetWarrantyDate(FIELDNO("Start Date of Warranty"));
                                                              END;
                                                               }
    { 1270;No ;End Date of Warranty;Date          ;OnValidate=BEGIN
                                                                TESTFIELD("End Date of Warranty");
                                                                IF "End Date of Warranty" <> xRec."End Date of Warranty" THEN
                                                                  SetWarrantyDate(FIELDNO("End Date of Warranty"));
                                                              END;
                                                               }
    { 1280;   ;Warranty Period     ;DateFormula    }
    { 1290;   ;Without Warranty    ;Boolean       ;OnValidate=BEGIN
                                                                IF FORMAT("Warranty Period") <> '' THEN
                                                                  TESTFIELD("Without Warranty", FALSE);
                                                              END;
                                                               }
    { 1300;   ;RFE No.             ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Invoice),
                                                                                           Request type=CONST(Request For Exception),
                                                                                           Status=FILTER(Released|Pending Approval));
                                                   OnValidate=VAR
                                                                SalesHeader@1000 : Record 36;
                                                              BEGIN
                                                                TESTFIELD("Customer No.");
                                                                IF SalesHeader.GET(SalesHeader."Document Type"::Invoice, "RFE No.") THEN
                                                                  SalesHeader.TESTFIELD("Sell-to Customer No.", "Customer No.");
                                                              END;

                                                   OnLookup=VAR
                                                              SalesHeader@1000 : Record 36;
                                                            BEGIN
                                                              TESTFIELD("Customer No.");
                                                              SalesHeader.SETFILTER(Status, '%1|%2',SalesHeader.Status::Released, SalesHeader.Status::"Pending Approval");
                                                              SalesHeader.SETRANGE("Sell-to Customer No.", "Customer No.");
                                                              IF "RFE No." <> '' THEN
                                                               IF  SalesHeader.GET(SalesHeader."Document Type"::Invoice, "RFE No.") THEN;
                                                              IF PAGE.RUNMODAL(PAGE::"Request for Exceptions", SalesHeader) = ACTION::LookupOK THEN BEGIN
                                                                 xRec := Rec;
                                                               VALIDATE("RFE No.",SalesHeader."No.");
                                                               SalesHeader.TESTFIELD("Sell-to Customer No.", "Customer No.");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Request for Exception No. }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Project Name                             }
    {    ;Project Name 2                           }
    {    ;Customer Name                            }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Customer Name,Project Name,Project Name 2 }
  }
  CODE
  {
    VAR
      Jobs@1000 : Record 167;
      VendrLdgrEnt@1001 : Record 25;
      Error001@1002 : TextConst 'ENU=You cannot delete %1 %2 because it has ledger entries.';
      INTPSetup@1007 : Record 50029;
      UserSetup@1006 : Record 91;
      DefaultDim@1010 : Record 352;
      DefaultDim2@1009 : Record 352;
      GLSetup@1008 : Record 98;
      DimMgt@1003 : Codeunit 408;
      NoSeriesMgt@1005 : Codeunit 396;
      UserSetupMgt@1012 : Codeunit 5700;
      Error002@1016 : TextConst 'ENU=You cannot rename a %1.';
      Err03@1017 : TextConst 'ENU="Please indicate a %1 in Date Formula. Ex. 6 Months = ""6M"", 1 Year = ""1Y"", 2 Years = ""2Y"""';
      Text003@1011 : TextConst 'ENU=The approval process must be cancelled or completed to release this document.';
      ApprovalsMgmt@1004 : Codeunit 1535;
      ApprovalReopenErr@1014 : TextConst 'ENU=The approval process must be cancelled or completed to reopen this document.';
      ApprovalReleaseErr@1013 : TextConst 'ENU=The approval process must be completed to release this document.';
      CustomApprovalsMgmt@1015 : Codeunit 50582;
      TINValidator@1018 : Codeunit 50021;

    PROCEDURE InitInsert@61();
    VAR
      NoSeriesMgt@1000 : Codeunit 396;
    BEGIN
      IF "No." = '' THEN BEGIN
        NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series",TODAY,"No.","No. Series");
      END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@1() : Code[20];
    BEGIN
      INTPSetup.GET;
      INTPSetup.TESTFIELD("INTP Nos.");
      EXIT(INTPSetup."INTP Nos.");
    END;

    PROCEDURE GetEmployeeName@3(EmpNo@1000 : Code[20]) : Text;
    VAR
      Emp@1001 : Record 5200;
    BEGIN
      IF Emp.GET(EmpNo) THEN
        EXIT(Emp."First Name"+ ' '+Emp."Last Name");
    END;

    PROCEDURE SetStatus@5(ApprovalStatusOption@1000 : Option;DisablePromptMsg@1001 : Boolean);
    BEGIN
      CASE ApprovalStatusOption OF
        "Approval Status"::Open:
          BEGIN
            VALIDATE("Approval Status", "Approval Status"::Open);
            CLEAR("Cancelled By");
            MODIFY(TRUE);
          END;
        "Approval Status"::"Pending Approval":
          BEGIN
            TestInternalNoticeToProceedField;
            VALIDATE("Approval Status", "Approval Status"::"Pending Approval");
            MODIFY(TRUE);
          END;
        "Approval Status"::Released:
          BEGIN
            OnCheckINTPReleaseRestriction;
            VALIDATE("Approval Status", "Approval Status"::Released);
            MODIFY(TRUE);
            IF CustomApprovalsMgmt.IsINTPFieldChangeWorkflowEnabled(Rec) THEN
              OnFieldChange(Rec, xRec);
          END;
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnSendINTPStatusNotification@93(VAR INTP@1000 : Record 50040);
    BEGIN
    END;

    [Integration(TRUE)]
    PROCEDURE OnCheckINTPReleaseRestriction@16();
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnFieldChange@11(VAR RecINTP@1000 : Record 50040;VAR xRecINTP@1001 : Record 50040);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnAfterRelease@156(VAR INTP@1000 : Record 50040);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnAfterReOpen@148(VAR INTP@1001 : Record 50040);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnBeforeRelease@157(VAR INTP@1000 : Record 50040);
    BEGIN
    END;

    [Integration]
    PROCEDURE OnBeforeReOpen@149(VAR INTP@1000 : Record 50040);
    BEGIN
    END;

    PROCEDURE PerformManualRelease@139(VAR INTP@1002 : Record 50040);
    VAR
      CustomApprovalManagement@1000 : Codeunit 50582;
    BEGIN
      IF ApprovalsMgmt.IsNTPApprovalsWorkflowEnabled(INTP) AND (INTP."Approval Status" = INTP."Approval Status"::Open) THEN
       ERROR(ApprovalReleaseErr);

      INTP.TestInternalNoticeToProceedField;
      Release(INTP);
    END;

    PROCEDURE PerformManualReOpen@150(VAR INTP@1000 : Record 50040);
    BEGIN
      IF INTP."Approval Status" = INTP."Approval Status"::"Pending Approval" THEN
        ERROR(ApprovalReopenErr);

      Reopen(INTP);
    END;

    PROCEDURE Release@131(VAR INTP@1000 : Record 50040);
    BEGIN
      IF INTP."Approval Status" = INTP."Approval Status"::Released THEN
        EXIT;

      OnBeforeRelease(INTP);
      INTP.SetStatus(INTP."Approval Status"::Released, FALSE);
      OnAfterRelease(INTP);
    END;

    PROCEDURE Reopen@151(VAR INTP@1000 : Record 50040);
    BEGIN
      IF INTP."Approval Status" = INTP."Approval Status"::Open THEN
         EXIT;

      OnBeforeReOpen(INTP);
      INTP.SetStatus(INTP."Approval Status"::Open,FALSE);
      OnAfterReOpen(INTP);
    END;

    LOCAL PROCEDURE TestINTPDocStatus@6();
    BEGIN
      IF NOT UserSetupMgt.CheckIfINTPAdmin THEN
        TESTFIELD("Approval Status", "Approval Status"::Open);
    END;

    PROCEDURE SetupDefaultDimension@10();
    VAR
      Dimension@1001 : Record 348;
    BEGIN
      Dimension.SETRANGE(Blocked,FALSE);
       IF Dimension.FINDSET THEN
        REPEAT
          InsertDefaultDim(Dimension.Code, '');
        UNTIL Dimension.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertDefaultDim@57(DimCode@1001 : Code[20];DimValCode@1002 : Code[20]);
    VAR
      DefaultDimension@1000 : Record 352;
    BEGIN
      DefaultDimension.INIT;
      DefaultDimension.VALIDATE("Table ID", DATABASE::"Internal Notice to Proceed");
      DefaultDimension.CALCFIELDS("Table Caption");
      DefaultDimension."No." := "No.";
      DefaultDimension.VALIDATE("Dimension Code", DimCode);
      DefaultDimension.VALIDATE("Dimension Value Code", DimValCode);
      DefaultDimension.VALIDATE("Value Posting", DefaultDimension."Value Posting"::"Same Code");
      DefaultDimension.INSERT;
      UpdateGlobalDimCode(DefaultDimension."Dimension Code", DefaultDimension."Dimension Value Code");
    END;

    LOCAL PROCEDURE UpdateDefaultDimFromTable@17(TableNo@1002 : Integer;DefDimNo@1003 : Code[20]);
    VAR
      TableDefaultDim@1001 : Record 352;
      INTPDefaultDim@1000 : Record 352;
    BEGIN
      CASE TableNo OF
        DATABASE::"Project Category":
          TableDefaultDim.SETRANGE("Table ID", DATABASE::"Project Category");
        DATABASE::Resource:
          TableDefaultDim.SETRANGE("Table ID", DATABASE::Resource);
        DATABASE::"Salesperson/Purchaser":
          TableDefaultDim.SETRANGE("Table ID", DATABASE::"Salesperson/Purchaser");
      END;
      TableDefaultDim.SETRANGE("No.", DefDimNo);

      IF TableDefaultDim.FINDSET THEN
        REPEAT
          INTPDefaultDim.SETRANGE("Table ID", DATABASE::"Internal Notice to Proceed");
          INTPDefaultDim.SETRANGE("No.","No.");
          INTPDefaultDim.SETRANGE("Dimension Code", TableDefaultDim."Dimension Code");
          IF INTPDefaultDim.FINDFIRST THEN BEGIN
            INTPDefaultDim.VALIDATE("Dimension Value Code", TableDefaultDim."Dimension Value Code");
            // This code will prevent the error from code programming/ Modify try will conflict to other codes
            INTPDefaultDim.MODIFY;
            UpdateGlobalDimCode(INTPDefaultDim."Dimension Code", INTPDefaultDim."Dimension Value Code");
          END ELSE BEGIN
            InsertDefaultDim(TableDefaultDim."Dimension Code", TableDefaultDim."Dimension Value Code");
          END;
        UNTIL TableDefaultDim.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateGlobalDimCode@54(DimCode@1001 : Code[20];DimValueCode@1002 : Code[20]);
    VAR
      GLSetup@1000 : Record 98;
    BEGIN
        GLSetup.GET;
        IF GLSetup."Global Dimension 1 Code" = DimCode THEN
          "Global Dimension 1 Code" := DimValueCode;
        IF GLSetup."Global Dimension 2 Code" = DimCode THEN
          "Global Dimension 2 Code" := DimValueCode;
    END;

    PROCEDURE PrintDocument@2();
    VAR
      NoticeToProceed@1000 : Report 50041;
    BEGIN
      CLEAR(NoticeToProceed);
      NoticeToProceed.SetReportFilter("No.");
      NoticeToProceed.RUNMODAL;
    END;

    PROCEDURE TestfieldWithPO@9();
    BEGIN
      TESTFIELD("P.O No. (Customer)");
      TESTFIELD("P.O Date (Customer)");
    END;

    PROCEDURE TestfieldWithoutPO@12();
    BEGIN
      TESTFIELD("Release Date of P.O");
    END;

    LOCAL PROCEDURE CheckLedgerEntries@4();
    BEGIN
      VendrLdgrEnt.RESET;
      VendrLdgrEnt.SETRANGE("INTP No.","No.");
      IF VendrLdgrEnt.FINDFIRST THEN
        ERROR(Error001,TABLENAME,"No.");
    END;

    PROCEDURE ShowDocDim@32();
    VAR
      OldDimSetID@1000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2', Rec.TABLECAPTION, "No."),
          "Global Dimension 1 Code","Global Dimension 2 Code");
    END;

    PROCEDURE TestInternalNoticeToProceedField@7();
    VAR
      ProjectCategory@1000 : Record 50554;
      Customer@1001 : Record 18;
    BEGIN
      TESTFIELD("Customer No.");
      TESTFIELD("Customer Name");
      TESTFIELD("Project Name");

      INTPSetup.GET;
      // Require the VAT Registration No/TIN No. of the customer
      Customer.GET("Customer No.");
      IF INTPSetup."Customer VAT Registration No." THEN BEGIN
        Customer.TESTFIELD("VAT Registration No.");
       IF NOT TINValidator.ValidateTinNo(Customer."VAT Registration No.") THEN
        Customer.FIELDERROR(Customer."VAT Registration No.");
      END;


      IF INTPSetup."Project Category" THEN
        TESTFIELD("Project Category Code");

      TESTFIELD("Salesperson No.");
      TESTFIELD("Proj. Target Complete Date");

      TESTFIELD("Dlvr.-Cust. Whse.");
      IF "Dlvr.-Cust. Whse." = "Dlvr.-Cust. Whse."::Yes THEN
        TESTFIELD("Date of Dlvr.-Cust. Whse.");

      IF ProjectCategory.GET("Project Category Code") THEN BEGIN
        IF ProjectCategory."Require RFQ in INTP" AND "Notice To Mobilize" THEN
          TESTFIELD("RFQ No.");

        IF ProjectCategory."Sales Personnel No. Required" THEN
          TESTFIELD("Salesperson No.");
        IF ProjectCategory."Technical In-Charge Required" THEN
          TESTFIELD("Technical In-charge No.");
        IF ProjectCategory."Project Manager No. Required" THEN
          TESTFIELD("Project Manager No.");
        IF ProjectCategory."Request For Exception Required" AND ("Notice To Proceed" OR ("P.O No. (Customer)" = '')) THEN
          TESTFIELD("RFE No.");
      END;

      IF "Exception Report" = TRUE THEN
        TESTFIELD("Exception Report No.");
      IF "A. Others Please Specify" = TRUE  THEN
        TESTFIELD("A. Others Remarks");

      IF "w/o P.O" = TRUE THEN BEGIN
        TESTFIELD("Release Date of P.O");
      END;

      IF "w/ P.O" = TRUE THEN BEGIN
        TESTFIELD("P.O No. (Customer)");
        TESTFIELD("P.O Date (Customer)");
      END;

      IF (FORMAT("Warranty Period") = '') AND NOT ("Without Warranty") THEN
        ERROR(Err03, FIELDCAPTION("Warranty Period"));

      IF FORMAT("Warranty Period") <> '' THEN
        TESTFIELD("Without Warranty", FALSE);
    END;

    PROCEDURE AssistEdit@13() : Boolean;
    BEGIN
      INTPSetup.GET;
      INTPSetup.TESTFIELD("INTP Nos.");
      IF NoSeriesMgt.SelectSeries(INTPSetup."INTP Nos.",xRec."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE CreateDim@26(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20]);
    VAR
      SourceCodeSetup@1010 : Record 242;
      TableID@1011 : ARRAY [10] OF Integer;
      No@1012 : ARRAY [10] OF Code[20];
      OldDimSetID@1008 : Integer;
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      // TableID[3] := Type3;
      // No[3] := No3;
      // TableID[4] := Type4;
      // No[4] := No4;
      "Global Dimension 1 Code" := '';
      "Global Dimension 2 Code" := '';
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(TableID,No,SourceCodeSetup.Purchases,"Global Dimension 1 Code","Global Dimension 2 Code",0,0);

      // IF (OldDimSetID <> "Dimension Set ID") AND PurchLinesExist THEN BEGIN
      //   MODIFY;
      //   UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      // END;
    END;

    LOCAL PROCEDURE CreateDefaultDim@8(TableId@1000 : Integer;NoCode@1001 : Code[20]);
    BEGIN
      IF NoCode <> '' THEN BEGIN
        GLSetup.GET;

        DefaultDim.SETRANGE("Table ID",TableId);
        DefaultDim.SETRANGE("No.", NoCode);

        IF DefaultDim.FINDSET THEN BEGIN
          REPEAT
            IF NOT DefaultDim2.GET(DATABASE::"Internal Notice to Proceed", "No.", DefaultDim."Dimension Code") THEN BEGIN
              DefaultDim2.INIT;
              DefaultDim2."Table ID" := DATABASE::"Internal Notice to Proceed";
              DefaultDim2."No." := "No.";
              DefaultDim2."Dimension Code" := DefaultDim."Dimension Code";
              DefaultDim2."Dimension Value Code" := DefaultDim."Dimension Value Code";
              DefaultDim2.INSERT(TRUE);
            END;
          UNTIL DefaultDim.NEXT = 0
        END;
      END;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Internal Notice to Proceed","No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    LOCAL PROCEDURE InsertPersonToNotify@14(PersonToNotifyUserID@1001 : Code[50]);
    VAR
      PersontoNotify@1000 : Record 50024;
    BEGIN
      IF PersonToNotifyUserID = '' THEN
        EXIT;

      IF PersontoNotify.GET(DATABASE::"Internal Notice to Proceed", "No.", PersonToNotifyUserID) THEN
        EXIT;

      PersontoNotify.INIT;
      PersontoNotify."Table ID" := DATABASE::"Internal Notice to Proceed";
      PersontoNotify."No." := "No.";
      PersontoNotify.VALIDATE("User ID", PersonToNotifyUserID);
      PersontoNotify.INSERT;
    END;

    LOCAL PROCEDURE SetWarrantyDate@15(RecFieldNo@1000 : Integer);
    VAR
      ServiceMgtSetup@1001 : Record 5911;
      EarlyDateErrMsg@1003 : TextConst 'ENU=%1 must not be earlier than %2. Current value is %3.';
      LateDateErrMsg@1002 : TextConst 'ENU=%1 must be earlier than %2. Current value is %3.';
    BEGIN
      ServiceMgtSetup.GET;
      ServiceMgtSetup.TESTFIELD("Default Warranty Duration");

      CASE RecFieldNo OF
        FIELDNO("Start Date of Warranty"):
          BEGIN
            IF "End Date of Warranty" = 0D THEN
              "End Date of Warranty" := CALCDATE(ServiceMgtSetup."Default Warranty Duration", "Start Date of Warranty");
            IF "Start Date of Warranty" > "End Date of Warranty" THEN
              "End Date of Warranty" := CALCDATE(ServiceMgtSetup."Default Warranty Duration", "Start Date of Warranty");
            IF "Start Date of Warranty" < "Proj. Target Complete Date" THEN
              ERROR(LateDateErrMsg, FIELDNAME("Start Date of Warranty"), FIELDNAME("Proj. Target Complete Date"), "Start Date of Warranty");

          END;
        FIELDNO("End Date of Warranty"):
          BEGIN
            SetWarrantyDate(0);
          END;
        ELSE BEGIN
          TESTFIELD("Start Date of Warranty");
          TESTFIELD("End Date of Warranty");
          IF "Start Date of Warranty" > "End Date of Warranty" THEN
            ERROR(EarlyDateErrMsg, FIELDNAME("Start Date of Warranty"), FIELDNAME("End Date of Warranty"), "Start Date of Warranty");
          IF "End Date of Warranty" < "Start Date of Warranty" THEN
            ERROR(LateDateErrMsg, FIELDNAME("End Date of Warranty"), FIELDNAME("Start Date of Warranty"), "End Date of Warranty");
        END;
      END;
    END;

    PROCEDURE GetDPCollectionStatus@18() : Text;
    VAR
      SalesInvoiceHeader@1000 : Record 112;
      CustLedgerEntry@1001 : Record 21;
      DetailedCustLedgEntry@1002 : Record 379;
    BEGIN
      // Return Value: Not Applicable, Billed and Collected, Billed and Uncollected, Unbilled and Uncollected
      IF NOT "Advance Deposit" OR "Demo POC" THEN
        EXIT('Not Applicable');

      // Get the Sales Invoice Header
      SalesInvoiceHeader.SETCURRENTKEY("No.");
      SalesInvoiceHeader.SETASCENDING("No.", TRUE);
      SalesInvoiceHeader.SETRANGE("INTP No.", "No.");
      SalesInvoiceHeader.SETRANGE("Request type", SalesInvoiceHeader."Request type"::Others); // Need to filter the request type to exclude other transaction
      IF SalesInvoiceHeader.FINDFIRST THEN BEGIN
        CustLedgerEntry.GET(SalesInvoiceHeader."Cust. Ledger Entry No.");
        IF NOT CustLedgerEntry.Open THEN
          EXIT('Billed and Collected')
        ELSE
          EXIT('Billed and Uncollected');
      END;

      EXIT('Unbilled and Uncollected');
    END;

    BEGIN
    END.
  }
}


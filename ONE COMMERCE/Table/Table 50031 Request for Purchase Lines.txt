OBJECT Table 50031 Request for Purchase Lines
{
  OBJECT-PROPERTIES
  {
    Date=08/10/18;
    Time=[ 2:32:48 PM];
    Modified=Yes;
    Version List=X8OC0.01,OC02.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdateCreator;
               TestRFPurHeaderStatusReleased;
             END;

    OnModify=BEGIN
               UpdateCreator;
             END;

    OnDelete=BEGIN
               GetRFPHeader;
               RFPHeader.TESTFIELD(Status, RFPHeader.Status::Open);
             END;

  }
  FIELDS
  {
    { 5   ;   ;Document Type       ;Option        ;OptionCaptionML=ENU=Request for Purchase,Request for Payment;
                                                   OptionString=Request for Purchase,Request for Payment }
    { 10  ;   ;Document No.        ;Code20         }
    { 11  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                TempRFPurLines := Rec;
                                                                INIT;
                                                                Type := TempRFPurLines.Type;
                                                              END;

                                                   OptionCaptionML=ENU=" ,G/L Account,Item,,Fixed Asset,Charge (Item)";
                                                   OptionString=[ ,G/L Account,Item,,Fixed Asset,Charge (Item)] }
    { 15  ;   ;Line No.            ;Integer        }
    { 20  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(G/L Account)) "G/L Account" WHERE (Direct Posting=CONST(Yes),
                                                                                                                        Account Type=CONST(Posting),
                                                                                                                        Blocked=CONST(No),
                                                                                                                        RFP Account=CONST(Yes));
                                                   OnValidate=VAR
                                                                ItemUM@1000 : Record 5404;
                                                              BEGIN
                                                                TestRFPurHeaderStatusReleased;
                                                                CASE Type OF
                                                                  Type::"G/L Account":
                                                                    BEGIN
                                                                      GLAcc.GET("No.");
                                                                      Description := GLAcc.Name;
                                                                    END;
                                                                  Type::Item:
                                                                  BEGIN
                                                                    recItem.GET("No.");
                                                                    recItem.CALCFIELDS(Inventory);
                                                                    Description := recItem.Description;
                                                                    "Unit of Measure" := recItem."Base Unit of Measure";
                                                                    VALIDATE("Stocks on Hand", recItem.Inventory);
                                                                  END;
                                                                END;
                                                              END;
                                                               }
    { 25  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                TestRFPurHeaderStatusReleased;
                                                              END;
                                                               }
    { 30  ;   ;Unit of Measure     ;Text10        ;TableRelation=IF (Type=CONST(Item),
                                                                     No.=FILTER(<>'')) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                     ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                TestRFPurHeaderStatusReleased;
                                                              END;

                                                   CaptionML=ENU=Unit of Measure }
    { 35  ;   ;Stocks on Hand      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry".Quantity WHERE (Item No.=FIELD(No.)));
                                                   OnValidate=BEGIN
                                                                // "Available Stock on Hand" := "Stocks on Hand";
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 40  ;   ;Min. Stocking       ;Integer       ;OnValidate=BEGIN
                                                                TestRFPurHeaderStatusReleased;
                                                                IF "Min. Stocking" = 0 THEN BEGIN
                                                                  IF "Stocks on Hand" - Request > 0 THEN BEGIN
                                                                    "Total Qty to be Purchased" := 0;
                                                                    "Available Stock on Hand" := "Stocks on Hand" - Request;
                                                                  END ELSE IF "Stocks on Hand" - Request < 0 THEN BEGIN
                                                                    "Total Qty to be Purchased" := Request - "Stocks on Hand";
                                                                    "Available Stock on Hand" := 0;
                                                                  END;
                                                                END ELSE IF "Min. Stocking" > 0 THEN BEGIN
                                                                  IF "Stocks on Hand" > 0 THEN BEGIN
                                                                    IF "Stocks on Hand" >= Request THEN BEGIN
                                                                      "Available Stock on Hand" := "Stocks on Hand" - Request;
                                                                      "Total Qty to be Purchased" := "Min. Stocking" - "Available Stock on Hand";
                                                                    END ELSE IF "Stocks on Hand" < Request THEN BEGIN
                                                                      "Total Qty to be Purchased" := Request - "Stocks on Hand" + "Min. Stocking";
                                                                      IF "Stocks on Hand" - Request < 0 THEN BEGIN
                                                                        "Available Stock on Hand" := 0;
                                                                      END;
                                                                    END;
                                                                  END ELSE IF "Stocks on Hand" = 0 THEN BEGIN
                                                                    "Total Qty to be Purchased" := Request + "Min. Stocking";
                                                                    IF "Stocks on Hand" - Request < 0 THEN BEGIN
                                                                        "Available Stock on Hand" := 0;
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;
                                                               }
    { 45  ;   ;Available Stock on Hand;Decimal    ;OnValidate=BEGIN
                                                                "Total Qty to be Purchased" := "Available Stock on Hand" - Request;
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 50  ;   ;Request             ;Decimal       ;OnValidate=BEGIN
                                                                //VALIDATE("Total Qty to be Purchased","Available Stock on Hand" - Request);
                                                                TestRFPurHeaderStatusReleased;
                                                                IF "Min. Stocking" = 0 THEN BEGIN
                                                                  IF "Stocks on Hand" - Request > 0 THEN BEGIN
                                                                    "Total Qty to be Purchased" := 0;
                                                                    "Available Stock on Hand" := "Stocks on Hand" - Request;
                                                                  END
                                                                  ELSE IF "Stocks on Hand" - Request < 0 THEN BEGIN
                                                                    "Total Qty to be Purchased" := Request - "Stocks on Hand";
                                                                    "Available Stock on Hand" := 0;
                                                                  END
                                                                END
                                                                ELSE IF "Min. Stocking" > 0 THEN BEGIN
                                                                  IF "Stocks on Hand" > 0 THEN BEGIN
                                                                    IF "Stocks on Hand" >= Request THEN BEGIN
                                                                      "Available Stock on Hand" := "Stocks on Hand" - Request;
                                                                      "Total Qty to be Purchased" := "Min. Stocking" - "Available Stock on Hand";
                                                                    END
                                                                    ELSE IF "Stocks on Hand" < Request THEN BEGIN
                                                                      "Total Qty to be Purchased" := Request - "Stocks on Hand" + "Min. Stocking";
                                                                      IF "Stocks on Hand" - Request < 0 THEN BEGIN
                                                                        "Available Stock on Hand" := 0;
                                                                      END
                                                                    END
                                                                  END
                                                                  ELSE IF "Stocks on Hand" = 0 THEN BEGIN
                                                                    "Total Qty to be Purchased" := Request + "Min. Stocking";
                                                                    IF "Stocks on Hand" - Request < 0 THEN BEGIN
                                                                        "Available Stock on Hand" := 0;

                                                                      END
                                                                  END
                                                                END;
                                                                VALIDATE("Total Qty to be Purchased");
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 55  ;   ;Total Qty to be Purchased;Decimal  ;OnValidate=BEGIN
                                                                "Remaining Quantity" := "Total Qty to be Purchased";
                                                              END;

                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 60  ;   ;Remark              ;Text100        }
    { 65  ;   ;Remaining Quantity  ;Decimal       ;OnValidate=BEGIN
                                                                "Quantity Purchased" := "Total Qty to be Purchased" - "Remaining Quantity";
                                                              END;

                                                   DecimalPlaces=0:5 }
    { 70  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor.No.;
                                                   OnValidate=BEGIN
                                                                TestRFPurHeaderStatusReleased;
                                                              END;

                                                   CaptionML=ENU=Vendor No. }
    { 71  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   Editable=No }
    { 75  ;   ;Get                 ;Boolean        }
    { 80  ;   ;Quantity Purchased  ;Decimal       ;FieldClass=Normal;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 90  ;   ;Cross-Reference No. ;Code20        ;OnLookup=VAR
                                                              ItemCrossReference@1000 : Record 5717;
                                                            BEGIN
                                                               TestRFPurHeaderStatusReleased;
                                                               ItemCrossReference.RESET;
                                                                ItemCrossReference.SETCURRENTKEY("Cross-Reference Type","Cross-Reference Type No.");
                                                                ItemCrossReference.SETFILTER(
                                                                  "Cross-Reference Type",'%1|%2',
                                                                  ItemCrossReference."Cross-Reference Type"::Vendor,
                                                                  ItemCrossReference."Cross-Reference Type"::" ");
                                                                ItemCrossReference.SETFILTER("Cross-Reference Type No.",'%1|%2',"Vendor No.",'');
                                                                IF PAGE.RUNMODAL(PAGE::"Cross Reference List",ItemCrossReference) = ACTION::LookupOK THEN BEGIN
                                                                  VALIDATE("Cross-Reference No.",ItemCrossReference."Cross-Reference No.");
                                                                  //PurchPriceCalcMgt.FindPurchLinePrice(PurchHeader,Rec,FIELDNO("Cross-Reference No."));
                                                                  //PurchPriceCalcMgt.FindPurchLineLineDisc(PurchHeader,Rec);
                                                                  //VALIDATE("Direct Unit Cost");
                                                                END;
                                                            END;
                                                             }
    { 95  ;   ;Job No.             ;Code20        ;TableRelation=Job }
  }
  KEYS
  {
    {    ;Document No.,Document Type,Line No.     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      recItem@1000 : Record 27;
      RFPHeader@1001 : Record 50030;
      TempRFPurLines@1002 : Record 50031;
      GLAcc@1003 : Record 15;
      GlobalReference@1004 : Codeunit 50030;

    LOCAL PROCEDURE UpdateCreator@1();
    VAR
      RequestforPurchase@1000 : Record 50030;
    BEGIN
      IF RequestforPurchase.GET("Document No.") THEN BEGIN
        RequestforPurchase."Modified by" := USERID;
        RequestforPurchase.MODIFY(TRUE);
      END;
    END;

    PROCEDURE InitType@20();
    BEGIN
      IF "Document No." <> '' THEN BEGIN
        Type := xRec.Type;
      END;
    END;

    PROCEDURE TestRFPurHeaderStatusReleased@2();
    VAR
      RFPurHeader@1000 : Record 50030;
    BEGIN
      GetRFPHeader;
      RFPurHeader.TESTFIELD(Status, RFPurHeader.Status::Open);
      RFPurHeader.TESTFIELD("Date Needed");
      RFPurHeader.TESTFIELD("Document Date");
      RFPurHeader.TESTFIELD("Employee No.");
    END;

    LOCAL PROCEDURE GetRFPHeader@4();
    BEGIN
      RFPHeader.GET("Document No.", "Document Type");
    END;

    BEGIN
    END.
  }
}


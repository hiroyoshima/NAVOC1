OBJECT Table 50036 Payment Gateway Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/12/18;
    Time=10:21:43 PM;
    Modified=Yes;
    Version List=NAVW25.00.00.08.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=Payment Gateway Setup;
  }
  FIELDS
  {
    { 10  ;   ;Primary Key         ;Code10         }
    { 11  ;   ;Enable Payment Gateway;Option      ;OptionCaptionML=ENU=No,Purchase,Sales,Both Purchase and Sales;
                                                   OptionString=No,Purchase,Sales,Both Purchase and Sales }
    { 12  ;   ;Service Provider    ;Option        ;OptionCaptionML=ENU=DragonPay;
                                                   OptionString=DragonPay }
    { 15  ;   ;User Name           ;Code250        }
    { 20  ;   ;API Key             ;GUID           }
    { 35  ;   ;Authorization Key   ;GUID          ;TableRelation="Service Password".Key;
                                                   CaptionML=ENU=Authorization Key }
    { 45  ;   ;Bin                 ;Code8          }
    { 50  ;No ;LID/MUVA Nos.       ;Code10        ;TableRelation="No. Series" }
    { 100 ;   ;Service URL         ;Text250       ;OnValidate=VAR
                                                                HttpWebRequestMgt@1000 : Codeunit 1297;
                                                              BEGIN
                                                                IF "Service URL" = '' THEN
                                                                  EXIT;
                                                                HttpWebRequestMgt.CheckUrl("Service URL");
                                                                WHILE (STRLEN("Service URL") > 8) AND ("Service URL"[STRLEN("Service URL")] = '/') DO
                                                                  "Service URL" := COPYSTR("Service URL",1,STRLEN("Service URL") - 1);
                                                              END;

                                                   ExtendedDatatype=URL }
    { 110 ;   ;Gen. Journal Template;Code10       ;TableRelation="Gen. Journal Template" }
    { 120 ;   ;Gen. Journal Batch Name;Code10     ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Gen. Journal Template)) }
    { 130 ;   ;Convenience Fee     ;Decimal       ;OnValidate=BEGIN
                                                                // DragonPayCollectionHistory.SETRANGE(Posted, FALSE);
                                                              END;
                                                               }
    { 140 ;   ;Convenience Fee Item No.;Code20    ;TableRelation=Item WHERE (Type=CONST(Service),
                                                                             Blocked=CONST(No)) }
    { 161 ;   ;Convenience Fee G/L No.;Code20     ;TableRelation="G/L Account" WHERE (Blocked=CONST(No),
                                                                                      Direct Posting=CONST(Yes)) }
    { 170 ;   ;E-Mail Payment Confirmation;Boolean;OnValidate=BEGIN
                                                                CALCFIELDS("Payment Confirmation Template");
                                                                IF NOT "Payment Confirmation Template".HASVALUE THEN
                                                                  ERROR(Err01);

                                                                DragonpayServiceManagement("E-Mail Payment Confirmation");
                                                              END;
                                                               }
    { 180 ;   ;Payment Confirmation Template;BLOB  }
    { 190 ;   ;Send CC             ;Text250        }
    { 191 ;   ;Send BCC            ;Text250        }
    { 200 ;   ;Auto-Post DP Collection Entry;Boolean;
                                                   OnValidate=BEGIN
                                                                DragonpayServiceManagement("Auto-Post DP Collection Entry");
                                                              END;

                                                   CaptionML=ENU=Auto-post Dragonpay Collection Entry }
    { 250 ;   ;Dragonpay Account No.;Code20       ;TableRelation=Customer;
                                                   OnValidate=VAR
                                                                Customer@1000 : Record 18;
                                                              BEGIN
                                                                IF ("Dragonpay Account No." <> xRec."Dragonpay Account No.") AND Customer.GET(xRec."Dragonpay Account No.") THEN BEGIN
                                                                  // Check if the previous account does not have balance
                                                                  Customer.CALCFIELDS("Balance (LCY)");
                                                                  Customer.TESTFIELD("Balance (LCY)", 0);
                                                                END;
                                                              END;
                                                               }
    { 251 ;   ;Dragonpay Bal. Account No.;Code20  ;TableRelation="G/L Account" WHERE (Blocked=CONST(No)) }
    { 252 ;   ;WHT Bus. Posting Group;Code10      ;TableRelation="WHT Business Posting Group" }
    { 253 ;   ;WHT Product Posting Group;Code10   ;TableRelation="WHT Product Posting Group" }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Err01@1002 : TextConst 'ENU=Please Import a E-Mail Template.';
      EncryptionIsNotActivatedQst@1000 : TextConst 'ENU=Data encryption is not activated. It is recommended that you encrypt data. \Do you want to open the Data Encryption Management window?';
      DragonPayCollectionHistory@1001 : Record 50039;
      DragonpayServiceManagementQst@1003 : TextConst 'ENU=A job queue entry for dragonpay service has been created.\\Do you want to open the Job Queue Entries window?';
      CancelDragonpayServiceManagementQst@1004 : TextConst 'ENU=A job queue entry for dragonpay service has been created.\\Do you want to cancel the Job Queue Entries?';

    PROCEDURE SavePassword@1(VAR PasswordKey@1001 : GUID;PasswordText@1000 : Text);
    VAR
      ServicePassword@1002 : Record 1261;
    BEGIN
      IF ISNULLGUID(PasswordKey) OR NOT ServicePassword.GET(PasswordKey) THEN BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.INSERT(TRUE);
        PasswordKey := ServicePassword.Key;
        MODIFY;
      END ELSE BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.MODIFY;
      END;
      COMMIT;
      IF PasswordText <> '' THEN
         CheckEncryption;
    END;

    PROCEDURE GetPassword@2(PasswordKey@1001 : GUID) : Text;
    VAR
      ServicePassword@1000 : Record 1261;
    BEGIN
      ServicePassword.GET(PasswordKey);
      EXIT(ServicePassword.GetPassword);
    END;

    LOCAL PROCEDURE DeletePassword@4(PasswordKey@1000 : GUID);
    VAR
      ServicePassword@1001 : Record 1261;
    BEGIN
      IF ServicePassword.GET(PasswordKey) THEN
        ServicePassword.DELETE;
    END;

    PROCEDURE HasPassword@3(PasswordKey@1001 : GUID) : Boolean;
    VAR
      ServicePassword@1000 : Record 1261;
    BEGIN
      IF NOT ServicePassword.GET(PasswordKey) THEN
        EXIT(FALSE);
      EXIT(ServicePassword.GetPassword <> '');
    END;

    LOCAL PROCEDURE CheckEncryption@6();
    BEGIN
      IF NOT ENCRYPTIONENABLED THEN
        IF CONFIRM(EncryptionIsNotActivatedQst) THEN
          PAGE.RUN(PAGE::"Data Encryption Management");
    END;

    PROCEDURE CheckEnabled@7();
    BEGIN
      // IF NOT Enabled THEN
      //  ERROR(MustBeEnabledErr);
    END;

    PROCEDURE ImportPaymentConfirmationEmailTemplate@8();
    VAR
      TempBlob@1002 : TEMPORARY Record 99008535;
      FileManagement@1001 : Codeunit 419;
      FilePath@1000 : Text;
      ErrChangeAttachment@1006 : TextConst 'ENU=Do you want to change the attachment?';
      ImportTxt@1005 : TextConst 'ENU=Select a file to import';
      FileFilterTxt@1004 : TextConst '@@@=Do not translate the file extensions (e.g. .xml, .txt, .csv, etc);ENU="HTML Files(*.html;htm)|*.html;*.htm"';
      FileFilterExtensionTxt@1003 : TextConst '@@@={Locked};ENU=html,htm';
      Text01@1007 : TextConst 'ENU=Template has been successfully imported.
    ';
    BEGIN
      FilePath := FileManagement.BLOBImportWithFilter(TempBlob, ImportTxt, '', FileFilterTxt, FileFilterExtensionTxt);
      IF FilePath = '' THEN
        EXIT;

      "Payment Confirmation Template" := TempBlob.Blob;
      IF MODIFY THEN
        MESSAGE(Text01);
    END;

    PROCEDURE ExportPaymentConfirmationEmailTemplate@9(UseDialog@1002 : Boolean) : Text;
    VAR
      TempBlob@1000 : TEMPORARY Record 99008535;
      FileMgt@1001 : Codeunit 419;
      OutStream@1004 : OutStream;
      FileName@1003 : Text;
    BEGIN
      CALCFIELDS("Payment Confirmation Template");
      IF NOT "Payment Confirmation Template".HASVALUE THEN
        EXIT;

      FileName := FIELDCAPTION("Payment Confirmation Template") + '.html';

       WITH TempBlob DO BEGIN
         Blob := "Payment Confirmation Template";
         Blob.CREATEOUTSTREAM(OutStream);
         EXIT(FileMgt.BLOBExport(TempBlob,FileName,UseDialog));
       END;
    END;

    LOCAL PROCEDURE DragonpayServiceManagement@5(EnableQst@1000 : Boolean);
    VAR
      JobQueueEntry@1001 : Record 472;
    BEGIN
      IF EnableQst THEN BEGIN
        JobQueueEntry.ScheduleRecurrentJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
          CODEUNIT::"Dragonpay Service Management");
        IF CONFIRM(DragonpayServiceManagementQst) THEN
          PAGE.RUN(PAGE::"Job Queue Entry Card",JobQueueEntry);
       END ELSE
        IF JobQueueEntry.FindJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
             CODEUNIT::"Dragonpay Service Management")
        THEN
          IF CONFIRM(CancelDragonpayServiceManagementQst) THEN
            JobQueueEntry.Cancel;
    END;

    BEGIN
    END.
  }
}


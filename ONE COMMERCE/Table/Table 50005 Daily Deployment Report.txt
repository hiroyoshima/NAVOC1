OBJECT Table 50005 Daily Deployment Report
{
  OBJECT-PROPERTIES
  {
    Date=09/04/18;
    Time=[ 3:00:01 PM];
    Modified=Yes;
    Version List=X8OC0.01,OC02,+,DMS;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InitInsert;
               "Document Date" := TODAY;

               IF UserSetup.GET(USERID) THEN
                 IF UserSetup."Project Ctr. Filter" <> '' THEN
                  "Responsibility Center" := UserSetup."Project Ctr. Filter";

               "Date of Activity" := TODAY;
             END;

    OnDelete=BEGIN
               Issues.SETRANGE("DDR No.", "No.");
               Issues.DELETEALL;

               ApprovalsMgmt.DeleteApprovalEntries(RECORDID);
             END;

    LookupPageID=Page50598;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20         }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",Country,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);

                                                                IF City <> xRec.City THEN
                                                                  UpdateIssues;
                                                              END;

                                                   CaptionML=ENU=City;
                                                   Editable=No }
    { 11  ;   ;Document Date       ;Date           }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                UpdateIssues;
                                                              END;

                                                   CaptionML=ENU=Country/Region Code;
                                                   Editable=No }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation="Post Code" WHERE (Entry Type=CONST(Project Site Name));
                                                   OnValidate=BEGIN
                                                                 PostCode.ValidatePostCode(City,"Post Code",Country,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                                 IF "Post Code" <> xRec."Post Code" THEN
                                                                  UpdateIssues;

                                                                IF "Post Code" = '' THEN BEGIN
                                                                  CLEAR(City);
                                                                  CLEAR("Country/Region Code");
                                                                  UpdateIssues;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Post Code }
    { 92  ;   ;Country             ;Text30        ;CaptionML=ENU=County }
    { 200 ;   ;No. Series          ;Code20         }
    { 931 ;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center" }
    { 940 ;   ;Site Name           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Post Code".Name WHERE (Code=FIELD(Post Code),
                                                                                              City=FIELD(City),
                                                                                              Country/Region Code=FIELD(Country/Region Code)));
                                                   Editable=No }
    { 950 ;   ;Site Address        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Post Code".Address WHERE (City=FIELD(City),
                                                                                                 Code=FIELD(Post Code),
                                                                                                 Country/Region Code=FIELD(Country/Region Code)));
                                                   Editable=No }
    { 951 ;   ;Site Address 2      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Post Code"."Address 2" WHERE (City=FIELD(City),
                                                                                                     Code=FIELD(Post Code),
                                                                                                     Country/Region Code=FIELD(Country/Region Code)));
                                                   Editable=No }
    { 952 ;   ;Follow-up Visit     ;Boolean        }
    { 1000;   ;Status              ;Option        ;OptionCaptionML=ENU=Open,Pending Approval,Released,Cancelled;
                                                   OptionString=Open,Pending Approval,Released,Cancelled;
                                                   Editable=No }
    { 1004;   ;Date of Activity    ;Date           }
    { 1005;   ;Team No.            ;Code10        ;TableRelation="Resource Group";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("PIE/GM No.");
                                                              END;
                                                               }
    { 1010;   ;PIE/GM No.          ;Code20        ;TableRelation=Resource }
    { 1015;   ;Time In             ;Time          ;OnValidate=BEGIN
                                                                TESTFIELD("PIE/GM No.");
                                                              END;
                                                               }
    { 1016;   ;Time Out            ;Time          ;OnValidate=BEGIN
                                                                TESTFIELD("PIE/GM No.");
                                                                TESTFIELD("Time In");
                                                              END;
                                                               }
    { 1019;   ;No. of Visit        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Daily Deployment Report" WHERE (Post Code=FIELD(Post Code),
                                                                                                      City=FIELD(City),
                                                                                                      Country/Region Code=FIELD(Country/Region Code),
                                                                                                      Follow-up Visit=CONST(Yes),
                                                                                                      Type of Activity=FIELD(Type of Activity)));
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1020;   ;Type of Activity    ;Option        ;OnValidate=BEGIN
                                                                IF "Date of Activity" = 0D THEN
                                                                  "Date of Activity" := WORKDATE;

                                                                IF "Type of Activity" <> xRec."Type of Activity" THEN BEGIN
                                                                  CLEAR("Team No.");
                                                                  CLEAR("PIE/GM No.");
                                                                  CLEAR("Time In");
                                                                  CLEAR("Time Out");
                                                                  CLEAR("No. of Visit");
                                                                  VALIDATE("Site Survey Status", "Site Survey Status"::" ");
                                                                  CLEAR(Dependencies);
                                                                  CLEAR("Tech. Spprt. Incharge No.");
                                                                  VALIDATE("Transport Test", "Transport Test"::" ");
                                                                  VALIDATE("Installation Progress", "Installation Progress"::" ");
                                                                  VALIDATE("Power-Tapping", "Power-Tapping"::" ");
                                                                  VALIDATE("Local ATP", "Local ATP"::" ");
                                                                  VALIDATE("NOC ATP", "NOC ATP"::" ");
                                                                  VALIDATE("Gen. Baselining","Gen. Baselining"::" ");
                                                                  CLEAR("NOC Incharge No.");
                                                                //  VALIDATE("Site Status","Site Status"::FSS);
                                                                //  VALIDATE("Project Status","Project Status"::" ");
                                                                  VALIDATE("Cust. Dep. Checklist", "Cust. Dep. Checklist"::" ");
                                                                  CLEAR(Issue);
                                                                  VALIDATE("With Remobilization","With Remobilization"::None);
                                                                  CLEAR("Cause of Late In");
                                                                  VALIDATE("Type of Acceptance","Type of Acceptance"::" ");
                                                                  CLEAR("GT Representative");
                                                                  VALIDATE("PAT Status", "PAT Status"::" ");
                                                                  VALIDATE("Punchlist Category","Punchlist Category"::" ");
                                                                  CLEAR("Punchlist TTID");
                                                                  CLEAR("SLA Troubleshooting");
                                                                  CLEAR("Date Rectified");
                                                                  CLEAR("Rectified By");
                                                                  CLEAR("Witnessed By");
                                                                  UpdateIssues;
                                                                END;

                                                                // Default Values
                                                                CASE "Type of Activity" OF
                                                                  "Type of Activity"::"Site Survey":
                                                                    BEGIN
                                                                      VALIDATE("Site Survey Status", "Site Survey Status"::"For Site Survey");
                                                                    END;
                                                                  "Type of Activity"::"Asset Checklist":
                                                                    BEGIN
                                                                //      VALIDATE("Site Status", "Site Status"::
                                                                    END;
                                                                  "Type of Activity"::Installation:
                                                                    BEGIN

                                                                    END;
                                                                  "Type of Activity"::"Commissioning & Testing":
                                                                    BEGIN

                                                                    END;
                                                                  "Type of Activity"::"Pre-PAT":
                                                                    BEGIN

                                                                    END;
                                                                  "Type of Activity"::"Punchlist Clearing":
                                                                    BEGIN
                                                                      VALIDATE("Date Rectified", TODAY);
                                                                    END;
                                                                END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,Site Survey,Customer Dependency Checklist,Installation,Commissioning & Testing,Pre-PAT,PAT,Punchlist Clearing";
                                                   OptionString=[ ,Site Survey,Asset Checklist,Installation,Commissioning & Testing,Pre-PAT,PAT,Punchlist Clearing] }
    { 1050;   ;Site Survey Status  ;Option        ;OnValidate=BEGIN
                                                                GetPostCode;
                                                                 CASE "Site Survey Status" OF
                                                                  "Site Survey Status"::Done:
                                                                    BEGIN
                                                                      PostCode.UpdateStage(PostCode.Stages::Survey);
                                                                    END;
                                                                   "Site Survey Status"::WIP:
                                                                      PostCode.UpdateStage(PostCode.Stages::"Survey-WIP");
                                                                  "Site Survey Status"::" ", "Site Survey Status"::"For Site Survey":
                                                                    BEGIN
                                                                      PostCode.UpdateStage(PostCode.Stages::" ");
                                                                    END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done,For Site Survey";
                                                   OptionString=[ ,WIP,Done,For Site Survey] }
    { 1051;No ;Dependencies        ;Text150        }
    { 1052;   ;Tech. Spprt. Incharge No.;Code20   ;TableRelation=Resource;
                                                   CaptionML=ENU=Technical Support Incharge No. }
    { 2000;   ;Transport Test      ;Option        ;OnValidate=BEGIN
                                                                GetPostCode;
                                                                 CASE "Transport Test" OF
                                                                  "Transport Test"::Done:
                                                                    BEGIN
                                                                      "Installation Progress" := "Installation Progress"::" ";
                                                                      PostCode.UpdateStage(PostCode.Stages::"Transport Test");
                                                                    END;
                                                                   "Transport Test"::WIP:
                                                                     BEGIN
                                                                      TransportTestWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Dependency Checklist");
                                                                     END;
                                                                   ELSE BEGIN
                                                                      TransportTestWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"TSSR Approved");
                                                                   END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done] }
    { 2001;   ;Installation Progress;Option       ;OnValidate=BEGIN
                                                                GetPostCode;
                                                                 CASE "Installation Progress" OF
                                                                  "Installation Progress"::Done:
                                                                    BEGIN
                                                                      InstallationProgressWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Installation Progress");
                                                                    END;
                                                                   "Installation Progress"::WIP:
                                                                     BEGIN
                                                                      InstallationProgressWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Installation Progress-WIP");
                                                                     END;
                                                                    ELSE BEGIN
                                                                      InstallationProgressWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Transport Test");
                                                                    END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done] }
    { 2002;   ;Power-Tapping       ;Option        ;OnValidate=BEGIN
                                                                 GetPostCode;
                                                                 CASE "Power-Tapping" OF
                                                                  "Power-Tapping"::Done:
                                                                    BEGIN
                                                                      PowerTappingWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Power-Tapping");
                                                                    END;
                                                                  "Power-Tapping"::WIP:
                                                                    BEGIN
                                                                      PowerTappingWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"PowerPower-Tapping-WIP");
                                                                    END;
                                                                   ELSE BEGIN
                                                                      PowerTappingWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Installation Progress");
                                                                   END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done] }
    { 2003;   ;Local ATP           ;Option        ;OnValidate=BEGIN
                                                                 GetPostCode;
                                                                 CASE "Local ATP" OF
                                                                  "Local ATP"::Done:
                                                                    BEGIN
                                                                      LocalATPWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::ATP);
                                                                    END;
                                                                  "Local ATP"::WIP:
                                                                    BEGIN
                                                                      LocalATPWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"ATP-WIP");
                                                                    END;
                                                                   ELSE BEGIN
                                                                     LocalATPWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Power-Tapping");
                                                                   END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done] }
    { 2004;   ;NOC ATP             ;Option        ;OnValidate=BEGIN
                                                                 GetPostCode;
                                                                 CASE "NOC ATP" OF
                                                                  "NOC ATP"::Done:
                                                                    BEGIN
                                                                      NocATPWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"NOC ATP");
                                                                    END;
                                                                  "NOC ATP"::WIP:
                                                                    BEGIN
                                                                      NocATPWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"NOC ATP-WIP");
                                                                    END;
                                                                   ELSE BEGIN
                                                                      NocATPWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Power-Tapping");
                                                                   END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done] }
    { 2005;   ;Gen. Baselining     ;Option        ;OnValidate=BEGIN
                                                                 GetPostCode;
                                                                 CASE "Gen. Baselining" OF
                                                                  "Gen. Baselining"::Done:
                                                                    BEGIN
                                                                      GenBaseliningWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Gen. Baselining");
                                                                    END;
                                                                  "Gen. Baselining"::WIP:
                                                                    BEGIN
                                                                      GenBaseliningWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Gen. Baselining");
                                                                    END;
                                                                   ELSE BEGIN
                                                                      GenBaseliningWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Power-Tapping");
                                                                   END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done];
                                                   Description=For Deletion }
    { 2006;   ;NOC Incharge No.    ;Code20        ;TableRelation=Resource }
    { 2007;   ;Site Status         ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Post Code"."Site Status" WHERE (Entry Type=CONST(Project Site Name),
                                                                                                       Code=FIELD(Post Code),
                                                                                                       City=FIELD(City)));
                                                   OptionCaptionML=ENU=FSS,TSSR,RFI,ATP,WIP,PAT,PAC,NATP;
                                                   OptionString=FSS,TSSR,RFI,ATP,WIP,PAT,PAC,NATP;
                                                   Editable=No }
    { 2008;   ;Project Status      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Post Code"."Project Status" WHERE (Entry Type=CONST(Project Site Name),
                                                                                                          Code=FIELD(Post Code),
                                                                                                          City=FIELD(City)));
                                                   OptionCaptionML=ENU=FSS,TSSR,RFI,ATP,WIP,WIP-CUSTOMER,PAT,PAC,NATP;
                                                   OptionString=FSS,TSSR,RFI,ATP,WIP,WIP-CUSTOMER,PAT,PAC,NATP;
                                                   Editable=No }
    { 2009;No ;Issue               ;Text50         }
    { 2010;No ;TTID                ;Code250        }
    { 2011;No ;Charge To           ;Code20        ;TableRelation=Customer }
    { 2012;   ;With Remobilization ;Option        ;OptionCaptionML=ENU=None,Yes;
                                                   OptionString=None,Yes }
    { 2013;   ;Remarks             ;Text250        }
    { 2014;No ;Customer Issues     ;Text100       ;Description=Must be Blob }
    { 2015;No ;OC Pending          ;Text100       ;Description=Must be Blob }
    { 2016;   ;Cause of Late In    ;Text50         }
    { 2017;   ;Cust. Dep. Checklist;Option        ;OnValidate=BEGIN
                                                                GetPostCode;
                                                                CASE "Cust. Dep. Checklist" OF
                                                                  "Cust. Dep. Checklist"::Done:
                                                                    BEGIN
                                                                      CustomerDependencyChecklistWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Dependency Checklist");
                                                                    END;
                                                                  "Cust. Dep. Checklist"::WIP:
                                                                    BEGIN
                                                                      CustomerDependencyChecklistWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"Dependency Checklist-WIP");
                                                                    END;
                                                                   ELSE BEGIN
                                                                      CustomerDependencyChecklistWip;
                                                                      PostCode.UpdateStage(PostCode.Stages::"TSSR Approved");
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Customer Dependency Checklist;
                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done] }
    { 3000;   ;Type of Acceptance  ;Option        ;OptionCaptionML=ENU=" ,On-Site,Online";
                                                   OptionString=[ ,On-Site,Online] }
    { 3001;   ;GT Representative   ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Person)) }
    { 3003;   ;With Punchlist      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(Issues WHERE (DDR No.=FIELD(No.),
                                                                                   Type of Issue=CONST(Punchlist),
                                                                                   Service Order Type No.=FILTER(<>'')));
                                                   Editable=No }
    { 3004;   ;PAT Status          ;Option        ;OnValidate=BEGIN
                                                                 GetPostCode;
                                                                 CASE "PAT Status" OF
                                                                   "PAT Status"::Done:
                                                                     BEGIN
                                                                       PostCode.UpdateStage(PostCode.Stages::PAT);
                                                                     END;
                                                                  "PAT Status"::WIP:
                                                                    BEGIN
                                                                       PostCode.UpdateStage(PostCode.Stages::"PAT-WIP");
                                                                    END;
                                                                 END;
                                                              END;

                                                   OptionCaptionML=ENU=" ,WIP,Done";
                                                   OptionString=[ ,WIP,Done] }
    { 3005;No ;Punchlist Category  ;Option        ;OptionCaptionML=ENU=" ,OC,GT,AIO";
                                                   OptionString=[ ,OC,GT,AIO] }
    { 3006;No ;Punchlist TTID      ;Code20         }
    { 3007;   ;SLA Troubleshooting ;Text50         }
    { 4000;No ;Date Rectified      ;Date           }
    { 4001;No ;Rectified By        ;Code20        ;TableRelation=Resource }
    { 4002;No ;Witnessed By        ;Text50         }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Post Code                                }
    {    ;City                                     }
    {    ;Country/Region Code                      }
    {    ;Date of Activity                         }
    {    ;Time In                                  }
    {    ;Time Out                                 }
    {    ;City,Post Code,Country/Region Code       }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Post Code,City,Country/Region Code,Site Name,Site Address,Site Address 2,Date of Activity,Time In,Time Out }
  }
  CODE
  {
    VAR
      Cust@1000 : Record 18;
      UserSetup@1001 : Record 91;
      PostCode@1002 : Record 225;
      Issues@1004 : Record 50011;
      ApprovalsMgmt@1003 : Codeunit 1535;

    PROCEDURE InitInsert@61();
    VAR
      NoSeriesMgt@1000 : Codeunit 396;
    BEGIN
      IF "No." = '' THEN BEGIN
        NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Document Date","No.","No. Series");
      END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@1() : Code[20];
    VAR
      CustomSetup@1000 : Record 50001;
    BEGIN
      CustomSetup.GET;
      CustomSetup.TESTFIELD("Daily Time Record Nos.");
      EXIT(CustomSetup."Daily Time Record Nos.");
    END;

    LOCAL PROCEDURE UpdateIssues@2();
    BEGIN
      TESTFIELD("No.");
      Issues.SETRANGE("DDR No.", "No.");
      IF Issues.FINDSET THEN BEGIN
        REPEAT
          Issues."Post Code" := "Post Code";
          Issues.City := City;
          Issues."Country/Region Code" := "Country/Region Code";
          Issues.Country := Country;
          Issues.MODIFY;
        UNTIL Issues.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE WithCustomerIssues@10() : Boolean;
    BEGIN
      Issues.SETRANGE("Post Code","Post Code");
      Issues.SETRANGE(City, City);
      Issues.SETRANGE(Resolved, FALSE);
      Issues.SETRANGE("Type of Issue", Issues."Type of Issue"::"Customer Issue");

      EXIT(Issues.FINDSET);
    END;

    LOCAL PROCEDURE GetPostCode@5();
    BEGIN
      TESTFIELD("Post Code");
      TESTFIELD(City);

      PostCode.GET("Post Code",City);
    END;

    LOCAL PROCEDURE CustomerDependencyChecklistWip@31();
    BEGIN
      "Transport Test" := "Transport Test"::" ";
      "Installation Progress" := "Installation Progress"::" ";
      "Power-Tapping" := "Power-Tapping"::" ";
      "Local ATP" := "Local ATP"::" ";
      "NOC ATP" := "NOC ATP"::" ";
      "Gen. Baselining" := "Gen. Baselining";
    END;

    LOCAL PROCEDURE TransportTestWip@19();
    BEGIN
      "Installation Progress" := "Installation Progress"::" ";
      "Power-Tapping" := "Power-Tapping"::" ";
      "Local ATP" := "Local ATP"::" ";
      "NOC ATP" := "NOC ATP"::" ";
      "Gen. Baselining" := "Gen. Baselining";
    END;

    LOCAL PROCEDURE InstallationProgressWip@21();
    BEGIN
      "Transport Test" := "Transport Test"::Done;
      "Power-Tapping" := "Power-Tapping"::" ";
      "Local ATP" := "Local ATP"::" ";
      "NOC ATP" := "NOC ATP"::" ";
      "Gen. Baselining" := "Gen. Baselining";
    END;

    LOCAL PROCEDURE PowerTappingWip@23();
    BEGIN
      "Transport Test" := "Transport Test"::Done;
      "Installation Progress" := "Installation Progress"::Done;
      "Local ATP" := "Local ATP"::" ";
      "NOC ATP" := "NOC ATP"::" ";
      "Gen. Baselining" := "Gen. Baselining";
    END;

    LOCAL PROCEDURE LocalATPWip@25();
    BEGIN
      "Transport Test" := "Transport Test"::Done;
      "Installation Progress" := "Installation Progress"::Done;
      "Power-Tapping" := "Power-Tapping"::Done;
      "NOC ATP" := "NOC ATP"::" ";
      "Gen. Baselining" := "Gen. Baselining";
    END;

    LOCAL PROCEDURE NocATPWip@27();
    BEGIN
      "Transport Test" := "Transport Test"::Done;
      "Installation Progress" := "Installation Progress"::Done;
      "Power-Tapping" := "Power-Tapping"::Done;
      "Local ATP" := "Local ATP"::Done;
      "Gen. Baselining" := "Gen. Baselining";
    END;

    LOCAL PROCEDURE GenBaseliningWip@28();
    BEGIN
      "Transport Test" := "Transport Test"::Done;
      "Installation Progress" := "Installation Progress"::Done;
      "Power-Tapping" := "Power-Tapping"::Done;
      "Local ATP" := "Local ATP"::Done;
      "NOC ATP" := "NOC ATP"::Done;
    END;

    BEGIN
    {
      1 Must Clost the ticket first before the user can proceed on clearing the stage.
    }
    END.
  }
}


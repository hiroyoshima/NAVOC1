OBJECT Table 1001 Job Task
{
  OBJECT-PROPERTIES
  {
    Date=08/23/18;
    Time=[ 2:26:40 PM];
    Modified=Yes;
    Version List=NAVW19.00,OC.03.50500.16;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Job@1000 : Record 167;
               Cust@1001 : Record 18;
             BEGIN
               LOCKTABLE;
               Job.GET("Job No.");
               AccessRights;
               // Job.TESTFIELD("Job Posting Group"); // PHP Start - For activating the auto creation of fixed cost
               Job.TESTFIELD("Bill-to Customer No.");
               Cust.GET(Job."Bill-to Customer No.");


               // PHP Start - Implementation of Auto No Series of Job task Line
               TestJobStatus;
                IF Job."Job Task No. Series" <> '' THEN BEGIN
                  NoSeriesMgt.InitSeries(Job."Job Task No. Series", xRec."No. Series", 0D,"Job Task No.","No. Series");
                END;

               TESTFIELD("Job Task No.");
               "Created By" := USERID;
               // PHP End

               DimMgt.InsertJobTaskDim("Job No.","Job Task No.","Global Dimension 1 Code","Global Dimension 2 Code");
             END;

    OnModify=VAR
               JobWIPEntry@1000 : Record 1004;
             BEGIN
               AccessRights;

               JobWIPEntry.SETRANGE("Job No.","Job No.");
               IF JobWIPEntry.FINDFIRST THEN
                 ERROR(Text004,TABLECAPTION);

               "Modified By" := USERID;
             END;

    OnDelete=VAR
               JobPlanningLine@1000 : Record 1003;
               JobWIPTotal@1002 : Record 1021;
               JobTaskDim@1001 : Record 1002;
             BEGIN
               AccessRights;
               // PHP Start
               TestJobStatus;
               // PHP End
               IF JobLedgEntriesExist THEN
                 ERROR(Text000,TABLECAPTION);

               JobPlanningLine.SETCURRENTKEY("Job No.","Job Task No.");
               JobPlanningLine.SETRANGE("Job No.","Job No.");
               JobPlanningLine.SETRANGE("Job Task No.","Job Task No.");
               JobPlanningLine.DELETEALL(TRUE);

               JobWIPTotal.DeleteEntriesForJobTask(Rec);

               JobTaskDim.SETRANGE("Job No.","Job No.");
               JobTaskDim.SETRANGE("Job Task No.","Job Task No.");
               IF NOT JobTaskDim.ISEMPTY THEN
                 JobTaskDim.DELETEALL;
             END;

    OnRename=BEGIN
               AccessRights;
             END;

    CaptionML=ENU=Job Task;
    LookupPageID=Page1002;
    DrillDownPageID=Page1002;
  }
  FIELDS
  {
    { 1   ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Job No.;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Job Task No.        ;Code20        ;OnValidate=VAR
                                                                Job@1000 : Record 167;
                                                                Cust@1001 : Record 18;
                                                              BEGIN
                                                                // PHP Start
                                                                TestJobStatus;
                                                                // PHP End
                                                                IF "Job Task No." = '' THEN
                                                                  EXIT;
                                                                Job.GET("Job No.");
                                                                Job.TESTFIELD("Bill-to Customer No.");
                                                                Cust.GET(Job."Bill-to Customer No.");
                                                                "Job Posting Group" := Job."Job Posting Group";
                                                              END;

                                                   CaptionML=ENU=Job Task No. }
    { 3   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 4   ;   ;Job Task Type       ;Option        ;OnValidate=BEGIN
                                                                IF (xRec."Job Task Type" = "Job Task Type"::Posting) AND
                                                                   ("Job Task Type" <> "Job Task Type"::Posting)
                                                                THEN
                                                                  IF JobLedgEntriesExist OR JobPlanningLinesExist THEN
                                                                    ERROR(Text001,FIELDCAPTION("Job Task Type"),TABLECAPTION);

                                                                IF "Job Task Type" <> "Job Task Type"::Posting THEN BEGIN
                                                                  "Job Posting Group" := '';
                                                                  IF "WIP-Total" = "WIP-Total"::Excluded THEN
                                                                    "WIP-Total" := "WIP-Total"::" ";
                                                                END;

                                                                Totaling := '';

                                                                // PHP Start
                                                                IF ("Assembly No." <> '') AND ("Job Task Type" <> "Job Task Type"::Posting) THEN
                                                                  FIELDERROR("Assembly No.");
                                                                // PHP End
                                                              END;

                                                   CaptionML=ENU=Job Task Type;
                                                   OptionCaptionML=ENU=Posting,Heading,Total,Begin-Total,End-Total;
                                                   OptionString=Posting,Heading,Total,Begin-Total,End-Total }
    { 6   ;   ;WIP-Total           ;Option        ;OnValidate=VAR
                                                                Job@1003 : Record 167;
                                                              BEGIN
                                                                CASE "WIP-Total" OF
                                                                  "WIP-Total"::Total:
                                                                    BEGIN
                                                                      Job.GET("Job No.");
                                                                      "WIP Method" := Job."WIP Method";
                                                                    END;
                                                                  "WIP-Total"::Excluded:
                                                                    BEGIN
                                                                      TESTFIELD("Job Task Type","Job Task Type"::Posting);
                                                                      "WIP Method" := ''
                                                                    END;
                                                                  ELSE
                                                                    "WIP Method" := ''
                                                                END;
                                                              END;

                                                   CaptionML=ENU=WIP-Total;
                                                   OptionCaptionML=ENU=" ,Total,Excluded";
                                                   OptionString=[ ,Total,Excluded] }
    { 7   ;   ;Job Posting Group   ;Code10        ;TableRelation="Job Posting Group";
                                                   OnValidate=BEGIN
                                                                IF "Job Posting Group" <> '' THEN
                                                                  TESTFIELD("Job Task Type","Job Task Type"::Posting);
                                                              END;

                                                   CaptionML=ENU=Job Posting Group }
    { 9   ;   ;WIP Method          ;Code20        ;TableRelation="Job WIP Method".Code WHERE (Valid=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                IF "WIP Method" <> '' THEN
                                                                  TESTFIELD("WIP-Total","WIP-Total"::Total);
                                                              END;

                                                   CaptionML=ENU=WIP Method }
    { 10  ;   ;Schedule (Total Cost);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Total Cost (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                 Job Task No.=FIELD(Job Task No.),
                                                                                                                 Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                 Schedule Line=CONST(Yes),
                                                                                                                 Planning Date=FIELD(Planning Date Filter)));
                                                   CaptionML=ENU=Schedule (Total Cost);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 11  ;   ;Schedule (Total Price);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Line Amount (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                  Job Task No.=FIELD(Job Task No.),
                                                                                                                  Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                  Schedule Line=CONST(Yes),
                                                                                                                  Planning Date=FIELD(Planning Date Filter)));
                                                   CaptionML=ENU=Schedule (Total Price);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 12  ;   ;Usage (Total Cost)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Ledger Entry"."Total Cost (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                Job Task No.=FIELD(Job Task No.),
                                                                                                                Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                Entry Type=CONST(Usage),
                                                                                                                Posting Date=FIELD(Posting Date Filter)));
                                                   CaptionML=ENU=Usage (Total Cost);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 13  ;   ;Usage (Total Price) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Ledger Entry"."Line Amount (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                 Job Task No.=FIELD(Job Task No.),
                                                                                                                 Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                 Entry Type=CONST(Usage),
                                                                                                                 Posting Date=FIELD(Posting Date Filter)));
                                                   CaptionML=ENU=Usage (Total Price);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 14  ;   ;Contract (Total Cost);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Total Cost (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                 Job Task No.=FIELD(Job Task No.),
                                                                                                                 Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                 Contract Line=CONST(Yes),
                                                                                                                 Planning Date=FIELD(Planning Date Filter)));
                                                   CaptionML=ENU=Contract (Total Cost);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 15  ;   ;Contract (Total Price);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Line Amount (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                  Job Task No.=FIELD(Job Task No.),
                                                                                                                  Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                  Contract Line=CONST(Yes),
                                                                                                                  Planning Date=FIELD(Planning Date Filter)));
                                                   CaptionML=ENU=Contract (Total Price);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 16  ;   ;Contract (Invoiced Price);Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Job Ledger Entry"."Line Amount (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                  Job Task No.=FIELD(Job Task No.),
                                                                                                                  Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                  Entry Type=CONST(Sale),
                                                                                                                  Posting Date=FIELD(Posting Date Filter)));
                                                   CaptionML=ENU=Contract (Invoiced Price);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;Contract (Invoiced Cost);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Job Ledger Entry"."Total Cost (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                 Job Task No.=FIELD(Job Task No.),
                                                                                                                 Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                 Entry Type=CONST(Sale),
                                                                                                                 Posting Date=FIELD(Posting Date Filter)));
                                                   CaptionML=ENU=Contract (Invoiced Cost);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 19  ;   ;Posting Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Posting Date Filter }
    { 20  ;   ;Planning Date Filter;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Planning Date Filter }
    { 21  ;   ;Totaling            ;Text250       ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   OnValidate=BEGIN
                                                                IF Totaling <> '' THEN
                                                                  IF NOT ("Job Task Type" IN ["Job Task Type"::Total,"Job Task Type"::"End-Total"]) THEN
                                                                    FIELDERROR("Job Task Type");
                                                                VALIDATE("WIP-Total");
                                                                CALCFIELDS(
                                                                  "Schedule (Total Cost)",
                                                                  "Schedule (Total Price)",
                                                                  "Usage (Total Cost)",
                                                                  "Usage (Total Price)",
                                                                  "Contract (Total Cost)",
                                                                  "Contract (Total Price)",
                                                                  "Contract (Invoiced Price)",
                                                                  "Contract (Invoiced Cost)");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Totaling }
    { 22  ;   ;New Page            ;Boolean       ;CaptionML=ENU=New Page }
    { 23  ;   ;No. of Blank Lines  ;Integer       ;CaptionML=ENU=No. of Blank Lines;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 24  ;   ;Indentation         ;Integer       ;CaptionML=ENU=Indentation;
                                                   MinValue=0 }
    { 34  ;   ;Recognized Sales Amount;Decimal    ;CaptionML=ENU=Recognized Sales Amount;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 37  ;   ;Recognized Costs Amount;Decimal    ;CaptionML=ENU=Recognized Costs Amount;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 56  ;   ;Recognized Sales G/L Amount;Decimal;CaptionML=ENU=Recognized Sales G/L Amount;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 57  ;   ;Recognized Costs G/L Amount;Decimal;CaptionML=ENU=Recognized Costs G/L Amount;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 60  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 61  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 62  ;   ;Outstanding Orders  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amt. Ex. VAT (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                           Job No.=FIELD(Job No.),
                                                                                                                           Job Task No.=FIELD(Job Task No.),
                                                                                                                           Job Task No.=FIELD(FILTER(Totaling))));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Outstanding Orders }
    { 63  ;   ;Amt. Rcd. Not Invoiced;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."A. Rcd. Not Inv. Ex. VAT (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                           Job No.=FIELD(Job No.),
                                                                                                                           Job Task No.=FIELD(Job Task No.),
                                                                                                                           Job Task No.=FIELD(FILTER(Totaling))));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Amt. Rcd. Not Invoiced }
    { 64  ;   ;Remaining (Total Cost);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Remaining Total Cost (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                           Job Task No.=FIELD(Job Task No.),
                                                                                                                           Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                           Schedule Line=CONST(Yes),
                                                                                                                           Planning Date=FIELD(Planning Date Filter)));
                                                   CaptionML=ENU=Remaining (Total Cost);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 65  ;   ;Remaining (Total Price);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Remaining Line Amount (LCY)" WHERE (Job No.=FIELD(Job No.),
                                                                                                                            Job Task No.=FIELD(Job Task No.),
                                                                                                                            Job Task No.=FIELD(FILTER(Totaling)),
                                                                                                                            Schedule Line=CONST(Yes),
                                                                                                                            Planning Date=FIELD(Planning Date Filter)));
                                                   CaptionML=ENU=Remaining (Total Price);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 66  ;   ;Start Date          ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Min("Job Planning Line"."Planning Date" WHERE (Job No.=FIELD(Job No.),
                                                                                                              Job Task No.=FIELD(Job Task No.)));
                                                   CaptionML=ENU=Start Date;
                                                   Editable=No }
    { 67  ;   ;End Date            ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Max("Job Planning Line"."Planning Date" WHERE (Job No.=FIELD(Job No.),
                                                                                                              Job Task No.=FIELD(Job Task No.)));
                                                   CaptionML=ENU=End Date;
                                                   Editable=No }
    { 5000;   ;Created By          ;Text50        ;Editable=No }
    { 5001;   ;Modified By         ;Text50        ;Editable=No }
    { 50010;  ;Percentage of Completion;Decimal   ;OnValidate=VAR
                                                                PurchHeader_@1000 : Record 38;
                                                              BEGIN
                                                                // PHP Start
                                                                IF "Percentage of Completion" = 100 THEN
                                                                  VALIDATE("Completed At", TODAY)
                                                                ELSE
                                                                  CLEAR("Completed At");
                                                                // PHP End
                                                              END;

                                                   CaptionML=ENU=Percentage of Completion;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 50011;  ;Completed At        ;Date          ;Editable=No }
    { 50012;  ;Mark as Completed   ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Job Task Type", "Job Task Type"::Posting);
                                                                IF "Mark as Completed" = TRUE THEN
                                                                  "Completed At" := TODAY
                                                                ELSE
                                                                  CLEAR("Completed At");
                                                              END;
                                                               }
    { 50020;  ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 50025;  ;Assembly No.        ;Code20        ;TableRelation=Item.No. WHERE (Blocked=CONST(No),
                                                                                 Assembly BOM=CONST(Yes));
                                                   OnValidate=VAR
                                                                BOMComponent@1002 : Record 90;
                                                                JobPlLines@1001 : Record 1003;
                                                                Itm@1000 : Record 27;
                                                              BEGIN
                                                                // PHP Start
                                                                TestJobStatus;
                                                                // PHP End
                                                                VALIDATE("Job Task No.");
                                                                TESTFIELD("Job Task Type", "Job Task Type"::Posting);
                                                                IF (xRec."Assembly No." <> '') THEN BEGIN
                                                                  MESSAGE(Text006, FIELDCAPTION("Assembly No."), FIELDCAPTION("Job Task No."), "Job Task No.");
                                                                  DeleteJobPlanningLInesWithAssemblyItem;
                                                                END;
                                                                IF Itm.GET("Assembly No.") THEN BEGIN
                                                                  Description := Itm.Description;
                                                                END;
                                                                // Auto fill-in information
                                                                Quantity := 0;
                                                              END;
                                                               }
    { 50030;  ;Unit of Measure Code;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Base Unit of Measure" WHERE (No.=FIELD(Assembly No.)));
                                                   TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                Resource@1000 : Record 156;
                                                              BEGIN
                                                                // PHP Start
                                                                TestJobStatus;
                                                                // PHP End
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Code;
                                                   Editable=No }
    { 50035;  ;Quantity            ;Decimal       ;OnValidate=VAR
                                                                Delta@1000 : Decimal;
                                                                ResCounter@1004 : Integer;
                                                                ResTotalNoToSplit@1003 : Integer;
                                                                ResTotalNoToSplitRemaining@1005 : Integer;
                                                                BaseQtyToSplit@1008 : Integer;
                                                                Counter@1007 : Integer;
                                                                BOMComponent@1009 : Record 90;
                                                                JobPlLines@1002 : Record 1003;
                                                                Itm@1001 : Record 27;
                                                                LastPlannedDeliveryDate@1006 : Date;
                                                              BEGIN
                                                                // PHP Start
                                                                TestJobStatus;
                                                                // PHP End
                                                                VALIDATE("Job Task No.");
                                                                TESTFIELD("Job Task Type", "Job Task Type"::Posting);

                                                                IF (xRec.Quantity <> 0) THEN BEGIN
                                                                  MESSAGE(Text006, FIELDCAPTION(Quantity), FIELDCAPTION("Job Task No."), "Job Task No.");
                                                                  DeleteJobPlanningLInesWithAssemblyItem;
                                                                END;

                                                                IF Itm.GET("Assembly No.") AND (Quantity <> 0) THEN BEGIN
                                                                  Job.GET("Job No.");
                                                                  BOMComponent.SETRANGE("Parent Item No.", Itm."No.");
                                                                  IF BOMComponent.FINDSET THEN BEGIN
                                                                    Counter := 0;
                                                                    IF JobPlanningLinesExist THEN
                                                                      Counter := GetJobPlanningLinesLastNo;
                                                                    REPEAT
                                                                      BOMComponent.TESTFIELD(Type);
                                                                      BOMComponent.TESTFIELD("No.");
                                                                      JobPlLines.INIT;
                                                                      Counter += 10000;
                                                                      JobPlLines."Line No." += Counter;
                                                                      JobPlLines."Job No." := "Job No.";
                                                                      JobPlLines."Job Task No." := "Job Task No.";
                                                                      JobPlLines.VALIDATE("Line Type", JobPlLines."Line Type"::Schedule);
                                                                      JobPlLines.VALIDATE("Planning Date",TODAY);
                                                                      JobPlLines.VALIDATE("Planned Delivery Date",TODAY);
                                                                      IF BOMComponent.Type = BOMComponent.Type::Item THEN
                                                                        JobPlLines.VALIDATE(Type, JobPlLines.Type::Item)
                                                                      ELSE
                                                                        JobPlLines.VALIDATE(Type, JobPlLines.Type::Resource);
                                                                      JobPlLines.VALIDATE("No.", BOMComponent."No.");
                                                                      JobPlLines.VALIDATE(Description, BOMComponent.Description);
                                                                      JobPlLines.VALIDATE("Unit of Measure Code", BOMComponent."Unit of Measure Code");
                                                                      JobPlLines.VALIDATE(Quantity, BOMComponent."Quantity per"  * Quantity);
                                                                      JobPlLines.VALIDATE("Usage Link", TRUE);
                                                                      JobPlLines."Parent Item  No." := Itm."No.";
                                                                      JobPlLines.INSERT(TRUE);
                                                                    UNTIL BOMComponent.NEXT = 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 50050;  ;Job Posting Group ID;Code10        ;TableRelation="Job Posting Group" }
  }
  KEYS
  {
    {    ;Job No.,Job Task No.                    ;SumIndexFields=Recognized Sales Amount,Recognized Costs Amount,Recognized Sales G/L Amount,Recognized Costs G/L Amount;
                                                   Clustered=Yes }
    {    ;Job Task No.                             }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Job Task No.,Description,Job Task Type   }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 because one or more entries are associated.';
      Text001@1002 : TextConst 'ENU=You cannot change %1 because one or more entries are associated with this %2.';
      Job@1003 : Record 167;
      Resource@1007 : Record 156;
      UserSetup@1004 : Record 91;
      DimMgt@1001 : Codeunit 408;
      Text004@1005 : TextConst 'ENU=The %1 cannot be modified because the job has associated job WIP entries.';
      Text005@1006 : TextConst 'ENU=You are not authorized to modify the %1.';
      Text006@1008 : TextConst 'ENU=You may have changed the %1 in %2 %3. \\\Related BOM components will be deleted in Job Planning Lines.';
      NoSeriesMgt@1009 : Codeunit 396;
      Text007@1010 : TextConst 'ENU=Deleting this line will affect the auto-calculation of fixed cost. Do you want to delete the line?';
      Text008@1011 : TextConst 'ENU=Do you want to link the %1 on selected lines?';

    PROCEDURE CalcEACTotalCost@6() : Decimal;
    BEGIN
      IF "Job No." <> Job."No." THEN
        IF NOT Job.GET("Job No.") THEN
          EXIT(0);

      IF Job."Apply Usage Link" THEN
        EXIT("Usage (Total Cost)" + "Remaining (Total Cost)");

      EXIT(0);
    END;

    PROCEDURE CalcEACTotalPrice@7() : Decimal;
    BEGIN
      IF "Job No." <> Job."No." THEN
        IF NOT Job.GET("Job No.") THEN
          EXIT(0);

      IF Job."Apply Usage Link" THEN
        EXIT("Usage (Total Price)" + "Remaining (Total Price)");

      EXIT(0);
    END;

    LOCAL PROCEDURE JobLedgEntriesExist@2() : Boolean;
    VAR
      JobLedgEntry@1001 : Record 169;
    BEGIN
      JobLedgEntry.SETCURRENTKEY("Job No.","Job Task No.");
      JobLedgEntry.SETRANGE("Job No.","Job No.");
      JobLedgEntry.SETRANGE("Job Task No.","Job Task No.");
      EXIT(JobLedgEntry.FINDFIRST)
    END;

    LOCAL PROCEDURE JobPlanningLinesExist@5() : Boolean;
    VAR
      JobPlanningLine@1000 : Record 1003;
    BEGIN
      JobPlanningLine.SETCURRENTKEY("Job No.","Job Task No.");
      JobPlanningLine.SETRANGE("Job No.","Job No.");
      JobPlanningLine.SETRANGE("Job Task No.","Job Task No.");
      EXIT(JobPlanningLine.FINDFIRST)
    END;

    PROCEDURE Caption@3() : Text[250];
    VAR
      Job@1000 : Record 167;
    BEGIN
      IF NOT Job.GET("Job No.") THEN
        EXIT('');
      EXIT(STRSUBSTNO('%1 %2 %3 %4',
          Job."No.",
          Job.Description,
          "Job Task No.",
          Description));
    END;

    LOCAL PROCEDURE Caption2@4() : Text[250];
    VAR
      Job@1000 : Record 167;
    BEGIN
      IF NOT Job.GET("Job No.") THEN
        EXIT('');
      EXIT(STRSUBSTNO('%1 %2',
          Job."No.",
          Job.Description))
    END;

    PROCEDURE InitWIPFields@13();
    VAR
      JobWIPTotal@1000 : Record 1021;
    BEGIN
      JobWIPTotal.SETRANGE("Job No.","Job No.");
      JobWIPTotal.SETRANGE("Job Task No.","Job Task No.");
      JobWIPTotal.SETRANGE("Posted to G/L",FALSE);
      JobWIPTotal.DELETEALL(TRUE);

      "Recognized Sales Amount" := 0;
      "Recognized Costs Amount" := 0;

      MODIFY;
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;ShortcutDimCode@1001 : Code[20]);
    VAR
      JobTask2@1002 : Record 1001;
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      IF JobTask2.GET("Job No.","Job Task No.") THEN BEGIN
        DimMgt.SaveJobTaskDim("Job No.","Job Task No.",FieldNumber,ShortcutDimCode);
        MODIFY;
      END ELSE
        DimMgt.SaveJobTaskTempDim(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ClearTempDim@1();
    BEGIN
      DimMgt.DeleteJobTaskTempDim;
    END;

    LOCAL PROCEDURE AccessRights@19();
    BEGIN
      // PHP Start
      Job.GET("Job No.");
      IF (Job.Blocked = Job.Blocked::All) OR (Job.Blocked = Job.Blocked::Editing) THEN BEGIN
        IF Job."Cost Analyst No." <> '' THEN BEGIN
          Resource.GET(Job."Cost Analyst No.");
          IF Resource."Time Sheet Owner User ID" <> USERID THEN BEGIN
            ERROR(Text005, TABLENAME);
            EXIT;
          END;
        END ELSE BEGIN
          Job.TestBlocked;
        END;
      END;
      // PHP End
      // PHP Start
      // If Job status is Planning only the Person Responsible is accessible to control the Jobs
      // IF Job."Job Status" = Job."Job Status"::"1" THEN BEGIN
      //  IF UserSetup.GET(USERID) AND UserSetup."Job Admin" = TRUE THEN BEGIN
      //  END ELSE IF (Resource.GET(Job."Person Responsible No.")) AND (Resource."Time Sheet Owner User ID" = USERID) THEN BEGIN
      //  END ELSE IF (Resource.GET(Job."Technical In-charge No.")) AND (Resource."Time Sheet Owner User ID" = USERID) THEN BEGIN
      //  END ELSE BEGIN
      //    ERROR(Text005, TABLENAME);
      //  END;
      // END;

      // If Job status is Quote only the Job Analyst is accessible to control the Jobs
      // IF Job."Job Status" = Job."Job Status"::"2" THEN BEGIN
      //  Job.TESTFIELD("Cost Analyst No.");
      //  IF UserSetup.GET(USERID) AND UserSetup."Job Admin" = TRUE THEN BEGIN
      //  END ELSE IF (Resource.GET(Job."Cost Analyst No.")) AND (Resource."Time Sheet Owner User ID" = USERID) THEN BEGIN
      //  END ELSE BEGIN
      //    ERROR(Text005, TABLENAME);
      //  END;
      // END;

      // If Job status is Awarded only the Job Admin is accessible to control the Jobs
      // IF Job."Job Status" = Job."Job Status"::"3" THEN BEGIN
      //  Job.TestfieldJobStatusAwarded;
      //  IF UserSetup.GET(USERID) AND UserSetup."Job Admin" = TRUE THEN BEGIN
      //  END ELSE BEGIN
      //    ERROR(Text005, TABLENAME);
      //  END;
      // END;
      //
      // IF Job."Job Status" = Job."Job Status"::"4" THEN BEGIN
      //  Job.TestfieldJobStatusLostCancelled;
      //  IF UserSetup.GET(USERID) AND UserSetup."Job Admin" = TRUE THEN BEGIN
      //  END ELSE BEGIN
      //    ERROR(Text005, TABLENAME);
      //  END;
      // END;
      // PHP End
    END;

    PROCEDURE GetJob@8();
    BEGIN
      // PHP START
      TESTFIELD("Job No.");
      Job.GET("Job No.");
      // PHP END
    END;

    LOCAL PROCEDURE GetJobPlanningLinesLastNo@12() : Integer;
    VAR
      JobPlanningLine@1000 : Record 1003;
    BEGIN
      JobPlanningLine.SETCURRENTKEY("Job No.","Job Task No.");
      JobPlanningLine.SETRANGE("Job No.","Job No.");
      JobPlanningLine.SETRANGE("Job Task No.","Job Task No.");
      JobPlanningLine.FINDLAST;
      EXIT(JobPlanningLine."Line No.")
    END;

    LOCAL PROCEDURE DeleteJobPlanningLInesWithAssemblyItem@23();
    VAR
      JobPlanningLine@1000 : Record 1003;
    BEGIN
      // PHP Start
      JobPlanningLine.SETRANGE("Job No.", "Job No.");
      JobPlanningLine.SETRANGE("Job Task No.", "Job Task No.");
      JobPlanningLine.SETRANGE("Parent Item  No.", xRec."Assembly No.");
      IF JobPlanningLine.FINDSET THEN
        JobPlanningLine.DELETEALL(TRUE);
      // PHP End
    END;

    PROCEDURE PercentCompleted@9() : Decimal;
    VAR
      JobCalcStatistics@1001 : Codeunit 1008;
      CL@1000 : ARRAY [16] OF Decimal;
    BEGIN
      IF "Job No." <> '' THEN BEGIN
        Job.GET("Job No.");
         JobCalcStatistics.JobTaskCalculateCommonFilters(Job, Rec);
         JobCalcStatistics.CalculateJobQuantity;
         JobCalcStatistics.GetQuantity(CL);
         IF CL[4] <> 0 THEN
          EXIT((CL[8] / CL[4]) * 100);
      END;
      EXIT(0);
    END;

    PROCEDURE PercentInvoiced@20() : Decimal;
    VAR
      JobCalcStatistics@1000 : Codeunit 1008;
      PL@1002 : ARRAY [16] OF Decimal;
    BEGIN
      IF "Job No." <> '' THEN BEGIN
        Job.GET("Job No.");
        JobCalcStatistics.JobTaskCalculateCommonFilters(Job, Rec);
        JobCalcStatistics.CalculateAmounts;
        JobCalcStatistics.GetLCYPriceAmounts(PL);
        IF PL[12] <> 0 THEN
          EXIT((PL[16] / PL[12]) * 100);
      END;
      EXIT(0);
    END;

    PROCEDURE PercentOverdue@18() : Decimal;
    VAR
      JobPlanningLine@1000 : Record 1003;
      QtyOverdue@1001 : Decimal;
      QtyOnSchedule@1002 : Decimal;
      QtyTotal@1003 : Decimal;
    BEGIN
      IF ("Job No." <> '') AND ("Job Task No." <> '') THEN BEGIN
        JobPlanningLine.SETRANGE("Job No.","Job No.");
        IF "Job Task Type" IN ["Job Task Type"::"End-Total", "Job Task Type"::Total] THEN
          JobPlanningLine.SETFILTER("Job Task No.", Totaling)
        ELSE
          JobPlanningLine.SETRANGE("Job Task No.", "Job Task No.");

        IF JobPlanningLine.FINDSET THEN
          REPEAT
            IF (JobPlanningLine."Planning Date" < WORKDATE) AND (JobPlanningLine."Remaining Qty." > 0) THEN
              QtyOverdue += 1
            ELSE
              QtyOnSchedule += 1;
          UNTIL JobPlanningLine.NEXT = 0;
        QtyTotal := QtyOverdue + QtyOnSchedule;
        IF QtyTotal <> 0 THEN
          EXIT((QtyOverdue / QtyTotal) * 100);
      END;
        EXIT(0);
    END;

    PROCEDURE GetNoOfDaysDelayed@16() : Integer;
    VAR
      CompanyInfo@1006 : Record 79;
      CalendarMgt@1003 : Codeunit 7600;
      NoOfDays@1002 : Integer;
      DateDescr@1001 : Text;
      SourceDate@1000 : Date;
      EndDate@1005 : Date;
      DelayedDays@1004 : Integer;
    BEGIN
      // PHP Start
      Job.GET("Job No.");
      CompanyInfo.GET;
      IF CompanyInfo."Base Calendar Code" = '' THEN
        EXIT(-1);

      IF Job.Status <> Job.Status::Order THEN
        EXIT(0);

      IF "Job Task Type" <> "Job Task Type"::Posting THEN
        EXIT(0);

      IF "Mark as Completed" = TRUE THEN
        EXIT(0);

      IF PercentCompleted = 100 THEN
        EXIT(0);

      IF "Mark as Completed" = TRUE THEN
        EXIT(0);

      DelayedDays := 0;
      CALCFIELDS("End Date");
      EndDate := "End Date";
        IF (EndDate <> 0D) AND (TODAY > EndDate) THEN BEGIN
            REPEAT
            IF NOT CalendarMgt.CheckDateStatus(CompanyInfo."Base Calendar Code", EndDate, DateDescr) THEN
              DelayedDays += 1;
            EndDate := CALCDATE('+1D', EndDate);
          UNTIL TODAY < EndDate;
        END;

      EXIT(DelayedDays);
      // PHP End
    END;

    LOCAL PROCEDURE TestJobStatus@15();
    BEGIN
      Job.GET("Job No.");
      IF Job.Status IN [Job.Status::Completed, Job.Status::Order] THEN
        Job.FIELDERROR(Status);
    END;

    PROCEDURE AssignAsLastNoSeries@10();
    VAR
      NoSeriesLine@1000 : Record 309;
      Msg001@1001 : TextConst 'ENU=Do you want assign %1 as last No. Series?';
      LastLineNo@1002 : Integer;
    BEGIN
      // PHP START
      TESTFIELD("Job Task No.");
      GetJob;
      IF CONFIRM(Msg001, TRUE, "Job Task No.") THEN BEGIN
        LastLineNo := 10000;
        NoSeriesLine.SETRANGE("Series Code", Job."Job Task No. Series");
        IF NoSeriesLine.FINDLAST THEN BEGIN
          NoSeriesLine.VALIDATE("Last No. Used", "Job Task No.");
          NoSeriesLine.MODIFY(TRUE);
        END ELSE BEGIN
          NoSeriesLine.INIT;
          NoSeriesLine."Series Code" := Job."Job Task No. Series";
          NoSeriesLine."Line No." := LastLineNo;
          NoSeriesLine.VALIDATE("Starting Date", TODAY);
          NoSeriesLine.VALIDATE("Starting No.", "Job Task No.");
          NoSeriesLine.VALIDATE("Last Date Used", TODAY);
          NoSeriesLine.VALIDATE("Last No. Used", "Job Task No.");
          NoSeriesLine.VALIDATE("Increment-by No.", 100);
          NoSeriesLine.VALIDATE(Open, TRUE);
          NoSeriesLine.INSERT(TRUE);
        END;
      END;
      // PHP END
    END;

    PROCEDURE LinkJobPostingGroupID@11(VAR JT@1000 : Record 1001);
    VAR
      JPL@1001 : Record 1003;
    BEGIN
      IF NOT CONFIRM(Text008, FALSE, Job.FIELDCAPTION("Job Posting Group")) THEN
        EXIT;

      GetJob;
      WITH JT DO BEGIN
        IF JT.FINDSET THEN
          REPEAT
            IF JT."Job Posting Group ID" <> Job."Job Posting Group" THEN BEGIN
              JT."Job Posting Group ID" := Job."Job Posting Group";
              JT.MODIFY;
              JPL.RESET;
              JPL.SETRANGE("Job No.", JT."Job No.");
              JPL.SETRANGE("Job Task No.", JT."Job Task No.");
              IF JPL.FINDSET THEN
                REPEAT
                  JPL."Job Posting Group ID" := Job."Job Posting Group";
                  JPL.MODIFY;
                UNTIL JPL.NEXT = 0;

            END;
          UNTIL JT.NEXT = 0;
      END;
    END;

    BEGIN
    {
      Implementation of No Series in Job Task Line:
      1. Change the original preperty of Job Task No. column: Not Blank Yes-No.
    }
    END.
  }
}


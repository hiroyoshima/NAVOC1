OBJECT Page 59001 Atlas Purchase Document Actn.
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=[ 2:01:15 AM];
    Modified=Yes;
    Version List=ATLAS01.00.01;
  }
  PROPERTIES
  {
    InsertAllowed=Yes;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table99008535;
    DelayedInsert=No;
    PageType=Card;
    SourceTableTemporary=Yes;
    OnModifyRecord=VAR
                     PurchaseHeader@1001 : Record 38;
                     PurchaseHeader2@1008 : Record 38;
                     WarehouseReceiptHeader@1002 : Record 7316;
                     WarehouseReceiptLine@1003 : Record 7317;
                     WarehouseReceiptLineCopy@1005 : Record 7317;
                     PurchSetup@1007 : Record 312;
                     GetSourceDocInbound@1000 : Codeunit 5751;
                     PurchPostViaJobQueue@1006 : Codeunit 98;
                     WhsePostReceipt@1004 : Codeunit 5760;
                   BEGIN
                     IF DocumentNo = '' THEN
                       ERROR('Document No. must have a value.');

                     CASE DocumentType OF
                       DocumentType::Order: // Purchase Order
                         BEGIN
                           PurchaseHeader.GET(DocumentType, DocumentNo);
                           CASE TRUE OF
                             CreateWhsReceipt:
                               BEGIN
                                 GetSourceDocInbound.CreateFromPurchOrderHideDialog(PurchaseHeader);
                               END;
                             ReleaseDocument:
                               ReleasePurchDoc.PerformManualRelease(PurchaseHeader);
                             ReopenDocument:
                               ReleasePurchDoc.PerformManualReopen(PurchaseHeader);
                             PostPurchaseDocument:
                               BEGIN
                                 PurchaseHeader.Invoice := TRUE;
                                 PurchaseHeader."Print Posted Documents" := FALSE;
                                 PurchSetup.GET;
                                 IF PurchSetup."Post with Job Queue" THEN
                                   PurchPostViaJobQueue.EnqueuePurchDoc(PurchaseHeader)
                                 ELSE
                                   CODEUNIT.RUN(CODEUNIT::"Purch.-Post",PurchaseHeader);
                                 IF PurchaseHeader.ISEMPTY THEN
                                   PostRespMsg := 'Posted'
                                 ELSE
                                   PostRespMsg := 'Interim Posting';
                               END;
                             ELSE
                               ERROR('Invalid action. Please contact your administrator.');
                           END;
                         END;
                       DocumentType::"Warehouse Receipt":
                         BEGIN
                           WarehouseReceiptHeader.GET(DocumentNo);
                           CASE TRUE OF
                             PostWarehouseReceipt:
                               BEGIN
                                 WarehouseReceiptLine.RESET;
                                 WarehouseReceiptLine.SETRANGE("No.", WarehouseReceiptHeader."No.");
                                 IF WarehouseReceiptLine.FINDSET THEN
                                   REPEAT
                                     WhsePostReceipt.RUN(WarehouseReceiptLine);
                                     WhsePostReceipt.GetResultMessage;
                                   UNTIL WarehouseReceiptLine.NEXT = 0;
                                 CLEAR(WarehouseReceiptLineCopy);
                                 IF WarehouseReceiptHeader.ISEMPTY THEN
                                   PostRespMsg := 'Posted'
                                 ELSE
                                   PostRespMsg := 'Interim Posting';
                               END;
                             AutoFillQuantityToReceive:
                               BEGIN
                                 WarehouseReceiptLine.RESET;
                                 WarehouseReceiptLine.SETRANGE("No.", WarehouseReceiptHeader."No.");
                                 WarehouseReceiptLine.AutofillQtyToReceive(WarehouseReceiptLine);
                               END;
                             DeleteQuantityToReceive:
                               BEGIN
                                 WarehouseReceiptLine.RESET;
                                 WarehouseReceiptLine.SETRANGE("No.", WarehouseReceiptHeader."No.");
                                 WarehouseReceiptLine.DeleteQtyToReceive(WarehouseReceiptLine);
                               END;
                           END;
                         END;
                     END;
                   END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                Name=Document Type;
                SourceExpr=DocumentType }

    { 3   ;2   ;Field     ;
                Name=Document No;
                SourceExpr=DocumentNo }

    { 4   ;2   ;Field     ;
                Name=Create Warehouse Receipt;
                SourceExpr=CreateWhsReceipt }

    { 6   ;2   ;Field     ;
                Name=Release Document;
                SourceExpr=ReleaseDocument }

    { 7   ;2   ;Field     ;
                Name=Reopen Document;
                SourceExpr=ReopenDocument }

    { 12  ;2   ;Field     ;
                Name=Post Purchase Document;
                SourceExpr=PostPurchaseDocument }

    { 8   ;1   ;Group     ;
                Name=Warehouse Receipts;
                GroupType=Group }

    { 11  ;2   ;Field     ;
                Name=Post Warehouse Receipt;
                SourceExpr=PostWarehouseReceipt }

    { 9   ;2   ;Field     ;
                Name=Auto Fill Quantity To Receive;
                SourceExpr=AutoFillQuantityToReceive }

    { 10  ;2   ;Field     ;
                Name=Delete Quantity To Receive;
                SourceExpr=DeleteQuantityToReceive }

    { 14  ;1   ;Group     ;
                CaptionML=ENU=Post Response;
                GroupType=Group }

    { 13  ;2   ;Field     ;
                Name=Post Response Message;
                SourceExpr=PostRespMsg }

  }
  CODE
  {
    VAR
      Txt01@1005 : TextConst 'ENU=Invalid request sent. Please select a valid request or contact your system administrator.';
      ReleasePurchDoc@1006 : Codeunit 415;
      DocumentType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Warehouse Receipt';
      DocumentNo@1001 : Code[20];
      PostRespMsg@1011 : Text;
      CreateWhsReceipt@1002 : Boolean;
      ReleaseDocument@1003 : Boolean;
      ReopenDocument@1004 : Boolean;
      PostPurchaseDocument@1010 : Boolean;
      PostWarehouseReceipt@1009 : Boolean;
      AutoFillQuantityToReceive@1007 : Boolean;
      DeleteQuantityToReceive@1008 : Boolean;

    BEGIN
    {
      !! Documentation Page 59001 Atlas Purchase Document Actn.
    }
    END.
  }
}


OBJECT Page 1012 Job Item Prices
{
  OBJECT-PROPERTIES
  {
    Date=09/02/18;
    Time=[ 6:35:48 PM];
    Modified=Yes;
    Version List=NAVW16.00.01,JOB02,OC02;
  }
  PROPERTIES
  {
    CaptionML=ENU=Job Item Prices;
    SourceTable=Table1013;
    PageType=List;
    OnAfterGetCurrRecord=BEGIN
                           TotalUnitCost := 0;
                           TotalUnitCostLCY := 0;
                           TotalShipmentCost := 0;
                           TotalShipmentCostLCY := 0;
                           TotalDutiesCost := 0;
                           TotalDutiesCostLCY := 0;
                           TotalUnitPrice := 0;
                           TotalUnitPriceLCY := 0;
                           TotalInsuranceAmount := 0;
                           TotalInsuranceAmountLCY := 0;
                           TotalBankChargesAmount := 0;
                           TotalBankChargesAmountLCY := 0;
                           TotalWTaxAmount := 0;
                           TotalWTaxAmountLCY := 0;
                           TotalVATAmount := 0;
                           TotalVATAmountLCY := 0;
                           TotalNTCAmount := 0;
                           TotalNTCAmountLCY := 0;
                           TotalPDIAmount := 0;
                           TotalPDIAmountLCY := 0;
                           TotalRetentionAmount := 0;
                           TotalRetentionAmountLCY := 0;
                           TotalMEAmount := 0;
                           TotalMEAmountLCY := 0;


                           TotalJobItemPrice.SETFILTER("Job No.", Rec.GETFILTER("Job No."));

                           IF TotalJobItemPrice.FINDSET THEN BEGIN
                             REPEAT
                               TotalUnitCost += TotalJobItemPrice."Total Unit Cost";
                               TotalUnitCostLCY += TotalJobItemPrice."Total Unit Cost (LCY)";
                               TotalShipmentCost += TotalJobItemPrice."Total Shipment Cost";
                               TotalShipmentCostLCY +=  TotalJobItemPrice."Total Shipment Cost (LCY)";
                               TotalDutiesCost += TotalJobItemPrice."Duties Cost";
                               TotalDutiesCostLCY += TotalJobItemPrice."Duties Cost (LCY)";
                               TotalUnitPrice += TotalJobItemPrice."Total Unit Price";
                               TotalUnitPriceLCY += TotalJobItemPrice."Total Unit Price (LCY)";
                               TotalInsuranceAmount += TotalJobItemPrice."Insurance Amount";
                               TotalInsuranceAmountLCY += TotalJobItemPrice."Insurance Amount (LCY)";
                               TotalBankChargesAmount += TotalJobItemPrice."Bank Charges Amount";
                               TotalBankChargesAmountLCY += TotalJobItemPrice."Bank Charges Amount (LCY)";
                               TotalWTaxAmount += TotalJobItemPrice."WTax Amount";
                               TotalWTaxAmountLCY += TotalJobItemPrice."WTax Amount (LCY)";
                               TotalVATAmount += TotalJobItemPrice."VAT Amount";
                               TotalVATAmountLCY += TotalJobItemPrice."VAT Amount (LCY)";
                               TotalNTCAmount += TotalJobItemPrice."NTC Amount";
                               TotalNTCAmountLCY += TotalJobItemPrice."NTC Amount (LCY)";
                               TotalPDIAmount += TotalJobItemPrice."PDI Amount";
                               TotalPDIAmountLCY += TotalJobItemPrice."PDI Amount (LCY)";
                               TotalRetentionAmount += TotalJobItemPrice."Retention Amount";
                               TotalRetentionAmountLCY += TotalJobItemPrice."Retention Amount (LCY)";
                               TotalMEAmount += TotalJobItemPrice."M.E Amount";
                               TotalMEAmountLCY += TotalJobItemPrice."M.E Amount (LCY)";

                             UNTIL TotalJobItemPrice.NEXT = 0;
                           END;
                         END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 109     ;1   ;ActionGroup;
                      CaptionML=ENU=Item Price Application }
      { 115     ;2   ;Action    ;
                      Name=Get Item from Job;
                      Image=Allocations;
                      OnAction=VAR
                                 JobNo@1000 : Code[10];
                                 TempJobPlanningLines@1001 : TEMPORARY Record 1003;
                                 JobItemPrice@1002 : Record 1013;
                               BEGIN
                                 // PHP START
                                 JobNo := Rec.GETFILTER("Job No.");
                                 IF JobNo = '' THEN
                                   EXIT;

                                 TempJobPlanningLines.DELETEALL;
                                 JobPlanningLines.RESET;
                                 JobPlanningLines.SETRANGE("Job No.", JobNo);
                                 JobPlanningLines.SETRANGE(Type,JobPlanningLines.Type::Item);
                                 JobPlanningLines.SETFILTER("No.", '<>''''');
                                 JobPlanningLines.SETFILTER("Unit of Measure Code", '<>''''');
                                 IF JobPlanningLines.FINDSET THEN BEGIN
                                   REPEAT
                                     JobPlanningLines.TESTFIELD("No.");
                                     JobPlanningLines.TESTFIELD("Unit of Measure Code");
                                     JobPlanningLines.TESTFIELD(Type, JobPlanningLines.Type::Item);
                                     TempJobPlanningLines.SETRANGE(Type, JobPlanningLines.Type::Item);
                                     TempJobPlanningLines.SETRANGE("No.",JobPlanningLines."No.");
                                     TempJobPlanningLines.SETRANGE("Variant Code", JobPlanningLines."Variant Code");
                                     TempJobPlanningLines.SETRANGE("Unit of Measure Code", JobPlanningLines."Unit of Measure Code");
                                   IF NOT TempJobPlanningLines.FINDFIRST THEN BEGIN
                                     TempJobPlanningLines.INIT;
                                     TempJobPlanningLines := JobPlanningLines;
                                     TempJobPlanningLines.INSERT;
                                   END;
                                   UNTIL JobPlanningLines.NEXT = 0;
                                 END;

                                 TempJobPlanningLines.RESET;
                                 TempJobPlanningLines.SETCURRENTKEY("No.");
                                 TempJobPlanningLines.SETASCENDING("No.", TRUE);
                                 IF TempJobPlanningLines.FINDSET THEN BEGIN
                                   REPEAT
                                     JobItemPrice.SETRANGE("Job No.", TempJobPlanningLines."Job No.");
                                     JobItemPrice.SETRANGE("Item No.", TempJobPlanningLines."No.");
                                     JobItemPrice.SETRANGE("Variant Code", TempJobPlanningLines."Variant Code");
                                     JobItemPrice.SETRANGE("Unit of Measure Code", TempJobPlanningLines."Unit of Measure Code");
                                     IF NOT JobItemPrice.FINDFIRST THEN BEGIN
                                       JobItemPrice.INIT;
                                       JobItemPrice.VALIDATE("Job No.", TempJobPlanningLines."Job No.");
                                       JobItemPrice.VALIDATE("Item No.", TempJobPlanningLines."No.");
                                       JobItemPrice.VALIDATE("Variant Code", TempJobPlanningLines."Variant Code");
                                       JobItemPrice.VALIDATE("Unit of Measure Code", TempJobPlanningLines."Unit of Measure Code");
                                       JobItemPrice.INSERT(TRUE);
                                     END;
                                   UNTIL TempJobPlanningLines.NEXT = 0;
                                 END;
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Get Item from Job Task Lines;
                      Image=Allocations;
                      OnAction=VAR
                                 JobNo@1000 : Code[10];
                                 TempJobPlanningLines@1001 : TEMPORARY Record 1003;
                                 JobItemPrice@1002 : Record 1013;
                               BEGIN
                                 // PHP START
                                 JobNo := Rec.GETFILTER("Job No.");
                                 IF JobNo = '' THEN
                                   EXIT;

                                 TempJobPlanningLines.DELETEALL;
                                 JobPlanningLines.RESET;
                                 JobPlanningLines.SETRANGE("Job No.", JobNo);
                                 JobPlanningLines.SETRANGE(Type,JobPlanningLines.Type::Item);
                                 JobPlanningLines.SETFILTER("No.", '<>''''');
                                 JobPlanningLines.SETFILTER("Unit of Measure Code", '<>''''');
                                 IF JobPlanningLines.FINDSET THEN BEGIN
                                   REPEAT
                                     JobPlanningLines.TESTFIELD("No.");
                                     JobPlanningLines.TESTFIELD("Unit of Measure Code");
                                     JobPlanningLines.TESTFIELD(Type, JobPlanningLines.Type::Item);
                                     TempJobPlanningLines.SETRANGE("Job Task No.", JobPlanningLines."Job Task No.");
                                     TempJobPlanningLines.SETRANGE(Type, JobPlanningLines.Type::Item);
                                     TempJobPlanningLines.SETRANGE("No.",JobPlanningLines."No.");
                                     TempJobPlanningLines.SETRANGE("Variant Code", JobPlanningLines."Variant Code");
                                     TempJobPlanningLines.SETRANGE("Unit of Measure Code", JobPlanningLines."Unit of Measure Code");
                                   IF NOT TempJobPlanningLines.FINDFIRST THEN BEGIN
                                     TempJobPlanningLines.INIT;
                                     TempJobPlanningLines := JobPlanningLines;
                                     TempJobPlanningLines.INSERT;
                                   END;
                                   UNTIL JobPlanningLines.NEXT = 0;
                                 END;

                                 TempJobPlanningLines.RESET;
                                 TempJobPlanningLines.SETCURRENTKEY("Job Task No.");
                                 TempJobPlanningLines.SETASCENDING("Job Task No.", TRUE);
                                 IF TempJobPlanningLines.FINDSET THEN BEGIN
                                   REPEAT
                                     JobItemPrice.SETRANGE("Job Task No.", TempJobPlanningLines."Job Task No.");
                                     JobItemPrice.SETRANGE("Job No.", TempJobPlanningLines."Job No.");
                                     JobItemPrice.SETRANGE("Item No.", TempJobPlanningLines."No.");
                                     JobItemPrice.SETRANGE("Variant Code", TempJobPlanningLines."Variant Code");
                                     JobItemPrice.SETRANGE("Unit of Measure Code", TempJobPlanningLines."Unit of Measure Code");
                                     IF NOT JobItemPrice.FINDFIRST THEN BEGIN
                                       JobItemPrice.INIT;
                                       JobItemPrice.VALIDATE("Job No.", TempJobPlanningLines."Job No.");
                                       JobItemPrice.VALIDATE("Job Task No.", TempJobPlanningLines."Job Task No.");
                                       JobItemPrice.VALIDATE("Item No.", TempJobPlanningLines."No.");
                                       JobItemPrice.VALIDATE("Variant Code", TempJobPlanningLines."Variant Code");
                                       JobItemPrice.VALIDATE("Unit of Measure Code", TempJobPlanningLines."Unit of Measure Code");
                                       JobItemPrice.INSERT(TRUE);
                                     END;
                                   UNTIL TempJobPlanningLines.NEXT = 0;
                                 END;
                               END;
                                }
      { 106     ;2   ;ActionGroup;
                      CaptionML=ENU=Apply Items to Job;
                      Image=ApplyTemplate }
      { 116     ;3   ;Action    ;
                      Name=Apply Item Price/Cost to Job;
                      CaptionML=ENU=Apply Items Price/Cost to Job;
                      Image=ApplyTemplate;
                      OnAction=VAR
                                 JobNo@1000 : Code[20];
                               BEGIN
                                 UpdateJobPlanningLineUnitPriceCost(ToUpdateInJPL::"Both Price and Cost");
                               END;
                                }
      { 107     ;3   ;Action    ;
                      Name=Apply Items Cost to Job;
                      CaptionML=ENU=Apply Items Cost to Job;
                      Image=ApplyTemplate;
                      OnAction=BEGIN
                                 UpdateJobPlanningLineUnitPriceCost(ToUpdateInJPL::"Unit Cost");
                               END;
                                }
      { 108     ;3   ;Action    ;
                      Name=Apply Items Price to Job;
                      CaptionML=ENU=Apply Items Price to Job;
                      Image=ApplyTemplate;
                      OnAction=BEGIN
                                 UpdateJobPlanningLineUnitPriceCost(ToUpdateInJPL::"Unit Price");
                               END;
                                }
      { 118     ;2   ;Action    ;
                      Name=Apply Sel. Item Price/Cost;
                      CaptionML=ENU=Apply Selected Item Price/Cost to Job;
                      Image=ApplyTemplate;
                      OnAction=VAR
                                 JobNo@1000 : Code[20];
                               BEGIN
                                 ApplySelectedPricetoJobs;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Job No." }

    { 4   ;2   ;Field     ;
                SourceExpr="Job Task No.";
                Visible=FALSE }

    { 11  ;2   ;Field     ;
                Lookup=No;
                SourceExpr="Job Task";
                Enabled=false;
                LookupPageID=Page0;
                DrillDownPageID=Page0 }

    { 15  ;2   ;Field     ;
                SourceExpr="Vendor No." }

    { 17  ;2   ;Field     ;
                SourceExpr="Vendor Name" }

    { 6   ;2   ;Field     ;
                SourceExpr="Item No." }

    { 23  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr=Description;
                Enabled=False }

    { 8   ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 12  ;2   ;Field     ;
                SourceExpr="Currency Code" }

    { 42  ;2   ;Field     ;
                SourceExpr="Exchange Rate";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit Price" }

    { 62  ;2   ;Field     ;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Unit Cost Factor";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Line Discount %" }

    { 13  ;2   ;Field     ;
                SourceExpr="Qty. in Job Plng. Line (Base)" }

    { 27  ;2   ;Field     ;
                SourceExpr="Apply Job Discount";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Apply Job Price";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Qty. of Spare";
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                SourceExpr="Unit Cost" }

    { 63  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                SourceExpr="Unit Cost w/ Spare";
                Visible=FALSE }

    { 65  ;2   ;Field     ;
                SourceExpr="Unit Cost w/ Spare (LCY)";
                Visible=FALSE }

    { 49  ;2   ;Field     ;
                ToolTipML=ENU="""Unit Cost"" X ""Qty. in Job Planning Line""";
                SourceExpr="Total Unit Cost";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                SourceExpr="Total Unit Cost (LCY)";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Shipment %";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Shipment Cost";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                SourceExpr="Shipment Cost (LCY)";
                Visible=FALSE }

    { 113 ;2   ;Field     ;
                SourceExpr="Total Shipment Cost";
                Visible=FALSE }

    { 114 ;2   ;Field     ;
                SourceExpr="Total Shipment Cost (LCY)";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Duties %";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="Duties Cost";
                Visible=FALSE }

    { 51  ;2   ;Field     ;
                SourceExpr="Duties Cost (LCY)";
                Visible=FALSE }

    { 110 ;2   ;Field     ;
                SourceExpr="T.A %";
                Visible=FALSE }

    { 111 ;2   ;Field     ;
                SourceExpr="T.A Amount";
                Visible=FALSE }

    { 112 ;2   ;Field     ;
                SourceExpr="T.A Amount (LCY)";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                SourceExpr="Markup %";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Markup Price";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr="Markup Price (LCY)";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                SourceExpr="Insurance %";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Insurance Amount";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                SourceExpr="Insurance Amount (LCY)";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                SourceExpr="Bank Charges %";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Bank Charges Amount";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Bank Charges Amount (LCY)";
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                SourceExpr="WTax %";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="WTax Amount";
                Visible=FALSE }

    { 55  ;2   ;Field     ;
                SourceExpr="WTax Amount (LCY)";
                Visible=FALSE }

    { 37  ;2   ;Field     ;
                SourceExpr="VAT %";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="VAT Amount (LCY)";
                Visible=FALSE }

    { 39  ;2   ;Field     ;
                SourceExpr="NTC %";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="NTC Amount";
                Visible=FALSE }

    { 57  ;2   ;Field     ;
                SourceExpr="NTC Amount (LCY)";
                Visible=FALSE }

    { 41  ;2   ;Field     ;
                SourceExpr="PDI %";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr="PDI Amount";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="PDI Amount (LCY)";
                Visible=FALSE }

    { 43  ;2   ;Field     ;
                SourceExpr="Retention %";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                SourceExpr="Retention Amount";
                Visible=FALSE }

    { 59  ;2   ;Field     ;
                SourceExpr="Retention Amount (LCY)";
                Visible=FALSE }

    { 45  ;2   ;Field     ;
                SourceExpr="M.E %";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="M.E Amount";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                SourceExpr="M.E Amount (LCY)";
                Visible=FALSE }

    { 47  ;2   ;Field     ;
                SourceExpr="Total Unit Price";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                SourceExpr="Total Unit Price (LCY)";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Created By";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Modified By";
                Visible=FALSE }

    { 80  ;1   ;Group     ;
                CaptionML=ENU=Statistics;
                Visible=FALSE;
                GroupType=Group }

    { 66  ;2   ;Group     ;
                GroupType=FixedLayout }

    { 73  ;3   ;Group     ;
                CaptionML=ENU=Unit Cost;
                GroupType=Group;
                Layout=Rows }

    { 67  ;4   ;Field     ;
                CaptionML=ENU=Total;
                SourceExpr=TotalUnitCost;
                AutoFormatType=2;
                Editable=FALSE;
                ColumnSpan=4 }

    { 68  ;4   ;Field     ;
                CaptionML=ENU=Total (LCY);
                SourceExpr=TotalUnitCostLCY;
                AutoFormatType=2;
                Editable=False }

    { 72  ;3   ;Group     ;
                CaptionML=ENU=Unit Price;
                GroupType=Group }

    { 70  ;4   ;Field     ;
                SourceExpr=TotalUnitPrice;
                Editable=False }

    { 71  ;4   ;Field     ;
                SourceExpr=TotalUnitPriceLCY;
                Editable=False }

    { 76  ;3   ;Group     ;
                CaptionML=ENU=Shipment Cost;
                GroupType=Group }

    { 74  ;4   ;Field     ;
                SourceExpr=TotalShipmentCost;
                Editable=False }

    { 75  ;4   ;Field     ;
                SourceExpr=TotalShipmentCostLCY;
                Editable=FALSE }

    { 69  ;3   ;Group     ;
                CaptionML=ENU=Duties Cost;
                GroupType=Group }

    { 78  ;4   ;Field     ;
                SourceExpr=TotalDutiesCost;
                Editable=FALSE }

    { 77  ;4   ;Field     ;
                SourceExpr=TotalDutiesCostLCY;
                Editable=FALSE }

    { 81  ;2   ;Group     ;
                GroupType=FixedLayout }

    { 84  ;3   ;Group     ;
                CaptionML=ENU=Insurance Amount;
                GroupType=Group }

    { 82  ;4   ;Field     ;
                CaptionML=ENU=Total;
                SourceExpr=TotalInsuranceAmount }

    { 85  ;4   ;Field     ;
                CaptionML=ENU=Total (LCY);
                SourceExpr=TotalInsuranceAmountLCY }

    { 86  ;3   ;Group     ;
                CaptionML=ENU=Bank Charges Amount;
                GroupType=Group }

    { 87  ;4   ;Field     ;
                SourceExpr=TotalBankChargesAmount }

    { 88  ;4   ;Field     ;
                SourceExpr=TotalBankChargesAmountLCY }

    { 89  ;3   ;Group     ;
                CaptionML=ENU=WTax Amount;
                GroupType=Group }

    { 90  ;4   ;Field     ;
                SourceExpr=TotalWTaxAmount }

    { 91  ;4   ;Field     ;
                SourceExpr=TotalWTaxAmountLCY }

    { 92  ;3   ;Group     ;
                CaptionML=ENU=VAT Amount;
                GroupType=Group }

    { 79  ;4   ;Field     ;
                SourceExpr=TotalVATAmount }

    { 94  ;4   ;Field     ;
                CaptionML=ENU=(LCY);
                SourceExpr=TotalVATAmountLCY }

    { 83  ;2   ;Group     ;
                GroupType=FixedLayout }

    { 95  ;3   ;Group     ;
                CaptionML=ENU=NTC Amount;
                GroupType=Group }

    { 96  ;4   ;Field     ;
                CaptionML=ENU=Total;
                SourceExpr=TotalNTCAmount }

    { 97  ;4   ;Field     ;
                CaptionML=ENU=Total (LCY);
                SourceExpr=TotalNTCAmountLCY }

    { 93  ;3   ;Group     ;
                CaptionML=ENU=PDI Amount;
                GroupType=Group }

    { 98  ;4   ;Field     ;
                SourceExpr=TotalPDIAmount }

    { 102 ;4   ;Field     ;
                CaptionML=ENU=(LCY);
                SourceExpr=TotalPDIAmountLCY }

    { 99  ;3   ;Group     ;
                CaptionML=ENU=Retention Amount;
                GroupType=Group }

    { 100 ;4   ;Field     ;
                SourceExpr=TotalRetentionAmount }

    { 101 ;4   ;Field     ;
                CaptionML=ENU=(LCY);
                SourceExpr=TotalRetentionAmountLCY }

    { 103 ;3   ;Group     ;
                CaptionML=ENU=M.E. Amount;
                GroupType=Group }

    { 104 ;4   ;Field     ;
                SourceExpr=TotalMEAmount }

    { 105 ;4   ;Field     ;
                CaptionML=ENU=(LCY);
                SourceExpr=TotalMEAmountLCY }

  }
  CODE
  {
    VAR
      Text001@1003 : TextConst 'ENU=Job No. must have a value.';
      JobPlanningLines@1008 : Record 1003;
      TempJobPlanningLines@1007 : TEMPORARY Record 1003;
      JobItemPrice@1002 : Record 1013;
      TotalJobItemPrice@1011 : Record 1013;
      DocumentTotals@1017 : Codeunit 57;
      Text002@1000 : TextConst 'ENU=Item No. %1 Variant No. %2';
      Jobs@1004 : Record 167;
      ToUpdateInJPL@1051 : 'Both Price and Cost,Unit Price,Unit Cost';
      TotalUnitCost@1010 : Decimal;
      TotalUnitCostLCY@1012 : Decimal;
      TotalShipmentCost@1013 : Decimal;
      TotalShipmentCostLCY@1014 : Decimal;
      TotalDutiesCost@1015 : Decimal;
      TotalDutiesCostLCY@1016 : Decimal;
      TotalTA@1030 : Decimal;
      TotalTALCY@1047 : Decimal;
      TotalMarkupPrice@1019 : Decimal;
      TotalMarkupPriceLCY@1020 : Decimal;
      TotalInsuranceAmt@1021 : Decimal;
      TotalInsuranceAmtLCY@1022 : Decimal;
      BankChargesAmt@1023 : Decimal;
      BankChargesAmtLCY@1024 : Decimal;
      WTaxAmt@1025 : Decimal;
      WTaxAmtLCY@1026 : Decimal;
      TotalUnitPrice@1027 : Decimal;
      TotalUnitPriceLCY@1028 : Decimal;
      Text006@1029 : TextConst 'ENU=Total';
      space@1018 : TextConst 'ENU=12345678901234567890';
      TotalInsuranceAmount@1031 : Decimal;
      TotalInsuranceAmountLCY@1032 : Decimal;
      TotalBankChargesAmount@1033 : Decimal;
      TotalBankChargesAmountLCY@1034 : Decimal;
      TotalWTaxAmount@1035 : Decimal;
      TotalWTaxAmountLCY@1036 : Decimal;
      TotalVATAmount@1037 : Decimal;
      TotalVATAmountLCY@1038 : Decimal;
      TotalNTCAmount@1039 : Decimal;
      TotalNTCAmountLCY@1040 : Decimal;
      TotalPDIAmount@1041 : Decimal;
      TotalPDIAmountLCY@1042 : Decimal;
      TotalRetentionAmount@1043 : Decimal;
      TotalRetentionAmountLCY@1044 : Decimal;
      TotalMEAmount@1045 : Decimal;
      TotalMEAmountLCY@1046 : Decimal;
      ErrMsg001@1048 : TextConst 'ENU=No Job fitler found.';
      Text004@1009 : TextConst 'ENU=Can''t find any Item Price.';
      Text003@1049 : TextConst 'ENU=%1 has been successfully updated.';

    LOCAL PROCEDURE UpdateJobPlanningLineUnitPriceCost@7(ToUpdate@1000 : 'Both Price and Cost,Unit Price,Unit Cost');
    VAR
      JobNo@1001 : Code[20];
      ConfirmMsg001@1002 : TextConst 'ENU=Do you want to update %1 in Job Planning Lines?';
    BEGIN
      // PHP START
      JobNo := Rec.GETFILTER("Job No.");
      IF NOT Jobs.GET(JobNo) THEN
        ERROR(ErrMsg001);

      IF NOT CONFIRM(ConfirmMsg001, FALSE, FORMAT(ToUpdate)) THEN
        EXIT;

      JobItemPrice.RESET;
      UnitPriceCostApplication(JobItemPrice, Jobs, ToUpdate);
    END;

    LOCAL PROCEDURE ApplySelectedPricetoJobs@2();
    VAR
      ConfirmMsg001@1000 : TextConst 'ENU=Do you want to apply the selected Job Item Unit Price/Cost in Job Planning Lines?';
      JobNo@1002 : Code[20];
    BEGIN
      // PHP START
      JobNo := Rec.GETFILTER("Job No.");
      IF NOT Jobs.GET(JobNo) THEN
        ERROR(ErrMsg001);

      IF NOT CONFIRM(ConfirmMsg001, FALSE) THEN
        EXIT;

      JobItemPrice.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(JobItemPrice);
      UnitPriceCostApplication(JobItemPrice, Jobs, ToUpdateInJPL::"Both Price and Cost");
    END;

    LOCAL PROCEDURE UnitPriceCostApplication@12(VAR JIP@1001 : Record 1013;Job@1002 : Record 167;ToUpdate@1000 : 'Both Unit Price and Unit Cost,Unit Price,Unit Cost');
    BEGIN
      // PHP START
      JIP.SETCURRENTKEY("Job No.", "Job Task No.", "Item No.", "Unit of Measure Code");
      JIP.SETASCENDING("Job Task No.", TRUE);
      JobItemPrice.SETRANGE("Job No.", Job."No.");
      IF JIP.FINDSET THEN BEGIN
          REPEAT
          JobPlanningLines.RESET;
          JobPlanningLines.SETRANGE("Job No.", Jobs."No.");
          IF JIP."Job Task No." <> '' THEN
            JobPlanningLines.SETRANGE("Job Task No.", JIP."Job Task No.");
          JobPlanningLines.SETRANGE(Type, JobPlanningLines.Type::Item);
          JobPlanningLines.SETRANGE("No.", JIP."Item No.");
          JobPlanningLines.SETRANGE("Variant Code", JIP."Variant Code");
          JobPlanningLines.SETRANGE("Unit of Measure Code", JIP."Unit of Measure Code");
          IF JobPlanningLines.FINDSET THEN BEGIN
              REPEAT
                CASE ToUpdate OF
                  ToUpdate::"Unit Price":
                    JobPlanningLines.VALIDATE("Unit Price", JIP."Unit Price"); // Original Code is LCY Price":
                  ToUpdate::"Unit Cost":
                    JobPlanningLines.VALIDATE("Unit Cost", JIP."Unit Cost"); // Original Code LCY
                  ELSE BEGIN
                    JobPlanningLines.VALIDATE("Unit Price", JIP."Unit Price"); // Original Code is LCY Price":
                    JobPlanningLines.VALIDATE("Unit Cost", JIP."Unit Cost"); // Original Code LCY
                  END;
                END;
                JobPlanningLines.VALIDATE("Line Discount %", JIP."Line Discount %");
                JobPlanningLines.MODIFY(TRUE);
              UNTIL JobPlanningLines.NEXT = 0;
          END;
        UNTIL JIP.NEXT = 0;
        MESSAGE(Text003, FORMAT(ToUpdate));
      END;
    END;

    BEGIN
    END.
  }
}


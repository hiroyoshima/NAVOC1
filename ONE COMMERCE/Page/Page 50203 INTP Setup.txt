OBJECT Page 50203 INTP Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/05/18;
    Time=[ 9:37:44 PM];
    Modified=Yes;
    Version List=NAVW25.00.00.03;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50029;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;
               END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=Migrate Legacy Data;
                      OnAction=VAR
                                 JobOrder@1000 : Record 50012;
                                 JobOrderLine@1001 : Record 50551;
                                 JobOrderActivity@1002 : Record 50026;
                                 ConfigProgressBar@1004 : Codeunit 8615;
                                 TempDescription@1007 : Text;
                                 TotalJobOrder@1003 : Integer;
                                 LineNo@1005 : Integer;
                                 StrLenDescription@1006 : Integer;
                                 MigrateLegacyDataConfMsg@1008 : TextConst 'ENU=Do you want to migrate your legacy data to new Job Order process?';
                               BEGIN
                                 IF NOT CONFIRM(MigrateLegacyDataConfMsg, FALSE) THEN
                                   EXIT;

                                 JobOrder.SETFILTER(Status, STRSUBSTNO('%1|%2',
                                   JobOrder.Status::Released, JobOrder.Status::"Pending Approval"));
                                 TotalJobOrder := JobOrder.COUNT;
                                 ConfigProgressBar.Init(TotalJobOrder, 1, 'Migrating Job Order');
                                 IF JobOrder.FINDSET THEN BEGIN
                                   REPEAT
                                     JobOrderActivity.SETRANGE("Job Order No.", JobOrder."No.");
                                     IF NOT JobOrderActivity.FINDFIRST THEN BEGIN
                                       LineNo := 0;
                                       StrLenDescription := 0;
                                       // Insert Job Order Activity
                                       JobOrderLine.SETRANGE("Job Order No.", JobOrder."No.");
                                       IF JobOrderLine.FINDSET THEN BEGIN
                                         REPEAT
                                           LineNo += 10000;
                                           JobOrderActivity.INIT;
                                           JobOrderActivity."Line No." := LineNo;
                                           JobOrderActivity."Job Order No." := JobOrder."No.";
                                           JobOrderActivity."Type of Activity" := 'LEGACY DATA';
                                           CASE JobOrderLine."Line Type" OF
                                             JobOrderLine."Line Type"::"Car Request":
                                               JobOrderActivity."Mode of Transportation" := JobOrderActivity."Mode of Transportation"::"Company Vehicle";
                                             JobOrderLine."Line Type"::"Airplane Ticket Request":
                                               JobOrderActivity."Mode of Transportation" := JobOrderActivity."Mode of Transportation"::Airplane;
                                             JobOrderLine."Line Type"::"Public Transpo Request":
                                               JobOrderActivity."Mode of Transportation" := JobOrderActivity."Mode of Transportation"::"Public Transport";
                                           END;

                                           TempDescription := 'JOBMG:';
                                           IF JobOrder.Meeting THEN
                                             TempDescription += 'Meeting,';
                                           IF JobOrder."Site Survey" THEN
                                             TempDescription += 'Site Survey,';
                                           IF JobOrder."Trial/POC" THEN
                                             TempDescription += 'Trial POC,';
                                           IF JobOrder.Rectification THEN
                                             TempDescription += 'Rectification,';
                                           IF JobOrder."Final Acceptance" THEN
                                             TempDescription += 'Final Acceptance,';
                                           IF JobOrder."Installation and Commissioning" THEN
                                             TempDescription += 'Installation and Commissioning,';
                                           IF JobOrder.Troubleshooting THEN
                                             TempDescription += 'Troubleshooting,';
                                           IF JobOrder."On-Site Audit" THEN
                                             TempDescription += 'On-Site Audit,';
                                           IF JobOrder.Others THEN
                                             TempDescription += 'Others,';

                                           TempDescription += JobOrder.Remarks;
                                           JobOrderActivity.Description := COPYSTR(TempDescription, 1, 250);
                                           JobOrderActivity."Date From" := DT2DATE(JobOrderLine."Date To");
                                           JobOrderActivity."Date To":= DT2DATE(JobOrderLine."Date To");
                                           JobOrderActivity.INSERT;
                                         UNTIL JobOrderLine.NEXT = 0;
                                       END;
                                     END;
                                     ConfigProgressBar.Update('Converting...');
                                   UNTIL JobOrder.NEXT = 0;
                                   ConfigProgressBar.Close;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 7   ;1   ;Group     ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 28  ;2   ;Field     ;
                SourceExpr="INTP Nos." }

    { 29  ;2   ;Field     ;
                SourceExpr="Project Category Required" }

    { 5   ;1   ;Group     ;
                CaptionML=ENU=Person to Notify;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                SourceExpr="Logistics PTN" }

    { 3   ;2   ;Field     ;
                SourceExpr="Warehouse PTN" }

    { 4   ;2   ;Field     ;
                SourceExpr="Inventory PTN" }

    { 6   ;2   ;Field     ;
                SourceExpr="Accounting PTN" }

    { 8   ;2   ;Field     ;
                SourceExpr="Tel. Audit PTN" }

    { 11  ;2   ;Field     ;
                SourceExpr="Project Control PTN" }

    { 12  ;2   ;Field     ;
                SourceExpr="Finance AP PTN" }

    { 13  ;2   ;Field     ;
                SourceExpr="Purchasing PTN" }

    { 14  ;2   ;Field     ;
                SourceExpr="Sales PTN" }

    { 15  ;2   ;Field     ;
                SourceExpr="Finance AR PTN" }

    { 16  ;2   ;Field     ;
                SourceExpr="Power PTN" }

    { 17  ;2   ;Field     ;
                SourceExpr="Transmission Wrl. PTN" }

    { 18  ;2   ;Field     ;
                SourceExpr="ICT PTN" }

    { 19  ;2   ;Field     ;
                SourceExpr="Device PTN" }

    { 20  ;2   ;Field     ;
                SourceExpr="Project Mgmt. Dept. PTN" }

    { 21  ;2   ;Field     ;
                SourceExpr="Outside Plant PTN" }

    { 22  ;2   ;Field     ;
                SourceExpr="Quality Assurance PTN" }

    { 23  ;2   ;Field     ;
                SourceExpr="Wireless Access 1 PTN" }

    { 24  ;2   ;Field     ;
                SourceExpr="Wireless Access 2 PTN" }

    { 25  ;2   ;Field     ;
                SourceExpr="Transmission Wired PTN" }

    { 26  ;2   ;Field     ;
                SourceExpr="Audit PTN" }

    { 27  ;2   ;Field     ;
                SourceExpr="Passive Unit PTN" }

    { 30  ;2   ;Field     ;
                SourceExpr="Human Capital Mgmt. PTN" }

    { 31  ;2   ;Field     ;
                SourceExpr="Documentation PTN" }

  }
  CODE
  {

    BEGIN
    {
      !! Documentation Page 50069 Job Order Setup

      1:32 PM Monday, April 7, 2025
        Migrate all the legacy data with status of Pending Approval and Released
    }
    END.
  }
}


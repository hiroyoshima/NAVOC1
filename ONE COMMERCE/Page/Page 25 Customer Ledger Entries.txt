OBJECT Page 25 Customer Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=08/23/18;
    Time=[ 5:23:56 PM];
    Modified=Yes;
    Version List=NAVW19.00,OC02.01,+,SF-01;
  }
  PROPERTIES
  {
    CaptionML=ENU=Customer Ledger Entries;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table21;
    DataCaptionFields=Customer No.;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       StyleTxt := SetStyle;

                       GetOrderDate;
                     END;

    OnModifyRecord=BEGIN
                     CODEUNIT.RUN(CODEUNIT::"Cust. Entry-Edit",Rec);
                     EXIT(FALSE);
                   END;

    OnAfterGetCurrRecord=VAR
                           IncomingDocument@1000 : Record 130;
                           SalesInvoiceHeader@1001 : Record 112;
                         BEGIN
                           HasIncomingDocument := IncomingDocument.PostedDocExists("Document No.","Posting Date");
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           IF "Document Type" = "Document Type"::Invoice THEN BEGIN
                             SalesInvoiceHeader.GET("Document No.");
                             // SalesInvoiceHeader.FINDFIRST;
                             AmountIncludingVat := SalesInvoiceHeader."Amount Including VAT";
                           END;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 24      ;1   ;ActionGroup;
                      CaptionML=ENU=Ent&ry;
                      Image=Entry }
      { 25      ;2   ;Action    ;
                      CaptionML=ENU=Reminder/Fin. Charge Entries;
                      RunObject=Page 444;
                      RunPageView=SORTING(Customer Entry No.);
                      RunPageLink=Customer Entry No.=FIELD(Entry No.);
                      Image=Reminder;
                      Scope=Repeater }
      { 69      ;2   ;Action    ;
                      CaptionML=ENU=Applied E&ntries;
                      RunObject=Page 61;
                      RunPageOnRec=Yes;
                      Image=Approve;
                      Scope=Repeater }
      { 51      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      Image=Dimensions;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 29      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+U;
                      CaptionML=ENU=Update Dimensions;
                      Image=ChangeDimensions;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 52      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Detailed &Ledger Entries;
                      RunObject=Page 573;
                      RunPageView=SORTING(Cust. Ledger Entry No.,Posting Date);
                      RunPageLink=Cust. Ledger Entry No.=FIELD(Entry No.),
                                  Customer No.=FIELD(Customer No.);
                      Image=View;
                      Scope=Repeater }
      { 32      ;2   ;Action    ;
                      Name=Detailed Ledger Entries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Consolidated Ledger Entries;
                      Image=View;
                      Scope=Repeater;
                      OnAction=VAR
                                 DetailedCustLedgEntry@1000 : Record 379;
                                 DetailedCustLedgEntry_@1002 : Record 379;
                                 DetailedCustLedgEntryPage@1001 : Page 573;
                                 FilterText@1003 : Text;
                               BEGIN

                                 DetailedCustLedgEntry.SETRANGE("Cust. Ledger Entry No.", "Entry No.");
                                 DetailedCustLedgEntry.SETFILTER("Customer No.", "Customer No.");
                                 IF DetailedCustLedgEntry.FINDLAST THEN BEGIN
                                   CLEAR(DetailedCustLedgEntry_); DetailedCustLedgEntry_.SETRANGE("Transaction No.", DetailedCustLedgEntry."Transaction No.");
                                     DetailedCustLedgEntry_.SETFILTER("Cust. Ledger Entry No.", '<>%1', DetailedCustLedgEntry."Cust. Ledger Entry No.");
                                   IF DetailedCustLedgEntry_.FINDFIRST THEN BEGIN
                                     FilterText := FORMAT("Entry No.") + '|' + FORMAT(DetailedCustLedgEntry_."Cust. Ledger Entry No.");
                                     CLEAR(DetailedCustLedgEntry);
                                     DetailedCustLedgEntry.SETFILTER("Cust. Ledger Entry No.", FilterText);
                                     DetailedCustLedgEntry.SETFILTER("Customer No.", "Customer No.");
                                     DetailedCustLedgEntryPage.SETTABLEVIEW(DetailedCustLedgEntry);
                                     DetailedCustLedgEntryPage.RUN;
                                     EXIT;
                                   END;
                                 END;


                                 CLEAR(DetailedCustLedgEntry);
                                 DetailedCustLedgEntry.SETFILTER("Cust. Ledger Entry No.", '%1',"Entry No.");
                                 DetailedCustLedgEntry.SETFILTER("Customer No.", "Customer No.");
                                 DetailedCustLedgEntryPage.SETTABLEVIEW(DetailedCustLedgEntry);
                                 DetailedCustLedgEntryPage.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 34      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 36      ;2   ;Action    ;
                      Name=Apply Entries;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Apply Entries;
                      Image=ApplyEntries;
                      Scope=Repeater;
                      OnAction=VAR
                                 CustLedgEntry@1000 : Record 21;
                                 CustEntryApplyPostEntries@1001 : Codeunit 226;
                               BEGIN
                                 CustLedgEntry.COPY(Rec);
                                 CustEntryApplyPostEntries.ApplyCustEntryFormEntry(CustLedgEntry);
                                 Rec := CustLedgEntry;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 63      ;2   ;Separator  }
      { 64      ;2   ;Action    ;
                      Name=UnapplyEntries;
                      Ellipsis=Yes;
                      CaptionML=ENU=Unapply Entries;
                      Image=UnApply;
                      Scope=Repeater;
                      OnAction=VAR
                                 CustEntryApplyPostedEntries@1000 : Codeunit 226;
                               BEGIN
                                 CustEntryApplyPostedEntries.UnApplyCustLedgEntry("Entry No.");
                               END;
                                }
      { 65      ;2   ;Separator  }
      { 66      ;2   ;Action    ;
                      Name=ReverseTransaction;
                      Ellipsis=Yes;
                      CaptionML=ENU=Reverse Transaction;
                      Image=ReverseRegister;
                      Scope=Repeater;
                      OnAction=VAR
                                 ReversalEntry@1000 : Record 179;
                               BEGIN
                                 CLEAR(ReversalEntry);
                                 IF Reversed THEN
                                   ReversalEntry.AlreadyReversedEntry(TABLECAPTION,"Entry No.");
                                 IF "Journal Batch Name" = '' THEN
                                   ReversalEntry.TestFieldError;
                                 TESTFIELD("Transaction No.");
                                 ReversalEntry.ReverseTransaction("Transaction No.");
                               END;
                                }
      { 19      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=ENU=Incoming Document;
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 17      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=ENU=View Incoming Document;
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCard("Document No.","Posting Date");
                               END;
                                }
      { 15      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=ENU=Select Incoming Document;
                      ToolTipML=;
                      Enabled=NOT HasIncomingDocument;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.SelectIncomingDocumentForPostedDocument("Document No.","Posting Date");
                               END;
                                }
      { 11      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Incoming Document from File;
                      ToolTipML=;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPostedDocument("Document No.","Posting Date");
                               END;
                                }
      { 37      ;1   ;Action    ;
                      CaptionML=ENU=&Navigate;
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
      { 13      ;1   ;Action    ;
                      ShortCutKey=Return;
                      CaptionML=ENU=Show Posted Document;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDoc
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 40  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 4   ;2   ;Field     ;
                SourceExpr="Document Type";
                Editable=FALSE;
                StyleExpr=StyleTxt }

    { 6   ;2   ;Field     ;
                SourceExpr="Document No.";
                Editable=FALSE;
                StyleExpr=StyleTxt }

    { 31  ;2   ;Field     ;
                SourceExpr="External Document No." }

    { 8   ;2   ;Field     ;
                SourceExpr="Customer No.";
                Editable=FALSE }

    { 21  ;2   ;Field     ;
                Lookup=Yes;
                SourceExpr="Customer Name";
                DrillDownPageID=Page0 }

    { 44  ;2   ;Field     ;
                SourceExpr="Customer Name 2";
                Visible=false }

    { 7   ;2   ;Field     ;
                SourceExpr="P.O No.";
                Enabled=False }

    { 5   ;2   ;Field     ;
                SourceExpr="Message to Recipient" }

    { 10  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 39  ;2   ;Field     ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE;
                Editable=FALSE }

    { 41  ;2   ;Field     ;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE;
                Editable=FALSE }

    { 67  ;2   ;Field     ;
                SourceExpr="IC Partner Code";
                Visible=FALSE;
                Editable=FALSE }

    { 43  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                Visible=FALSE;
                Editable=FALSE }

    { 45  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Editable=FALSE }

    { 55  ;2   ;Field     ;
                SourceExpr="Original Amount";
                Editable=FALSE }

    { 53  ;2   ;Field     ;
                SourceExpr="Original Amt. (LCY)";
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Amount;
                Editable=FALSE }

    { 47  ;2   ;Field     ;
                SourceExpr="Amount (LCY)";
                Visible=FALSE;
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Remaining Amount";
                Editable=FALSE }

    { 49  ;2   ;Field     ;
                SourceExpr="Remaining Amt. (LCY)";
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Bal. Account Type";
                Visible=FALSE;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                SourceExpr="Bal. Account No.";
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Due Date";
                StyleExpr=StyleTxt }

    { 18  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date" }

    { 59  ;2   ;Field     ;
                SourceExpr="Pmt. Disc. Tolerance Date" }

    { 20  ;2   ;Field     ;
                SourceExpr="Original Pmt. Disc. Possible" }

    { 57  ;2   ;Field     ;
                SourceExpr="Remaining Pmt. Disc. Possible" }

    { 61  ;2   ;Field     ;
                SourceExpr="Max. Payment Tolerance" }

    { 3   ;2   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 28  ;2   ;Field     ;
                SourceExpr=Open;
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="On Hold" }

    { 83  ;2   ;Field     ;
                SourceExpr="User ID";
                Visible=FALSE;
                Editable=FALSE }

    { 85  ;2   ;Field     ;
                SourceExpr="Source Code";
                Visible=FALSE;
                Editable=FALSE }

    { 87  ;2   ;Field     ;
                SourceExpr="Reason Code";
                Visible=FALSE;
                Editable=FALSE }

    { 35  ;2   ;Field     ;
                SourceExpr=Reversed;
                Visible=FALSE }

    { 71  ;2   ;Field     ;
                SourceExpr="Reversed by Entry No.";
                Visible=FALSE }

    { 75  ;2   ;Field     ;
                SourceExpr="Reversed Entry No.";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Entry No.";
                Editable=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Closed by Entry No." }

    { 290 ;2   ;Field     ;
                SourceExpr="Exported to Payment File" }

    { 291 ;2   ;Field     ;
                SourceExpr="Direct Debit Mandate ID";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Debit Amount" }

    { 27  ;2   ;Field     ;
                SourceExpr="Credit Amount" }

    { 33  ;2   ;Field     ;
                Name=Order Date;
                SourceExpr=OrderDate }

    { 38  ;2   ;Field     ;
                SourceExpr="Request type" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1903096107;1;Part   ;
                SubPageLink=Entry No.=FIELD(Entry No.);
                PagePartID=Page9106;
                Visible=TRUE;
                PartType=Page }

    { 9   ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Navigate@1000 : Page 344;
      StyleTxt@1001 : Text;
      HasIncomingDocument@1003 : Boolean;
      AmountIncludingVat@1002 : Decimal;
      OrderDate@1006 : Date;

    LOCAL PROCEDURE GetOrderDate@11();
    VAR
      SalesInvoiceHeader@1003 : Record 112;
      SalesCreditMemoHeader@1002 : Record 114;
      DetailedCusLedEntries@1001 : Record 379;
      DetailedCusLedEntries2@1000 : Record 379;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Payment:
          BEGIN
            DetailedCusLedEntries.SETRANGE("Entry Type", DetailedCusLedEntries."Entry Type"::Application);
            DetailedCusLedEntries.SETRANGE("Document Type", DetailedCusLedEntries."Document Type"::Payment);
            DetailedCusLedEntries.SETRANGE("Document No.", "Document No.");
            DetailedCusLedEntries.SETASCENDING("Entry No.",TRUE);
            IF DetailedCusLedEntries.FINDFIRST THEN BEGIN
              DetailedCusLedEntries2.SETRANGE("Cust. Ledger Entry No.", DetailedCusLedEntries."Cust. Ledger Entry No.");
              DetailedCusLedEntries2.SETRANGE("Entry Type", DetailedCusLedEntries2."Entry Type"::"Initial Entry");
              DetailedCusLedEntries2.SETRANGE("Document Type", DetailedCusLedEntries2."Document Type"::Invoice);
              IF DetailedCusLedEntries2.FINDFIRST  AND SalesInvoiceHeader.GET(DetailedCusLedEntries2."Document No.") THEN BEGIN
                  OrderDate := SalesInvoiceHeader."Order Date";
              END;
            END;
          END;
        "Document Type"::Refund:
          BEGIN
            DetailedCusLedEntries.SETRANGE("Entry Type", DetailedCusLedEntries."Entry Type"::Application);
            DetailedCusLedEntries.SETRANGE("Document Type", DetailedCusLedEntries."Document Type"::Refund);
            DetailedCusLedEntries.SETRANGE("Document No.", "Document No.");
            DetailedCusLedEntries.SETASCENDING("Entry No.",TRUE);
            IF DetailedCusLedEntries.FINDFIRST THEN BEGIN
              DetailedCusLedEntries2.SETRANGE("Cust. Ledger Entry No.", DetailedCusLedEntries."Cust. Ledger Entry No.");
              DetailedCusLedEntries2.SETRANGE("Entry Type", DetailedCusLedEntries2."Entry Type"::"Initial Entry");
              DetailedCusLedEntries2.SETRANGE("Document Type", DetailedCusLedEntries2."Document Type"::"Credit Memo");
              IF DetailedCusLedEntries2.FINDFIRST  AND SalesInvoiceHeader.GET(DetailedCusLedEntries2."Document No.") THEN BEGIN
                  OrderDate := SalesInvoiceHeader."Order Date";
              END;
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

